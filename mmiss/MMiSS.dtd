<!-- 
  XML Document Type Definition for MMiSSLatex 2
  Version 0.93
  Initial Version: George Russell (2002-June)
  Current Version: Achim Mahnke   (2002-09-17)

  This DTD is still experimental, it is intended as a basis for discussion.
  Comments are welcome! (send mail to amahnke@tzi.de)

  Root element is 'package'.

  Colours and shapes:
  Group        yellow box 
  - Package    orange box
  Units
  - formal     light blue box
  - conceptual light green box
  Atoms 
  -formal      light blue ellipse
  -conceptual  light green ellipse

  Colour RGB values:
  Yellow       #ffff60
  Orange       #feb872
  Light green  #98ecb2
  Light blue   #98ceda

  The RGB values are set in types/DisplayParms.hs.

  Colours should be synchronized with MMiSS-colours in allmmiss.el, so that magic
  buttons in Emacs have the same colour as their corresponding element.   

-->

<!-- ======================== ENTITIES ==================================== -->

<!ENTITY % structure-attr "label        CDATA  #IMPLIED
                           title        CDATA  #IMPLIED
                           priority     CDATA  #IMPLIED">


<!ENTITY % version-attr "version          CDATA  #IMPLIED
                         date             CDATA  #IMPLIED
                         comment          CDATA  #IMPLIED
                         previousVersion  CDATA  #IMPLIED
                         authors          CDATA  #IMPLIED
                         institute        CDATA  #IMPLIED
                         priorAuthors     CDATA  #IMPLIED">

                         

<!-- The special xml:lang-Attribute holds values defined by IETF RFC 1766
    which are constructed from the two-letter codes of ISO 639 and the
    two-letter country codes as defined by ISO 3166. -->
   
<!ENTITY % RFC1766 "(aa|ab|af|am|ar|as|ay|az|ba|be|bg|bh|bi|bn|bo|br|ca|co|
                     cs|cy|da|de|dz|el|en|en-GB|en-US|eo|es|et|eu|fa|fi|fj|
                     fo|fr|fy|ga|gd|gl|gn|gu|ha|he|hi|hr|hu|hy|ia|ie|ik|id|
                     is|it|iu|ja|jv|ka|kk|kl|km|kn|ko|ks|ku|ky|la|ln|lo|lt|
                     lv|mg|mi|mk|ml|mn|mo|mr|ms|mt|my|na|ne|nl|no|oc|om|or|
                     pa|pl|ps|pt|qu|rm|rn|ro|ru|rw|sa|sd|sg|sh|si|sk|sl|sm|
                     sn|so|sq|sr|ss|st|su|sv|sw|ta|te|tg|th|ti|tk|tl|tn|to|
                     tr|ts|tt|tw|ug|uk|ur|uz|vi|vo|wo|xh|yi|yo|za|zh|zu)">


<!-- level-of-detail and interaction-level attributes will be enumeration
     types in the final version. -->

<!ENTITY % level-of-detail-matter  "levelOfDetail  CDATA #IMPLIED">

<!ENTITY % interaction-level-matter  "interactionLevel  CDATA #IMPLIED">


<!-- notation should be a union of formalismIds and formatIds which have
     to be defined. -->

<!ENTITY % notation-matter  "format      CDATA  #IMPLIED
                             formalism   CDATA  #IMPLIED">

<!ENTITY % variant-attr "xml:lang  %RFC1766; 'en-GB'
                         %notation-matter;
                         %level-of-detail-matter;
                         %interaction-level-matter;">


<!-- Layout and paedagogic attributes still have to be defined. Will be
     enumerations.  -->

<!ENTITY % layout-attr "shortAuthor      CDATA  #IMPLIED
                        shortTitle       CDATA  #IMPLIED">

<!ENTITY % paedagogic-attr " ">

<!ENTITY % attributes "%structure-attr;
                       %version-attr; 
                       %variant-attr; 
                       %layout-attr;
                       %paedagogic-attr;">

<!-- Standard Predefined Entities (XML standard section 4.6). --> 
<!ENTITY lt "&#38;#60;">
<!ENTITY gt "&#62;">
<!ENTITY amp "&#38;#38;">
<!ENTITY apos "&#39;">
<!ENTITY quot "&#34;">

<!ENTITY % include-attributes "included CDATA #REQUIRED
                               status  (present | absent) #IMPLIED
                               priority CDATA #IMPLIED
                               %variant-attr;">


<!--
  ***********************************************************************
  **                                                                   **
  **  Text and embedded items                                          **
  **                                                                   **
  ***********************************************************************
 -->

<!ENTITY % structuralElement "includeTextFragment | link">

<!ENTITY % semanticElement "define | reference">

<!ENTITY % embeddedElement "%structuralElement; | %semanticElement; | emphasis | formula">

<!ENTITY % text         "(#PCDATA | %embeddedElement;)*">


<!ELEMENT includeTextFragment EMPTY>
<!ATTLIST includeTextFragment included    CDATA #REQUIRED
                              status  (present | absent) "absent"
                              %variant-attr;>

<!ELEMENT link (#PCDATA)>
<!ATTLIST link linked    CDATA #REQUIRED
               status  (present | absent) "absent"
               %variant-attr;>

<!ELEMENT define (#PCDATA)>
<!ATTLIST define %attributes;>
               
<!ELEMENT reference (#PCDATA)>
<!ATTLIST reference referenced  CDATA #REQUIRED
                    status  (present | absent) "absent"
                    %variant-attr;>

<!ELEMENT emphasis (#PCDATA)>


<!--
  ***********************************************************************
  **                                                                   **
  **  Groups                                                           **
  **                                                                   **
  ***********************************************************************
 -->

<!-- Views are not defined yet. -->

<!ENTITY % group  "package | section | paragraph | includeGroup 
                   | includeSection">

<!ENTITY % conceptualAtom  "textFragment | list | table | figure 
                            | includeTextFragment
                            | glossaryEntry | bibEntry 
                            | includeConceptualAtom">

<!ENTITY % formalAtom  "programFragment | clause | step | includeProgramFragment
                        | includeClause | includeStep">

<!ENTITY % atom  "%conceptualAtom; | %formalAtom; | includeAtom">

<!ENTITY % conceptualUnit  "example | exercise | definition | includeConceptualUnit">

<!ENTITY % formalUnit  "program | theory | theorem | conjecture | lemma 
                        | corollary | assertion | development | proof 
                        | script | includeProgram | includeTheory | includeScript
                        | includeDevelopment | includeProof | includeFormalUnit">

<!ENTITY % unit   "%conceptualUnit; | %formalUnit; | %atom; | includeUnit">


<!ELEMENT package (section | includeSection)+>
<!ATTLIST package %attributes;
          path    CDATA  #IMPLIED>
<?MMiSSDisplay package : yellow box ?>

<!ELEMENT section ((abstract | includeAbstract)?, 
                   (introduction | includeIntroduction)?, 
                   (%group;)*, 
                   (summary | includeSummary)?)>
<!ATTLIST section %attributes;>
<?MMiSSDisplay section : yellow box ?>

<!ELEMENT paragraph (%unit;)*>
<!ATTLIST paragraph %attributes;>
<?MMiSSDisplay paragraph : Green box ?>


<!--
  ***********************************************************************
  **                                                                   **
  **  Conceptual units and atoms                                       **
  **                                                                   **
  ***********************************************************************
 -->

<!ELEMENT abstract (%unit;)*>
<!ATTLIST abstract %attributes;>
<?MMiSSDisplay abstract : Green box ?>


<!ELEMENT introduction (%unit;)*>
<!ATTLIST introduction %attributes;>
<?MMiSSDisplay introduction : Green box ?>

<!ELEMENT summary (%unit;)*>
<!ATTLIST summary %attributes;>
<?MMiSSDisplay summary : Green box ?>

<!ELEMENT example (%unit;)*>
<!ATTLIST example %attributes;>
<?MMiSSDisplay example : Green box ?>


<!ELEMENT exercise (%unit;)*>
<!ATTLIST exercise %attributes;>
<?MMiSSDisplay exercise : Green box ?>

<!ELEMENT definition (%unit;)*>
<!ATTLIST definition %attributes;>
<?MMiSSDisplay definition : Green box ?>

<!ELEMENT textFragment %text;>
<!ATTLIST textFragment %attributes;>
<?MMiSSDisplay textFragment : White box ?>

<!ELEMENT table %text;>
<!ATTLIST table caption    CDATA  #IMPLIED
                %attributes;>
<?MMiSSDisplay table : White box ?>

<!ELEMENT figure  %text;>
<!ATTLIST figure  caption    CDATA  #IMPLIED
                  %attributes;>
<?MMiSSDisplay figure : White box ?>

<!ELEMENT glossaryEntry  %text;>
<!ATTLIST glossaryEntry  %attributes;>
<?MMiSSDisplay glossaryEntry : White box ?>

<!ELEMENT bibEntry  %text;>
<!ATTLIST bibEntry  %attributes;>
<?MMiSSDisplay bibEntry : White box ?>

<!ELEMENT list  (listItem)*>
<!ATTLIST list  listType  (itemize | enumerate | description)  #IMPLIED
                numeringPattern   CDATA  #IMPLIED
                %attributes;>
<?MMiSSDisplay list : White box ?>


<!ELEMENT listItem  (list | %atom;)*>
<!ATTLIST listItem descItem   CDATA  #IMPLIED
                   %attributes;>

<!ELEMENT formula (#PCDATA)>
<!ATTLIST formula latexEnv   (math | shortMathDollar | shortMathParens | displaymath | shortDisplaymath | shortDisplaymathDollar | equation) #REQUIRED
                  %variant-attr;>


<!--
  ***********************************************************************
  **                                                                   **
  **  Formal units and atoms                                           **
  **                                                                   **
  ***********************************************************************
 -->

<!ELEMENT program (%conceptualAtom; | programFragment | program
                  | includeProgramFragment | includeProgram)*>
<!ATTLIST program %attributes;>
<?MMiSSDisplay program : Green box ?>

<!ELEMENT theory (%conceptualAtom; | clause | theory
                  | includeClause | includeTheory)*>
<!ATTLIST theory %attributes;>
<?MMiSSDisplay theory : Green box ?>

<!ELEMENT theorem  (%conceptualAtom; | clause | includeClause)*>
<!ATTLIST theorem %attributes;>
<?MMiSSDisplay theorem : Green box ?>

<!ELEMENT conjecture (%conceptualAtom; | clause | includeClause)*>
<!ATTLIST conjecture %attributes;>
<?MMiSSDisplay conjecture : Green box ?>

<!ELEMENT lemma (%conceptualAtom; | clause | includeClause)*>
<!ATTLIST lemma %attributes;>
<?MMiSSDisplay lemma : Green box ?>

<!ELEMENT corollary (%conceptualAtom; | clause | includeClause)*>
<!ATTLIST corollary %attributes;>
<?MMiSSDisplay corollary : Green box ?>

<!ELEMENT assertion (%conceptualAtom; | clause | includeClause)*>
<!ATTLIST assertion %attributes;>
<?MMiSSDisplay assertion : Green box ?>

<!ELEMENT proof (%conceptualAtom; | step | script | proof
                 | includeStep | includeScript | includeProof)*>
<!ATTLIST proof %attributes;>
<?MMiSSDisplay proof : Green box ?>

<!ELEMENT development  (%conceptualAtom; | step | script | development
                        | includeStep | includeScript | includeDevelopment)*>
<!ATTLIST development  %attributes;>
<?MMiSSDisplay development : Green box ?>


<!ELEMENT script  (%conceptualAtom; | step | script
                   | includeStep | includeScript)*>
<!ATTLIST script %attributes;>
<?MMiSSDisplay development : Green box ?>

<!ELEMENT programFragment  (#PCDATA)>
<!ATTLIST programFragment  %attributes;>
<?MMiSSDisplay programFragment : White box ?>

<!ELEMENT clause  (#PCDATA)>
<!ATTLIST clause  %attributes;>
<?MMiSSDisplay clause : White box ?>


<!ELEMENT step  (#PCDATA)>
<!ATTLIST step  %attributes;>
<?MMiSSDisplay step : White box ?>



<!--
  ***********************************************************************
  **                                                                   **
  **  Elements for Inclusion                                           **
  **                                                                   **
  ***********************************************************************
 -->

<!-- All include elements (includeTextFragment above also) have attributes 
    for specifying the referred variant. 'included' gives the label of 
    the referred element. -->

<!ELEMENT includeGroup EMPTY>
<!ATTLIST includeGroup %include-attributes;>

<!ELEMENT includeSection  EMPTY>
<!ATTLIST includeSection %include-attributes;>

<!ELEMENT includeAbstract EMPTY>
<!ATTLIST includeAbstract %include-attributes;>

<!ELEMENT includeIntroduction EMPTY>
<!ATTLIST includeIntroduction %include-attributes;>

<!ELEMENT includeSummary EMPTY>
<!ATTLIST includeSummary %include-attributes;>

<!ELEMENT includeUnit EMPTY>
<!ATTLIST includeUnit %include-attributes;>

<!ELEMENT includeFormalUnit EMPTY>
<!ATTLIST includeFormalUnit %include-attributes;>

<!ELEMENT includeConceptualUnit EMPTY>
<!ATTLIST includeConceptualUnit %include-attributes;>

<!ELEMENT includeAtom EMPTY>
<!ATTLIST includeAtom %include-attributes;>

<!ELEMENT includeConceptualAtom EMPTY>
<!ATTLIST includeConceptualAtom %include-attributes;>

<!ELEMENT includeProgramFragment EMPTY>
<!ATTLIST includeProgramFragment %include-attributes;>

<!ELEMENT includeProgram EMPTY>
<!ATTLIST includeProgram %include-attributes;>

<!ELEMENT includeClause EMPTY>
<!ATTLIST includeClause %include-attributes;>

<!ELEMENT includeTheory EMPTY>
<!ATTLIST includeTheory %include-attributes;>

<!ELEMENT includeStep EMPTY>
<!ATTLIST includeStep %include-attributes;>

<!ELEMENT includeProof EMPTY>
<!ATTLIST includeProof %include-attributes;>

<!ELEMENT includeScript EMPTY>
<!ATTLIST includeScript %include-attributes;>

<!ELEMENT includeDevelopment EMPTY>
<!ATTLIST includeDevelopment %include-attributes;>


