<!-- 
  XML Document Type Definition for MMiSSLatex 2
  Version 0.93
  Initial Version: George Russell (2002-June)
  Current Version: Achim Mahnke   (2002-09-17)

  This DTD is still experimental, it is intended as a basis for discussion.
  Comments are welcome! (send mail to amahnke@tzi.de)

  Root element is 'package'.

  Rules for colours.  We supply colours for all things which can have a label.
     These are for now
        orange for groups
        green for units
        yellow for atoms
        red for text fragments.

  They should be synchronized with MMiSS-colours in allmmiss.el, so that magic
  buttons in Emacs have the same colour as their corresponding   

-->

<!-- ======================== ENTITIES ==================================== -->

<!ENTITY % version-attr "version          CDATA  #IMPLIED
                         date             CDATA  #IMPLIED
                         comment          CDATA  #IMPLIED
                         previousVersion  CDATA  #IMPLIED
                         authors          CDATA  #IMPLIED
                         priorAuthors     CDATA  #IMPLIED
                         shortAuthor      CDATA  #IMPLIED
                         shortTitle       CDATA  #IMPLIED">

<!-- The special xml:lang-Attribute holds values defined by IETF RFC 1766
    which are constructed from the two-letter codes of ISO 639 and the
    two-letter country codes as defined by ISO 3166. -->
   
<!ENTITY % RFC1766 "(aa|ab|af|am|ar|as|ay|az|ba|be|bg|bh|bi|bn|bo|br|ca|co|
                     cs|cy|da|de|dz|el|en|en-GB|en-US|eo|es|et|eu|fa|fi|fj|
                     fo|fr|fy|ga|gd|gl|gn|gu|ha|he|hi|hr|hu|hy|ia|ie|ik|id|
                     is|it|iu|ja|jv|ka|kk|kl|km|kn|ko|ks|ku|ky|la|ln|lo|lt|
                     lv|mg|mi|mk|ml|mn|mo|mr|ms|mt|my|na|ne|nl|no|oc|om|or|
                     pa|pl|ps|pt|qu|rm|rn|ro|ru|rw|sa|sd|sg|sh|si|sk|sl|sm|
                     sn|so|sq|sr|ss|st|su|sv|sw|ta|te|tg|th|ti|tk|tl|tn|to|
                     tr|ts|tt|tw|ug|uk|ur|uz|vi|vo|wo|xh|yi|yo|za|zh|zu)">


<!-- level-of-detail and interaction-level attributes will be enumeration
     types in the final version. -->

<!ENTITY % level-of-detail-matter  "levelOfDetail  CDATA #IMPLIED">

<!ENTITY % interaction-level-matter  "interactionLevel  CDATA #IMPLIED">

<!ENTITY % variant-attr "xml:lang  %RFC1766; 'en-GB'
                         %level-of-detail-matter;
                         %interaction-level-matter;">

<!-- Layout and paedagogic attributes still have to be defined. Will be
     enumerations.  -->

<!ENTITY % layout-attr " ">
<!ENTITY % paedagogic-attr " ">

<!ENTITY % attributes "%version-attr; 
                       %variant-attr; 
                       %layout-attr;
                       %paedagogic-attr;">

<!ENTITY % label-matter "label  CDATA  #IMPLIED">
<!ENTITY % title-matter "title  CDATA  #IMPLIED">
<!ENTITY % formalism-matter  "notation  CDATA  #IMPLIED">  


<!--
  ***********************************************************************
  **                                                                   **
  **  Text and embedded items                                          **
  **                                                                   **
  ***********************************************************************
 -->

<!ENTITY % structuralElement "includeTextFragment | link">

<!ENTITY % semanticElement "define | reference">

<!ENTITY % embeddedElement "%structuralElement; | %semanticElement; | emphasis">

<!ENTITY % text         "(#PCDATA | %embeddedElement;)*">


<!ELEMENT includeTextFragment EMPTY>
<!ATTLIST includeTextFragment included    CDATA #REQUIRED
                              status  (present | absent) "absent"
                              %attributes;>

<!ELEMENT link (#PCDATA)>
<!ATTLIST link linked    CDATA #REQUIRED
               status  (present | absent) "absent"
               %attributes;>

<!ELEMENT define (#PCDATA)>
<!ATTLIST define %label-matter;
                 %attributes;>
               
<!ELEMENT reference (#PCDATA)>
<!ATTLIST reference referenced  CDATA #REQUIRED
                    status  (present | absent) "absent"
                    %attributes;>

<!ELEMENT emphasis (#PCDATA)>


<!--
  ***********************************************************************
  **                                                                   **
  **  Groups                                                           **
  **                                                                   **
  ***********************************************************************
 -->

<!-- Views are not defined yet. -->

<!ENTITY % group  "package | section | paragraph | view | includeGroup">

<!ENTITY % conceptualAtom  "textFragment | table | figure 
                            | glossaryEntry | bibentry | includeConceptualAtom">

<!ENTITY % formalAtom  "programFragment | clause | step">

<!ENTITY % atom  "%conceptualAtom; | %formalAtom; | includeAtom">

<!ENTITY % conceptualUnit  "example | exercise | definition">

<!ENTITY % formalUnit  "program | theory | theorem | conjecture | lemma 
                        | corollary | assertion | development | proof 
                        | script | includeFormalUnit">

<!ENTITY % unit   "%conceptualUnit; | %formalUnit; | list | %atom; | includeUnit">


<!ELEMENT package (section | includeSection)+>
<!ATTLIST package %label-matter;
                  %title-matter;
                  %formalism-matter;
                  %attributes;>
<?MMiSSDisplay package : orange box ?>

<!ELEMENT section ((abstract | includeAbstract)?, 
                   (introduction | includeIntroduction)?, 
                   (%group;)+, 
                   (summary | includeSummary)?)>
<!ATTLIST section %label-matter;
                  %title-matter;
                  %formalism-matter;
                  %attributes;>
<?MMiSSDisplay section : orange circle ?>


<!ELEMENT paragraph (%unit;)+>
<!ATTLIST paragraph %label-matter;
                    %title-matter;
                    %formalism-matter;
                    %attributes;>
<?MMiSSDisplay paragraph : orange triangle ?>


<!--
  ***********************************************************************
  **                                                                   **
  **  Conceptual units and atoms                                       **
  **                                                                   **
  ***********************************************************************
 -->

<!ELEMENT abstract (%unit;)+>
<!ATTLIST abstract %label-matter;
                   %title-matter;
                   %formalism-matter;
                   %attributes;>

<!ELEMENT introduction (%unit;)+>
<!ATTLIST introduction %label-matter;
                       %title-matter;
                       %formalism-matter;
                       %attributes;>

<!ELEMENT summary  (%unit;)+>
<!ATTLIST summary  %label-matter;
                   %title-matter;
                   %formalism-matter;
                   %attributes;>

<!ELEMENT example  ((%atom;) | %formalUnit;)+>
<!ATTLIST example %label-matter;
                  %title-matter;
                  %formalism-matter;
                  %attributes;>
<?MMiSSDisplay example : green circle ?>


<!ELEMENT exercise  ((%atom;) | %formalUnit;)+>
<!ATTLIST exercise %label-matter;
                   %title-matter;
                   %formalism-matter;
                   %attributes;>
<?MMiSSDisplay exercise : green box ?>

<!ELEMENT definition  ((%atom;) | %formalUnit;)+>
<!ATTLIST definition %label-matter;
                     %title-matter;
                     %formalism-matter;
                     %attributes;>
<?MMiSSDisplay definition : green triangle ?>

<!ELEMENT textFragment %text;>
<!ATTLIST textFragment %label-matter;
                       %formalism-matter;
                       %attributes;>
<?MMiSSDisplay textFragment : red box ?>

<!ELEMENT table %text;>
<!ATTLIST table %label-matter;
                %title-matter;
                %formalism-matter;
                %attributes;>
<?MMiSSDisplay table : yellow box ?>

<!ELEMENT figure  EMPTY>
<!ATTLIST figure %label-matter;
                 %title-matter;
                 %formalism-matter;
                 %attributes;>
<?MMiSSDisplay figure : yellow circle ?>

<!ELEMENT glossaryEntry  %text;>
<!ATTLIST glossaryEntry %label-matter;
                        %title-matter;
                        %attributes;>
<?MMiSSDisplay glossaryEntry : yellow rhombus ?>

<!ELEMENT bibEntry  %text;>
<!ATTLIST bibEntry  %label-matter;
                    %attributes;>
<?MMiSSDisplay bibEntry : yellow ellipse ?>

<!ELEMENT list  (listItem)+>
<!ATTLIST list  %label-matter;
                %formalism-matter;
                type  (itemize | enumeration)  #IMPLIED
                numeringPattern   CDATA  #IMPLIED
                %attributes;>
<?MMiSSDisplay list : green ellipse ?>


<!ELEMENT listItem  (list | %atom;)+>
<!ATTLIST listItem %label-matter;
                   %title-matter;
                   %formalism-matter;
                   %attributes;>


<!--
  ***********************************************************************
  **                                                                   **
  **  Formal units and atoms                                           **
  **                                                                   **
  ***********************************************************************
 -->

<!ELEMENT program (%conceptualAtom; | programFragment | program
                  | includeProgramFragment | includeProgram)+>
<!ATTLIST program %label-matter;
                  %title-matter;
                  %formalism-matter;
                  %attributes;>
<?MMiSSDisplay program : green circle ?>

<!ELEMENT theory (%conceptualAtom; | clause | theory
                  | includeClause | includeTheory)+>
<!ATTLIST theory %label-matter;
                 %title-matter;
                 %formalism-matter;
                 %attributes;>
<?MMiSSDisplay theory : green box ?>

<!ELEMENT theorem  (%conceptualAtom; | clause | includeClause)+>
<!ATTLIST theorem %label-matter;
                  %title-matter;
                  %formalism-matter;
                  %attributes;>
<?MMiSSDisplay theorem : green circle ?>

<!ELEMENT conjecture (%conceptualAtom; | clause | includeClause)+>
<!ATTLIST conjecture %label-matter;
                     %title-matter;
                     %formalism-matter;
                     %attributes;>

<!ELEMENT lemma (%conceptualAtom; | clause | includeClause)+>
<!ATTLIST lemma %label-matter;
                %title-matter;
                %formalism-matter;
                %attributes;>

<!ELEMENT corollary (%conceptualAtom; | clause | includeClause)+>
<!ATTLIST corollary %label-matter;
                    %title-matter;
                    %formalism-matter;
                    %attributes;>

<!ELEMENT assertion (%conceptualAtom; | clause | includeClause)+>
<!ATTLIST assertion %label-matter;
                    %title-matter;
                    %formalism-matter;
                    %attributes;>

<!ELEMENT proof (%conceptualAtom; | step | script | proof
                 | includeStep | includeScript | includeProof)+>
<!ATTLIST proof %label-matter;
                %title-matter;
                %formalism-matter;
                %attributes;>

<!ELEMENT development  (%conceptualAtom; | step | script | development
                        | includeStep | includeScript | includeDevelopment)+>
<!ATTLIST development %label-matter;
                      %title-matter;
                      %formalism-matter;
                      %attributes;>
<?MMiSSDisplay development : green rhombus ?>

<!ELEMENT script  (%conceptualAtom; | step | script
                   | includeStep | includeScript)+>
<!ATTLIST script %label-matter;
                 %title-matter;
                 %formalism-matter;
                 %attributes;>
<?MMiSSDisplay script : yellow circle ?>


<!ELEMENT programFragment  (#PCDATA)>
<!ATTLIST programFragment %label-matter;
                          %title-matter;
                          %formalism-matter;
                          %attributes;>
<?MMiSSDisplay programFragment : yellow ellipse ?>

<!ELEMENT clause  (#PCDATA)>
<!ATTLIST clause %label-matter;
                 %title-matter;
                 %formalism-matter;
                 %attributes;>
<?MMiSSDisplay clause : yellow triangle ?>


<!ELEMENT step  (#PCDATA)>
<!ATTLIST step %label-matter;
               %title-matter;
               %formalism-matter;
               %attributes;>
<?MMiSSDisplay theory : yellow ellipse ?>



<!--
  ***********************************************************************
  **                                                                   **
  **  Elements for Inclusion                                           **
  **                                                                   **
  ***********************************************************************
 -->

<!-- All include elements (includeTextFragment above also) have attributes 
    for specifying the referred variant. 'included' gives the label of 
    the referred element. -->

<!ELEMENT includeGroup EMPTY>
<!ATTLIST includeGroup included    CDATA #REQUIRED
                       status  (present | absent) "absent"
                       %attributes;>

<!ELEMENT includeSection  EMPTY>
<!ATTLIST includeSection included    CDATA #REQUIRED
                         status  (present | absent) "absent"
                         %attributes;>

<!ELEMENT includeAbstract EMPTY>
<!ATTLIST includeAbstract included    CDATA #REQUIRED
                          status  (present | absent) "absent"
                          %attributes;>

<!ELEMENT includeIntroduction EMPTY>
<!ATTLIST includeIntroduction included    CDATA #REQUIRED
                              status  (present | absent) "absent"
                              %attributes;>

<!ELEMENT includeSummary EMPTY>
<!ATTLIST includeSummary included    CDATA #REQUIRED
                         status  (present | absent) "absent"
                         %attributes;>

<!ELEMENT includeUnit EMPTY>
<!ATTLIST includeUnit included    CDATA #REQUIRED
                      status  (present | absent) "absent"
                      %attributes;>

<!ELEMENT includeFormalUnit EMPTY>
<!ATTLIST includeFormalUnit included    CDATA #REQUIRED
                            status  (present | absent) "absent"
                            %attributes;>

<!ELEMENT includeAtom EMPTY>
<!ATTLIST includeAtom included    CDATA #REQUIRED
                      status  (present | absent) "absent"
                      %attributes;>

<!ELEMENT includeConceptualAtom EMPTY>
<!ATTLIST includeConceptualAtom included    CDATA #REQUIRED
                                status  (present | absent) "absent"
                                %attributes;>

<!ELEMENT includeProgramFragment EMPTY>
<!ATTLIST includeProgramFragment included    CDATA #REQUIRED
                                 status  (present | absent) "absent"
                                 %attributes;>

<!ELEMENT includeProgram EMPTY>
<!ATTLIST includeProgram included    CDATA #REQUIRED
                         status  (present | absent) "absent"
                         %attributes;>

<!ELEMENT includeClause EMPTY>
<!ATTLIST includeClause included    CDATA #REQUIRED
                        status  (present | absent) "absent"
                        %attributes;>

<!ELEMENT includeTheory EMPTY>
<!ATTLIST includeTheory included    CDATA #REQUIRED
                        status  (present | absent) "absent"
                        %attributes;>

<!ELEMENT includeStep EMPTY>
<!ATTLIST includeStep included    CDATA #REQUIRED
                      status  (present | absent) "absent"
                      %attributes;>

<!ELEMENT includeProof EMPTY>
<!ATTLIST includeProof included    CDATA #REQUIRED
                       status  (present | absent) "absent"
                       %attributes;>

<!ELEMENT includeScript EMPTY>
<!ATTLIST includeScript included    CDATA #REQUIRED
                        status  (present | absent) "absent"
                        %attributes;>

<!ELEMENT includeDevelopment EMPTY>
<!ATTLIST includeDevelopment included    CDATA #REQUIRED
                             status  (present | absent) "absent"
                             %attributes;>


