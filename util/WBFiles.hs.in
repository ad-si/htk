{- #########################################################################

MODULE        : WBFiles
AUTHOR        : Einar Karlsen, George Russell  
                University of Bremen
                email:  ewk@informatik.uni-bremen.de
DATE          : 1999
VERSION       : 0.2
DESCRIPTION   : 


   ######################################################################### -}


module WBFiles (
   wishPath,
   cvsPath,
   daVinciPath,

   getWBFilePath,
   getWBToolFilePath,
   getWBImageFilePath,
   getWBExportFilePath
   ) where

import IO
import qualified System
import qualified IOExts(unsafePerformIO)
import Debug(debug)

-- --------------------------------------------------------------------------
-- Setting program defaults from environment variables
-- --------------------------------------------------------------------------

envLookup :: String -> String -> String
-- The first argument is the name of an environment variable.
-- If unset, we use the second argument
-- We use unsafePerformIO to prevent the IO action being done more than once,
-- and NOINLINE to stop inlining duplicating it.
envLookup envVar ifUnset =
   IOExts.unsafePerformIO(
      do
         varOpt <- try (System.getEnv envVar)
         case varOpt of
            Left error -> return ifUnset
            Right value -> return value
      )

{-# NOINLINE envLookup #-}

prefix :: String
prefix = envLookup "WB_ROOT" ("@TOP@" ++ "/database")

wishPath :: String
wishPath = envLookup "WISH" "@WISH@"

cvsPath :: String
cvsPath = envLookup "CVS" "@CVS@"

daVinciPath :: String
daVinciPath = envLookup "DAVINCI" "@DAVINCI@"


-- --------------------------------------------------------------------------
-- WorkBench File
-- --------------------------------------------------------------------------

getWBFilePath :: FilePath -> IO FilePath
getWBFilePath fnm = 
   do
      return (prefix ++ "/" ++ fnm)


getWBToolFilePath :: FilePath -> IO FilePath
getWBToolFilePath fnm = 
   do
      return (prefix ++ "/bin/" ++ fnm)

getWBImageFilePath :: FilePath -> IO FilePath
getWBImageFilePath fnm = 
   do 
      return (prefix ++ "/images/" ++ fnm)


getWBExportFilePath :: FilePath -> IO FilePath
getWBExportFilePath fnm = 
   do
      return (prefix ++ "/exports/" ++ fnm)


