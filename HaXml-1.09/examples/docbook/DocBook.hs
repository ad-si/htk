module DTD_Extsubset where

import Text.XML.HaXml.Xml2Haskell
import OneOfN


{-Type decls-}

data Title = Title Title_Attrs [Title_]
	   deriving (Eq,Show)
data Title_Attrs = Title_Attrs
    { titlePagenum :: (Maybe String)
    , titleId :: (Maybe String)
    , titleLang :: (Maybe String)
    , titleRemap :: (Maybe String)
    , titleXreflabel :: (Maybe String)
    , titleRevisionflag :: (Maybe Title_Revisionflag)
    , titleArch :: (Maybe String)
    , titleCondition :: (Maybe String)
    , titleConformance :: (Maybe String)
    , titleOs :: (Maybe String)
    , titleRevision :: (Maybe String)
    , titleSecurity :: (Maybe String)
    , titleUserlevel :: (Maybe String)
    , titleVendor :: (Maybe String)
    , titleRole :: (Maybe String)
    } deriving (Eq,Show)
data Title_ = Title_Str String
	    | Title_Footnoteref Footnoteref
	    | Title_Xref Xref
	    | Title_Abbrev Abbrev
	    | Title_Acronym Acronym
	    | Title_Citation Citation
	    | Title_Citerefentry Citerefentry
	    | Title_Citetitle Citetitle
	    | Title_Emphasis Emphasis
	    | Title_Firstterm Firstterm
	    | Title_Foreignphrase Foreignphrase
	    | Title_Glossterm Glossterm
	    | Title_Footnote Footnote
	    | Title_Phrase Phrase
	    | Title_Quote Quote
	    | Title_Trademark Trademark
	    | Title_Wordasword Wordasword
	    | Title_Personname Personname
	    | Title_Link Link
	    | Title_Olink Olink
	    | Title_Ulink Ulink
	    | Title_Action Action
	    | Title_Application Application
	    | Title_Classname Classname
	    | Title_Methodname Methodname
	    | Title_Interfacename Interfacename
	    | Title_Exceptionname Exceptionname
	    | Title_Ooclass Ooclass
	    | Title_Oointerface Oointerface
	    | Title_Ooexception Ooexception
	    | Title_Command Command
	    | Title_Computeroutput Computeroutput
	    | Title_Database Database
	    | Title_Email Email
	    | Title_Envar Envar
	    | Title_Errorcode Errorcode
	    | Title_Errorname Errorname
	    | Title_Errortype Errortype
	    | Title_Errortext Errortext
	    | Title_Filename Filename
	    | Title_Function Function
	    | Title_Guibutton Guibutton
	    | Title_Guiicon Guiicon
	    | Title_Guilabel Guilabel
	    | Title_Guimenu Guimenu
	    | Title_Guimenuitem Guimenuitem
	    | Title_Guisubmenu Guisubmenu
	    | Title_Hardware Hardware
	    | Title_Interface Interface
	    | Title_Keycap Keycap
	    | Title_Keycode Keycode
	    | Title_Keycombo Keycombo
	    | Title_Keysym Keysym
	    | Title_Literal Literal
	    | Title_Constant Constant
	    | Title_Markup Markup
	    | Title_Medialabel Medialabel
	    | Title_Menuchoice Menuchoice
	    | Title_Mousebutton Mousebutton
	    | Title_Option Option
	    | Title_Optional Optional
	    | Title_Parameter Parameter
	    | Title_Prompt Prompt
	    | Title_Property Property
	    | Title_Replaceable Replaceable
	    | Title_Returnvalue Returnvalue
	    | Title_Sgmltag Sgmltag
	    | Title_Structfield Structfield
	    | Title_Structname Structname
	    | Title_Symbol Symbol
	    | Title_Systemitem Systemitem
	    | Title_Token Token
	    | Title_Type Type
	    | Title_Userinput Userinput
	    | Title_Varname Varname
	    | Title_Anchor Anchor
	    | Title_Author Author
	    | Title_Authorinitials Authorinitials
	    | Title_Corpauthor Corpauthor
	    | Title_Modespec Modespec
	    | Title_Othercredit Othercredit
	    | Title_Productname Productname
	    | Title_Productnumber Productnumber
	    | Title_Revhistory Revhistory
	    | Title_Remark Remark
	    | Title_Subscript Subscript
	    | Title_Superscript Superscript
	    | Title_Inlinegraphic Inlinegraphic
	    | Title_Inlinemediaobject Inlinemediaobject
	    | Title_Inlineequation Inlineequation
	    | Title_Indexterm Indexterm
	    deriving (Eq,Show)
data Title_Revisionflag = Title_Revisionflag_Changed  | 
			  Title_Revisionflag_Added  |  Title_Revisionflag_Deleted  | 
			  Title_Revisionflag_Off
			deriving (Eq,Show)
data Titleabbrev = Titleabbrev Titleabbrev_Attrs [Titleabbrev_]
		 deriving (Eq,Show)
data Titleabbrev_Attrs = Titleabbrev_Attrs
    { titleabbrevId :: (Maybe String)
    , titleabbrevLang :: (Maybe String)
    , titleabbrevRemap :: (Maybe String)
    , titleabbrevXreflabel :: (Maybe String)
    , titleabbrevRevisionflag :: (Maybe Titleabbrev_Revisionflag)
    , titleabbrevArch :: (Maybe String)
    , titleabbrevCondition :: (Maybe String)
    , titleabbrevConformance :: (Maybe String)
    , titleabbrevOs :: (Maybe String)
    , titleabbrevRevision :: (Maybe String)
    , titleabbrevSecurity :: (Maybe String)
    , titleabbrevUserlevel :: (Maybe String)
    , titleabbrevVendor :: (Maybe String)
    , titleabbrevRole :: (Maybe String)
    } deriving (Eq,Show)
data Titleabbrev_ = Titleabbrev_Str String
		  | Titleabbrev_Footnoteref Footnoteref
		  | Titleabbrev_Xref Xref
		  | Titleabbrev_Abbrev Abbrev
		  | Titleabbrev_Acronym Acronym
		  | Titleabbrev_Citation Citation
		  | Titleabbrev_Citerefentry Citerefentry
		  | Titleabbrev_Citetitle Citetitle
		  | Titleabbrev_Emphasis Emphasis
		  | Titleabbrev_Firstterm Firstterm
		  | Titleabbrev_Foreignphrase Foreignphrase
		  | Titleabbrev_Glossterm Glossterm
		  | Titleabbrev_Footnote Footnote
		  | Titleabbrev_Phrase Phrase
		  | Titleabbrev_Quote Quote
		  | Titleabbrev_Trademark Trademark
		  | Titleabbrev_Wordasword Wordasword
		  | Titleabbrev_Personname Personname
		  | Titleabbrev_Link Link
		  | Titleabbrev_Olink Olink
		  | Titleabbrev_Ulink Ulink
		  | Titleabbrev_Action Action
		  | Titleabbrev_Application Application
		  | Titleabbrev_Classname Classname
		  | Titleabbrev_Methodname Methodname
		  | Titleabbrev_Interfacename Interfacename
		  | Titleabbrev_Exceptionname Exceptionname
		  | Titleabbrev_Ooclass Ooclass
		  | Titleabbrev_Oointerface Oointerface
		  | Titleabbrev_Ooexception Ooexception
		  | Titleabbrev_Command Command
		  | Titleabbrev_Computeroutput Computeroutput
		  | Titleabbrev_Database Database
		  | Titleabbrev_Email Email
		  | Titleabbrev_Envar Envar
		  | Titleabbrev_Errorcode Errorcode
		  | Titleabbrev_Errorname Errorname
		  | Titleabbrev_Errortype Errortype
		  | Titleabbrev_Errortext Errortext
		  | Titleabbrev_Filename Filename
		  | Titleabbrev_Function Function
		  | Titleabbrev_Guibutton Guibutton
		  | Titleabbrev_Guiicon Guiicon
		  | Titleabbrev_Guilabel Guilabel
		  | Titleabbrev_Guimenu Guimenu
		  | Titleabbrev_Guimenuitem Guimenuitem
		  | Titleabbrev_Guisubmenu Guisubmenu
		  | Titleabbrev_Hardware Hardware
		  | Titleabbrev_Interface Interface
		  | Titleabbrev_Keycap Keycap
		  | Titleabbrev_Keycode Keycode
		  | Titleabbrev_Keycombo Keycombo
		  | Titleabbrev_Keysym Keysym
		  | Titleabbrev_Literal Literal
		  | Titleabbrev_Constant Constant
		  | Titleabbrev_Markup Markup
		  | Titleabbrev_Medialabel Medialabel
		  | Titleabbrev_Menuchoice Menuchoice
		  | Titleabbrev_Mousebutton Mousebutton
		  | Titleabbrev_Option Option
		  | Titleabbrev_Optional Optional
		  | Titleabbrev_Parameter Parameter
		  | Titleabbrev_Prompt Prompt
		  | Titleabbrev_Property Property
		  | Titleabbrev_Replaceable Replaceable
		  | Titleabbrev_Returnvalue Returnvalue
		  | Titleabbrev_Sgmltag Sgmltag
		  | Titleabbrev_Structfield Structfield
		  | Titleabbrev_Structname Structname
		  | Titleabbrev_Symbol Symbol
		  | Titleabbrev_Systemitem Systemitem
		  | Titleabbrev_Token Token
		  | Titleabbrev_Type Type
		  | Titleabbrev_Userinput Userinput
		  | Titleabbrev_Varname Varname
		  | Titleabbrev_Anchor Anchor
		  | Titleabbrev_Author Author
		  | Titleabbrev_Authorinitials Authorinitials
		  | Titleabbrev_Corpauthor Corpauthor
		  | Titleabbrev_Modespec Modespec
		  | Titleabbrev_Othercredit Othercredit
		  | Titleabbrev_Productname Productname
		  | Titleabbrev_Productnumber Productnumber
		  | Titleabbrev_Revhistory Revhistory
		  | Titleabbrev_Remark Remark
		  | Titleabbrev_Subscript Subscript
		  | Titleabbrev_Superscript Superscript
		  | Titleabbrev_Inlinegraphic Inlinegraphic
		  | Titleabbrev_Inlinemediaobject Inlinemediaobject
		  | Titleabbrev_Inlineequation Inlineequation
		  | Titleabbrev_Indexterm Indexterm
		  deriving (Eq,Show)
data Titleabbrev_Revisionflag = Titleabbrev_Revisionflag_Changed
				 |  Titleabbrev_Revisionflag_Added  | 
				Titleabbrev_Revisionflag_Deleted  |  Titleabbrev_Revisionflag_Off
			      deriving (Eq,Show)
data Subtitle = Subtitle Subtitle_Attrs [Subtitle_]
	      deriving (Eq,Show)
data Subtitle_Attrs = Subtitle_Attrs
    { subtitleId :: (Maybe String)
    , subtitleLang :: (Maybe String)
    , subtitleRemap :: (Maybe String)
    , subtitleXreflabel :: (Maybe String)
    , subtitleRevisionflag :: (Maybe Subtitle_Revisionflag)
    , subtitleArch :: (Maybe String)
    , subtitleCondition :: (Maybe String)
    , subtitleConformance :: (Maybe String)
    , subtitleOs :: (Maybe String)
    , subtitleRevision :: (Maybe String)
    , subtitleSecurity :: (Maybe String)
    , subtitleUserlevel :: (Maybe String)
    , subtitleVendor :: (Maybe String)
    , subtitleRole :: (Maybe String)
    } deriving (Eq,Show)
data Subtitle_ = Subtitle_Str String
	       | Subtitle_Footnoteref Footnoteref
	       | Subtitle_Xref Xref
	       | Subtitle_Abbrev Abbrev
	       | Subtitle_Acronym Acronym
	       | Subtitle_Citation Citation
	       | Subtitle_Citerefentry Citerefentry
	       | Subtitle_Citetitle Citetitle
	       | Subtitle_Emphasis Emphasis
	       | Subtitle_Firstterm Firstterm
	       | Subtitle_Foreignphrase Foreignphrase
	       | Subtitle_Glossterm Glossterm
	       | Subtitle_Footnote Footnote
	       | Subtitle_Phrase Phrase
	       | Subtitle_Quote Quote
	       | Subtitle_Trademark Trademark
	       | Subtitle_Wordasword Wordasword
	       | Subtitle_Personname Personname
	       | Subtitle_Link Link
	       | Subtitle_Olink Olink
	       | Subtitle_Ulink Ulink
	       | Subtitle_Action Action
	       | Subtitle_Application Application
	       | Subtitle_Classname Classname
	       | Subtitle_Methodname Methodname
	       | Subtitle_Interfacename Interfacename
	       | Subtitle_Exceptionname Exceptionname
	       | Subtitle_Ooclass Ooclass
	       | Subtitle_Oointerface Oointerface
	       | Subtitle_Ooexception Ooexception
	       | Subtitle_Command Command
	       | Subtitle_Computeroutput Computeroutput
	       | Subtitle_Database Database
	       | Subtitle_Email Email
	       | Subtitle_Envar Envar
	       | Subtitle_Errorcode Errorcode
	       | Subtitle_Errorname Errorname
	       | Subtitle_Errortype Errortype
	       | Subtitle_Errortext Errortext
	       | Subtitle_Filename Filename
	       | Subtitle_Function Function
	       | Subtitle_Guibutton Guibutton
	       | Subtitle_Guiicon Guiicon
	       | Subtitle_Guilabel Guilabel
	       | Subtitle_Guimenu Guimenu
	       | Subtitle_Guimenuitem Guimenuitem
	       | Subtitle_Guisubmenu Guisubmenu
	       | Subtitle_Hardware Hardware
	       | Subtitle_Interface Interface
	       | Subtitle_Keycap Keycap
	       | Subtitle_Keycode Keycode
	       | Subtitle_Keycombo Keycombo
	       | Subtitle_Keysym Keysym
	       | Subtitle_Literal Literal
	       | Subtitle_Constant Constant
	       | Subtitle_Markup Markup
	       | Subtitle_Medialabel Medialabel
	       | Subtitle_Menuchoice Menuchoice
	       | Subtitle_Mousebutton Mousebutton
	       | Subtitle_Option Option
	       | Subtitle_Optional Optional
	       | Subtitle_Parameter Parameter
	       | Subtitle_Prompt Prompt
	       | Subtitle_Property Property
	       | Subtitle_Replaceable Replaceable
	       | Subtitle_Returnvalue Returnvalue
	       | Subtitle_Sgmltag Sgmltag
	       | Subtitle_Structfield Structfield
	       | Subtitle_Structname Structname
	       | Subtitle_Symbol Symbol
	       | Subtitle_Systemitem Systemitem
	       | Subtitle_Token Token
	       | Subtitle_Type Type
	       | Subtitle_Userinput Userinput
	       | Subtitle_Varname Varname
	       | Subtitle_Anchor Anchor
	       | Subtitle_Author Author
	       | Subtitle_Authorinitials Authorinitials
	       | Subtitle_Corpauthor Corpauthor
	       | Subtitle_Modespec Modespec
	       | Subtitle_Othercredit Othercredit
	       | Subtitle_Productname Productname
	       | Subtitle_Productnumber Productnumber
	       | Subtitle_Revhistory Revhistory
	       | Subtitle_Remark Remark
	       | Subtitle_Subscript Subscript
	       | Subtitle_Superscript Superscript
	       | Subtitle_Inlinegraphic Inlinegraphic
	       | Subtitle_Inlinemediaobject Inlinemediaobject
	       | Subtitle_Inlineequation Inlineequation
	       | Subtitle_Indexterm Indexterm
	       deriving (Eq,Show)
data Subtitle_Revisionflag = Subtitle_Revisionflag_Changed  | 
			     Subtitle_Revisionflag_Added  |  Subtitle_Revisionflag_Deleted  | 
			     Subtitle_Revisionflag_Off
			   deriving (Eq,Show)
data Biblioentry = Biblioentry Biblioentry_Attrs
			       [(OneOf2 Articleinfo (OneOf56 Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm))]
		 deriving (Eq,Show)
data Biblioentry_Attrs = Biblioentry_Attrs
    { biblioentryId :: (Maybe String)
    , biblioentryLang :: (Maybe String)
    , biblioentryRemap :: (Maybe String)
    , biblioentryXreflabel :: (Maybe String)
    , biblioentryRevisionflag :: (Maybe Biblioentry_Revisionflag)
    , biblioentryArch :: (Maybe String)
    , biblioentryCondition :: (Maybe String)
    , biblioentryConformance :: (Maybe String)
    , biblioentryOs :: (Maybe String)
    , biblioentryRevision :: (Maybe String)
    , biblioentrySecurity :: (Maybe String)
    , biblioentryUserlevel :: (Maybe String)
    , biblioentryVendor :: (Maybe String)
    , biblioentryRole :: (Maybe String)
    } deriving (Eq,Show)
data Biblioentry_Revisionflag = Biblioentry_Revisionflag_Changed
				 |  Biblioentry_Revisionflag_Added  | 
				Biblioentry_Revisionflag_Deleted  |  Biblioentry_Revisionflag_Off
			      deriving (Eq,Show)
data Bibliomixed = Bibliomixed Bibliomixed_Attrs [Bibliomixed_]
		 deriving (Eq,Show)
data Bibliomixed_Attrs = Bibliomixed_Attrs
    { bibliomixedId :: (Maybe String)
    , bibliomixedLang :: (Maybe String)
    , bibliomixedRemap :: (Maybe String)
    , bibliomixedXreflabel :: (Maybe String)
    , bibliomixedRevisionflag :: (Maybe Bibliomixed_Revisionflag)
    , bibliomixedArch :: (Maybe String)
    , bibliomixedCondition :: (Maybe String)
    , bibliomixedConformance :: (Maybe String)
    , bibliomixedOs :: (Maybe String)
    , bibliomixedRevision :: (Maybe String)
    , bibliomixedSecurity :: (Maybe String)
    , bibliomixedUserlevel :: (Maybe String)
    , bibliomixedVendor :: (Maybe String)
    , bibliomixedRole :: (Maybe String)
    } deriving (Eq,Show)
data Bibliomixed_ = Bibliomixed_Str String
		  | Bibliomixed_Abbrev Abbrev
		  | Bibliomixed_Abstract Abstract
		  | Bibliomixed_Address Address
		  | Bibliomixed_Artpagenums Artpagenums
		  | Bibliomixed_Author Author
		  | Bibliomixed_Authorgroup Authorgroup
		  | Bibliomixed_Authorinitials Authorinitials
		  | Bibliomixed_Bibliomisc Bibliomisc
		  | Bibliomixed_Biblioset Biblioset
		  | Bibliomixed_Collab Collab
		  | Bibliomixed_Confgroup Confgroup
		  | Bibliomixed_Contractnum Contractnum
		  | Bibliomixed_Contractsponsor Contractsponsor
		  | Bibliomixed_Copyright Copyright
		  | Bibliomixed_Corpauthor Corpauthor
		  | Bibliomixed_Corpname Corpname
		  | Bibliomixed_Date Date
		  | Bibliomixed_Edition Edition
		  | Bibliomixed_Editor Editor
		  | Bibliomixed_Invpartnumber Invpartnumber
		  | Bibliomixed_Isbn Isbn
		  | Bibliomixed_Issn Issn
		  | Bibliomixed_Issuenum Issuenum
		  | Bibliomixed_Orgname Orgname
		  | Bibliomixed_Biblioid Biblioid
		  | Bibliomixed_Citebiblioid Citebiblioid
		  | Bibliomixed_Bibliosource Bibliosource
		  | Bibliomixed_Bibliorelation Bibliorelation
		  | Bibliomixed_Bibliocoverage Bibliocoverage
		  | Bibliomixed_Othercredit Othercredit
		  | Bibliomixed_Pagenums Pagenums
		  | Bibliomixed_Printhistory Printhistory
		  | Bibliomixed_Productname Productname
		  | Bibliomixed_Productnumber Productnumber
		  | Bibliomixed_Pubdate Pubdate
		  | Bibliomixed_Publisher Publisher
		  | Bibliomixed_Publishername Publishername
		  | Bibliomixed_Pubsnumber Pubsnumber
		  | Bibliomixed_Releaseinfo Releaseinfo
		  | Bibliomixed_Revhistory Revhistory
		  | Bibliomixed_Seriesvolnums Seriesvolnums
		  | Bibliomixed_Subtitle Subtitle
		  | Bibliomixed_Title Title
		  | Bibliomixed_Titleabbrev Titleabbrev
		  | Bibliomixed_Volumenum Volumenum
		  | Bibliomixed_Citetitle Citetitle
		  | Bibliomixed_Personname Personname
		  | Bibliomixed_Honorific Honorific
		  | Bibliomixed_Firstname Firstname
		  | Bibliomixed_Surname Surname
		  | Bibliomixed_Lineage Lineage
		  | Bibliomixed_Othername Othername
		  | Bibliomixed_Affiliation Affiliation
		  | Bibliomixed_Authorblurb Authorblurb
		  | Bibliomixed_Contrib Contrib
		  | Bibliomixed_Indexterm Indexterm
		  | Bibliomixed_Bibliomset Bibliomset
		  deriving (Eq,Show)
data Bibliomixed_Revisionflag = Bibliomixed_Revisionflag_Changed
				 |  Bibliomixed_Revisionflag_Added  | 
				Bibliomixed_Revisionflag_Deleted  |  Bibliomixed_Revisionflag_Off
			      deriving (Eq,Show)
data Articleinfo = Articleinfo Articleinfo_Attrs
			       [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
		 deriving (Eq,Show)
data Articleinfo_Attrs = Articleinfo_Attrs
    { articleinfoId :: (Maybe String)
    , articleinfoLang :: (Maybe String)
    , articleinfoRemap :: (Maybe String)
    , articleinfoXreflabel :: (Maybe String)
    , articleinfoRevisionflag :: (Maybe Articleinfo_Revisionflag)
    , articleinfoArch :: (Maybe String)
    , articleinfoCondition :: (Maybe String)
    , articleinfoConformance :: (Maybe String)
    , articleinfoOs :: (Maybe String)
    , articleinfoRevision :: (Maybe String)
    , articleinfoSecurity :: (Maybe String)
    , articleinfoUserlevel :: (Maybe String)
    , articleinfoVendor :: (Maybe String)
    , articleinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Articleinfo_Revisionflag = Articleinfo_Revisionflag_Changed
				 |  Articleinfo_Revisionflag_Added  | 
				Articleinfo_Revisionflag_Deleted  |  Articleinfo_Revisionflag_Off
			      deriving (Eq,Show)
data Biblioset = Biblioset Biblioset_Attrs
			   [(OneOf56 Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
	       deriving (Eq,Show)
data Biblioset_Attrs = Biblioset_Attrs
    { bibliosetRelation :: (Maybe String)
    , bibliosetId :: (Maybe String)
    , bibliosetLang :: (Maybe String)
    , bibliosetRemap :: (Maybe String)
    , bibliosetXreflabel :: (Maybe String)
    , bibliosetRevisionflag :: (Maybe Biblioset_Revisionflag)
    , bibliosetArch :: (Maybe String)
    , bibliosetCondition :: (Maybe String)
    , bibliosetConformance :: (Maybe String)
    , bibliosetOs :: (Maybe String)
    , bibliosetRevision :: (Maybe String)
    , bibliosetSecurity :: (Maybe String)
    , bibliosetUserlevel :: (Maybe String)
    , bibliosetVendor :: (Maybe String)
    , bibliosetRole :: (Maybe String)
    } deriving (Eq,Show)
data Biblioset_Revisionflag = Biblioset_Revisionflag_Changed  | 
			      Biblioset_Revisionflag_Added  |  Biblioset_Revisionflag_Deleted  | 
			      Biblioset_Revisionflag_Off
			    deriving (Eq,Show)
data Bibliomset = Bibliomset Bibliomset_Attrs [Bibliomset_]
		deriving (Eq,Show)
data Bibliomset_Attrs = Bibliomset_Attrs
    { bibliomsetRelation :: (Maybe String)
    , bibliomsetId :: (Maybe String)
    , bibliomsetLang :: (Maybe String)
    , bibliomsetRemap :: (Maybe String)
    , bibliomsetXreflabel :: (Maybe String)
    , bibliomsetRevisionflag :: (Maybe Bibliomset_Revisionflag)
    , bibliomsetArch :: (Maybe String)
    , bibliomsetCondition :: (Maybe String)
    , bibliomsetConformance :: (Maybe String)
    , bibliomsetOs :: (Maybe String)
    , bibliomsetRevision :: (Maybe String)
    , bibliomsetSecurity :: (Maybe String)
    , bibliomsetUserlevel :: (Maybe String)
    , bibliomsetVendor :: (Maybe String)
    , bibliomsetRole :: (Maybe String)
    } deriving (Eq,Show)
data Bibliomset_ = Bibliomset_Str String
		 | Bibliomset_Abbrev Abbrev
		 | Bibliomset_Abstract Abstract
		 | Bibliomset_Address Address
		 | Bibliomset_Artpagenums Artpagenums
		 | Bibliomset_Author Author
		 | Bibliomset_Authorgroup Authorgroup
		 | Bibliomset_Authorinitials Authorinitials
		 | Bibliomset_Bibliomisc Bibliomisc
		 | Bibliomset_Biblioset Biblioset
		 | Bibliomset_Collab Collab
		 | Bibliomset_Confgroup Confgroup
		 | Bibliomset_Contractnum Contractnum
		 | Bibliomset_Contractsponsor Contractsponsor
		 | Bibliomset_Copyright Copyright
		 | Bibliomset_Corpauthor Corpauthor
		 | Bibliomset_Corpname Corpname
		 | Bibliomset_Date Date
		 | Bibliomset_Edition Edition
		 | Bibliomset_Editor Editor
		 | Bibliomset_Invpartnumber Invpartnumber
		 | Bibliomset_Isbn Isbn
		 | Bibliomset_Issn Issn
		 | Bibliomset_Issuenum Issuenum
		 | Bibliomset_Orgname Orgname
		 | Bibliomset_Biblioid Biblioid
		 | Bibliomset_Citebiblioid Citebiblioid
		 | Bibliomset_Bibliosource Bibliosource
		 | Bibliomset_Bibliorelation Bibliorelation
		 | Bibliomset_Bibliocoverage Bibliocoverage
		 | Bibliomset_Othercredit Othercredit
		 | Bibliomset_Pagenums Pagenums
		 | Bibliomset_Printhistory Printhistory
		 | Bibliomset_Productname Productname
		 | Bibliomset_Productnumber Productnumber
		 | Bibliomset_Pubdate Pubdate
		 | Bibliomset_Publisher Publisher
		 | Bibliomset_Publishername Publishername
		 | Bibliomset_Pubsnumber Pubsnumber
		 | Bibliomset_Releaseinfo Releaseinfo
		 | Bibliomset_Revhistory Revhistory
		 | Bibliomset_Seriesvolnums Seriesvolnums
		 | Bibliomset_Subtitle Subtitle
		 | Bibliomset_Title Title
		 | Bibliomset_Titleabbrev Titleabbrev
		 | Bibliomset_Volumenum Volumenum
		 | Bibliomset_Citetitle Citetitle
		 | Bibliomset_Personname Personname
		 | Bibliomset_Honorific Honorific
		 | Bibliomset_Firstname Firstname
		 | Bibliomset_Surname Surname
		 | Bibliomset_Lineage Lineage
		 | Bibliomset_Othername Othername
		 | Bibliomset_Affiliation Affiliation
		 | Bibliomset_Authorblurb Authorblurb
		 | Bibliomset_Contrib Contrib
		 | Bibliomset_Indexterm Indexterm
		 | Bibliomset_Bibliomset Bibliomset
		 deriving (Eq,Show)
data Bibliomset_Revisionflag = Bibliomset_Revisionflag_Changed  | 
			       Bibliomset_Revisionflag_Added  |  Bibliomset_Revisionflag_Deleted
			        |  Bibliomset_Revisionflag_Off
			     deriving (Eq,Show)
data Bibliomisc = Bibliomisc Bibliomisc_Attrs [Bibliomisc_]
		deriving (Eq,Show)
data Bibliomisc_Attrs = Bibliomisc_Attrs
    { bibliomiscId :: (Maybe String)
    , bibliomiscLang :: (Maybe String)
    , bibliomiscRemap :: (Maybe String)
    , bibliomiscXreflabel :: (Maybe String)
    , bibliomiscRevisionflag :: (Maybe Bibliomisc_Revisionflag)
    , bibliomiscArch :: (Maybe String)
    , bibliomiscCondition :: (Maybe String)
    , bibliomiscConformance :: (Maybe String)
    , bibliomiscOs :: (Maybe String)
    , bibliomiscRevision :: (Maybe String)
    , bibliomiscSecurity :: (Maybe String)
    , bibliomiscUserlevel :: (Maybe String)
    , bibliomiscVendor :: (Maybe String)
    , bibliomiscRole :: (Maybe String)
    } deriving (Eq,Show)
data Bibliomisc_ = Bibliomisc_Str String
		 | Bibliomisc_Footnoteref Footnoteref
		 | Bibliomisc_Xref Xref
		 | Bibliomisc_Abbrev Abbrev
		 | Bibliomisc_Acronym Acronym
		 | Bibliomisc_Citation Citation
		 | Bibliomisc_Citerefentry Citerefentry
		 | Bibliomisc_Citetitle Citetitle
		 | Bibliomisc_Emphasis Emphasis
		 | Bibliomisc_Firstterm Firstterm
		 | Bibliomisc_Foreignphrase Foreignphrase
		 | Bibliomisc_Glossterm Glossterm
		 | Bibliomisc_Footnote Footnote
		 | Bibliomisc_Phrase Phrase
		 | Bibliomisc_Quote Quote
		 | Bibliomisc_Trademark Trademark
		 | Bibliomisc_Wordasword Wordasword
		 | Bibliomisc_Personname Personname
		 | Bibliomisc_Link Link
		 | Bibliomisc_Olink Olink
		 | Bibliomisc_Ulink Ulink
		 | Bibliomisc_Action Action
		 | Bibliomisc_Application Application
		 | Bibliomisc_Classname Classname
		 | Bibliomisc_Methodname Methodname
		 | Bibliomisc_Interfacename Interfacename
		 | Bibliomisc_Exceptionname Exceptionname
		 | Bibliomisc_Ooclass Ooclass
		 | Bibliomisc_Oointerface Oointerface
		 | Bibliomisc_Ooexception Ooexception
		 | Bibliomisc_Command Command
		 | Bibliomisc_Computeroutput Computeroutput
		 | Bibliomisc_Database Database
		 | Bibliomisc_Email Email
		 | Bibliomisc_Envar Envar
		 | Bibliomisc_Errorcode Errorcode
		 | Bibliomisc_Errorname Errorname
		 | Bibliomisc_Errortype Errortype
		 | Bibliomisc_Errortext Errortext
		 | Bibliomisc_Filename Filename
		 | Bibliomisc_Function Function
		 | Bibliomisc_Guibutton Guibutton
		 | Bibliomisc_Guiicon Guiicon
		 | Bibliomisc_Guilabel Guilabel
		 | Bibliomisc_Guimenu Guimenu
		 | Bibliomisc_Guimenuitem Guimenuitem
		 | Bibliomisc_Guisubmenu Guisubmenu
		 | Bibliomisc_Hardware Hardware
		 | Bibliomisc_Interface Interface
		 | Bibliomisc_Keycap Keycap
		 | Bibliomisc_Keycode Keycode
		 | Bibliomisc_Keycombo Keycombo
		 | Bibliomisc_Keysym Keysym
		 | Bibliomisc_Literal Literal
		 | Bibliomisc_Constant Constant
		 | Bibliomisc_Markup Markup
		 | Bibliomisc_Medialabel Medialabel
		 | Bibliomisc_Menuchoice Menuchoice
		 | Bibliomisc_Mousebutton Mousebutton
		 | Bibliomisc_Option Option
		 | Bibliomisc_Optional Optional
		 | Bibliomisc_Parameter Parameter
		 | Bibliomisc_Prompt Prompt
		 | Bibliomisc_Property Property
		 | Bibliomisc_Replaceable Replaceable
		 | Bibliomisc_Returnvalue Returnvalue
		 | Bibliomisc_Sgmltag Sgmltag
		 | Bibliomisc_Structfield Structfield
		 | Bibliomisc_Structname Structname
		 | Bibliomisc_Symbol Symbol
		 | Bibliomisc_Systemitem Systemitem
		 | Bibliomisc_Token Token
		 | Bibliomisc_Type Type
		 | Bibliomisc_Userinput Userinput
		 | Bibliomisc_Varname Varname
		 | Bibliomisc_Anchor Anchor
		 | Bibliomisc_Author Author
		 | Bibliomisc_Authorinitials Authorinitials
		 | Bibliomisc_Corpauthor Corpauthor
		 | Bibliomisc_Modespec Modespec
		 | Bibliomisc_Othercredit Othercredit
		 | Bibliomisc_Productname Productname
		 | Bibliomisc_Productnumber Productnumber
		 | Bibliomisc_Revhistory Revhistory
		 | Bibliomisc_Remark Remark
		 | Bibliomisc_Subscript Subscript
		 | Bibliomisc_Superscript Superscript
		 | Bibliomisc_Inlinegraphic Inlinegraphic
		 | Bibliomisc_Inlinemediaobject Inlinemediaobject
		 | Bibliomisc_Inlineequation Inlineequation
		 | Bibliomisc_Synopsis Synopsis
		 | Bibliomisc_Cmdsynopsis Cmdsynopsis
		 | Bibliomisc_Funcsynopsis Funcsynopsis
		 | Bibliomisc_Classsynopsis Classsynopsis
		 | Bibliomisc_Fieldsynopsis Fieldsynopsis
		 | Bibliomisc_Constructorsynopsis Constructorsynopsis
		 | Bibliomisc_Destructorsynopsis Destructorsynopsis
		 | Bibliomisc_Methodsynopsis Methodsynopsis
		 | Bibliomisc_Indexterm Indexterm
		 | Bibliomisc_Beginpage Beginpage
		 deriving (Eq,Show)
data Bibliomisc_Revisionflag = Bibliomisc_Revisionflag_Changed  | 
			       Bibliomisc_Revisionflag_Added  |  Bibliomisc_Revisionflag_Deleted
			        |  Bibliomisc_Revisionflag_Off
			     deriving (Eq,Show)
data Subjectset = Subjectset Subjectset_Attrs [Subject]
		deriving (Eq,Show)
data Subjectset_Attrs = Subjectset_Attrs
    { subjectsetScheme :: (Maybe String)
    , subjectsetId :: (Maybe String)
    , subjectsetLang :: (Maybe String)
    , subjectsetRemap :: (Maybe String)
    , subjectsetXreflabel :: (Maybe String)
    , subjectsetRevisionflag :: (Maybe Subjectset_Revisionflag)
    , subjectsetArch :: (Maybe String)
    , subjectsetCondition :: (Maybe String)
    , subjectsetConformance :: (Maybe String)
    , subjectsetOs :: (Maybe String)
    , subjectsetRevision :: (Maybe String)
    , subjectsetSecurity :: (Maybe String)
    , subjectsetUserlevel :: (Maybe String)
    , subjectsetVendor :: (Maybe String)
    , subjectsetRole :: (Maybe String)
    } deriving (Eq,Show)
data Subjectset_Revisionflag = Subjectset_Revisionflag_Changed  | 
			       Subjectset_Revisionflag_Added  |  Subjectset_Revisionflag_Deleted
			        |  Subjectset_Revisionflag_Off
			     deriving (Eq,Show)
data Subject = Subject Subject_Attrs [Subjectterm]
	     deriving (Eq,Show)
data Subject_Attrs = Subject_Attrs
    { subjectWeight :: (Maybe String)
    , subjectId :: (Maybe String)
    , subjectLang :: (Maybe String)
    , subjectRemap :: (Maybe String)
    , subjectXreflabel :: (Maybe String)
    , subjectRevisionflag :: (Maybe Subject_Revisionflag)
    , subjectArch :: (Maybe String)
    , subjectCondition :: (Maybe String)
    , subjectConformance :: (Maybe String)
    , subjectOs :: (Maybe String)
    , subjectRevision :: (Maybe String)
    , subjectSecurity :: (Maybe String)
    , subjectUserlevel :: (Maybe String)
    , subjectVendor :: (Maybe String)
    , subjectRole :: (Maybe String)
    } deriving (Eq,Show)
data Subject_Revisionflag = Subject_Revisionflag_Changed  | 
			    Subject_Revisionflag_Added  |  Subject_Revisionflag_Deleted  | 
			    Subject_Revisionflag_Off
			  deriving (Eq,Show)
data Subjectterm = Subjectterm Subjectterm_Attrs String
		 deriving (Eq,Show)
data Subjectterm_Attrs = Subjectterm_Attrs
    { subjecttermId :: (Maybe String)
    , subjecttermLang :: (Maybe String)
    , subjecttermRemap :: (Maybe String)
    , subjecttermXreflabel :: (Maybe String)
    , subjecttermRevisionflag :: (Maybe Subjectterm_Revisionflag)
    , subjecttermArch :: (Maybe String)
    , subjecttermCondition :: (Maybe String)
    , subjecttermConformance :: (Maybe String)
    , subjecttermOs :: (Maybe String)
    , subjecttermRevision :: (Maybe String)
    , subjecttermSecurity :: (Maybe String)
    , subjecttermUserlevel :: (Maybe String)
    , subjecttermVendor :: (Maybe String)
    , subjecttermRole :: (Maybe String)
    } deriving (Eq,Show)
data Subjectterm_Revisionflag = Subjectterm_Revisionflag_Changed
				 |  Subjectterm_Revisionflag_Added  | 
				Subjectterm_Revisionflag_Deleted  |  Subjectterm_Revisionflag_Off
			      deriving (Eq,Show)
data Keywordset = Keywordset Keywordset_Attrs [Keyword]
		deriving (Eq,Show)
data Keywordset_Attrs = Keywordset_Attrs
    { keywordsetId :: (Maybe String)
    , keywordsetLang :: (Maybe String)
    , keywordsetRemap :: (Maybe String)
    , keywordsetXreflabel :: (Maybe String)
    , keywordsetRevisionflag :: (Maybe Keywordset_Revisionflag)
    , keywordsetArch :: (Maybe String)
    , keywordsetCondition :: (Maybe String)
    , keywordsetConformance :: (Maybe String)
    , keywordsetOs :: (Maybe String)
    , keywordsetRevision :: (Maybe String)
    , keywordsetSecurity :: (Maybe String)
    , keywordsetUserlevel :: (Maybe String)
    , keywordsetVendor :: (Maybe String)
    , keywordsetRole :: (Maybe String)
    } deriving (Eq,Show)
data Keywordset_Revisionflag = Keywordset_Revisionflag_Changed  | 
			       Keywordset_Revisionflag_Added  |  Keywordset_Revisionflag_Deleted
			        |  Keywordset_Revisionflag_Off
			     deriving (Eq,Show)
data Keyword = Keyword Keyword_Attrs String
	     deriving (Eq,Show)
data Keyword_Attrs = Keyword_Attrs
    { keywordId :: (Maybe String)
    , keywordLang :: (Maybe String)
    , keywordRemap :: (Maybe String)
    , keywordXreflabel :: (Maybe String)
    , keywordRevisionflag :: (Maybe Keyword_Revisionflag)
    , keywordArch :: (Maybe String)
    , keywordCondition :: (Maybe String)
    , keywordConformance :: (Maybe String)
    , keywordOs :: (Maybe String)
    , keywordRevision :: (Maybe String)
    , keywordSecurity :: (Maybe String)
    , keywordUserlevel :: (Maybe String)
    , keywordVendor :: (Maybe String)
    , keywordRole :: (Maybe String)
    } deriving (Eq,Show)
data Keyword_Revisionflag = Keyword_Revisionflag_Changed  | 
			    Keyword_Revisionflag_Added  |  Keyword_Revisionflag_Deleted  | 
			    Keyword_Revisionflag_Off
			  deriving (Eq,Show)
data Itermset = Itermset Itermset_Attrs [Indexterm]
	      deriving (Eq,Show)
data Itermset_Attrs = Itermset_Attrs
    { itermsetId :: (Maybe String)
    , itermsetLang :: (Maybe String)
    , itermsetRemap :: (Maybe String)
    , itermsetXreflabel :: (Maybe String)
    , itermsetRevisionflag :: (Maybe Itermset_Revisionflag)
    , itermsetArch :: (Maybe String)
    , itermsetCondition :: (Maybe String)
    , itermsetConformance :: (Maybe String)
    , itermsetOs :: (Maybe String)
    , itermsetRevision :: (Maybe String)
    , itermsetSecurity :: (Maybe String)
    , itermsetUserlevel :: (Maybe String)
    , itermsetVendor :: (Maybe String)
    , itermsetRole :: (Maybe String)
    } deriving (Eq,Show)
data Itermset_Revisionflag = Itermset_Revisionflag_Changed  | 
			     Itermset_Revisionflag_Added  |  Itermset_Revisionflag_Deleted  | 
			     Itermset_Revisionflag_Off
			   deriving (Eq,Show)
data Blockinfo = Blockinfo Blockinfo_Attrs
			   [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
	       deriving (Eq,Show)
data Blockinfo_Attrs = Blockinfo_Attrs
    { blockinfoId :: (Maybe String)
    , blockinfoLang :: (Maybe String)
    , blockinfoRemap :: (Maybe String)
    , blockinfoXreflabel :: (Maybe String)
    , blockinfoRevisionflag :: (Maybe Blockinfo_Revisionflag)
    , blockinfoArch :: (Maybe String)
    , blockinfoCondition :: (Maybe String)
    , blockinfoConformance :: (Maybe String)
    , blockinfoOs :: (Maybe String)
    , blockinfoRevision :: (Maybe String)
    , blockinfoSecurity :: (Maybe String)
    , blockinfoUserlevel :: (Maybe String)
    , blockinfoVendor :: (Maybe String)
    , blockinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Blockinfo_Revisionflag = Blockinfo_Revisionflag_Changed  | 
			      Blockinfo_Revisionflag_Added  |  Blockinfo_Revisionflag_Deleted  | 
			      Blockinfo_Revisionflag_Off
			    deriving (Eq,Show)
data Msgset = Msgset Msgset_Attrs (Maybe Blockinfo)
		     (Maybe (Title,(Maybe Titleabbrev)))
		     (OneOf2 [Msgentry] [Simplemsgentry])
	    deriving (Eq,Show)
data Msgset_Attrs = Msgset_Attrs
    { msgsetId :: (Maybe String)
    , msgsetLang :: (Maybe String)
    , msgsetRemap :: (Maybe String)
    , msgsetXreflabel :: (Maybe String)
    , msgsetRevisionflag :: (Maybe Msgset_Revisionflag)
    , msgsetArch :: (Maybe String)
    , msgsetCondition :: (Maybe String)
    , msgsetConformance :: (Maybe String)
    , msgsetOs :: (Maybe String)
    , msgsetRevision :: (Maybe String)
    , msgsetSecurity :: (Maybe String)
    , msgsetUserlevel :: (Maybe String)
    , msgsetVendor :: (Maybe String)
    , msgsetRole :: (Maybe String)
    } deriving (Eq,Show)
data Msgset_Revisionflag = Msgset_Revisionflag_Changed  | 
			   Msgset_Revisionflag_Added  |  Msgset_Revisionflag_Deleted  | 
			   Msgset_Revisionflag_Off
			 deriving (Eq,Show)
data Msgentry = Msgentry Msgentry_Attrs [Msg] (Maybe Msginfo)
			 [Msgexplan]
	      deriving (Eq,Show)
data Msgentry_Attrs = Msgentry_Attrs
    { msgentryId :: (Maybe String)
    , msgentryLang :: (Maybe String)
    , msgentryRemap :: (Maybe String)
    , msgentryXreflabel :: (Maybe String)
    , msgentryRevisionflag :: (Maybe Msgentry_Revisionflag)
    , msgentryArch :: (Maybe String)
    , msgentryCondition :: (Maybe String)
    , msgentryConformance :: (Maybe String)
    , msgentryOs :: (Maybe String)
    , msgentryRevision :: (Maybe String)
    , msgentrySecurity :: (Maybe String)
    , msgentryUserlevel :: (Maybe String)
    , msgentryVendor :: (Maybe String)
    , msgentryRole :: (Maybe String)
    } deriving (Eq,Show)
data Msgentry_Revisionflag = Msgentry_Revisionflag_Changed  | 
			     Msgentry_Revisionflag_Added  |  Msgentry_Revisionflag_Deleted  | 
			     Msgentry_Revisionflag_Off
			   deriving (Eq,Show)
data Simplemsgentry = Simplemsgentry Simplemsgentry_Attrs Msgtext
				     [Msgexplan]
		    deriving (Eq,Show)
data Simplemsgentry_Attrs = Simplemsgentry_Attrs
    { simplemsgentryAudience :: (Maybe String)
    , simplemsgentryLevel :: (Maybe String)
    , simplemsgentryOrigin :: (Maybe String)
    , simplemsgentryId :: (Maybe String)
    , simplemsgentryLang :: (Maybe String)
    , simplemsgentryRemap :: (Maybe String)
    , simplemsgentryXreflabel :: (Maybe String)
    , simplemsgentryRevisionflag :: (Maybe Simplemsgentry_Revisionflag)
    , simplemsgentryArch :: (Maybe String)
    , simplemsgentryCondition :: (Maybe String)
    , simplemsgentryConformance :: (Maybe String)
    , simplemsgentryOs :: (Maybe String)
    , simplemsgentryRevision :: (Maybe String)
    , simplemsgentrySecurity :: (Maybe String)
    , simplemsgentryUserlevel :: (Maybe String)
    , simplemsgentryVendor :: (Maybe String)
    , simplemsgentryRole :: (Maybe String)
    } deriving (Eq,Show)
data Simplemsgentry_Revisionflag = Simplemsgentry_Revisionflag_Changed
				    |  Simplemsgentry_Revisionflag_Added  | 
				   Simplemsgentry_Revisionflag_Deleted  | 
				   Simplemsgentry_Revisionflag_Off
				 deriving (Eq,Show)
data Msg = Msg Msg_Attrs (Maybe Title) Msgmain
	       [(OneOf2 Msgsub Msgrel)]
	 deriving (Eq,Show)
data Msg_Attrs = Msg_Attrs
    { msgId :: (Maybe String)
    , msgLang :: (Maybe String)
    , msgRemap :: (Maybe String)
    , msgXreflabel :: (Maybe String)
    , msgRevisionflag :: (Maybe Msg_Revisionflag)
    , msgArch :: (Maybe String)
    , msgCondition :: (Maybe String)
    , msgConformance :: (Maybe String)
    , msgOs :: (Maybe String)
    , msgRevision :: (Maybe String)
    , msgSecurity :: (Maybe String)
    , msgUserlevel :: (Maybe String)
    , msgVendor :: (Maybe String)
    , msgRole :: (Maybe String)
    } deriving (Eq,Show)
data Msg_Revisionflag = Msg_Revisionflag_Changed  | 
			Msg_Revisionflag_Added  |  Msg_Revisionflag_Deleted  | 
			Msg_Revisionflag_Off
		      deriving (Eq,Show)
data Msgmain = Msgmain Msgmain_Attrs (Maybe Title) Msgtext
	     deriving (Eq,Show)
data Msgmain_Attrs = Msgmain_Attrs
    { msgmainId :: (Maybe String)
    , msgmainLang :: (Maybe String)
    , msgmainRemap :: (Maybe String)
    , msgmainXreflabel :: (Maybe String)
    , msgmainRevisionflag :: (Maybe Msgmain_Revisionflag)
    , msgmainArch :: (Maybe String)
    , msgmainCondition :: (Maybe String)
    , msgmainConformance :: (Maybe String)
    , msgmainOs :: (Maybe String)
    , msgmainRevision :: (Maybe String)
    , msgmainSecurity :: (Maybe String)
    , msgmainUserlevel :: (Maybe String)
    , msgmainVendor :: (Maybe String)
    , msgmainRole :: (Maybe String)
    } deriving (Eq,Show)
data Msgmain_Revisionflag = Msgmain_Revisionflag_Changed  | 
			    Msgmain_Revisionflag_Added  |  Msgmain_Revisionflag_Deleted  | 
			    Msgmain_Revisionflag_Off
			  deriving (Eq,Show)
data Msgsub = Msgsub Msgsub_Attrs (Maybe Title) Msgtext
	    deriving (Eq,Show)
data Msgsub_Attrs = Msgsub_Attrs
    { msgsubId :: (Maybe String)
    , msgsubLang :: (Maybe String)
    , msgsubRemap :: (Maybe String)
    , msgsubXreflabel :: (Maybe String)
    , msgsubRevisionflag :: (Maybe Msgsub_Revisionflag)
    , msgsubArch :: (Maybe String)
    , msgsubCondition :: (Maybe String)
    , msgsubConformance :: (Maybe String)
    , msgsubOs :: (Maybe String)
    , msgsubRevision :: (Maybe String)
    , msgsubSecurity :: (Maybe String)
    , msgsubUserlevel :: (Maybe String)
    , msgsubVendor :: (Maybe String)
    , msgsubRole :: (Maybe String)
    } deriving (Eq,Show)
data Msgsub_Revisionflag = Msgsub_Revisionflag_Changed  | 
			   Msgsub_Revisionflag_Added  |  Msgsub_Revisionflag_Deleted  | 
			   Msgsub_Revisionflag_Off
			 deriving (Eq,Show)
data Msgrel = Msgrel Msgrel_Attrs (Maybe Title) Msgtext
	    deriving (Eq,Show)
data Msgrel_Attrs = Msgrel_Attrs
    { msgrelId :: (Maybe String)
    , msgrelLang :: (Maybe String)
    , msgrelRemap :: (Maybe String)
    , msgrelXreflabel :: (Maybe String)
    , msgrelRevisionflag :: (Maybe Msgrel_Revisionflag)
    , msgrelArch :: (Maybe String)
    , msgrelCondition :: (Maybe String)
    , msgrelConformance :: (Maybe String)
    , msgrelOs :: (Maybe String)
    , msgrelRevision :: (Maybe String)
    , msgrelSecurity :: (Maybe String)
    , msgrelUserlevel :: (Maybe String)
    , msgrelVendor :: (Maybe String)
    , msgrelRole :: (Maybe String)
    } deriving (Eq,Show)
data Msgrel_Revisionflag = Msgrel_Revisionflag_Changed  | 
			   Msgrel_Revisionflag_Added  |  Msgrel_Revisionflag_Deleted  | 
			   Msgrel_Revisionflag_Off
			 deriving (Eq,Show)
data Msginfo = Msginfo Msginfo_Attrs
		       [(OneOf3 Msglevel Msgorig Msgaud)]
	     deriving (Eq,Show)
data Msginfo_Attrs = Msginfo_Attrs
    { msginfoId :: (Maybe String)
    , msginfoLang :: (Maybe String)
    , msginfoRemap :: (Maybe String)
    , msginfoXreflabel :: (Maybe String)
    , msginfoRevisionflag :: (Maybe Msginfo_Revisionflag)
    , msginfoArch :: (Maybe String)
    , msginfoCondition :: (Maybe String)
    , msginfoConformance :: (Maybe String)
    , msginfoOs :: (Maybe String)
    , msginfoRevision :: (Maybe String)
    , msginfoSecurity :: (Maybe String)
    , msginfoUserlevel :: (Maybe String)
    , msginfoVendor :: (Maybe String)
    , msginfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Msginfo_Revisionflag = Msginfo_Revisionflag_Changed  | 
			    Msginfo_Revisionflag_Added  |  Msginfo_Revisionflag_Deleted  | 
			    Msginfo_Revisionflag_Off
			  deriving (Eq,Show)
data Msglevel = Msglevel Msglevel_Attrs [Msglevel_]
	      deriving (Eq,Show)
data Msglevel_Attrs = Msglevel_Attrs
    { msglevelId :: (Maybe String)
    , msglevelLang :: (Maybe String)
    , msglevelRemap :: (Maybe String)
    , msglevelXreflabel :: (Maybe String)
    , msglevelRevisionflag :: (Maybe Msglevel_Revisionflag)
    , msglevelArch :: (Maybe String)
    , msglevelCondition :: (Maybe String)
    , msglevelConformance :: (Maybe String)
    , msglevelOs :: (Maybe String)
    , msglevelRevision :: (Maybe String)
    , msglevelSecurity :: (Maybe String)
    , msglevelUserlevel :: (Maybe String)
    , msglevelVendor :: (Maybe String)
    , msglevelRole :: (Maybe String)
    } deriving (Eq,Show)
data Msglevel_ = Msglevel_Str String
	       | Msglevel_Replaceable Replaceable
	       | Msglevel_Inlinegraphic Inlinegraphic
	       | Msglevel_Inlinemediaobject Inlinemediaobject
	       | Msglevel_Indexterm Indexterm
	       | Msglevel_Beginpage Beginpage
	       deriving (Eq,Show)
data Msglevel_Revisionflag = Msglevel_Revisionflag_Changed  | 
			     Msglevel_Revisionflag_Added  |  Msglevel_Revisionflag_Deleted  | 
			     Msglevel_Revisionflag_Off
			   deriving (Eq,Show)
data Msgorig = Msgorig Msgorig_Attrs [Msgorig_]
	     deriving (Eq,Show)
data Msgorig_Attrs = Msgorig_Attrs
    { msgorigId :: (Maybe String)
    , msgorigLang :: (Maybe String)
    , msgorigRemap :: (Maybe String)
    , msgorigXreflabel :: (Maybe String)
    , msgorigRevisionflag :: (Maybe Msgorig_Revisionflag)
    , msgorigArch :: (Maybe String)
    , msgorigCondition :: (Maybe String)
    , msgorigConformance :: (Maybe String)
    , msgorigOs :: (Maybe String)
    , msgorigRevision :: (Maybe String)
    , msgorigSecurity :: (Maybe String)
    , msgorigUserlevel :: (Maybe String)
    , msgorigVendor :: (Maybe String)
    , msgorigRole :: (Maybe String)
    } deriving (Eq,Show)
data Msgorig_ = Msgorig_Str String
	      | Msgorig_Replaceable Replaceable
	      | Msgorig_Inlinegraphic Inlinegraphic
	      | Msgorig_Inlinemediaobject Inlinemediaobject
	      | Msgorig_Indexterm Indexterm
	      | Msgorig_Beginpage Beginpage
	      deriving (Eq,Show)
data Msgorig_Revisionflag = Msgorig_Revisionflag_Changed  | 
			    Msgorig_Revisionflag_Added  |  Msgorig_Revisionflag_Deleted  | 
			    Msgorig_Revisionflag_Off
			  deriving (Eq,Show)
data Msgaud = Msgaud Msgaud_Attrs [Msgaud_]
	    deriving (Eq,Show)
data Msgaud_Attrs = Msgaud_Attrs
    { msgaudId :: (Maybe String)
    , msgaudLang :: (Maybe String)
    , msgaudRemap :: (Maybe String)
    , msgaudXreflabel :: (Maybe String)
    , msgaudRevisionflag :: (Maybe Msgaud_Revisionflag)
    , msgaudArch :: (Maybe String)
    , msgaudCondition :: (Maybe String)
    , msgaudConformance :: (Maybe String)
    , msgaudOs :: (Maybe String)
    , msgaudRevision :: (Maybe String)
    , msgaudSecurity :: (Maybe String)
    , msgaudUserlevel :: (Maybe String)
    , msgaudVendor :: (Maybe String)
    , msgaudRole :: (Maybe String)
    } deriving (Eq,Show)
data Msgaud_ = Msgaud_Str String
	     | Msgaud_Footnoteref Footnoteref
	     | Msgaud_Xref Xref
	     | Msgaud_Abbrev Abbrev
	     | Msgaud_Acronym Acronym
	     | Msgaud_Citation Citation
	     | Msgaud_Citerefentry Citerefentry
	     | Msgaud_Citetitle Citetitle
	     | Msgaud_Emphasis Emphasis
	     | Msgaud_Firstterm Firstterm
	     | Msgaud_Foreignphrase Foreignphrase
	     | Msgaud_Glossterm Glossterm
	     | Msgaud_Footnote Footnote
	     | Msgaud_Phrase Phrase
	     | Msgaud_Quote Quote
	     | Msgaud_Trademark Trademark
	     | Msgaud_Wordasword Wordasword
	     | Msgaud_Personname Personname
	     | Msgaud_Link Link
	     | Msgaud_Olink Olink
	     | Msgaud_Ulink Ulink
	     | Msgaud_Action Action
	     | Msgaud_Application Application
	     | Msgaud_Classname Classname
	     | Msgaud_Methodname Methodname
	     | Msgaud_Interfacename Interfacename
	     | Msgaud_Exceptionname Exceptionname
	     | Msgaud_Ooclass Ooclass
	     | Msgaud_Oointerface Oointerface
	     | Msgaud_Ooexception Ooexception
	     | Msgaud_Command Command
	     | Msgaud_Computeroutput Computeroutput
	     | Msgaud_Database Database
	     | Msgaud_Email Email
	     | Msgaud_Envar Envar
	     | Msgaud_Errorcode Errorcode
	     | Msgaud_Errorname Errorname
	     | Msgaud_Errortype Errortype
	     | Msgaud_Errortext Errortext
	     | Msgaud_Filename Filename
	     | Msgaud_Function Function
	     | Msgaud_Guibutton Guibutton
	     | Msgaud_Guiicon Guiicon
	     | Msgaud_Guilabel Guilabel
	     | Msgaud_Guimenu Guimenu
	     | Msgaud_Guimenuitem Guimenuitem
	     | Msgaud_Guisubmenu Guisubmenu
	     | Msgaud_Hardware Hardware
	     | Msgaud_Interface Interface
	     | Msgaud_Keycap Keycap
	     | Msgaud_Keycode Keycode
	     | Msgaud_Keycombo Keycombo
	     | Msgaud_Keysym Keysym
	     | Msgaud_Literal Literal
	     | Msgaud_Constant Constant
	     | Msgaud_Markup Markup
	     | Msgaud_Medialabel Medialabel
	     | Msgaud_Menuchoice Menuchoice
	     | Msgaud_Mousebutton Mousebutton
	     | Msgaud_Option Option
	     | Msgaud_Optional Optional
	     | Msgaud_Parameter Parameter
	     | Msgaud_Prompt Prompt
	     | Msgaud_Property Property
	     | Msgaud_Replaceable Replaceable
	     | Msgaud_Returnvalue Returnvalue
	     | Msgaud_Sgmltag Sgmltag
	     | Msgaud_Structfield Structfield
	     | Msgaud_Structname Structname
	     | Msgaud_Symbol Symbol
	     | Msgaud_Systemitem Systemitem
	     | Msgaud_Token Token
	     | Msgaud_Type Type
	     | Msgaud_Userinput Userinput
	     | Msgaud_Varname Varname
	     | Msgaud_Anchor Anchor
	     | Msgaud_Author Author
	     | Msgaud_Authorinitials Authorinitials
	     | Msgaud_Corpauthor Corpauthor
	     | Msgaud_Modespec Modespec
	     | Msgaud_Othercredit Othercredit
	     | Msgaud_Productname Productname
	     | Msgaud_Productnumber Productnumber
	     | Msgaud_Revhistory Revhistory
	     | Msgaud_Remark Remark
	     | Msgaud_Subscript Subscript
	     | Msgaud_Superscript Superscript
	     | Msgaud_Inlinegraphic Inlinegraphic
	     | Msgaud_Inlinemediaobject Inlinemediaobject
	     | Msgaud_Inlineequation Inlineequation
	     | Msgaud_Synopsis Synopsis
	     | Msgaud_Cmdsynopsis Cmdsynopsis
	     | Msgaud_Funcsynopsis Funcsynopsis
	     | Msgaud_Classsynopsis Classsynopsis
	     | Msgaud_Fieldsynopsis Fieldsynopsis
	     | Msgaud_Constructorsynopsis Constructorsynopsis
	     | Msgaud_Destructorsynopsis Destructorsynopsis
	     | Msgaud_Methodsynopsis Methodsynopsis
	     | Msgaud_Indexterm Indexterm
	     | Msgaud_Beginpage Beginpage
	     deriving (Eq,Show)
data Msgaud_Revisionflag = Msgaud_Revisionflag_Changed  | 
			   Msgaud_Revisionflag_Added  |  Msgaud_Revisionflag_Deleted  | 
			   Msgaud_Revisionflag_Off
			 deriving (Eq,Show)
data Msgexplan = Msgexplan Msgexplan_Attrs (Maybe Title)
			   [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)]
	       deriving (Eq,Show)
data Msgexplan_Attrs = Msgexplan_Attrs
    { msgexplanId :: (Maybe String)
    , msgexplanLang :: (Maybe String)
    , msgexplanRemap :: (Maybe String)
    , msgexplanXreflabel :: (Maybe String)
    , msgexplanRevisionflag :: (Maybe Msgexplan_Revisionflag)
    , msgexplanArch :: (Maybe String)
    , msgexplanCondition :: (Maybe String)
    , msgexplanConformance :: (Maybe String)
    , msgexplanOs :: (Maybe String)
    , msgexplanRevision :: (Maybe String)
    , msgexplanSecurity :: (Maybe String)
    , msgexplanUserlevel :: (Maybe String)
    , msgexplanVendor :: (Maybe String)
    , msgexplanRole :: (Maybe String)
    } deriving (Eq,Show)
data Msgexplan_Revisionflag = Msgexplan_Revisionflag_Changed  | 
			      Msgexplan_Revisionflag_Added  |  Msgexplan_Revisionflag_Deleted  | 
			      Msgexplan_Revisionflag_Off
			    deriving (Eq,Show)
data Qandaset = Qandaset Qandaset_Attrs (Maybe Blockinfo)
			 (Maybe (Title,(Maybe Titleabbrev)))
			 [(OneOf49 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Procedure Anchor Bridgehead Remark Highlights Indexterm)]
			 (OneOf2 [Qandadiv] [Qandaentry])
	      deriving (Eq,Show)
data Qandaset_Attrs = Qandaset_Attrs
    { qandasetDefaultlabel :: (Maybe Qandaset_Defaultlabel)
    , qandasetId :: (Maybe String)
    , qandasetLang :: (Maybe String)
    , qandasetRemap :: (Maybe String)
    , qandasetXreflabel :: (Maybe String)
    , qandasetRevisionflag :: (Maybe Qandaset_Revisionflag)
    , qandasetArch :: (Maybe String)
    , qandasetCondition :: (Maybe String)
    , qandasetConformance :: (Maybe String)
    , qandasetOs :: (Maybe String)
    , qandasetRevision :: (Maybe String)
    , qandasetSecurity :: (Maybe String)
    , qandasetUserlevel :: (Maybe String)
    , qandasetVendor :: (Maybe String)
    , qandasetRole :: (Maybe String)
    } deriving (Eq,Show)
data Qandaset_Defaultlabel = Qandaset_Defaultlabel_Qanda  | 
			     Qandaset_Defaultlabel_Number  |  Qandaset_Defaultlabel_None
			   deriving (Eq,Show)
data Qandaset_Revisionflag = Qandaset_Revisionflag_Changed  | 
			     Qandaset_Revisionflag_Added  |  Qandaset_Revisionflag_Deleted  | 
			     Qandaset_Revisionflag_Off
			   deriving (Eq,Show)
data Qandadiv = Qandadiv Qandadiv_Attrs (Maybe Blockinfo)
			 (Maybe (Title,(Maybe Titleabbrev)))
			 [(OneOf49 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Procedure Anchor Bridgehead Remark Highlights Indexterm)]
			 (OneOf2 [Qandadiv] [Qandaentry])
	      deriving (Eq,Show)
data Qandadiv_Attrs = Qandadiv_Attrs
    { qandadivId :: (Maybe String)
    , qandadivLang :: (Maybe String)
    , qandadivRemap :: (Maybe String)
    , qandadivXreflabel :: (Maybe String)
    , qandadivRevisionflag :: (Maybe Qandadiv_Revisionflag)
    , qandadivArch :: (Maybe String)
    , qandadivCondition :: (Maybe String)
    , qandadivConformance :: (Maybe String)
    , qandadivOs :: (Maybe String)
    , qandadivRevision :: (Maybe String)
    , qandadivSecurity :: (Maybe String)
    , qandadivUserlevel :: (Maybe String)
    , qandadivVendor :: (Maybe String)
    , qandadivRole :: (Maybe String)
    } deriving (Eq,Show)
data Qandadiv_Revisionflag = Qandadiv_Revisionflag_Changed  | 
			     Qandadiv_Revisionflag_Added  |  Qandadiv_Revisionflag_Deleted  | 
			     Qandadiv_Revisionflag_Off
			   deriving (Eq,Show)
data Qandaentry = Qandaentry Qandaentry_Attrs (Maybe Blockinfo)
			     (Maybe Revhistory) Question [Answer]
		deriving (Eq,Show)
data Qandaentry_Attrs = Qandaentry_Attrs
    { qandaentryId :: (Maybe String)
    , qandaentryLang :: (Maybe String)
    , qandaentryRemap :: (Maybe String)
    , qandaentryXreflabel :: (Maybe String)
    , qandaentryRevisionflag :: (Maybe Qandaentry_Revisionflag)
    , qandaentryArch :: (Maybe String)
    , qandaentryCondition :: (Maybe String)
    , qandaentryConformance :: (Maybe String)
    , qandaentryOs :: (Maybe String)
    , qandaentryRevision :: (Maybe String)
    , qandaentrySecurity :: (Maybe String)
    , qandaentryUserlevel :: (Maybe String)
    , qandaentryVendor :: (Maybe String)
    , qandaentryRole :: (Maybe String)
    } deriving (Eq,Show)
data Qandaentry_Revisionflag = Qandaentry_Revisionflag_Changed  | 
			       Qandaentry_Revisionflag_Added  |  Qandaentry_Revisionflag_Deleted
			        |  Qandaentry_Revisionflag_Off
			     deriving (Eq,Show)
data Question = Question Question_Attrs (Maybe Label)
			 [(OneOf49 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Procedure Anchor Bridgehead Remark Highlights Indexterm)]
	      deriving (Eq,Show)
data Question_Attrs = Question_Attrs
    { questionId :: (Maybe String)
    , questionLang :: (Maybe String)
    , questionRemap :: (Maybe String)
    , questionXreflabel :: (Maybe String)
    , questionRevisionflag :: (Maybe Question_Revisionflag)
    , questionArch :: (Maybe String)
    , questionCondition :: (Maybe String)
    , questionConformance :: (Maybe String)
    , questionOs :: (Maybe String)
    , questionRevision :: (Maybe String)
    , questionSecurity :: (Maybe String)
    , questionUserlevel :: (Maybe String)
    , questionVendor :: (Maybe String)
    , questionRole :: (Maybe String)
    } deriving (Eq,Show)
data Question_Revisionflag = Question_Revisionflag_Changed  | 
			     Question_Revisionflag_Added  |  Question_Revisionflag_Deleted  | 
			     Question_Revisionflag_Off
			   deriving (Eq,Show)
data Answer = Answer Answer_Attrs (Maybe Label)
		     [(OneOf49 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Procedure Anchor Bridgehead Remark Highlights Indexterm)]
		     [Qandaentry]
	    deriving (Eq,Show)
data Answer_Attrs = Answer_Attrs
    { answerId :: (Maybe String)
    , answerLang :: (Maybe String)
    , answerRemap :: (Maybe String)
    , answerXreflabel :: (Maybe String)
    , answerRevisionflag :: (Maybe Answer_Revisionflag)
    , answerArch :: (Maybe String)
    , answerCondition :: (Maybe String)
    , answerConformance :: (Maybe String)
    , answerOs :: (Maybe String)
    , answerRevision :: (Maybe String)
    , answerSecurity :: (Maybe String)
    , answerUserlevel :: (Maybe String)
    , answerVendor :: (Maybe String)
    , answerRole :: (Maybe String)
    } deriving (Eq,Show)
data Answer_Revisionflag = Answer_Revisionflag_Changed  | 
			   Answer_Revisionflag_Added  |  Answer_Revisionflag_Deleted  | 
			   Answer_Revisionflag_Off
			 deriving (Eq,Show)
data Label = Label Label_Attrs [Label_]
	   deriving (Eq,Show)
data Label_Attrs = Label_Attrs
    { labelId :: (Maybe String)
    , labelLang :: (Maybe String)
    , labelRemap :: (Maybe String)
    , labelXreflabel :: (Maybe String)
    , labelRevisionflag :: (Maybe Label_Revisionflag)
    , labelArch :: (Maybe String)
    , labelCondition :: (Maybe String)
    , labelConformance :: (Maybe String)
    , labelOs :: (Maybe String)
    , labelRevision :: (Maybe String)
    , labelSecurity :: (Maybe String)
    , labelUserlevel :: (Maybe String)
    , labelVendor :: (Maybe String)
    , labelRole :: (Maybe String)
    } deriving (Eq,Show)
data Label_ = Label_Str String
	    | Label_Acronym Acronym
	    | Label_Emphasis Emphasis
	    | Label_Trademark Trademark
	    | Label_Link Link
	    | Label_Olink Olink
	    | Label_Ulink Ulink
	    | Label_Anchor Anchor
	    | Label_Remark Remark
	    | Label_Subscript Subscript
	    | Label_Superscript Superscript
	    | Label_Inlinegraphic Inlinegraphic
	    | Label_Inlinemediaobject Inlinemediaobject
	    | Label_Indexterm Indexterm
	    | Label_Beginpage Beginpage
	    deriving (Eq,Show)
data Label_Revisionflag = Label_Revisionflag_Changed  | 
			  Label_Revisionflag_Added  |  Label_Revisionflag_Deleted  | 
			  Label_Revisionflag_Off
			deriving (Eq,Show)
data Procedure = Procedure Procedure_Attrs (Maybe Blockinfo)
			   (Maybe (Title,(Maybe Titleabbrev)))
			   [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)]
			   [Step]
	       deriving (Eq,Show)
data Procedure_Attrs = Procedure_Attrs
    { procedureId :: (Maybe String)
    , procedureLang :: (Maybe String)
    , procedureRemap :: (Maybe String)
    , procedureXreflabel :: (Maybe String)
    , procedureRevisionflag :: (Maybe Procedure_Revisionflag)
    , procedureArch :: (Maybe String)
    , procedureCondition :: (Maybe String)
    , procedureConformance :: (Maybe String)
    , procedureOs :: (Maybe String)
    , procedureRevision :: (Maybe String)
    , procedureSecurity :: (Maybe String)
    , procedureUserlevel :: (Maybe String)
    , procedureVendor :: (Maybe String)
    , procedureRole :: (Maybe String)
    } deriving (Eq,Show)
data Procedure_Revisionflag = Procedure_Revisionflag_Changed  | 
			      Procedure_Revisionflag_Added  |  Procedure_Revisionflag_Deleted  | 
			      Procedure_Revisionflag_Off
			    deriving (Eq,Show)
data Step = Step Step_Attrs (Maybe Title)
		 (OneOf4 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)] (Maybe (Substeps,[(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)])) Substeps [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)])
	  deriving (Eq,Show)
data Step_Attrs = Step_Attrs
    { stepPerformance :: (Defaultable Step_Performance)
    , stepId :: (Maybe String)
    , stepLang :: (Maybe String)
    , stepRemap :: (Maybe String)
    , stepXreflabel :: (Maybe String)
    , stepRevisionflag :: (Maybe Step_Revisionflag)
    , stepArch :: (Maybe String)
    , stepCondition :: (Maybe String)
    , stepConformance :: (Maybe String)
    , stepOs :: (Maybe String)
    , stepRevision :: (Maybe String)
    , stepSecurity :: (Maybe String)
    , stepUserlevel :: (Maybe String)
    , stepVendor :: (Maybe String)
    , stepRole :: (Maybe String)
    } deriving (Eq,Show)
data Step_Performance = Step_Performance_Optional  | 
			Step_Performance_Required
		      deriving (Eq,Show)
data Step_Revisionflag = Step_Revisionflag_Changed  | 
			 Step_Revisionflag_Added  |  Step_Revisionflag_Deleted  | 
			 Step_Revisionflag_Off
		       deriving (Eq,Show)
data Substeps = Substeps Substeps_Attrs [Step]
	      deriving (Eq,Show)
data Substeps_Attrs = Substeps_Attrs
    { substepsPerformance :: (Defaultable Substeps_Performance)
    , substepsId :: (Maybe String)
    , substepsLang :: (Maybe String)
    , substepsRemap :: (Maybe String)
    , substepsXreflabel :: (Maybe String)
    , substepsRevisionflag :: (Maybe Substeps_Revisionflag)
    , substepsArch :: (Maybe String)
    , substepsCondition :: (Maybe String)
    , substepsConformance :: (Maybe String)
    , substepsOs :: (Maybe String)
    , substepsRevision :: (Maybe String)
    , substepsSecurity :: (Maybe String)
    , substepsUserlevel :: (Maybe String)
    , substepsVendor :: (Maybe String)
    , substepsRole :: (Maybe String)
    } deriving (Eq,Show)
data Substeps_Performance = Substeps_Performance_Optional  | 
			    Substeps_Performance_Required
			  deriving (Eq,Show)
data Substeps_Revisionflag = Substeps_Revisionflag_Changed  | 
			     Substeps_Revisionflag_Added  |  Substeps_Revisionflag_Deleted  | 
			     Substeps_Revisionflag_Off
			   deriving (Eq,Show)
data Sidebarinfo = Sidebarinfo Sidebarinfo_Attrs
			       [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
		 deriving (Eq,Show)
data Sidebarinfo_Attrs = Sidebarinfo_Attrs
    { sidebarinfoId :: (Maybe String)
    , sidebarinfoLang :: (Maybe String)
    , sidebarinfoRemap :: (Maybe String)
    , sidebarinfoXreflabel :: (Maybe String)
    , sidebarinfoRevisionflag :: (Maybe Sidebarinfo_Revisionflag)
    , sidebarinfoArch :: (Maybe String)
    , sidebarinfoCondition :: (Maybe String)
    , sidebarinfoConformance :: (Maybe String)
    , sidebarinfoOs :: (Maybe String)
    , sidebarinfoRevision :: (Maybe String)
    , sidebarinfoSecurity :: (Maybe String)
    , sidebarinfoUserlevel :: (Maybe String)
    , sidebarinfoVendor :: (Maybe String)
    , sidebarinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Sidebarinfo_Revisionflag = Sidebarinfo_Revisionflag_Changed
				 |  Sidebarinfo_Revisionflag_Added  | 
				Sidebarinfo_Revisionflag_Deleted  |  Sidebarinfo_Revisionflag_Off
			      deriving (Eq,Show)
data Sidebar = Sidebar Sidebar_Attrs (Maybe Sidebarinfo)
		       (Maybe (Title,(Maybe Titleabbrev)))
		       [(OneOf50 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Procedure Anchor Bridgehead Remark Highlights Indexterm Beginpage)]
	     deriving (Eq,Show)
data Sidebar_Attrs = Sidebar_Attrs
    { sidebarId :: (Maybe String)
    , sidebarLang :: (Maybe String)
    , sidebarRemap :: (Maybe String)
    , sidebarXreflabel :: (Maybe String)
    , sidebarRevisionflag :: (Maybe Sidebar_Revisionflag)
    , sidebarArch :: (Maybe String)
    , sidebarCondition :: (Maybe String)
    , sidebarConformance :: (Maybe String)
    , sidebarOs :: (Maybe String)
    , sidebarRevision :: (Maybe String)
    , sidebarSecurity :: (Maybe String)
    , sidebarUserlevel :: (Maybe String)
    , sidebarVendor :: (Maybe String)
    , sidebarRole :: (Maybe String)
    } deriving (Eq,Show)
data Sidebar_Revisionflag = Sidebar_Revisionflag_Changed  | 
			    Sidebar_Revisionflag_Added  |  Sidebar_Revisionflag_Deleted  | 
			    Sidebar_Revisionflag_Off
			  deriving (Eq,Show)
data Abstract = Abstract Abstract_Attrs (Maybe Title)
			 [(OneOf3 Formalpara Para Simpara)]
	      deriving (Eq,Show)
data Abstract_Attrs = Abstract_Attrs
    { abstractId :: (Maybe String)
    , abstractLang :: (Maybe String)
    , abstractRemap :: (Maybe String)
    , abstractXreflabel :: (Maybe String)
    , abstractRevisionflag :: (Maybe Abstract_Revisionflag)
    , abstractArch :: (Maybe String)
    , abstractCondition :: (Maybe String)
    , abstractConformance :: (Maybe String)
    , abstractOs :: (Maybe String)
    , abstractRevision :: (Maybe String)
    , abstractSecurity :: (Maybe String)
    , abstractUserlevel :: (Maybe String)
    , abstractVendor :: (Maybe String)
    , abstractRole :: (Maybe String)
    } deriving (Eq,Show)
data Abstract_Revisionflag = Abstract_Revisionflag_Changed  | 
			     Abstract_Revisionflag_Added  |  Abstract_Revisionflag_Deleted  | 
			     Abstract_Revisionflag_Off
			   deriving (Eq,Show)
data Authorblurb = Authorblurb Authorblurb_Attrs (Maybe Title)
			       [(OneOf3 Formalpara Para Simpara)]
		 deriving (Eq,Show)
data Authorblurb_Attrs = Authorblurb_Attrs
    { authorblurbId :: (Maybe String)
    , authorblurbLang :: (Maybe String)
    , authorblurbRemap :: (Maybe String)
    , authorblurbXreflabel :: (Maybe String)
    , authorblurbRevisionflag :: (Maybe Authorblurb_Revisionflag)
    , authorblurbArch :: (Maybe String)
    , authorblurbCondition :: (Maybe String)
    , authorblurbConformance :: (Maybe String)
    , authorblurbOs :: (Maybe String)
    , authorblurbRevision :: (Maybe String)
    , authorblurbSecurity :: (Maybe String)
    , authorblurbUserlevel :: (Maybe String)
    , authorblurbVendor :: (Maybe String)
    , authorblurbRole :: (Maybe String)
    } deriving (Eq,Show)
data Authorblurb_Revisionflag = Authorblurb_Revisionflag_Changed
				 |  Authorblurb_Revisionflag_Added  | 
				Authorblurb_Revisionflag_Deleted  |  Authorblurb_Revisionflag_Off
			      deriving (Eq,Show)
data Personblurb = Personblurb Personblurb_Attrs (Maybe Title)
			       [(OneOf3 Formalpara Para Simpara)]
		 deriving (Eq,Show)
data Personblurb_Attrs = Personblurb_Attrs
    { personblurbId :: (Maybe String)
    , personblurbLang :: (Maybe String)
    , personblurbRemap :: (Maybe String)
    , personblurbXreflabel :: (Maybe String)
    , personblurbRevisionflag :: (Maybe Personblurb_Revisionflag)
    , personblurbArch :: (Maybe String)
    , personblurbCondition :: (Maybe String)
    , personblurbConformance :: (Maybe String)
    , personblurbOs :: (Maybe String)
    , personblurbRevision :: (Maybe String)
    , personblurbSecurity :: (Maybe String)
    , personblurbUserlevel :: (Maybe String)
    , personblurbVendor :: (Maybe String)
    , personblurbRole :: (Maybe String)
    } deriving (Eq,Show)
data Personblurb_Revisionflag = Personblurb_Revisionflag_Changed
				 |  Personblurb_Revisionflag_Added  | 
				Personblurb_Revisionflag_Deleted  |  Personblurb_Revisionflag_Off
			      deriving (Eq,Show)
data Blockquote = Blockquote Blockquote_Attrs (Maybe Title)
			     (Maybe Attribution)
			     [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)]
		deriving (Eq,Show)
data Blockquote_Attrs = Blockquote_Attrs
    { blockquoteId :: (Maybe String)
    , blockquoteLang :: (Maybe String)
    , blockquoteRemap :: (Maybe String)
    , blockquoteXreflabel :: (Maybe String)
    , blockquoteRevisionflag :: (Maybe Blockquote_Revisionflag)
    , blockquoteArch :: (Maybe String)
    , blockquoteCondition :: (Maybe String)
    , blockquoteConformance :: (Maybe String)
    , blockquoteOs :: (Maybe String)
    , blockquoteRevision :: (Maybe String)
    , blockquoteSecurity :: (Maybe String)
    , blockquoteUserlevel :: (Maybe String)
    , blockquoteVendor :: (Maybe String)
    , blockquoteRole :: (Maybe String)
    } deriving (Eq,Show)
data Blockquote_Revisionflag = Blockquote_Revisionflag_Changed  | 
			       Blockquote_Revisionflag_Added  |  Blockquote_Revisionflag_Deleted
			        |  Blockquote_Revisionflag_Off
			     deriving (Eq,Show)
data Attribution = Attribution Attribution_Attrs [Attribution_]
		 deriving (Eq,Show)
data Attribution_Attrs = Attribution_Attrs
    { attributionId :: (Maybe String)
    , attributionLang :: (Maybe String)
    , attributionRemap :: (Maybe String)
    , attributionXreflabel :: (Maybe String)
    , attributionRevisionflag :: (Maybe Attribution_Revisionflag)
    , attributionArch :: (Maybe String)
    , attributionCondition :: (Maybe String)
    , attributionConformance :: (Maybe String)
    , attributionOs :: (Maybe String)
    , attributionRevision :: (Maybe String)
    , attributionSecurity :: (Maybe String)
    , attributionUserlevel :: (Maybe String)
    , attributionVendor :: (Maybe String)
    , attributionRole :: (Maybe String)
    } deriving (Eq,Show)
data Attribution_ = Attribution_Str String
		  | Attribution_Footnoteref Footnoteref
		  | Attribution_Xref Xref
		  | Attribution_Abbrev Abbrev
		  | Attribution_Acronym Acronym
		  | Attribution_Citation Citation
		  | Attribution_Citerefentry Citerefentry
		  | Attribution_Citetitle Citetitle
		  | Attribution_Emphasis Emphasis
		  | Attribution_Firstterm Firstterm
		  | Attribution_Foreignphrase Foreignphrase
		  | Attribution_Glossterm Glossterm
		  | Attribution_Footnote Footnote
		  | Attribution_Phrase Phrase
		  | Attribution_Quote Quote
		  | Attribution_Trademark Trademark
		  | Attribution_Wordasword Wordasword
		  | Attribution_Personname Personname
		  | Attribution_Link Link
		  | Attribution_Olink Olink
		  | Attribution_Ulink Ulink
		  | Attribution_Action Action
		  | Attribution_Application Application
		  | Attribution_Classname Classname
		  | Attribution_Methodname Methodname
		  | Attribution_Interfacename Interfacename
		  | Attribution_Exceptionname Exceptionname
		  | Attribution_Ooclass Ooclass
		  | Attribution_Oointerface Oointerface
		  | Attribution_Ooexception Ooexception
		  | Attribution_Command Command
		  | Attribution_Computeroutput Computeroutput
		  | Attribution_Database Database
		  | Attribution_Email Email
		  | Attribution_Envar Envar
		  | Attribution_Errorcode Errorcode
		  | Attribution_Errorname Errorname
		  | Attribution_Errortype Errortype
		  | Attribution_Errortext Errortext
		  | Attribution_Filename Filename
		  | Attribution_Function Function
		  | Attribution_Guibutton Guibutton
		  | Attribution_Guiicon Guiicon
		  | Attribution_Guilabel Guilabel
		  | Attribution_Guimenu Guimenu
		  | Attribution_Guimenuitem Guimenuitem
		  | Attribution_Guisubmenu Guisubmenu
		  | Attribution_Hardware Hardware
		  | Attribution_Interface Interface
		  | Attribution_Keycap Keycap
		  | Attribution_Keycode Keycode
		  | Attribution_Keycombo Keycombo
		  | Attribution_Keysym Keysym
		  | Attribution_Literal Literal
		  | Attribution_Constant Constant
		  | Attribution_Markup Markup
		  | Attribution_Medialabel Medialabel
		  | Attribution_Menuchoice Menuchoice
		  | Attribution_Mousebutton Mousebutton
		  | Attribution_Option Option
		  | Attribution_Optional Optional
		  | Attribution_Parameter Parameter
		  | Attribution_Prompt Prompt
		  | Attribution_Property Property
		  | Attribution_Replaceable Replaceable
		  | Attribution_Returnvalue Returnvalue
		  | Attribution_Sgmltag Sgmltag
		  | Attribution_Structfield Structfield
		  | Attribution_Structname Structname
		  | Attribution_Symbol Symbol
		  | Attribution_Systemitem Systemitem
		  | Attribution_Token Token
		  | Attribution_Type Type
		  | Attribution_Userinput Userinput
		  | Attribution_Varname Varname
		  | Attribution_Anchor Anchor
		  | Attribution_Author Author
		  | Attribution_Authorinitials Authorinitials
		  | Attribution_Corpauthor Corpauthor
		  | Attribution_Modespec Modespec
		  | Attribution_Othercredit Othercredit
		  | Attribution_Productname Productname
		  | Attribution_Productnumber Productnumber
		  | Attribution_Revhistory Revhistory
		  | Attribution_Remark Remark
		  | Attribution_Subscript Subscript
		  | Attribution_Superscript Superscript
		  | Attribution_Inlinegraphic Inlinegraphic
		  | Attribution_Inlinemediaobject Inlinemediaobject
		  | Attribution_Inlineequation Inlineequation
		  | Attribution_Synopsis Synopsis
		  | Attribution_Cmdsynopsis Cmdsynopsis
		  | Attribution_Funcsynopsis Funcsynopsis
		  | Attribution_Classsynopsis Classsynopsis
		  | Attribution_Fieldsynopsis Fieldsynopsis
		  | Attribution_Constructorsynopsis Constructorsynopsis
		  | Attribution_Destructorsynopsis Destructorsynopsis
		  | Attribution_Methodsynopsis Methodsynopsis
		  | Attribution_Indexterm Indexterm
		  | Attribution_Beginpage Beginpage
		  deriving (Eq,Show)
data Attribution_Revisionflag = Attribution_Revisionflag_Changed
				 |  Attribution_Revisionflag_Added  | 
				Attribution_Revisionflag_Deleted  |  Attribution_Revisionflag_Off
			      deriving (Eq,Show)
data Bridgehead = Bridgehead Bridgehead_Attrs [Bridgehead_]
		deriving (Eq,Show)
data Bridgehead_Attrs = Bridgehead_Attrs
    { bridgeheadRenderas :: (Maybe Bridgehead_Renderas)
    , bridgeheadId :: (Maybe String)
    , bridgeheadLang :: (Maybe String)
    , bridgeheadRemap :: (Maybe String)
    , bridgeheadXreflabel :: (Maybe String)
    , bridgeheadRevisionflag :: (Maybe Bridgehead_Revisionflag)
    , bridgeheadArch :: (Maybe String)
    , bridgeheadCondition :: (Maybe String)
    , bridgeheadConformance :: (Maybe String)
    , bridgeheadOs :: (Maybe String)
    , bridgeheadRevision :: (Maybe String)
    , bridgeheadSecurity :: (Maybe String)
    , bridgeheadUserlevel :: (Maybe String)
    , bridgeheadVendor :: (Maybe String)
    , bridgeheadRole :: (Maybe String)
    } deriving (Eq,Show)
data Bridgehead_ = Bridgehead_Str String
		 | Bridgehead_Footnoteref Footnoteref
		 | Bridgehead_Xref Xref
		 | Bridgehead_Abbrev Abbrev
		 | Bridgehead_Acronym Acronym
		 | Bridgehead_Citation Citation
		 | Bridgehead_Citerefentry Citerefentry
		 | Bridgehead_Citetitle Citetitle
		 | Bridgehead_Emphasis Emphasis
		 | Bridgehead_Firstterm Firstterm
		 | Bridgehead_Foreignphrase Foreignphrase
		 | Bridgehead_Glossterm Glossterm
		 | Bridgehead_Footnote Footnote
		 | Bridgehead_Phrase Phrase
		 | Bridgehead_Quote Quote
		 | Bridgehead_Trademark Trademark
		 | Bridgehead_Wordasword Wordasword
		 | Bridgehead_Personname Personname
		 | Bridgehead_Link Link
		 | Bridgehead_Olink Olink
		 | Bridgehead_Ulink Ulink
		 | Bridgehead_Action Action
		 | Bridgehead_Application Application
		 | Bridgehead_Classname Classname
		 | Bridgehead_Methodname Methodname
		 | Bridgehead_Interfacename Interfacename
		 | Bridgehead_Exceptionname Exceptionname
		 | Bridgehead_Ooclass Ooclass
		 | Bridgehead_Oointerface Oointerface
		 | Bridgehead_Ooexception Ooexception
		 | Bridgehead_Command Command
		 | Bridgehead_Computeroutput Computeroutput
		 | Bridgehead_Database Database
		 | Bridgehead_Email Email
		 | Bridgehead_Envar Envar
		 | Bridgehead_Errorcode Errorcode
		 | Bridgehead_Errorname Errorname
		 | Bridgehead_Errortype Errortype
		 | Bridgehead_Errortext Errortext
		 | Bridgehead_Filename Filename
		 | Bridgehead_Function Function
		 | Bridgehead_Guibutton Guibutton
		 | Bridgehead_Guiicon Guiicon
		 | Bridgehead_Guilabel Guilabel
		 | Bridgehead_Guimenu Guimenu
		 | Bridgehead_Guimenuitem Guimenuitem
		 | Bridgehead_Guisubmenu Guisubmenu
		 | Bridgehead_Hardware Hardware
		 | Bridgehead_Interface Interface
		 | Bridgehead_Keycap Keycap
		 | Bridgehead_Keycode Keycode
		 | Bridgehead_Keycombo Keycombo
		 | Bridgehead_Keysym Keysym
		 | Bridgehead_Literal Literal
		 | Bridgehead_Constant Constant
		 | Bridgehead_Markup Markup
		 | Bridgehead_Medialabel Medialabel
		 | Bridgehead_Menuchoice Menuchoice
		 | Bridgehead_Mousebutton Mousebutton
		 | Bridgehead_Option Option
		 | Bridgehead_Optional Optional
		 | Bridgehead_Parameter Parameter
		 | Bridgehead_Prompt Prompt
		 | Bridgehead_Property Property
		 | Bridgehead_Replaceable Replaceable
		 | Bridgehead_Returnvalue Returnvalue
		 | Bridgehead_Sgmltag Sgmltag
		 | Bridgehead_Structfield Structfield
		 | Bridgehead_Structname Structname
		 | Bridgehead_Symbol Symbol
		 | Bridgehead_Systemitem Systemitem
		 | Bridgehead_Token Token
		 | Bridgehead_Type Type
		 | Bridgehead_Userinput Userinput
		 | Bridgehead_Varname Varname
		 | Bridgehead_Anchor Anchor
		 | Bridgehead_Author Author
		 | Bridgehead_Authorinitials Authorinitials
		 | Bridgehead_Corpauthor Corpauthor
		 | Bridgehead_Modespec Modespec
		 | Bridgehead_Othercredit Othercredit
		 | Bridgehead_Productname Productname
		 | Bridgehead_Productnumber Productnumber
		 | Bridgehead_Revhistory Revhistory
		 | Bridgehead_Remark Remark
		 | Bridgehead_Subscript Subscript
		 | Bridgehead_Superscript Superscript
		 | Bridgehead_Inlinegraphic Inlinegraphic
		 | Bridgehead_Inlinemediaobject Inlinemediaobject
		 | Bridgehead_Inlineequation Inlineequation
		 | Bridgehead_Indexterm Indexterm
		 deriving (Eq,Show)
data Bridgehead_Renderas = Bridgehead_Renderas_Other  | 
			   Bridgehead_Renderas_Sect1  |  Bridgehead_Renderas_Sect2  | 
			   Bridgehead_Renderas_Sect3  |  Bridgehead_Renderas_Sect4  | 
			   Bridgehead_Renderas_Sect5
			 deriving (Eq,Show)
data Bridgehead_Revisionflag = Bridgehead_Revisionflag_Changed  | 
			       Bridgehead_Revisionflag_Added  |  Bridgehead_Revisionflag_Deleted
			        |  Bridgehead_Revisionflag_Off
			     deriving (Eq,Show)
data Remark = Remark Remark_Attrs [Remark_]
	    deriving (Eq,Show)
data Remark_Attrs = Remark_Attrs
    { remarkId :: (Maybe String)
    , remarkLang :: (Maybe String)
    , remarkRemap :: (Maybe String)
    , remarkXreflabel :: (Maybe String)
    , remarkRevisionflag :: (Maybe Remark_Revisionflag)
    , remarkArch :: (Maybe String)
    , remarkCondition :: (Maybe String)
    , remarkConformance :: (Maybe String)
    , remarkOs :: (Maybe String)
    , remarkRevision :: (Maybe String)
    , remarkSecurity :: (Maybe String)
    , remarkUserlevel :: (Maybe String)
    , remarkVendor :: (Maybe String)
    , remarkRole :: (Maybe String)
    } deriving (Eq,Show)
data Remark_ = Remark_Str String
	     | Remark_Footnoteref Footnoteref
	     | Remark_Xref Xref
	     | Remark_Abbrev Abbrev
	     | Remark_Acronym Acronym
	     | Remark_Citation Citation
	     | Remark_Citerefentry Citerefentry
	     | Remark_Citetitle Citetitle
	     | Remark_Emphasis Emphasis
	     | Remark_Firstterm Firstterm
	     | Remark_Foreignphrase Foreignphrase
	     | Remark_Glossterm Glossterm
	     | Remark_Footnote Footnote
	     | Remark_Phrase Phrase
	     | Remark_Quote Quote
	     | Remark_Trademark Trademark
	     | Remark_Wordasword Wordasword
	     | Remark_Personname Personname
	     | Remark_Link Link
	     | Remark_Olink Olink
	     | Remark_Ulink Ulink
	     | Remark_Action Action
	     | Remark_Application Application
	     | Remark_Classname Classname
	     | Remark_Methodname Methodname
	     | Remark_Interfacename Interfacename
	     | Remark_Exceptionname Exceptionname
	     | Remark_Ooclass Ooclass
	     | Remark_Oointerface Oointerface
	     | Remark_Ooexception Ooexception
	     | Remark_Command Command
	     | Remark_Computeroutput Computeroutput
	     | Remark_Database Database
	     | Remark_Email Email
	     | Remark_Envar Envar
	     | Remark_Errorcode Errorcode
	     | Remark_Errorname Errorname
	     | Remark_Errortype Errortype
	     | Remark_Errortext Errortext
	     | Remark_Filename Filename
	     | Remark_Function Function
	     | Remark_Guibutton Guibutton
	     | Remark_Guiicon Guiicon
	     | Remark_Guilabel Guilabel
	     | Remark_Guimenu Guimenu
	     | Remark_Guimenuitem Guimenuitem
	     | Remark_Guisubmenu Guisubmenu
	     | Remark_Hardware Hardware
	     | Remark_Interface Interface
	     | Remark_Keycap Keycap
	     | Remark_Keycode Keycode
	     | Remark_Keycombo Keycombo
	     | Remark_Keysym Keysym
	     | Remark_Literal Literal
	     | Remark_Constant Constant
	     | Remark_Markup Markup
	     | Remark_Medialabel Medialabel
	     | Remark_Menuchoice Menuchoice
	     | Remark_Mousebutton Mousebutton
	     | Remark_Option Option
	     | Remark_Optional Optional
	     | Remark_Parameter Parameter
	     | Remark_Prompt Prompt
	     | Remark_Property Property
	     | Remark_Replaceable Replaceable
	     | Remark_Returnvalue Returnvalue
	     | Remark_Sgmltag Sgmltag
	     | Remark_Structfield Structfield
	     | Remark_Structname Structname
	     | Remark_Symbol Symbol
	     | Remark_Systemitem Systemitem
	     | Remark_Token Token
	     | Remark_Type Type
	     | Remark_Userinput Userinput
	     | Remark_Varname Varname
	     | Remark_Anchor Anchor
	     | Remark_Author Author
	     | Remark_Authorinitials Authorinitials
	     | Remark_Corpauthor Corpauthor
	     | Remark_Modespec Modespec
	     | Remark_Othercredit Othercredit
	     | Remark_Productname Productname
	     | Remark_Productnumber Productnumber
	     | Remark_Revhistory Revhistory
	     | Remark_Remark Remark
	     | Remark_Subscript Subscript
	     | Remark_Superscript Superscript
	     | Remark_Inlinegraphic Inlinegraphic
	     | Remark_Inlinemediaobject Inlinemediaobject
	     | Remark_Inlineequation Inlineequation
	     | Remark_Synopsis Synopsis
	     | Remark_Cmdsynopsis Cmdsynopsis
	     | Remark_Funcsynopsis Funcsynopsis
	     | Remark_Classsynopsis Classsynopsis
	     | Remark_Fieldsynopsis Fieldsynopsis
	     | Remark_Constructorsynopsis Constructorsynopsis
	     | Remark_Destructorsynopsis Destructorsynopsis
	     | Remark_Methodsynopsis Methodsynopsis
	     | Remark_Indexterm Indexterm
	     | Remark_Beginpage Beginpage
	     deriving (Eq,Show)
data Remark_Revisionflag = Remark_Revisionflag_Changed  | 
			   Remark_Revisionflag_Added  |  Remark_Revisionflag_Deleted  | 
			   Remark_Revisionflag_Off
			 deriving (Eq,Show)
data Epigraph = Epigraph Epigraph_Attrs (Maybe Attribution)
			 [(OneOf2 (OneOf3 Formalpara Para Simpara) Literallayout)]
	      deriving (Eq,Show)
data Epigraph_Attrs = Epigraph_Attrs
    { epigraphId :: (Maybe String)
    , epigraphLang :: (Maybe String)
    , epigraphRemap :: (Maybe String)
    , epigraphXreflabel :: (Maybe String)
    , epigraphRevisionflag :: (Maybe Epigraph_Revisionflag)
    , epigraphArch :: (Maybe String)
    , epigraphCondition :: (Maybe String)
    , epigraphConformance :: (Maybe String)
    , epigraphOs :: (Maybe String)
    , epigraphRevision :: (Maybe String)
    , epigraphSecurity :: (Maybe String)
    , epigraphUserlevel :: (Maybe String)
    , epigraphVendor :: (Maybe String)
    , epigraphRole :: (Maybe String)
    } deriving (Eq,Show)
data Epigraph_Revisionflag = Epigraph_Revisionflag_Changed  | 
			     Epigraph_Revisionflag_Added  |  Epigraph_Revisionflag_Deleted  | 
			     Epigraph_Revisionflag_Off
			   deriving (Eq,Show)
data Footnote = Footnote Footnote_Attrs
			 [(OneOf34 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable)]
	      deriving (Eq,Show)
data Footnote_Attrs = Footnote_Attrs
    { footnoteLabel :: (Maybe String)
    , footnoteId :: (Maybe String)
    , footnoteLang :: (Maybe String)
    , footnoteRemap :: (Maybe String)
    , footnoteXreflabel :: (Maybe String)
    , footnoteRevisionflag :: (Maybe Footnote_Revisionflag)
    , footnoteArch :: (Maybe String)
    , footnoteCondition :: (Maybe String)
    , footnoteConformance :: (Maybe String)
    , footnoteOs :: (Maybe String)
    , footnoteRevision :: (Maybe String)
    , footnoteSecurity :: (Maybe String)
    , footnoteUserlevel :: (Maybe String)
    , footnoteVendor :: (Maybe String)
    , footnoteRole :: (Maybe String)
    } deriving (Eq,Show)
data Footnote_Revisionflag = Footnote_Revisionflag_Changed  | 
			     Footnote_Revisionflag_Added  |  Footnote_Revisionflag_Deleted  | 
			     Footnote_Revisionflag_Off
			   deriving (Eq,Show)
data Highlights = Highlights Highlights_Attrs
			     [(OneOf16 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Formalpara Para Simpara Indexterm)]
		deriving (Eq,Show)
data Highlights_Attrs = Highlights_Attrs
    { highlightsId :: (Maybe String)
    , highlightsLang :: (Maybe String)
    , highlightsRemap :: (Maybe String)
    , highlightsXreflabel :: (Maybe String)
    , highlightsRevisionflag :: (Maybe Highlights_Revisionflag)
    , highlightsArch :: (Maybe String)
    , highlightsCondition :: (Maybe String)
    , highlightsConformance :: (Maybe String)
    , highlightsOs :: (Maybe String)
    , highlightsRevision :: (Maybe String)
    , highlightsSecurity :: (Maybe String)
    , highlightsUserlevel :: (Maybe String)
    , highlightsVendor :: (Maybe String)
    , highlightsRole :: (Maybe String)
    } deriving (Eq,Show)
data Highlights_Revisionflag = Highlights_Revisionflag_Changed  | 
			       Highlights_Revisionflag_Added  |  Highlights_Revisionflag_Deleted
			        |  Highlights_Revisionflag_Off
			     deriving (Eq,Show)
data Formalpara = Formalpara Formalpara_Attrs Title [(Indexterm)]
			     Para
		deriving (Eq,Show)
data Formalpara_Attrs = Formalpara_Attrs
    { formalparaId :: (Maybe String)
    , formalparaLang :: (Maybe String)
    , formalparaRemap :: (Maybe String)
    , formalparaXreflabel :: (Maybe String)
    , formalparaRevisionflag :: (Maybe Formalpara_Revisionflag)
    , formalparaArch :: (Maybe String)
    , formalparaCondition :: (Maybe String)
    , formalparaConformance :: (Maybe String)
    , formalparaOs :: (Maybe String)
    , formalparaRevision :: (Maybe String)
    , formalparaSecurity :: (Maybe String)
    , formalparaUserlevel :: (Maybe String)
    , formalparaVendor :: (Maybe String)
    , formalparaRole :: (Maybe String)
    } deriving (Eq,Show)
data Formalpara_Revisionflag = Formalpara_Revisionflag_Changed  | 
			       Formalpara_Revisionflag_Added  |  Formalpara_Revisionflag_Deleted
			        |  Formalpara_Revisionflag_Off
			     deriving (Eq,Show)
data Para = Para Para_Attrs [Para_]
	  deriving (Eq,Show)
data Para_Attrs = Para_Attrs
    { paraId :: (Maybe String)
    , paraLang :: (Maybe String)
    , paraRemap :: (Maybe String)
    , paraXreflabel :: (Maybe String)
    , paraRevisionflag :: (Maybe Para_Revisionflag)
    , paraArch :: (Maybe String)
    , paraCondition :: (Maybe String)
    , paraConformance :: (Maybe String)
    , paraOs :: (Maybe String)
    , paraRevision :: (Maybe String)
    , paraSecurity :: (Maybe String)
    , paraUserlevel :: (Maybe String)
    , paraVendor :: (Maybe String)
    , paraRole :: (Maybe String)
    } deriving (Eq,Show)
data Para_ = Para_Str String
	   | Para_Footnoteref Footnoteref
	   | Para_Xref Xref
	   | Para_Abbrev Abbrev
	   | Para_Acronym Acronym
	   | Para_Citation Citation
	   | Para_Citerefentry Citerefentry
	   | Para_Citetitle Citetitle
	   | Para_Emphasis Emphasis
	   | Para_Firstterm Firstterm
	   | Para_Foreignphrase Foreignphrase
	   | Para_Glossterm Glossterm
	   | Para_Footnote Footnote
	   | Para_Phrase Phrase
	   | Para_Quote Quote
	   | Para_Trademark Trademark
	   | Para_Wordasword Wordasword
	   | Para_Personname Personname
	   | Para_Link Link
	   | Para_Olink Olink
	   | Para_Ulink Ulink
	   | Para_Action Action
	   | Para_Application Application
	   | Para_Classname Classname
	   | Para_Methodname Methodname
	   | Para_Interfacename Interfacename
	   | Para_Exceptionname Exceptionname
	   | Para_Ooclass Ooclass
	   | Para_Oointerface Oointerface
	   | Para_Ooexception Ooexception
	   | Para_Command Command
	   | Para_Computeroutput Computeroutput
	   | Para_Database Database
	   | Para_Email Email
	   | Para_Envar Envar
	   | Para_Errorcode Errorcode
	   | Para_Errorname Errorname
	   | Para_Errortype Errortype
	   | Para_Errortext Errortext
	   | Para_Filename Filename
	   | Para_Function Function
	   | Para_Guibutton Guibutton
	   | Para_Guiicon Guiicon
	   | Para_Guilabel Guilabel
	   | Para_Guimenu Guimenu
	   | Para_Guimenuitem Guimenuitem
	   | Para_Guisubmenu Guisubmenu
	   | Para_Hardware Hardware
	   | Para_Interface Interface
	   | Para_Keycap Keycap
	   | Para_Keycode Keycode
	   | Para_Keycombo Keycombo
	   | Para_Keysym Keysym
	   | Para_Literal Literal
	   | Para_Constant Constant
	   | Para_Markup Markup
	   | Para_Medialabel Medialabel
	   | Para_Menuchoice Menuchoice
	   | Para_Mousebutton Mousebutton
	   | Para_Option Option
	   | Para_Optional Optional
	   | Para_Parameter Parameter
	   | Para_Prompt Prompt
	   | Para_Property Property
	   | Para_Replaceable Replaceable
	   | Para_Returnvalue Returnvalue
	   | Para_Sgmltag Sgmltag
	   | Para_Structfield Structfield
	   | Para_Structname Structname
	   | Para_Symbol Symbol
	   | Para_Systemitem Systemitem
	   | Para_Token Token
	   | Para_Type Type
	   | Para_Userinput Userinput
	   | Para_Varname Varname
	   | Para_Anchor Anchor
	   | Para_Author Author
	   | Para_Authorinitials Authorinitials
	   | Para_Corpauthor Corpauthor
	   | Para_Modespec Modespec
	   | Para_Othercredit Othercredit
	   | Para_Productname Productname
	   | Para_Productnumber Productnumber
	   | Para_Revhistory Revhistory
	   | Para_Remark Remark
	   | Para_Subscript Subscript
	   | Para_Superscript Superscript
	   | Para_Inlinegraphic Inlinegraphic
	   | Para_Inlinemediaobject Inlinemediaobject
	   | Para_Inlineequation Inlineequation
	   | Para_Synopsis Synopsis
	   | Para_Cmdsynopsis Cmdsynopsis
	   | Para_Funcsynopsis Funcsynopsis
	   | Para_Classsynopsis Classsynopsis
	   | Para_Fieldsynopsis Fieldsynopsis
	   | Para_Constructorsynopsis Constructorsynopsis
	   | Para_Destructorsynopsis Destructorsynopsis
	   | Para_Methodsynopsis Methodsynopsis
	   | Para_Indexterm Indexterm
	   | Para_Beginpage Beginpage
	   | Para_Calloutlist Calloutlist
	   | Para_Glosslist Glosslist
	   | Para_Itemizedlist Itemizedlist
	   | Para_Orderedlist Orderedlist
	   | Para_Segmentedlist Segmentedlist
	   | Para_Simplelist Simplelist
	   | Para_Variablelist Variablelist
	   | Para_Caution Caution
	   | Para_Important Important
	   | Para_Note Note
	   | Para_Tip Tip
	   | Para_Warning Warning
	   | Para_Literallayout Literallayout
	   | Para_Programlisting Programlisting
	   | Para_Programlistingco Programlistingco
	   | Para_Screen Screen
	   | Para_Screenco Screenco
	   | Para_Screenshot Screenshot
	   | Para_Address Address
	   | Para_Blockquote Blockquote
	   | Para_Graphic Graphic
	   | Para_Graphicco Graphicco
	   | Para_Mediaobject Mediaobject
	   | Para_Mediaobjectco Mediaobjectco
	   | Para_Informalequation Informalequation
	   | Para_Informalexample Informalexample
	   | Para_Informalfigure Informalfigure
	   | Para_Informaltable Informaltable
	   | Para_Equation Equation
	   | Para_Example Example
	   | Para_Figure Figure
	   | Para_Table Table
	   deriving (Eq,Show)
data Para_Revisionflag = Para_Revisionflag_Changed  | 
			 Para_Revisionflag_Added  |  Para_Revisionflag_Deleted  | 
			 Para_Revisionflag_Off
		       deriving (Eq,Show)
data Simpara = Simpara Simpara_Attrs [Simpara_]
	     deriving (Eq,Show)
data Simpara_Attrs = Simpara_Attrs
    { simparaId :: (Maybe String)
    , simparaLang :: (Maybe String)
    , simparaRemap :: (Maybe String)
    , simparaXreflabel :: (Maybe String)
    , simparaRevisionflag :: (Maybe Simpara_Revisionflag)
    , simparaArch :: (Maybe String)
    , simparaCondition :: (Maybe String)
    , simparaConformance :: (Maybe String)
    , simparaOs :: (Maybe String)
    , simparaRevision :: (Maybe String)
    , simparaSecurity :: (Maybe String)
    , simparaUserlevel :: (Maybe String)
    , simparaVendor :: (Maybe String)
    , simparaRole :: (Maybe String)
    } deriving (Eq,Show)
data Simpara_ = Simpara_Str String
	      | Simpara_Footnoteref Footnoteref
	      | Simpara_Xref Xref
	      | Simpara_Abbrev Abbrev
	      | Simpara_Acronym Acronym
	      | Simpara_Citation Citation
	      | Simpara_Citerefentry Citerefentry
	      | Simpara_Citetitle Citetitle
	      | Simpara_Emphasis Emphasis
	      | Simpara_Firstterm Firstterm
	      | Simpara_Foreignphrase Foreignphrase
	      | Simpara_Glossterm Glossterm
	      | Simpara_Footnote Footnote
	      | Simpara_Phrase Phrase
	      | Simpara_Quote Quote
	      | Simpara_Trademark Trademark
	      | Simpara_Wordasword Wordasword
	      | Simpara_Personname Personname
	      | Simpara_Link Link
	      | Simpara_Olink Olink
	      | Simpara_Ulink Ulink
	      | Simpara_Action Action
	      | Simpara_Application Application
	      | Simpara_Classname Classname
	      | Simpara_Methodname Methodname
	      | Simpara_Interfacename Interfacename
	      | Simpara_Exceptionname Exceptionname
	      | Simpara_Ooclass Ooclass
	      | Simpara_Oointerface Oointerface
	      | Simpara_Ooexception Ooexception
	      | Simpara_Command Command
	      | Simpara_Computeroutput Computeroutput
	      | Simpara_Database Database
	      | Simpara_Email Email
	      | Simpara_Envar Envar
	      | Simpara_Errorcode Errorcode
	      | Simpara_Errorname Errorname
	      | Simpara_Errortype Errortype
	      | Simpara_Errortext Errortext
	      | Simpara_Filename Filename
	      | Simpara_Function Function
	      | Simpara_Guibutton Guibutton
	      | Simpara_Guiicon Guiicon
	      | Simpara_Guilabel Guilabel
	      | Simpara_Guimenu Guimenu
	      | Simpara_Guimenuitem Guimenuitem
	      | Simpara_Guisubmenu Guisubmenu
	      | Simpara_Hardware Hardware
	      | Simpara_Interface Interface
	      | Simpara_Keycap Keycap
	      | Simpara_Keycode Keycode
	      | Simpara_Keycombo Keycombo
	      | Simpara_Keysym Keysym
	      | Simpara_Literal Literal
	      | Simpara_Constant Constant
	      | Simpara_Markup Markup
	      | Simpara_Medialabel Medialabel
	      | Simpara_Menuchoice Menuchoice
	      | Simpara_Mousebutton Mousebutton
	      | Simpara_Option Option
	      | Simpara_Optional Optional
	      | Simpara_Parameter Parameter
	      | Simpara_Prompt Prompt
	      | Simpara_Property Property
	      | Simpara_Replaceable Replaceable
	      | Simpara_Returnvalue Returnvalue
	      | Simpara_Sgmltag Sgmltag
	      | Simpara_Structfield Structfield
	      | Simpara_Structname Structname
	      | Simpara_Symbol Symbol
	      | Simpara_Systemitem Systemitem
	      | Simpara_Token Token
	      | Simpara_Type Type
	      | Simpara_Userinput Userinput
	      | Simpara_Varname Varname
	      | Simpara_Anchor Anchor
	      | Simpara_Author Author
	      | Simpara_Authorinitials Authorinitials
	      | Simpara_Corpauthor Corpauthor
	      | Simpara_Modespec Modespec
	      | Simpara_Othercredit Othercredit
	      | Simpara_Productname Productname
	      | Simpara_Productnumber Productnumber
	      | Simpara_Revhistory Revhistory
	      | Simpara_Remark Remark
	      | Simpara_Subscript Subscript
	      | Simpara_Superscript Superscript
	      | Simpara_Inlinegraphic Inlinegraphic
	      | Simpara_Inlinemediaobject Inlinemediaobject
	      | Simpara_Inlineequation Inlineequation
	      | Simpara_Synopsis Synopsis
	      | Simpara_Cmdsynopsis Cmdsynopsis
	      | Simpara_Funcsynopsis Funcsynopsis
	      | Simpara_Classsynopsis Classsynopsis
	      | Simpara_Fieldsynopsis Fieldsynopsis
	      | Simpara_Constructorsynopsis Constructorsynopsis
	      | Simpara_Destructorsynopsis Destructorsynopsis
	      | Simpara_Methodsynopsis Methodsynopsis
	      | Simpara_Indexterm Indexterm
	      | Simpara_Beginpage Beginpage
	      deriving (Eq,Show)
data Simpara_Revisionflag = Simpara_Revisionflag_Changed  | 
			    Simpara_Revisionflag_Added  |  Simpara_Revisionflag_Deleted  | 
			    Simpara_Revisionflag_Off
			  deriving (Eq,Show)
data Caution = Caution Caution_Attrs (Maybe Title)
		       [(OneOf45 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Procedure Sidebar Anchor Bridgehead Remark Indexterm Beginpage)]
	     deriving (Eq,Show)
data Caution_Attrs = Caution_Attrs
    { cautionId :: (Maybe String)
    , cautionLang :: (Maybe String)
    , cautionRemap :: (Maybe String)
    , cautionXreflabel :: (Maybe String)
    , cautionRevisionflag :: (Maybe Caution_Revisionflag)
    , cautionArch :: (Maybe String)
    , cautionCondition :: (Maybe String)
    , cautionConformance :: (Maybe String)
    , cautionOs :: (Maybe String)
    , cautionRevision :: (Maybe String)
    , cautionSecurity :: (Maybe String)
    , cautionUserlevel :: (Maybe String)
    , cautionVendor :: (Maybe String)
    , cautionRole :: (Maybe String)
    } deriving (Eq,Show)
data Caution_Revisionflag = Caution_Revisionflag_Changed  | 
			    Caution_Revisionflag_Added  |  Caution_Revisionflag_Deleted  | 
			    Caution_Revisionflag_Off
			  deriving (Eq,Show)
data Important = Important Important_Attrs (Maybe Title)
			   [(OneOf45 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Procedure Sidebar Anchor Bridgehead Remark Indexterm Beginpage)]
	       deriving (Eq,Show)
data Important_Attrs = Important_Attrs
    { importantId :: (Maybe String)
    , importantLang :: (Maybe String)
    , importantRemap :: (Maybe String)
    , importantXreflabel :: (Maybe String)
    , importantRevisionflag :: (Maybe Important_Revisionflag)
    , importantArch :: (Maybe String)
    , importantCondition :: (Maybe String)
    , importantConformance :: (Maybe String)
    , importantOs :: (Maybe String)
    , importantRevision :: (Maybe String)
    , importantSecurity :: (Maybe String)
    , importantUserlevel :: (Maybe String)
    , importantVendor :: (Maybe String)
    , importantRole :: (Maybe String)
    } deriving (Eq,Show)
data Important_Revisionflag = Important_Revisionflag_Changed  | 
			      Important_Revisionflag_Added  |  Important_Revisionflag_Deleted  | 
			      Important_Revisionflag_Off
			    deriving (Eq,Show)
data Note = Note Note_Attrs (Maybe Title)
		 [(OneOf45 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Procedure Sidebar Anchor Bridgehead Remark Indexterm Beginpage)]
	  deriving (Eq,Show)
data Note_Attrs = Note_Attrs
    { noteId :: (Maybe String)
    , noteLang :: (Maybe String)
    , noteRemap :: (Maybe String)
    , noteXreflabel :: (Maybe String)
    , noteRevisionflag :: (Maybe Note_Revisionflag)
    , noteArch :: (Maybe String)
    , noteCondition :: (Maybe String)
    , noteConformance :: (Maybe String)
    , noteOs :: (Maybe String)
    , noteRevision :: (Maybe String)
    , noteSecurity :: (Maybe String)
    , noteUserlevel :: (Maybe String)
    , noteVendor :: (Maybe String)
    , noteRole :: (Maybe String)
    } deriving (Eq,Show)
data Note_Revisionflag = Note_Revisionflag_Changed  | 
			 Note_Revisionflag_Added  |  Note_Revisionflag_Deleted  | 
			 Note_Revisionflag_Off
		       deriving (Eq,Show)
data Tip = Tip Tip_Attrs (Maybe Title)
	       [(OneOf45 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Procedure Sidebar Anchor Bridgehead Remark Indexterm Beginpage)]
	 deriving (Eq,Show)
data Tip_Attrs = Tip_Attrs
    { tipId :: (Maybe String)
    , tipLang :: (Maybe String)
    , tipRemap :: (Maybe String)
    , tipXreflabel :: (Maybe String)
    , tipRevisionflag :: (Maybe Tip_Revisionflag)
    , tipArch :: (Maybe String)
    , tipCondition :: (Maybe String)
    , tipConformance :: (Maybe String)
    , tipOs :: (Maybe String)
    , tipRevision :: (Maybe String)
    , tipSecurity :: (Maybe String)
    , tipUserlevel :: (Maybe String)
    , tipVendor :: (Maybe String)
    , tipRole :: (Maybe String)
    } deriving (Eq,Show)
data Tip_Revisionflag = Tip_Revisionflag_Changed  | 
			Tip_Revisionflag_Added  |  Tip_Revisionflag_Deleted  | 
			Tip_Revisionflag_Off
		      deriving (Eq,Show)
data Warning = Warning Warning_Attrs (Maybe Title)
		       [(OneOf45 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Procedure Sidebar Anchor Bridgehead Remark Indexterm Beginpage)]
	     deriving (Eq,Show)
data Warning_Attrs = Warning_Attrs
    { warningId :: (Maybe String)
    , warningLang :: (Maybe String)
    , warningRemap :: (Maybe String)
    , warningXreflabel :: (Maybe String)
    , warningRevisionflag :: (Maybe Warning_Revisionflag)
    , warningArch :: (Maybe String)
    , warningCondition :: (Maybe String)
    , warningConformance :: (Maybe String)
    , warningOs :: (Maybe String)
    , warningRevision :: (Maybe String)
    , warningSecurity :: (Maybe String)
    , warningUserlevel :: (Maybe String)
    , warningVendor :: (Maybe String)
    , warningRole :: (Maybe String)
    } deriving (Eq,Show)
data Warning_Revisionflag = Warning_Revisionflag_Changed  | 
			    Warning_Revisionflag_Added  |  Warning_Revisionflag_Deleted  | 
			    Warning_Revisionflag_Off
			  deriving (Eq,Show)
data Glosslist = Glosslist Glosslist_Attrs [Glossentry]
	       deriving (Eq,Show)
data Glosslist_Attrs = Glosslist_Attrs
    { glosslistId :: (Maybe String)
    , glosslistLang :: (Maybe String)
    , glosslistRemap :: (Maybe String)
    , glosslistXreflabel :: (Maybe String)
    , glosslistRevisionflag :: (Maybe Glosslist_Revisionflag)
    , glosslistArch :: (Maybe String)
    , glosslistCondition :: (Maybe String)
    , glosslistConformance :: (Maybe String)
    , glosslistOs :: (Maybe String)
    , glosslistRevision :: (Maybe String)
    , glosslistSecurity :: (Maybe String)
    , glosslistUserlevel :: (Maybe String)
    , glosslistVendor :: (Maybe String)
    , glosslistRole :: (Maybe String)
    } deriving (Eq,Show)
data Glosslist_Revisionflag = Glosslist_Revisionflag_Changed  | 
			      Glosslist_Revisionflag_Added  |  Glosslist_Revisionflag_Deleted  | 
			      Glosslist_Revisionflag_Off
			    deriving (Eq,Show)
data Glossentry = Glossentry Glossentry_Attrs Glossterm
			     (Maybe Acronym) (Maybe Abbrev) [(Indexterm)] (Maybe Revhistory)
			     (OneOf2 Glosssee [Glossdef])
		deriving (Eq,Show)
data Glossentry_Attrs = Glossentry_Attrs
    { glossentrySortas :: (Maybe String)
    , glossentryId :: (Maybe String)
    , glossentryLang :: (Maybe String)
    , glossentryRemap :: (Maybe String)
    , glossentryXreflabel :: (Maybe String)
    , glossentryRevisionflag :: (Maybe Glossentry_Revisionflag)
    , glossentryArch :: (Maybe String)
    , glossentryCondition :: (Maybe String)
    , glossentryConformance :: (Maybe String)
    , glossentryOs :: (Maybe String)
    , glossentryRevision :: (Maybe String)
    , glossentrySecurity :: (Maybe String)
    , glossentryUserlevel :: (Maybe String)
    , glossentryVendor :: (Maybe String)
    , glossentryRole :: (Maybe String)
    } deriving (Eq,Show)
data Glossentry_Revisionflag = Glossentry_Revisionflag_Changed  | 
			       Glossentry_Revisionflag_Added  |  Glossentry_Revisionflag_Deleted
			        |  Glossentry_Revisionflag_Off
			     deriving (Eq,Show)
data Glossdef = Glossdef Glossdef_Attrs
			 [(OneOf41 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Remark Indexterm Beginpage)]
			 [Glossseealso]
	      deriving (Eq,Show)
data Glossdef_Attrs = Glossdef_Attrs
    { glossdefSubject :: (Maybe String)
    , glossdefId :: (Maybe String)
    , glossdefLang :: (Maybe String)
    , glossdefRemap :: (Maybe String)
    , glossdefXreflabel :: (Maybe String)
    , glossdefRevisionflag :: (Maybe Glossdef_Revisionflag)
    , glossdefArch :: (Maybe String)
    , glossdefCondition :: (Maybe String)
    , glossdefConformance :: (Maybe String)
    , glossdefOs :: (Maybe String)
    , glossdefRevision :: (Maybe String)
    , glossdefSecurity :: (Maybe String)
    , glossdefUserlevel :: (Maybe String)
    , glossdefVendor :: (Maybe String)
    , glossdefRole :: (Maybe String)
    } deriving (Eq,Show)
data Glossdef_Revisionflag = Glossdef_Revisionflag_Changed  | 
			     Glossdef_Revisionflag_Added  |  Glossdef_Revisionflag_Deleted  | 
			     Glossdef_Revisionflag_Off
			   deriving (Eq,Show)
data Glosssee = Glosssee Glosssee_Attrs [Glosssee_]
	      deriving (Eq,Show)
data Glosssee_Attrs = Glosssee_Attrs
    { glossseeOtherterm :: (Maybe String)
    , glossseeId :: (Maybe String)
    , glossseeLang :: (Maybe String)
    , glossseeRemap :: (Maybe String)
    , glossseeXreflabel :: (Maybe String)
    , glossseeRevisionflag :: (Maybe Glosssee_Revisionflag)
    , glossseeArch :: (Maybe String)
    , glossseeCondition :: (Maybe String)
    , glossseeConformance :: (Maybe String)
    , glossseeOs :: (Maybe String)
    , glossseeRevision :: (Maybe String)
    , glossseeSecurity :: (Maybe String)
    , glossseeUserlevel :: (Maybe String)
    , glossseeVendor :: (Maybe String)
    , glossseeRole :: (Maybe String)
    } deriving (Eq,Show)
data Glosssee_ = Glosssee_Str String
	       | Glosssee_Footnoteref Footnoteref
	       | Glosssee_Xref Xref
	       | Glosssee_Abbrev Abbrev
	       | Glosssee_Acronym Acronym
	       | Glosssee_Citation Citation
	       | Glosssee_Citerefentry Citerefentry
	       | Glosssee_Citetitle Citetitle
	       | Glosssee_Emphasis Emphasis
	       | Glosssee_Firstterm Firstterm
	       | Glosssee_Foreignphrase Foreignphrase
	       | Glosssee_Glossterm Glossterm
	       | Glosssee_Footnote Footnote
	       | Glosssee_Phrase Phrase
	       | Glosssee_Quote Quote
	       | Glosssee_Trademark Trademark
	       | Glosssee_Wordasword Wordasword
	       | Glosssee_Personname Personname
	       | Glosssee_Link Link
	       | Glosssee_Olink Olink
	       | Glosssee_Ulink Ulink
	       | Glosssee_Action Action
	       | Glosssee_Application Application
	       | Glosssee_Classname Classname
	       | Glosssee_Methodname Methodname
	       | Glosssee_Interfacename Interfacename
	       | Glosssee_Exceptionname Exceptionname
	       | Glosssee_Ooclass Ooclass
	       | Glosssee_Oointerface Oointerface
	       | Glosssee_Ooexception Ooexception
	       | Glosssee_Command Command
	       | Glosssee_Computeroutput Computeroutput
	       | Glosssee_Database Database
	       | Glosssee_Email Email
	       | Glosssee_Envar Envar
	       | Glosssee_Errorcode Errorcode
	       | Glosssee_Errorname Errorname
	       | Glosssee_Errortype Errortype
	       | Glosssee_Errortext Errortext
	       | Glosssee_Filename Filename
	       | Glosssee_Function Function
	       | Glosssee_Guibutton Guibutton
	       | Glosssee_Guiicon Guiicon
	       | Glosssee_Guilabel Guilabel
	       | Glosssee_Guimenu Guimenu
	       | Glosssee_Guimenuitem Guimenuitem
	       | Glosssee_Guisubmenu Guisubmenu
	       | Glosssee_Hardware Hardware
	       | Glosssee_Interface Interface
	       | Glosssee_Keycap Keycap
	       | Glosssee_Keycode Keycode
	       | Glosssee_Keycombo Keycombo
	       | Glosssee_Keysym Keysym
	       | Glosssee_Literal Literal
	       | Glosssee_Constant Constant
	       | Glosssee_Markup Markup
	       | Glosssee_Medialabel Medialabel
	       | Glosssee_Menuchoice Menuchoice
	       | Glosssee_Mousebutton Mousebutton
	       | Glosssee_Option Option
	       | Glosssee_Optional Optional
	       | Glosssee_Parameter Parameter
	       | Glosssee_Prompt Prompt
	       | Glosssee_Property Property
	       | Glosssee_Replaceable Replaceable
	       | Glosssee_Returnvalue Returnvalue
	       | Glosssee_Sgmltag Sgmltag
	       | Glosssee_Structfield Structfield
	       | Glosssee_Structname Structname
	       | Glosssee_Symbol Symbol
	       | Glosssee_Systemitem Systemitem
	       | Glosssee_Token Token
	       | Glosssee_Type Type
	       | Glosssee_Userinput Userinput
	       | Glosssee_Varname Varname
	       | Glosssee_Anchor Anchor
	       | Glosssee_Author Author
	       | Glosssee_Authorinitials Authorinitials
	       | Glosssee_Corpauthor Corpauthor
	       | Glosssee_Modespec Modespec
	       | Glosssee_Othercredit Othercredit
	       | Glosssee_Productname Productname
	       | Glosssee_Productnumber Productnumber
	       | Glosssee_Revhistory Revhistory
	       | Glosssee_Remark Remark
	       | Glosssee_Subscript Subscript
	       | Glosssee_Superscript Superscript
	       | Glosssee_Inlinegraphic Inlinegraphic
	       | Glosssee_Inlinemediaobject Inlinemediaobject
	       | Glosssee_Inlineequation Inlineequation
	       | Glosssee_Synopsis Synopsis
	       | Glosssee_Cmdsynopsis Cmdsynopsis
	       | Glosssee_Funcsynopsis Funcsynopsis
	       | Glosssee_Classsynopsis Classsynopsis
	       | Glosssee_Fieldsynopsis Fieldsynopsis
	       | Glosssee_Constructorsynopsis Constructorsynopsis
	       | Glosssee_Destructorsynopsis Destructorsynopsis
	       | Glosssee_Methodsynopsis Methodsynopsis
	       | Glosssee_Indexterm Indexterm
	       | Glosssee_Beginpage Beginpage
	       deriving (Eq,Show)
data Glosssee_Revisionflag = Glosssee_Revisionflag_Changed  | 
			     Glosssee_Revisionflag_Added  |  Glosssee_Revisionflag_Deleted  | 
			     Glosssee_Revisionflag_Off
			   deriving (Eq,Show)
data Glossseealso = Glossseealso Glossseealso_Attrs [Glossseealso_]
		  deriving (Eq,Show)
data Glossseealso_Attrs = Glossseealso_Attrs
    { glossseealsoOtherterm :: (Maybe String)
    , glossseealsoId :: (Maybe String)
    , glossseealsoLang :: (Maybe String)
    , glossseealsoRemap :: (Maybe String)
    , glossseealsoXreflabel :: (Maybe String)
    , glossseealsoRevisionflag :: (Maybe Glossseealso_Revisionflag)
    , glossseealsoArch :: (Maybe String)
    , glossseealsoCondition :: (Maybe String)
    , glossseealsoConformance :: (Maybe String)
    , glossseealsoOs :: (Maybe String)
    , glossseealsoRevision :: (Maybe String)
    , glossseealsoSecurity :: (Maybe String)
    , glossseealsoUserlevel :: (Maybe String)
    , glossseealsoVendor :: (Maybe String)
    , glossseealsoRole :: (Maybe String)
    } deriving (Eq,Show)
data Glossseealso_ = Glossseealso_Str String
		   | Glossseealso_Footnoteref Footnoteref
		   | Glossseealso_Xref Xref
		   | Glossseealso_Abbrev Abbrev
		   | Glossseealso_Acronym Acronym
		   | Glossseealso_Citation Citation
		   | Glossseealso_Citerefentry Citerefentry
		   | Glossseealso_Citetitle Citetitle
		   | Glossseealso_Emphasis Emphasis
		   | Glossseealso_Firstterm Firstterm
		   | Glossseealso_Foreignphrase Foreignphrase
		   | Glossseealso_Glossterm Glossterm
		   | Glossseealso_Footnote Footnote
		   | Glossseealso_Phrase Phrase
		   | Glossseealso_Quote Quote
		   | Glossseealso_Trademark Trademark
		   | Glossseealso_Wordasword Wordasword
		   | Glossseealso_Personname Personname
		   | Glossseealso_Link Link
		   | Glossseealso_Olink Olink
		   | Glossseealso_Ulink Ulink
		   | Glossseealso_Action Action
		   | Glossseealso_Application Application
		   | Glossseealso_Classname Classname
		   | Glossseealso_Methodname Methodname
		   | Glossseealso_Interfacename Interfacename
		   | Glossseealso_Exceptionname Exceptionname
		   | Glossseealso_Ooclass Ooclass
		   | Glossseealso_Oointerface Oointerface
		   | Glossseealso_Ooexception Ooexception
		   | Glossseealso_Command Command
		   | Glossseealso_Computeroutput Computeroutput
		   | Glossseealso_Database Database
		   | Glossseealso_Email Email
		   | Glossseealso_Envar Envar
		   | Glossseealso_Errorcode Errorcode
		   | Glossseealso_Errorname Errorname
		   | Glossseealso_Errortype Errortype
		   | Glossseealso_Errortext Errortext
		   | Glossseealso_Filename Filename
		   | Glossseealso_Function Function
		   | Glossseealso_Guibutton Guibutton
		   | Glossseealso_Guiicon Guiicon
		   | Glossseealso_Guilabel Guilabel
		   | Glossseealso_Guimenu Guimenu
		   | Glossseealso_Guimenuitem Guimenuitem
		   | Glossseealso_Guisubmenu Guisubmenu
		   | Glossseealso_Hardware Hardware
		   | Glossseealso_Interface Interface
		   | Glossseealso_Keycap Keycap
		   | Glossseealso_Keycode Keycode
		   | Glossseealso_Keycombo Keycombo
		   | Glossseealso_Keysym Keysym
		   | Glossseealso_Literal Literal
		   | Glossseealso_Constant Constant
		   | Glossseealso_Markup Markup
		   | Glossseealso_Medialabel Medialabel
		   | Glossseealso_Menuchoice Menuchoice
		   | Glossseealso_Mousebutton Mousebutton
		   | Glossseealso_Option Option
		   | Glossseealso_Optional Optional
		   | Glossseealso_Parameter Parameter
		   | Glossseealso_Prompt Prompt
		   | Glossseealso_Property Property
		   | Glossseealso_Replaceable Replaceable
		   | Glossseealso_Returnvalue Returnvalue
		   | Glossseealso_Sgmltag Sgmltag
		   | Glossseealso_Structfield Structfield
		   | Glossseealso_Structname Structname
		   | Glossseealso_Symbol Symbol
		   | Glossseealso_Systemitem Systemitem
		   | Glossseealso_Token Token
		   | Glossseealso_Type Type
		   | Glossseealso_Userinput Userinput
		   | Glossseealso_Varname Varname
		   | Glossseealso_Anchor Anchor
		   | Glossseealso_Author Author
		   | Glossseealso_Authorinitials Authorinitials
		   | Glossseealso_Corpauthor Corpauthor
		   | Glossseealso_Modespec Modespec
		   | Glossseealso_Othercredit Othercredit
		   | Glossseealso_Productname Productname
		   | Glossseealso_Productnumber Productnumber
		   | Glossseealso_Revhistory Revhistory
		   | Glossseealso_Remark Remark
		   | Glossseealso_Subscript Subscript
		   | Glossseealso_Superscript Superscript
		   | Glossseealso_Inlinegraphic Inlinegraphic
		   | Glossseealso_Inlinemediaobject Inlinemediaobject
		   | Glossseealso_Inlineequation Inlineequation
		   | Glossseealso_Synopsis Synopsis
		   | Glossseealso_Cmdsynopsis Cmdsynopsis
		   | Glossseealso_Funcsynopsis Funcsynopsis
		   | Glossseealso_Classsynopsis Classsynopsis
		   | Glossseealso_Fieldsynopsis Fieldsynopsis
		   | Glossseealso_Constructorsynopsis Constructorsynopsis
		   | Glossseealso_Destructorsynopsis Destructorsynopsis
		   | Glossseealso_Methodsynopsis Methodsynopsis
		   | Glossseealso_Indexterm Indexterm
		   | Glossseealso_Beginpage Beginpage
		   deriving (Eq,Show)
data Glossseealso_Revisionflag = Glossseealso_Revisionflag_Changed
				  |  Glossseealso_Revisionflag_Added  | 
				 Glossseealso_Revisionflag_Deleted  |  Glossseealso_Revisionflag_Off
			       deriving (Eq,Show)
data Itemizedlist = Itemizedlist Itemizedlist_Attrs
				 (Maybe Blockinfo) (Maybe (Title,(Maybe Titleabbrev)))
				 [(OneOf41 Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)]
				 [Listitem]
		  deriving (Eq,Show)
data Itemizedlist_Attrs = Itemizedlist_Attrs
    { itemizedlistSpacing :: (Maybe Itemizedlist_Spacing)
    , itemizedlistMark :: (Maybe String)
    , itemizedlistId :: (Maybe String)
    , itemizedlistLang :: (Maybe String)
    , itemizedlistRemap :: (Maybe String)
    , itemizedlistXreflabel :: (Maybe String)
    , itemizedlistRevisionflag :: (Maybe Itemizedlist_Revisionflag)
    , itemizedlistArch :: (Maybe String)
    , itemizedlistCondition :: (Maybe String)
    , itemizedlistConformance :: (Maybe String)
    , itemizedlistOs :: (Maybe String)
    , itemizedlistRevision :: (Maybe String)
    , itemizedlistSecurity :: (Maybe String)
    , itemizedlistUserlevel :: (Maybe String)
    , itemizedlistVendor :: (Maybe String)
    , itemizedlistRole :: (Maybe String)
    } deriving (Eq,Show)
data Itemizedlist_Spacing = Itemizedlist_Spacing_Normal  | 
			    Itemizedlist_Spacing_Compact
			  deriving (Eq,Show)
data Itemizedlist_Revisionflag = Itemizedlist_Revisionflag_Changed
				  |  Itemizedlist_Revisionflag_Added  | 
				 Itemizedlist_Revisionflag_Deleted  |  Itemizedlist_Revisionflag_Off
			       deriving (Eq,Show)
data Orderedlist = Orderedlist Orderedlist_Attrs (Maybe Blockinfo)
			       (Maybe (Title,(Maybe Titleabbrev)))
			       [(OneOf41 Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)]
			       [Listitem]
		 deriving (Eq,Show)
data Orderedlist_Attrs = Orderedlist_Attrs
    { orderedlistNumeration :: (Maybe Orderedlist_Numeration)
    , orderedlistInheritnum :: (Defaultable Orderedlist_Inheritnum)
    , orderedlistContinuation :: (Defaultable Orderedlist_Continuation)
    , orderedlistSpacing :: (Maybe Orderedlist_Spacing)
    , orderedlistId :: (Maybe String)
    , orderedlistLang :: (Maybe String)
    , orderedlistRemap :: (Maybe String)
    , orderedlistXreflabel :: (Maybe String)
    , orderedlistRevisionflag :: (Maybe Orderedlist_Revisionflag)
    , orderedlistArch :: (Maybe String)
    , orderedlistCondition :: (Maybe String)
    , orderedlistConformance :: (Maybe String)
    , orderedlistOs :: (Maybe String)
    , orderedlistRevision :: (Maybe String)
    , orderedlistSecurity :: (Maybe String)
    , orderedlistUserlevel :: (Maybe String)
    , orderedlistVendor :: (Maybe String)
    , orderedlistRole :: (Maybe String)
    } deriving (Eq,Show)
data Orderedlist_Numeration = Orderedlist_Numeration_Arabic  | 
			      Orderedlist_Numeration_Upperalpha  | 
			      Orderedlist_Numeration_Loweralpha  | 
			      Orderedlist_Numeration_Upperroman  | 
			      Orderedlist_Numeration_Lowerroman
			    deriving (Eq,Show)
data Orderedlist_Inheritnum = Orderedlist_Inheritnum_Inherit  | 
			      Orderedlist_Inheritnum_Ignore
			    deriving (Eq,Show)
data Orderedlist_Continuation = Orderedlist_Continuation_Continues
				 |  Orderedlist_Continuation_Restarts
			      deriving (Eq,Show)
data Orderedlist_Spacing = Orderedlist_Spacing_Normal  | 
			   Orderedlist_Spacing_Compact
			 deriving (Eq,Show)
data Orderedlist_Revisionflag = Orderedlist_Revisionflag_Changed
				 |  Orderedlist_Revisionflag_Added  | 
				Orderedlist_Revisionflag_Deleted  |  Orderedlist_Revisionflag_Off
			      deriving (Eq,Show)
data Listitem = Listitem Listitem_Attrs
			 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)]
	      deriving (Eq,Show)
data Listitem_Attrs = Listitem_Attrs
    { listitemOverride :: (Maybe String)
    , listitemId :: (Maybe String)
    , listitemLang :: (Maybe String)
    , listitemRemap :: (Maybe String)
    , listitemXreflabel :: (Maybe String)
    , listitemRevisionflag :: (Maybe Listitem_Revisionflag)
    , listitemArch :: (Maybe String)
    , listitemCondition :: (Maybe String)
    , listitemConformance :: (Maybe String)
    , listitemOs :: (Maybe String)
    , listitemRevision :: (Maybe String)
    , listitemSecurity :: (Maybe String)
    , listitemUserlevel :: (Maybe String)
    , listitemVendor :: (Maybe String)
    , listitemRole :: (Maybe String)
    } deriving (Eq,Show)
data Listitem_Revisionflag = Listitem_Revisionflag_Changed  | 
			     Listitem_Revisionflag_Added  |  Listitem_Revisionflag_Deleted  | 
			     Listitem_Revisionflag_Off
			   deriving (Eq,Show)
data Segmentedlist = Segmentedlist Segmentedlist_Attrs
				   (Maybe (Title,(Maybe Titleabbrev))) [Segtitle] [Seglistitem]
		   deriving (Eq,Show)
data Segmentedlist_Attrs = Segmentedlist_Attrs
    { segmentedlistId :: (Maybe String)
    , segmentedlistLang :: (Maybe String)
    , segmentedlistRemap :: (Maybe String)
    , segmentedlistXreflabel :: (Maybe String)
    , segmentedlistRevisionflag :: (Maybe Segmentedlist_Revisionflag)
    , segmentedlistArch :: (Maybe String)
    , segmentedlistCondition :: (Maybe String)
    , segmentedlistConformance :: (Maybe String)
    , segmentedlistOs :: (Maybe String)
    , segmentedlistRevision :: (Maybe String)
    , segmentedlistSecurity :: (Maybe String)
    , segmentedlistUserlevel :: (Maybe String)
    , segmentedlistVendor :: (Maybe String)
    , segmentedlistRole :: (Maybe String)
    } deriving (Eq,Show)
data Segmentedlist_Revisionflag = Segmentedlist_Revisionflag_Changed
				   |  Segmentedlist_Revisionflag_Added  | 
				  Segmentedlist_Revisionflag_Deleted  | 
				  Segmentedlist_Revisionflag_Off
				deriving (Eq,Show)
data Segtitle = Segtitle Segtitle_Attrs [Segtitle_]
	      deriving (Eq,Show)
data Segtitle_Attrs = Segtitle_Attrs
    { segtitleId :: (Maybe String)
    , segtitleLang :: (Maybe String)
    , segtitleRemap :: (Maybe String)
    , segtitleXreflabel :: (Maybe String)
    , segtitleRevisionflag :: (Maybe Segtitle_Revisionflag)
    , segtitleArch :: (Maybe String)
    , segtitleCondition :: (Maybe String)
    , segtitleConformance :: (Maybe String)
    , segtitleOs :: (Maybe String)
    , segtitleRevision :: (Maybe String)
    , segtitleSecurity :: (Maybe String)
    , segtitleUserlevel :: (Maybe String)
    , segtitleVendor :: (Maybe String)
    , segtitleRole :: (Maybe String)
    } deriving (Eq,Show)
data Segtitle_ = Segtitle_Str String
	       | Segtitle_Footnoteref Footnoteref
	       | Segtitle_Xref Xref
	       | Segtitle_Abbrev Abbrev
	       | Segtitle_Acronym Acronym
	       | Segtitle_Citation Citation
	       | Segtitle_Citerefentry Citerefentry
	       | Segtitle_Citetitle Citetitle
	       | Segtitle_Emphasis Emphasis
	       | Segtitle_Firstterm Firstterm
	       | Segtitle_Foreignphrase Foreignphrase
	       | Segtitle_Glossterm Glossterm
	       | Segtitle_Footnote Footnote
	       | Segtitle_Phrase Phrase
	       | Segtitle_Quote Quote
	       | Segtitle_Trademark Trademark
	       | Segtitle_Wordasword Wordasword
	       | Segtitle_Personname Personname
	       | Segtitle_Link Link
	       | Segtitle_Olink Olink
	       | Segtitle_Ulink Ulink
	       | Segtitle_Action Action
	       | Segtitle_Application Application
	       | Segtitle_Classname Classname
	       | Segtitle_Methodname Methodname
	       | Segtitle_Interfacename Interfacename
	       | Segtitle_Exceptionname Exceptionname
	       | Segtitle_Ooclass Ooclass
	       | Segtitle_Oointerface Oointerface
	       | Segtitle_Ooexception Ooexception
	       | Segtitle_Command Command
	       | Segtitle_Computeroutput Computeroutput
	       | Segtitle_Database Database
	       | Segtitle_Email Email
	       | Segtitle_Envar Envar
	       | Segtitle_Errorcode Errorcode
	       | Segtitle_Errorname Errorname
	       | Segtitle_Errortype Errortype
	       | Segtitle_Errortext Errortext
	       | Segtitle_Filename Filename
	       | Segtitle_Function Function
	       | Segtitle_Guibutton Guibutton
	       | Segtitle_Guiicon Guiicon
	       | Segtitle_Guilabel Guilabel
	       | Segtitle_Guimenu Guimenu
	       | Segtitle_Guimenuitem Guimenuitem
	       | Segtitle_Guisubmenu Guisubmenu
	       | Segtitle_Hardware Hardware
	       | Segtitle_Interface Interface
	       | Segtitle_Keycap Keycap
	       | Segtitle_Keycode Keycode
	       | Segtitle_Keycombo Keycombo
	       | Segtitle_Keysym Keysym
	       | Segtitle_Literal Literal
	       | Segtitle_Constant Constant
	       | Segtitle_Markup Markup
	       | Segtitle_Medialabel Medialabel
	       | Segtitle_Menuchoice Menuchoice
	       | Segtitle_Mousebutton Mousebutton
	       | Segtitle_Option Option
	       | Segtitle_Optional Optional
	       | Segtitle_Parameter Parameter
	       | Segtitle_Prompt Prompt
	       | Segtitle_Property Property
	       | Segtitle_Replaceable Replaceable
	       | Segtitle_Returnvalue Returnvalue
	       | Segtitle_Sgmltag Sgmltag
	       | Segtitle_Structfield Structfield
	       | Segtitle_Structname Structname
	       | Segtitle_Symbol Symbol
	       | Segtitle_Systemitem Systemitem
	       | Segtitle_Token Token
	       | Segtitle_Type Type
	       | Segtitle_Userinput Userinput
	       | Segtitle_Varname Varname
	       | Segtitle_Anchor Anchor
	       | Segtitle_Author Author
	       | Segtitle_Authorinitials Authorinitials
	       | Segtitle_Corpauthor Corpauthor
	       | Segtitle_Modespec Modespec
	       | Segtitle_Othercredit Othercredit
	       | Segtitle_Productname Productname
	       | Segtitle_Productnumber Productnumber
	       | Segtitle_Revhistory Revhistory
	       | Segtitle_Remark Remark
	       | Segtitle_Subscript Subscript
	       | Segtitle_Superscript Superscript
	       | Segtitle_Inlinegraphic Inlinegraphic
	       | Segtitle_Inlinemediaobject Inlinemediaobject
	       | Segtitle_Inlineequation Inlineequation
	       | Segtitle_Indexterm Indexterm
	       deriving (Eq,Show)
data Segtitle_Revisionflag = Segtitle_Revisionflag_Changed  | 
			     Segtitle_Revisionflag_Added  |  Segtitle_Revisionflag_Deleted  | 
			     Segtitle_Revisionflag_Off
			   deriving (Eq,Show)
data Seglistitem = Seglistitem Seglistitem_Attrs [Seg]
		 deriving (Eq,Show)
data Seglistitem_Attrs = Seglistitem_Attrs
    { seglistitemId :: (Maybe String)
    , seglistitemLang :: (Maybe String)
    , seglistitemRemap :: (Maybe String)
    , seglistitemXreflabel :: (Maybe String)
    , seglistitemRevisionflag :: (Maybe Seglistitem_Revisionflag)
    , seglistitemArch :: (Maybe String)
    , seglistitemCondition :: (Maybe String)
    , seglistitemConformance :: (Maybe String)
    , seglistitemOs :: (Maybe String)
    , seglistitemRevision :: (Maybe String)
    , seglistitemSecurity :: (Maybe String)
    , seglistitemUserlevel :: (Maybe String)
    , seglistitemVendor :: (Maybe String)
    , seglistitemRole :: (Maybe String)
    } deriving (Eq,Show)
data Seglistitem_Revisionflag = Seglistitem_Revisionflag_Changed
				 |  Seglistitem_Revisionflag_Added  | 
				Seglistitem_Revisionflag_Deleted  |  Seglistitem_Revisionflag_Off
			      deriving (Eq,Show)
data Seg = Seg Seg_Attrs [Seg_]
	 deriving (Eq,Show)
data Seg_Attrs = Seg_Attrs
    { segId :: (Maybe String)
    , segLang :: (Maybe String)
    , segRemap :: (Maybe String)
    , segXreflabel :: (Maybe String)
    , segRevisionflag :: (Maybe Seg_Revisionflag)
    , segArch :: (Maybe String)
    , segCondition :: (Maybe String)
    , segConformance :: (Maybe String)
    , segOs :: (Maybe String)
    , segRevision :: (Maybe String)
    , segSecurity :: (Maybe String)
    , segUserlevel :: (Maybe String)
    , segVendor :: (Maybe String)
    , segRole :: (Maybe String)
    } deriving (Eq,Show)
data Seg_ = Seg_Str String
	  | Seg_Footnoteref Footnoteref
	  | Seg_Xref Xref
	  | Seg_Abbrev Abbrev
	  | Seg_Acronym Acronym
	  | Seg_Citation Citation
	  | Seg_Citerefentry Citerefentry
	  | Seg_Citetitle Citetitle
	  | Seg_Emphasis Emphasis
	  | Seg_Firstterm Firstterm
	  | Seg_Foreignphrase Foreignphrase
	  | Seg_Glossterm Glossterm
	  | Seg_Footnote Footnote
	  | Seg_Phrase Phrase
	  | Seg_Quote Quote
	  | Seg_Trademark Trademark
	  | Seg_Wordasword Wordasword
	  | Seg_Personname Personname
	  | Seg_Link Link
	  | Seg_Olink Olink
	  | Seg_Ulink Ulink
	  | Seg_Action Action
	  | Seg_Application Application
	  | Seg_Classname Classname
	  | Seg_Methodname Methodname
	  | Seg_Interfacename Interfacename
	  | Seg_Exceptionname Exceptionname
	  | Seg_Ooclass Ooclass
	  | Seg_Oointerface Oointerface
	  | Seg_Ooexception Ooexception
	  | Seg_Command Command
	  | Seg_Computeroutput Computeroutput
	  | Seg_Database Database
	  | Seg_Email Email
	  | Seg_Envar Envar
	  | Seg_Errorcode Errorcode
	  | Seg_Errorname Errorname
	  | Seg_Errortype Errortype
	  | Seg_Errortext Errortext
	  | Seg_Filename Filename
	  | Seg_Function Function
	  | Seg_Guibutton Guibutton
	  | Seg_Guiicon Guiicon
	  | Seg_Guilabel Guilabel
	  | Seg_Guimenu Guimenu
	  | Seg_Guimenuitem Guimenuitem
	  | Seg_Guisubmenu Guisubmenu
	  | Seg_Hardware Hardware
	  | Seg_Interface Interface
	  | Seg_Keycap Keycap
	  | Seg_Keycode Keycode
	  | Seg_Keycombo Keycombo
	  | Seg_Keysym Keysym
	  | Seg_Literal Literal
	  | Seg_Constant Constant
	  | Seg_Markup Markup
	  | Seg_Medialabel Medialabel
	  | Seg_Menuchoice Menuchoice
	  | Seg_Mousebutton Mousebutton
	  | Seg_Option Option
	  | Seg_Optional Optional
	  | Seg_Parameter Parameter
	  | Seg_Prompt Prompt
	  | Seg_Property Property
	  | Seg_Replaceable Replaceable
	  | Seg_Returnvalue Returnvalue
	  | Seg_Sgmltag Sgmltag
	  | Seg_Structfield Structfield
	  | Seg_Structname Structname
	  | Seg_Symbol Symbol
	  | Seg_Systemitem Systemitem
	  | Seg_Token Token
	  | Seg_Type Type
	  | Seg_Userinput Userinput
	  | Seg_Varname Varname
	  | Seg_Anchor Anchor
	  | Seg_Author Author
	  | Seg_Authorinitials Authorinitials
	  | Seg_Corpauthor Corpauthor
	  | Seg_Modespec Modespec
	  | Seg_Othercredit Othercredit
	  | Seg_Productname Productname
	  | Seg_Productnumber Productnumber
	  | Seg_Revhistory Revhistory
	  | Seg_Remark Remark
	  | Seg_Subscript Subscript
	  | Seg_Superscript Superscript
	  | Seg_Inlinegraphic Inlinegraphic
	  | Seg_Inlinemediaobject Inlinemediaobject
	  | Seg_Inlineequation Inlineequation
	  | Seg_Synopsis Synopsis
	  | Seg_Cmdsynopsis Cmdsynopsis
	  | Seg_Funcsynopsis Funcsynopsis
	  | Seg_Classsynopsis Classsynopsis
	  | Seg_Fieldsynopsis Fieldsynopsis
	  | Seg_Constructorsynopsis Constructorsynopsis
	  | Seg_Destructorsynopsis Destructorsynopsis
	  | Seg_Methodsynopsis Methodsynopsis
	  | Seg_Indexterm Indexterm
	  | Seg_Beginpage Beginpage
	  deriving (Eq,Show)
data Seg_Revisionflag = Seg_Revisionflag_Changed  | 
			Seg_Revisionflag_Added  |  Seg_Revisionflag_Deleted  | 
			Seg_Revisionflag_Off
		      deriving (Eq,Show)
data Simplelist = Simplelist Simplelist_Attrs [Member]
		deriving (Eq,Show)
data Simplelist_Attrs = Simplelist_Attrs
    { simplelistColumns :: (Maybe String)
    , simplelistType :: (Defaultable Simplelist_Type)
    , simplelistId :: (Maybe String)
    , simplelistLang :: (Maybe String)
    , simplelistRemap :: (Maybe String)
    , simplelistXreflabel :: (Maybe String)
    , simplelistRevisionflag :: (Maybe Simplelist_Revisionflag)
    , simplelistArch :: (Maybe String)
    , simplelistCondition :: (Maybe String)
    , simplelistConformance :: (Maybe String)
    , simplelistOs :: (Maybe String)
    , simplelistRevision :: (Maybe String)
    , simplelistSecurity :: (Maybe String)
    , simplelistUserlevel :: (Maybe String)
    , simplelistVendor :: (Maybe String)
    , simplelistRole :: (Maybe String)
    } deriving (Eq,Show)
data Simplelist_Type = Simplelist_Type_Inline  | 
		       Simplelist_Type_Vert  |  Simplelist_Type_Horiz
		     deriving (Eq,Show)
data Simplelist_Revisionflag = Simplelist_Revisionflag_Changed  | 
			       Simplelist_Revisionflag_Added  |  Simplelist_Revisionflag_Deleted
			        |  Simplelist_Revisionflag_Off
			     deriving (Eq,Show)
data Member = Member Member_Attrs [Member_]
	    deriving (Eq,Show)
data Member_Attrs = Member_Attrs
    { memberId :: (Maybe String)
    , memberLang :: (Maybe String)
    , memberRemap :: (Maybe String)
    , memberXreflabel :: (Maybe String)
    , memberRevisionflag :: (Maybe Member_Revisionflag)
    , memberArch :: (Maybe String)
    , memberCondition :: (Maybe String)
    , memberConformance :: (Maybe String)
    , memberOs :: (Maybe String)
    , memberRevision :: (Maybe String)
    , memberSecurity :: (Maybe String)
    , memberUserlevel :: (Maybe String)
    , memberVendor :: (Maybe String)
    , memberRole :: (Maybe String)
    } deriving (Eq,Show)
data Member_ = Member_Str String
	     | Member_Footnoteref Footnoteref
	     | Member_Xref Xref
	     | Member_Abbrev Abbrev
	     | Member_Acronym Acronym
	     | Member_Citation Citation
	     | Member_Citerefentry Citerefentry
	     | Member_Citetitle Citetitle
	     | Member_Emphasis Emphasis
	     | Member_Firstterm Firstterm
	     | Member_Foreignphrase Foreignphrase
	     | Member_Glossterm Glossterm
	     | Member_Footnote Footnote
	     | Member_Phrase Phrase
	     | Member_Quote Quote
	     | Member_Trademark Trademark
	     | Member_Wordasword Wordasword
	     | Member_Personname Personname
	     | Member_Link Link
	     | Member_Olink Olink
	     | Member_Ulink Ulink
	     | Member_Action Action
	     | Member_Application Application
	     | Member_Classname Classname
	     | Member_Methodname Methodname
	     | Member_Interfacename Interfacename
	     | Member_Exceptionname Exceptionname
	     | Member_Ooclass Ooclass
	     | Member_Oointerface Oointerface
	     | Member_Ooexception Ooexception
	     | Member_Command Command
	     | Member_Computeroutput Computeroutput
	     | Member_Database Database
	     | Member_Email Email
	     | Member_Envar Envar
	     | Member_Errorcode Errorcode
	     | Member_Errorname Errorname
	     | Member_Errortype Errortype
	     | Member_Errortext Errortext
	     | Member_Filename Filename
	     | Member_Function Function
	     | Member_Guibutton Guibutton
	     | Member_Guiicon Guiicon
	     | Member_Guilabel Guilabel
	     | Member_Guimenu Guimenu
	     | Member_Guimenuitem Guimenuitem
	     | Member_Guisubmenu Guisubmenu
	     | Member_Hardware Hardware
	     | Member_Interface Interface
	     | Member_Keycap Keycap
	     | Member_Keycode Keycode
	     | Member_Keycombo Keycombo
	     | Member_Keysym Keysym
	     | Member_Literal Literal
	     | Member_Constant Constant
	     | Member_Markup Markup
	     | Member_Medialabel Medialabel
	     | Member_Menuchoice Menuchoice
	     | Member_Mousebutton Mousebutton
	     | Member_Option Option
	     | Member_Optional Optional
	     | Member_Parameter Parameter
	     | Member_Prompt Prompt
	     | Member_Property Property
	     | Member_Replaceable Replaceable
	     | Member_Returnvalue Returnvalue
	     | Member_Sgmltag Sgmltag
	     | Member_Structfield Structfield
	     | Member_Structname Structname
	     | Member_Symbol Symbol
	     | Member_Systemitem Systemitem
	     | Member_Token Token
	     | Member_Type Type
	     | Member_Userinput Userinput
	     | Member_Varname Varname
	     | Member_Anchor Anchor
	     | Member_Author Author
	     | Member_Authorinitials Authorinitials
	     | Member_Corpauthor Corpauthor
	     | Member_Modespec Modespec
	     | Member_Othercredit Othercredit
	     | Member_Productname Productname
	     | Member_Productnumber Productnumber
	     | Member_Revhistory Revhistory
	     | Member_Remark Remark
	     | Member_Subscript Subscript
	     | Member_Superscript Superscript
	     | Member_Inlinegraphic Inlinegraphic
	     | Member_Inlinemediaobject Inlinemediaobject
	     | Member_Inlineequation Inlineequation
	     | Member_Synopsis Synopsis
	     | Member_Cmdsynopsis Cmdsynopsis
	     | Member_Funcsynopsis Funcsynopsis
	     | Member_Classsynopsis Classsynopsis
	     | Member_Fieldsynopsis Fieldsynopsis
	     | Member_Constructorsynopsis Constructorsynopsis
	     | Member_Destructorsynopsis Destructorsynopsis
	     | Member_Methodsynopsis Methodsynopsis
	     | Member_Indexterm Indexterm
	     | Member_Beginpage Beginpage
	     deriving (Eq,Show)
data Member_Revisionflag = Member_Revisionflag_Changed  | 
			   Member_Revisionflag_Added  |  Member_Revisionflag_Deleted  | 
			   Member_Revisionflag_Off
			 deriving (Eq,Show)
data Variablelist = Variablelist Variablelist_Attrs
				 (Maybe Blockinfo) (Maybe (Title,(Maybe Titleabbrev)))
				 [(OneOf41 Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)]
				 [Varlistentry]
		  deriving (Eq,Show)
data Variablelist_Attrs = Variablelist_Attrs
    { variablelistTermlength :: (Maybe String)
    , variablelistId :: (Maybe String)
    , variablelistLang :: (Maybe String)
    , variablelistRemap :: (Maybe String)
    , variablelistXreflabel :: (Maybe String)
    , variablelistRevisionflag :: (Maybe Variablelist_Revisionflag)
    , variablelistArch :: (Maybe String)
    , variablelistCondition :: (Maybe String)
    , variablelistConformance :: (Maybe String)
    , variablelistOs :: (Maybe String)
    , variablelistRevision :: (Maybe String)
    , variablelistSecurity :: (Maybe String)
    , variablelistUserlevel :: (Maybe String)
    , variablelistVendor :: (Maybe String)
    , variablelistRole :: (Maybe String)
    } deriving (Eq,Show)
data Variablelist_Revisionflag = Variablelist_Revisionflag_Changed
				  |  Variablelist_Revisionflag_Added  | 
				 Variablelist_Revisionflag_Deleted  |  Variablelist_Revisionflag_Off
			       deriving (Eq,Show)
data Varlistentry = Varlistentry Varlistentry_Attrs [Term] Listitem
		  deriving (Eq,Show)
data Varlistentry_Attrs = Varlistentry_Attrs
    { varlistentryId :: (Maybe String)
    , varlistentryLang :: (Maybe String)
    , varlistentryRemap :: (Maybe String)
    , varlistentryXreflabel :: (Maybe String)
    , varlistentryRevisionflag :: (Maybe Varlistentry_Revisionflag)
    , varlistentryArch :: (Maybe String)
    , varlistentryCondition :: (Maybe String)
    , varlistentryConformance :: (Maybe String)
    , varlistentryOs :: (Maybe String)
    , varlistentryRevision :: (Maybe String)
    , varlistentrySecurity :: (Maybe String)
    , varlistentryUserlevel :: (Maybe String)
    , varlistentryVendor :: (Maybe String)
    , varlistentryRole :: (Maybe String)
    } deriving (Eq,Show)
data Varlistentry_Revisionflag = Varlistentry_Revisionflag_Changed
				  |  Varlistentry_Revisionflag_Added  | 
				 Varlistentry_Revisionflag_Deleted  |  Varlistentry_Revisionflag_Off
			       deriving (Eq,Show)
data Term = Term Term_Attrs [Term_]
	  deriving (Eq,Show)
data Term_Attrs = Term_Attrs
    { termId :: (Maybe String)
    , termLang :: (Maybe String)
    , termRemap :: (Maybe String)
    , termXreflabel :: (Maybe String)
    , termRevisionflag :: (Maybe Term_Revisionflag)
    , termArch :: (Maybe String)
    , termCondition :: (Maybe String)
    , termConformance :: (Maybe String)
    , termOs :: (Maybe String)
    , termRevision :: (Maybe String)
    , termSecurity :: (Maybe String)
    , termUserlevel :: (Maybe String)
    , termVendor :: (Maybe String)
    , termRole :: (Maybe String)
    } deriving (Eq,Show)
data Term_ = Term_Str String
	   | Term_Footnoteref Footnoteref
	   | Term_Xref Xref
	   | Term_Abbrev Abbrev
	   | Term_Acronym Acronym
	   | Term_Citation Citation
	   | Term_Citerefentry Citerefentry
	   | Term_Citetitle Citetitle
	   | Term_Emphasis Emphasis
	   | Term_Firstterm Firstterm
	   | Term_Foreignphrase Foreignphrase
	   | Term_Glossterm Glossterm
	   | Term_Footnote Footnote
	   | Term_Phrase Phrase
	   | Term_Quote Quote
	   | Term_Trademark Trademark
	   | Term_Wordasword Wordasword
	   | Term_Personname Personname
	   | Term_Link Link
	   | Term_Olink Olink
	   | Term_Ulink Ulink
	   | Term_Action Action
	   | Term_Application Application
	   | Term_Classname Classname
	   | Term_Methodname Methodname
	   | Term_Interfacename Interfacename
	   | Term_Exceptionname Exceptionname
	   | Term_Ooclass Ooclass
	   | Term_Oointerface Oointerface
	   | Term_Ooexception Ooexception
	   | Term_Command Command
	   | Term_Computeroutput Computeroutput
	   | Term_Database Database
	   | Term_Email Email
	   | Term_Envar Envar
	   | Term_Errorcode Errorcode
	   | Term_Errorname Errorname
	   | Term_Errortype Errortype
	   | Term_Errortext Errortext
	   | Term_Filename Filename
	   | Term_Function Function
	   | Term_Guibutton Guibutton
	   | Term_Guiicon Guiicon
	   | Term_Guilabel Guilabel
	   | Term_Guimenu Guimenu
	   | Term_Guimenuitem Guimenuitem
	   | Term_Guisubmenu Guisubmenu
	   | Term_Hardware Hardware
	   | Term_Interface Interface
	   | Term_Keycap Keycap
	   | Term_Keycode Keycode
	   | Term_Keycombo Keycombo
	   | Term_Keysym Keysym
	   | Term_Literal Literal
	   | Term_Constant Constant
	   | Term_Markup Markup
	   | Term_Medialabel Medialabel
	   | Term_Menuchoice Menuchoice
	   | Term_Mousebutton Mousebutton
	   | Term_Option Option
	   | Term_Optional Optional
	   | Term_Parameter Parameter
	   | Term_Prompt Prompt
	   | Term_Property Property
	   | Term_Replaceable Replaceable
	   | Term_Returnvalue Returnvalue
	   | Term_Sgmltag Sgmltag
	   | Term_Structfield Structfield
	   | Term_Structname Structname
	   | Term_Symbol Symbol
	   | Term_Systemitem Systemitem
	   | Term_Token Token
	   | Term_Type Type
	   | Term_Userinput Userinput
	   | Term_Varname Varname
	   | Term_Anchor Anchor
	   | Term_Author Author
	   | Term_Authorinitials Authorinitials
	   | Term_Corpauthor Corpauthor
	   | Term_Modespec Modespec
	   | Term_Othercredit Othercredit
	   | Term_Productname Productname
	   | Term_Productnumber Productnumber
	   | Term_Revhistory Revhistory
	   | Term_Remark Remark
	   | Term_Subscript Subscript
	   | Term_Superscript Superscript
	   | Term_Inlinegraphic Inlinegraphic
	   | Term_Inlinemediaobject Inlinemediaobject
	   | Term_Inlineequation Inlineequation
	   | Term_Synopsis Synopsis
	   | Term_Cmdsynopsis Cmdsynopsis
	   | Term_Funcsynopsis Funcsynopsis
	   | Term_Classsynopsis Classsynopsis
	   | Term_Fieldsynopsis Fieldsynopsis
	   | Term_Constructorsynopsis Constructorsynopsis
	   | Term_Destructorsynopsis Destructorsynopsis
	   | Term_Methodsynopsis Methodsynopsis
	   | Term_Indexterm Indexterm
	   | Term_Beginpage Beginpage
	   deriving (Eq,Show)
data Term_Revisionflag = Term_Revisionflag_Changed  | 
			 Term_Revisionflag_Added  |  Term_Revisionflag_Deleted  | 
			 Term_Revisionflag_Off
		       deriving (Eq,Show)
data Calloutlist = Calloutlist Calloutlist_Attrs
			       (Maybe (Title,(Maybe Titleabbrev))) [Callout]
		 deriving (Eq,Show)
data Calloutlist_Attrs = Calloutlist_Attrs
    { calloutlistId :: (Maybe String)
    , calloutlistLang :: (Maybe String)
    , calloutlistRemap :: (Maybe String)
    , calloutlistXreflabel :: (Maybe String)
    , calloutlistRevisionflag :: (Maybe Calloutlist_Revisionflag)
    , calloutlistArch :: (Maybe String)
    , calloutlistCondition :: (Maybe String)
    , calloutlistConformance :: (Maybe String)
    , calloutlistOs :: (Maybe String)
    , calloutlistRevision :: (Maybe String)
    , calloutlistSecurity :: (Maybe String)
    , calloutlistUserlevel :: (Maybe String)
    , calloutlistVendor :: (Maybe String)
    , calloutlistRole :: (Maybe String)
    } deriving (Eq,Show)
data Calloutlist_Revisionflag = Calloutlist_Revisionflag_Changed
				 |  Calloutlist_Revisionflag_Added  | 
				Calloutlist_Revisionflag_Deleted  |  Calloutlist_Revisionflag_Off
			      deriving (Eq,Show)
data Callout = Callout Callout_Attrs
		       [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)]
	     deriving (Eq,Show)
data Callout_Attrs = Callout_Attrs
    { calloutArearefs :: String
    , calloutId :: (Maybe String)
    , calloutLang :: (Maybe String)
    , calloutRemap :: (Maybe String)
    , calloutXreflabel :: (Maybe String)
    , calloutRevisionflag :: (Maybe Callout_Revisionflag)
    , calloutArch :: (Maybe String)
    , calloutCondition :: (Maybe String)
    , calloutConformance :: (Maybe String)
    , calloutOs :: (Maybe String)
    , calloutRevision :: (Maybe String)
    , calloutSecurity :: (Maybe String)
    , calloutUserlevel :: (Maybe String)
    , calloutVendor :: (Maybe String)
    , calloutRole :: (Maybe String)
    } deriving (Eq,Show)
data Callout_Revisionflag = Callout_Revisionflag_Changed  | 
			    Callout_Revisionflag_Added  |  Callout_Revisionflag_Deleted  | 
			    Callout_Revisionflag_Off
			  deriving (Eq,Show)
data Example = Example Example_Attrs (Maybe Blockinfo) Title
		       (Maybe Titleabbrev)
		       [(OneOf36 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Indexterm Beginpage)]
	     deriving (Eq,Show)
data Example_Attrs = Example_Attrs
    { exampleLabel :: (Maybe String)
    , exampleWidth :: (Maybe String)
    , exampleId :: (Maybe String)
    , exampleLang :: (Maybe String)
    , exampleRemap :: (Maybe String)
    , exampleXreflabel :: (Maybe String)
    , exampleRevisionflag :: (Maybe Example_Revisionflag)
    , exampleArch :: (Maybe String)
    , exampleCondition :: (Maybe String)
    , exampleConformance :: (Maybe String)
    , exampleOs :: (Maybe String)
    , exampleRevision :: (Maybe String)
    , exampleSecurity :: (Maybe String)
    , exampleUserlevel :: (Maybe String)
    , exampleVendor :: (Maybe String)
    , exampleRole :: (Maybe String)
    } deriving (Eq,Show)
data Example_Revisionflag = Example_Revisionflag_Changed  | 
			    Example_Revisionflag_Added  |  Example_Revisionflag_Deleted  | 
			    Example_Revisionflag_Off
			  deriving (Eq,Show)
data Informalexample = Informalexample Informalexample_Attrs
				       (Maybe Blockinfo)
				       [(OneOf36 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Indexterm Beginpage)]
		     deriving (Eq,Show)
data Informalexample_Attrs = Informalexample_Attrs
    { informalexampleWidth :: (Maybe String)
    , informalexampleId :: (Maybe String)
    , informalexampleLang :: (Maybe String)
    , informalexampleRemap :: (Maybe String)
    , informalexampleXreflabel :: (Maybe String)
    , informalexampleRevisionflag :: (Maybe Informalexample_Revisionflag)
    , informalexampleArch :: (Maybe String)
    , informalexampleCondition :: (Maybe String)
    , informalexampleConformance :: (Maybe String)
    , informalexampleOs :: (Maybe String)
    , informalexampleRevision :: (Maybe String)
    , informalexampleSecurity :: (Maybe String)
    , informalexampleUserlevel :: (Maybe String)
    , informalexampleVendor :: (Maybe String)
    , informalexampleRole :: (Maybe String)
    } deriving (Eq,Show)
data Informalexample_Revisionflag = Informalexample_Revisionflag_Changed
				     |  Informalexample_Revisionflag_Added  | 
				    Informalexample_Revisionflag_Deleted  | 
				    Informalexample_Revisionflag_Off
				  deriving (Eq,Show)
data Programlistingco = Programlistingco Programlistingco_Attrs
					 Areaspec Programlisting [Calloutlist]
		      deriving (Eq,Show)
data Programlistingco_Attrs = Programlistingco_Attrs
    { programlistingcoId :: (Maybe String)
    , programlistingcoLang :: (Maybe String)
    , programlistingcoRemap :: (Maybe String)
    , programlistingcoXreflabel :: (Maybe String)
    , programlistingcoRevisionflag :: (Maybe Programlistingco_Revisionflag)
    , programlistingcoArch :: (Maybe String)
    , programlistingcoCondition :: (Maybe String)
    , programlistingcoConformance :: (Maybe String)
    , programlistingcoOs :: (Maybe String)
    , programlistingcoRevision :: (Maybe String)
    , programlistingcoSecurity :: (Maybe String)
    , programlistingcoUserlevel :: (Maybe String)
    , programlistingcoVendor :: (Maybe String)
    , programlistingcoRole :: (Maybe String)
    } deriving (Eq,Show)
data Programlistingco_Revisionflag = Programlistingco_Revisionflag_Changed
				      |  Programlistingco_Revisionflag_Added  | 
				     Programlistingco_Revisionflag_Deleted  | 
				     Programlistingco_Revisionflag_Off
				   deriving (Eq,Show)
data Areaspec = Areaspec Areaspec_Attrs [(OneOf2 Area Areaset)]
	      deriving (Eq,Show)
data Areaspec_Attrs = Areaspec_Attrs
    { areaspecUnits :: (Maybe Areaspec_Units)
    , areaspecOtherunits :: (Maybe String)
    , areaspecId :: (Maybe String)
    , areaspecLang :: (Maybe String)
    , areaspecRemap :: (Maybe String)
    , areaspecXreflabel :: (Maybe String)
    , areaspecRevisionflag :: (Maybe Areaspec_Revisionflag)
    , areaspecArch :: (Maybe String)
    , areaspecCondition :: (Maybe String)
    , areaspecConformance :: (Maybe String)
    , areaspecOs :: (Maybe String)
    , areaspecRevision :: (Maybe String)
    , areaspecSecurity :: (Maybe String)
    , areaspecUserlevel :: (Maybe String)
    , areaspecVendor :: (Maybe String)
    , areaspecRole :: (Maybe String)
    } deriving (Eq,Show)
data Areaspec_Units = Areaspec_Units_Calspair  | 
		      Areaspec_Units_Linecolumn  |  Areaspec_Units_Linerange  | 
		      Areaspec_Units_Linecolumnpair  |  Areaspec_Units_Other
		    deriving (Eq,Show)
data Areaspec_Revisionflag = Areaspec_Revisionflag_Changed  | 
			     Areaspec_Revisionflag_Added  |  Areaspec_Revisionflag_Deleted  | 
			     Areaspec_Revisionflag_Off
			   deriving (Eq,Show)
data Area = Area
    { areaLabel :: (Maybe String)
    , areaLinkends :: (Maybe String)
    , areaUnits :: (Maybe Area_Units)
    , areaOtherunits :: (Maybe String)
    , areaCoords :: String
    , areaId :: String
    , areaLang :: (Maybe String)
    , areaRemap :: (Maybe String)
    , areaXreflabel :: (Maybe String)
    , areaRevisionflag :: (Maybe Area_Revisionflag)
    , areaArch :: (Maybe String)
    , areaCondition :: (Maybe String)
    , areaConformance :: (Maybe String)
    , areaOs :: (Maybe String)
    , areaRevision :: (Maybe String)
    , areaSecurity :: (Maybe String)
    , areaUserlevel :: (Maybe String)
    , areaVendor :: (Maybe String)
    , areaRole :: (Maybe String)
    } deriving (Eq,Show)
data Area_Units = Area_Units_Calspair  |  Area_Units_Linecolumn  | 
		  Area_Units_Linerange  |  Area_Units_Linecolumnpair  | 
		  Area_Units_Other
		deriving (Eq,Show)
data Area_Revisionflag = Area_Revisionflag_Changed  | 
			 Area_Revisionflag_Added  |  Area_Revisionflag_Deleted  | 
			 Area_Revisionflag_Off
		       deriving (Eq,Show)
data Areaset = Areaset Areaset_Attrs [Area]
	     deriving (Eq,Show)
data Areaset_Attrs = Areaset_Attrs
    { areasetLabel :: (Maybe String)
    , areasetUnits :: (Maybe Areaset_Units)
    , areasetOtherunits :: (Maybe String)
    , areasetCoords :: String
    , areasetId :: String
    , areasetLang :: (Maybe String)
    , areasetRemap :: (Maybe String)
    , areasetXreflabel :: (Maybe String)
    , areasetRevisionflag :: (Maybe Areaset_Revisionflag)
    , areasetArch :: (Maybe String)
    , areasetCondition :: (Maybe String)
    , areasetConformance :: (Maybe String)
    , areasetOs :: (Maybe String)
    , areasetRevision :: (Maybe String)
    , areasetSecurity :: (Maybe String)
    , areasetUserlevel :: (Maybe String)
    , areasetVendor :: (Maybe String)
    , areasetRole :: (Maybe String)
    } deriving (Eq,Show)
data Areaset_Units = Areaset_Units_Calspair  | 
		     Areaset_Units_Linecolumn  |  Areaset_Units_Linerange  | 
		     Areaset_Units_Linecolumnpair  |  Areaset_Units_Other
		   deriving (Eq,Show)
data Areaset_Revisionflag = Areaset_Revisionflag_Changed  | 
			    Areaset_Revisionflag_Added  |  Areaset_Revisionflag_Deleted  | 
			    Areaset_Revisionflag_Off
			  deriving (Eq,Show)
data Programlisting = Programlisting Programlisting_Attrs
				     [Programlisting_]
		    deriving (Eq,Show)
data Programlisting_Attrs = Programlisting_Attrs
    { programlistingWidth :: (Maybe String)
    , programlistingFormat :: (Defaultable Programlisting_Format)
    , programlistingLinenumbering :: (Maybe Programlisting_Linenumbering)
    , programlistingId :: (Maybe String)
    , programlistingLang :: (Maybe String)
    , programlistingRemap :: (Maybe String)
    , programlistingXreflabel :: (Maybe String)
    , programlistingRevisionflag :: (Maybe Programlisting_Revisionflag)
    , programlistingArch :: (Maybe String)
    , programlistingCondition :: (Maybe String)
    , programlistingConformance :: (Maybe String)
    , programlistingOs :: (Maybe String)
    , programlistingRevision :: (Maybe String)
    , programlistingSecurity :: (Maybe String)
    , programlistingUserlevel :: (Maybe String)
    , programlistingVendor :: (Maybe String)
    , programlistingRole :: (Maybe String)
    } deriving (Eq,Show)
data Programlisting_ = Programlisting_Str String
		     | Programlisting_Footnoteref Footnoteref
		     | Programlisting_Xref Xref
		     | Programlisting_Abbrev Abbrev
		     | Programlisting_Acronym Acronym
		     | Programlisting_Citation Citation
		     | Programlisting_Citerefentry Citerefentry
		     | Programlisting_Citetitle Citetitle
		     | Programlisting_Emphasis Emphasis
		     | Programlisting_Firstterm Firstterm
		     | Programlisting_Foreignphrase Foreignphrase
		     | Programlisting_Glossterm Glossterm
		     | Programlisting_Footnote Footnote
		     | Programlisting_Phrase Phrase
		     | Programlisting_Quote Quote
		     | Programlisting_Trademark Trademark
		     | Programlisting_Wordasword Wordasword
		     | Programlisting_Personname Personname
		     | Programlisting_Link Link
		     | Programlisting_Olink Olink
		     | Programlisting_Ulink Ulink
		     | Programlisting_Action Action
		     | Programlisting_Application Application
		     | Programlisting_Classname Classname
		     | Programlisting_Methodname Methodname
		     | Programlisting_Interfacename Interfacename
		     | Programlisting_Exceptionname Exceptionname
		     | Programlisting_Ooclass Ooclass
		     | Programlisting_Oointerface Oointerface
		     | Programlisting_Ooexception Ooexception
		     | Programlisting_Command Command
		     | Programlisting_Computeroutput Computeroutput
		     | Programlisting_Database Database
		     | Programlisting_Email Email
		     | Programlisting_Envar Envar
		     | Programlisting_Errorcode Errorcode
		     | Programlisting_Errorname Errorname
		     | Programlisting_Errortype Errortype
		     | Programlisting_Errortext Errortext
		     | Programlisting_Filename Filename
		     | Programlisting_Function Function
		     | Programlisting_Guibutton Guibutton
		     | Programlisting_Guiicon Guiicon
		     | Programlisting_Guilabel Guilabel
		     | Programlisting_Guimenu Guimenu
		     | Programlisting_Guimenuitem Guimenuitem
		     | Programlisting_Guisubmenu Guisubmenu
		     | Programlisting_Hardware Hardware
		     | Programlisting_Interface Interface
		     | Programlisting_Keycap Keycap
		     | Programlisting_Keycode Keycode
		     | Programlisting_Keycombo Keycombo
		     | Programlisting_Keysym Keysym
		     | Programlisting_Literal Literal
		     | Programlisting_Constant Constant
		     | Programlisting_Markup Markup
		     | Programlisting_Medialabel Medialabel
		     | Programlisting_Menuchoice Menuchoice
		     | Programlisting_Mousebutton Mousebutton
		     | Programlisting_Option Option
		     | Programlisting_Optional Optional
		     | Programlisting_Parameter Parameter
		     | Programlisting_Prompt Prompt
		     | Programlisting_Property Property
		     | Programlisting_Replaceable Replaceable
		     | Programlisting_Returnvalue Returnvalue
		     | Programlisting_Sgmltag Sgmltag
		     | Programlisting_Structfield Structfield
		     | Programlisting_Structname Structname
		     | Programlisting_Symbol Symbol
		     | Programlisting_Systemitem Systemitem
		     | Programlisting_Token Token
		     | Programlisting_Type Type
		     | Programlisting_Userinput Userinput
		     | Programlisting_Varname Varname
		     | Programlisting_Anchor Anchor
		     | Programlisting_Author Author
		     | Programlisting_Authorinitials Authorinitials
		     | Programlisting_Corpauthor Corpauthor
		     | Programlisting_Modespec Modespec
		     | Programlisting_Othercredit Othercredit
		     | Programlisting_Productname Productname
		     | Programlisting_Productnumber Productnumber
		     | Programlisting_Revhistory Revhistory
		     | Programlisting_Remark Remark
		     | Programlisting_Subscript Subscript
		     | Programlisting_Superscript Superscript
		     | Programlisting_Inlinegraphic Inlinegraphic
		     | Programlisting_Inlinemediaobject Inlinemediaobject
		     | Programlisting_Inlineequation Inlineequation
		     | Programlisting_Synopsis Synopsis
		     | Programlisting_Cmdsynopsis Cmdsynopsis
		     | Programlisting_Funcsynopsis Funcsynopsis
		     | Programlisting_Classsynopsis Classsynopsis
		     | Programlisting_Fieldsynopsis Fieldsynopsis
		     | Programlisting_Constructorsynopsis Constructorsynopsis
		     | Programlisting_Destructorsynopsis Destructorsynopsis
		     | Programlisting_Methodsynopsis Methodsynopsis
		     | Programlisting_Indexterm Indexterm
		     | Programlisting_Beginpage Beginpage
		     | Programlisting_Co Co
		     | Programlisting_Coref Coref
		     | Programlisting_Lineannotation Lineannotation
		     | Programlisting_Textobject Textobject
		     deriving (Eq,Show)
data Programlisting_Format = Programlisting_Format_Linespecific
			   deriving (Eq,Show)
data Programlisting_Linenumbering = Programlisting_Linenumbering_Numbered
				     |  Programlisting_Linenumbering_Unnumbered
				  deriving (Eq,Show)
data Programlisting_Revisionflag = Programlisting_Revisionflag_Changed
				    |  Programlisting_Revisionflag_Added  | 
				   Programlisting_Revisionflag_Deleted  | 
				   Programlisting_Revisionflag_Off
				 deriving (Eq,Show)
data Literallayout = Literallayout Literallayout_Attrs
				   [Literallayout_]
		   deriving (Eq,Show)
data Literallayout_Attrs = Literallayout_Attrs
    { literallayoutWidth :: (Maybe String)
    , literallayoutFormat :: (Defaultable Literallayout_Format)
    , literallayoutLinenumbering :: (Maybe Literallayout_Linenumbering)
    , literallayoutClass :: (Defaultable Literallayout_Class)
    , literallayoutId :: (Maybe String)
    , literallayoutLang :: (Maybe String)
    , literallayoutRemap :: (Maybe String)
    , literallayoutXreflabel :: (Maybe String)
    , literallayoutRevisionflag :: (Maybe Literallayout_Revisionflag)
    , literallayoutArch :: (Maybe String)
    , literallayoutCondition :: (Maybe String)
    , literallayoutConformance :: (Maybe String)
    , literallayoutOs :: (Maybe String)
    , literallayoutRevision :: (Maybe String)
    , literallayoutSecurity :: (Maybe String)
    , literallayoutUserlevel :: (Maybe String)
    , literallayoutVendor :: (Maybe String)
    , literallayoutRole :: (Maybe String)
    } deriving (Eq,Show)
data Literallayout_ = Literallayout_Str String
		    | Literallayout_Footnoteref Footnoteref
		    | Literallayout_Xref Xref
		    | Literallayout_Abbrev Abbrev
		    | Literallayout_Acronym Acronym
		    | Literallayout_Citation Citation
		    | Literallayout_Citerefentry Citerefentry
		    | Literallayout_Citetitle Citetitle
		    | Literallayout_Emphasis Emphasis
		    | Literallayout_Firstterm Firstterm
		    | Literallayout_Foreignphrase Foreignphrase
		    | Literallayout_Glossterm Glossterm
		    | Literallayout_Footnote Footnote
		    | Literallayout_Phrase Phrase
		    | Literallayout_Quote Quote
		    | Literallayout_Trademark Trademark
		    | Literallayout_Wordasword Wordasword
		    | Literallayout_Personname Personname
		    | Literallayout_Link Link
		    | Literallayout_Olink Olink
		    | Literallayout_Ulink Ulink
		    | Literallayout_Action Action
		    | Literallayout_Application Application
		    | Literallayout_Classname Classname
		    | Literallayout_Methodname Methodname
		    | Literallayout_Interfacename Interfacename
		    | Literallayout_Exceptionname Exceptionname
		    | Literallayout_Ooclass Ooclass
		    | Literallayout_Oointerface Oointerface
		    | Literallayout_Ooexception Ooexception
		    | Literallayout_Command Command
		    | Literallayout_Computeroutput Computeroutput
		    | Literallayout_Database Database
		    | Literallayout_Email Email
		    | Literallayout_Envar Envar
		    | Literallayout_Errorcode Errorcode
		    | Literallayout_Errorname Errorname
		    | Literallayout_Errortype Errortype
		    | Literallayout_Errortext Errortext
		    | Literallayout_Filename Filename
		    | Literallayout_Function Function
		    | Literallayout_Guibutton Guibutton
		    | Literallayout_Guiicon Guiicon
		    | Literallayout_Guilabel Guilabel
		    | Literallayout_Guimenu Guimenu
		    | Literallayout_Guimenuitem Guimenuitem
		    | Literallayout_Guisubmenu Guisubmenu
		    | Literallayout_Hardware Hardware
		    | Literallayout_Interface Interface
		    | Literallayout_Keycap Keycap
		    | Literallayout_Keycode Keycode
		    | Literallayout_Keycombo Keycombo
		    | Literallayout_Keysym Keysym
		    | Literallayout_Literal Literal
		    | Literallayout_Constant Constant
		    | Literallayout_Markup Markup
		    | Literallayout_Medialabel Medialabel
		    | Literallayout_Menuchoice Menuchoice
		    | Literallayout_Mousebutton Mousebutton
		    | Literallayout_Option Option
		    | Literallayout_Optional Optional
		    | Literallayout_Parameter Parameter
		    | Literallayout_Prompt Prompt
		    | Literallayout_Property Property
		    | Literallayout_Replaceable Replaceable
		    | Literallayout_Returnvalue Returnvalue
		    | Literallayout_Sgmltag Sgmltag
		    | Literallayout_Structfield Structfield
		    | Literallayout_Structname Structname
		    | Literallayout_Symbol Symbol
		    | Literallayout_Systemitem Systemitem
		    | Literallayout_Token Token
		    | Literallayout_Type Type
		    | Literallayout_Userinput Userinput
		    | Literallayout_Varname Varname
		    | Literallayout_Anchor Anchor
		    | Literallayout_Author Author
		    | Literallayout_Authorinitials Authorinitials
		    | Literallayout_Corpauthor Corpauthor
		    | Literallayout_Modespec Modespec
		    | Literallayout_Othercredit Othercredit
		    | Literallayout_Productname Productname
		    | Literallayout_Productnumber Productnumber
		    | Literallayout_Revhistory Revhistory
		    | Literallayout_Remark Remark
		    | Literallayout_Subscript Subscript
		    | Literallayout_Superscript Superscript
		    | Literallayout_Inlinegraphic Inlinegraphic
		    | Literallayout_Inlinemediaobject Inlinemediaobject
		    | Literallayout_Inlineequation Inlineequation
		    | Literallayout_Synopsis Synopsis
		    | Literallayout_Cmdsynopsis Cmdsynopsis
		    | Literallayout_Funcsynopsis Funcsynopsis
		    | Literallayout_Classsynopsis Classsynopsis
		    | Literallayout_Fieldsynopsis Fieldsynopsis
		    | Literallayout_Constructorsynopsis Constructorsynopsis
		    | Literallayout_Destructorsynopsis Destructorsynopsis
		    | Literallayout_Methodsynopsis Methodsynopsis
		    | Literallayout_Indexterm Indexterm
		    | Literallayout_Beginpage Beginpage
		    | Literallayout_Co Co
		    | Literallayout_Coref Coref
		    | Literallayout_Textobject Textobject
		    | Literallayout_Lineannotation Lineannotation
		    deriving (Eq,Show)
data Literallayout_Format = Literallayout_Format_Linespecific
			  deriving (Eq,Show)
data Literallayout_Linenumbering = Literallayout_Linenumbering_Numbered
				    |  Literallayout_Linenumbering_Unnumbered
				 deriving (Eq,Show)
data Literallayout_Class = Literallayout_Class_Monospaced  | 
			   Literallayout_Class_Normal
			 deriving (Eq,Show)
data Literallayout_Revisionflag = Literallayout_Revisionflag_Changed
				   |  Literallayout_Revisionflag_Added  | 
				  Literallayout_Revisionflag_Deleted  | 
				  Literallayout_Revisionflag_Off
				deriving (Eq,Show)
data Screenco = Screenco Screenco_Attrs Areaspec Screen
			 [Calloutlist]
	      deriving (Eq,Show)
data Screenco_Attrs = Screenco_Attrs
    { screencoId :: (Maybe String)
    , screencoLang :: (Maybe String)
    , screencoRemap :: (Maybe String)
    , screencoXreflabel :: (Maybe String)
    , screencoRevisionflag :: (Maybe Screenco_Revisionflag)
    , screencoArch :: (Maybe String)
    , screencoCondition :: (Maybe String)
    , screencoConformance :: (Maybe String)
    , screencoOs :: (Maybe String)
    , screencoRevision :: (Maybe String)
    , screencoSecurity :: (Maybe String)
    , screencoUserlevel :: (Maybe String)
    , screencoVendor :: (Maybe String)
    , screencoRole :: (Maybe String)
    } deriving (Eq,Show)
data Screenco_Revisionflag = Screenco_Revisionflag_Changed  | 
			     Screenco_Revisionflag_Added  |  Screenco_Revisionflag_Deleted  | 
			     Screenco_Revisionflag_Off
			   deriving (Eq,Show)
data Screen = Screen Screen_Attrs [Screen_]
	    deriving (Eq,Show)
data Screen_Attrs = Screen_Attrs
    { screenWidth :: (Maybe String)
    , screenFormat :: (Defaultable Screen_Format)
    , screenLinenumbering :: (Maybe Screen_Linenumbering)
    , screenId :: (Maybe String)
    , screenLang :: (Maybe String)
    , screenRemap :: (Maybe String)
    , screenXreflabel :: (Maybe String)
    , screenRevisionflag :: (Maybe Screen_Revisionflag)
    , screenArch :: (Maybe String)
    , screenCondition :: (Maybe String)
    , screenConformance :: (Maybe String)
    , screenOs :: (Maybe String)
    , screenRevision :: (Maybe String)
    , screenSecurity :: (Maybe String)
    , screenUserlevel :: (Maybe String)
    , screenVendor :: (Maybe String)
    , screenRole :: (Maybe String)
    } deriving (Eq,Show)
data Screen_ = Screen_Str String
	     | Screen_Footnoteref Footnoteref
	     | Screen_Xref Xref
	     | Screen_Abbrev Abbrev
	     | Screen_Acronym Acronym
	     | Screen_Citation Citation
	     | Screen_Citerefentry Citerefentry
	     | Screen_Citetitle Citetitle
	     | Screen_Emphasis Emphasis
	     | Screen_Firstterm Firstterm
	     | Screen_Foreignphrase Foreignphrase
	     | Screen_Glossterm Glossterm
	     | Screen_Footnote Footnote
	     | Screen_Phrase Phrase
	     | Screen_Quote Quote
	     | Screen_Trademark Trademark
	     | Screen_Wordasword Wordasword
	     | Screen_Personname Personname
	     | Screen_Link Link
	     | Screen_Olink Olink
	     | Screen_Ulink Ulink
	     | Screen_Action Action
	     | Screen_Application Application
	     | Screen_Classname Classname
	     | Screen_Methodname Methodname
	     | Screen_Interfacename Interfacename
	     | Screen_Exceptionname Exceptionname
	     | Screen_Ooclass Ooclass
	     | Screen_Oointerface Oointerface
	     | Screen_Ooexception Ooexception
	     | Screen_Command Command
	     | Screen_Computeroutput Computeroutput
	     | Screen_Database Database
	     | Screen_Email Email
	     | Screen_Envar Envar
	     | Screen_Errorcode Errorcode
	     | Screen_Errorname Errorname
	     | Screen_Errortype Errortype
	     | Screen_Errortext Errortext
	     | Screen_Filename Filename
	     | Screen_Function Function
	     | Screen_Guibutton Guibutton
	     | Screen_Guiicon Guiicon
	     | Screen_Guilabel Guilabel
	     | Screen_Guimenu Guimenu
	     | Screen_Guimenuitem Guimenuitem
	     | Screen_Guisubmenu Guisubmenu
	     | Screen_Hardware Hardware
	     | Screen_Interface Interface
	     | Screen_Keycap Keycap
	     | Screen_Keycode Keycode
	     | Screen_Keycombo Keycombo
	     | Screen_Keysym Keysym
	     | Screen_Literal Literal
	     | Screen_Constant Constant
	     | Screen_Markup Markup
	     | Screen_Medialabel Medialabel
	     | Screen_Menuchoice Menuchoice
	     | Screen_Mousebutton Mousebutton
	     | Screen_Option Option
	     | Screen_Optional Optional
	     | Screen_Parameter Parameter
	     | Screen_Prompt Prompt
	     | Screen_Property Property
	     | Screen_Replaceable Replaceable
	     | Screen_Returnvalue Returnvalue
	     | Screen_Sgmltag Sgmltag
	     | Screen_Structfield Structfield
	     | Screen_Structname Structname
	     | Screen_Symbol Symbol
	     | Screen_Systemitem Systemitem
	     | Screen_Token Token
	     | Screen_Type Type
	     | Screen_Userinput Userinput
	     | Screen_Varname Varname
	     | Screen_Anchor Anchor
	     | Screen_Author Author
	     | Screen_Authorinitials Authorinitials
	     | Screen_Corpauthor Corpauthor
	     | Screen_Modespec Modespec
	     | Screen_Othercredit Othercredit
	     | Screen_Productname Productname
	     | Screen_Productnumber Productnumber
	     | Screen_Revhistory Revhistory
	     | Screen_Remark Remark
	     | Screen_Subscript Subscript
	     | Screen_Superscript Superscript
	     | Screen_Inlinegraphic Inlinegraphic
	     | Screen_Inlinemediaobject Inlinemediaobject
	     | Screen_Inlineequation Inlineequation
	     | Screen_Synopsis Synopsis
	     | Screen_Cmdsynopsis Cmdsynopsis
	     | Screen_Funcsynopsis Funcsynopsis
	     | Screen_Classsynopsis Classsynopsis
	     | Screen_Fieldsynopsis Fieldsynopsis
	     | Screen_Constructorsynopsis Constructorsynopsis
	     | Screen_Destructorsynopsis Destructorsynopsis
	     | Screen_Methodsynopsis Methodsynopsis
	     | Screen_Indexterm Indexterm
	     | Screen_Beginpage Beginpage
	     | Screen_Co Co
	     | Screen_Coref Coref
	     | Screen_Textobject Textobject
	     | Screen_Lineannotation Lineannotation
	     deriving (Eq,Show)
data Screen_Format = Screen_Format_Linespecific
		   deriving (Eq,Show)
data Screen_Linenumbering = Screen_Linenumbering_Numbered  | 
			    Screen_Linenumbering_Unnumbered
			  deriving (Eq,Show)
data Screen_Revisionflag = Screen_Revisionflag_Changed  | 
			   Screen_Revisionflag_Added  |  Screen_Revisionflag_Deleted  | 
			   Screen_Revisionflag_Off
			 deriving (Eq,Show)
data Screenshot = Screenshot Screenshot_Attrs (Maybe Screeninfo)
			     (OneOf4 Graphic Graphicco Mediaobject Mediaobjectco)
		deriving (Eq,Show)
data Screenshot_Attrs = Screenshot_Attrs
    { screenshotId :: (Maybe String)
    , screenshotLang :: (Maybe String)
    , screenshotRemap :: (Maybe String)
    , screenshotXreflabel :: (Maybe String)
    , screenshotRevisionflag :: (Maybe Screenshot_Revisionflag)
    , screenshotArch :: (Maybe String)
    , screenshotCondition :: (Maybe String)
    , screenshotConformance :: (Maybe String)
    , screenshotOs :: (Maybe String)
    , screenshotRevision :: (Maybe String)
    , screenshotSecurity :: (Maybe String)
    , screenshotUserlevel :: (Maybe String)
    , screenshotVendor :: (Maybe String)
    , screenshotRole :: (Maybe String)
    } deriving (Eq,Show)
data Screenshot_Revisionflag = Screenshot_Revisionflag_Changed  | 
			       Screenshot_Revisionflag_Added  |  Screenshot_Revisionflag_Deleted
			        |  Screenshot_Revisionflag_Off
			     deriving (Eq,Show)
data Screeninfo = Screeninfo Screeninfo_Attrs [Screeninfo_]
		deriving (Eq,Show)
data Screeninfo_Attrs = Screeninfo_Attrs
    { screeninfoId :: (Maybe String)
    , screeninfoLang :: (Maybe String)
    , screeninfoRemap :: (Maybe String)
    , screeninfoXreflabel :: (Maybe String)
    , screeninfoRevisionflag :: (Maybe Screeninfo_Revisionflag)
    , screeninfoArch :: (Maybe String)
    , screeninfoCondition :: (Maybe String)
    , screeninfoConformance :: (Maybe String)
    , screeninfoOs :: (Maybe String)
    , screeninfoRevision :: (Maybe String)
    , screeninfoSecurity :: (Maybe String)
    , screeninfoUserlevel :: (Maybe String)
    , screeninfoVendor :: (Maybe String)
    , screeninfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Screeninfo_ = Screeninfo_Str String
		 | Screeninfo_Footnoteref Footnoteref
		 | Screeninfo_Xref Xref
		 | Screeninfo_Abbrev Abbrev
		 | Screeninfo_Acronym Acronym
		 | Screeninfo_Citation Citation
		 | Screeninfo_Citerefentry Citerefentry
		 | Screeninfo_Citetitle Citetitle
		 | Screeninfo_Emphasis Emphasis
		 | Screeninfo_Firstterm Firstterm
		 | Screeninfo_Foreignphrase Foreignphrase
		 | Screeninfo_Glossterm Glossterm
		 | Screeninfo_Footnote Footnote
		 | Screeninfo_Phrase Phrase
		 | Screeninfo_Quote Quote
		 | Screeninfo_Trademark Trademark
		 | Screeninfo_Wordasword Wordasword
		 | Screeninfo_Personname Personname
		 | Screeninfo_Link Link
		 | Screeninfo_Olink Olink
		 | Screeninfo_Ulink Ulink
		 | Screeninfo_Action Action
		 | Screeninfo_Application Application
		 | Screeninfo_Classname Classname
		 | Screeninfo_Methodname Methodname
		 | Screeninfo_Interfacename Interfacename
		 | Screeninfo_Exceptionname Exceptionname
		 | Screeninfo_Ooclass Ooclass
		 | Screeninfo_Oointerface Oointerface
		 | Screeninfo_Ooexception Ooexception
		 | Screeninfo_Command Command
		 | Screeninfo_Computeroutput Computeroutput
		 | Screeninfo_Database Database
		 | Screeninfo_Email Email
		 | Screeninfo_Envar Envar
		 | Screeninfo_Errorcode Errorcode
		 | Screeninfo_Errorname Errorname
		 | Screeninfo_Errortype Errortype
		 | Screeninfo_Errortext Errortext
		 | Screeninfo_Filename Filename
		 | Screeninfo_Function Function
		 | Screeninfo_Guibutton Guibutton
		 | Screeninfo_Guiicon Guiicon
		 | Screeninfo_Guilabel Guilabel
		 | Screeninfo_Guimenu Guimenu
		 | Screeninfo_Guimenuitem Guimenuitem
		 | Screeninfo_Guisubmenu Guisubmenu
		 | Screeninfo_Hardware Hardware
		 | Screeninfo_Interface Interface
		 | Screeninfo_Keycap Keycap
		 | Screeninfo_Keycode Keycode
		 | Screeninfo_Keycombo Keycombo
		 | Screeninfo_Keysym Keysym
		 | Screeninfo_Literal Literal
		 | Screeninfo_Constant Constant
		 | Screeninfo_Markup Markup
		 | Screeninfo_Medialabel Medialabel
		 | Screeninfo_Menuchoice Menuchoice
		 | Screeninfo_Mousebutton Mousebutton
		 | Screeninfo_Option Option
		 | Screeninfo_Optional Optional
		 | Screeninfo_Parameter Parameter
		 | Screeninfo_Prompt Prompt
		 | Screeninfo_Property Property
		 | Screeninfo_Replaceable Replaceable
		 | Screeninfo_Returnvalue Returnvalue
		 | Screeninfo_Sgmltag Sgmltag
		 | Screeninfo_Structfield Structfield
		 | Screeninfo_Structname Structname
		 | Screeninfo_Symbol Symbol
		 | Screeninfo_Systemitem Systemitem
		 | Screeninfo_Token Token
		 | Screeninfo_Type Type
		 | Screeninfo_Userinput Userinput
		 | Screeninfo_Varname Varname
		 | Screeninfo_Anchor Anchor
		 | Screeninfo_Author Author
		 | Screeninfo_Authorinitials Authorinitials
		 | Screeninfo_Corpauthor Corpauthor
		 | Screeninfo_Modespec Modespec
		 | Screeninfo_Othercredit Othercredit
		 | Screeninfo_Productname Productname
		 | Screeninfo_Productnumber Productnumber
		 | Screeninfo_Revhistory Revhistory
		 | Screeninfo_Remark Remark
		 | Screeninfo_Subscript Subscript
		 | Screeninfo_Superscript Superscript
		 | Screeninfo_Inlinegraphic Inlinegraphic
		 | Screeninfo_Inlinemediaobject Inlinemediaobject
		 | Screeninfo_Inlineequation Inlineequation
		 | Screeninfo_Synopsis Synopsis
		 | Screeninfo_Cmdsynopsis Cmdsynopsis
		 | Screeninfo_Funcsynopsis Funcsynopsis
		 | Screeninfo_Classsynopsis Classsynopsis
		 | Screeninfo_Fieldsynopsis Fieldsynopsis
		 | Screeninfo_Constructorsynopsis Constructorsynopsis
		 | Screeninfo_Destructorsynopsis Destructorsynopsis
		 | Screeninfo_Methodsynopsis Methodsynopsis
		 | Screeninfo_Indexterm Indexterm
		 | Screeninfo_Beginpage Beginpage
		 deriving (Eq,Show)
data Screeninfo_Revisionflag = Screeninfo_Revisionflag_Changed  | 
			       Screeninfo_Revisionflag_Added  |  Screeninfo_Revisionflag_Deleted
			        |  Screeninfo_Revisionflag_Off
			     deriving (Eq,Show)
data Figure = Figure Figure_Attrs (Maybe Blockinfo) Title
		     (Maybe Titleabbrev)
		     [(OneOf29 Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Indexterm Beginpage Link Olink Ulink)]
	    deriving (Eq,Show)
data Figure_Attrs = Figure_Attrs
    { figureFloat :: (Defaultable String)
    , figurePgwide :: (Maybe String)
    , figureLabel :: (Maybe String)
    , figureId :: (Maybe String)
    , figureLang :: (Maybe String)
    , figureRemap :: (Maybe String)
    , figureXreflabel :: (Maybe String)
    , figureRevisionflag :: (Maybe Figure_Revisionflag)
    , figureArch :: (Maybe String)
    , figureCondition :: (Maybe String)
    , figureConformance :: (Maybe String)
    , figureOs :: (Maybe String)
    , figureRevision :: (Maybe String)
    , figureSecurity :: (Maybe String)
    , figureUserlevel :: (Maybe String)
    , figureVendor :: (Maybe String)
    , figureRole :: (Maybe String)
    } deriving (Eq,Show)
data Figure_Revisionflag = Figure_Revisionflag_Changed  | 
			   Figure_Revisionflag_Added  |  Figure_Revisionflag_Deleted  | 
			   Figure_Revisionflag_Off
			 deriving (Eq,Show)
data Informalfigure = Informalfigure Informalfigure_Attrs
				     (Maybe Blockinfo)
				     [(OneOf29 Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Indexterm Beginpage Link Olink Ulink)]
		    deriving (Eq,Show)
data Informalfigure_Attrs = Informalfigure_Attrs
    { informalfigureFloat :: (Defaultable String)
    , informalfigurePgwide :: (Maybe String)
    , informalfigureLabel :: (Maybe String)
    , informalfigureId :: (Maybe String)
    , informalfigureLang :: (Maybe String)
    , informalfigureRemap :: (Maybe String)
    , informalfigureXreflabel :: (Maybe String)
    , informalfigureRevisionflag :: (Maybe Informalfigure_Revisionflag)
    , informalfigureArch :: (Maybe String)
    , informalfigureCondition :: (Maybe String)
    , informalfigureConformance :: (Maybe String)
    , informalfigureOs :: (Maybe String)
    , informalfigureRevision :: (Maybe String)
    , informalfigureSecurity :: (Maybe String)
    , informalfigureUserlevel :: (Maybe String)
    , informalfigureVendor :: (Maybe String)
    , informalfigureRole :: (Maybe String)
    } deriving (Eq,Show)
data Informalfigure_Revisionflag = Informalfigure_Revisionflag_Changed
				    |  Informalfigure_Revisionflag_Added  | 
				   Informalfigure_Revisionflag_Deleted  | 
				   Informalfigure_Revisionflag_Off
				 deriving (Eq,Show)
data Graphicco = Graphicco Graphicco_Attrs Areaspec Graphic
			   [Calloutlist]
	       deriving (Eq,Show)
data Graphicco_Attrs = Graphicco_Attrs
    { graphiccoId :: (Maybe String)
    , graphiccoLang :: (Maybe String)
    , graphiccoRemap :: (Maybe String)
    , graphiccoXreflabel :: (Maybe String)
    , graphiccoRevisionflag :: (Maybe Graphicco_Revisionflag)
    , graphiccoArch :: (Maybe String)
    , graphiccoCondition :: (Maybe String)
    , graphiccoConformance :: (Maybe String)
    , graphiccoOs :: (Maybe String)
    , graphiccoRevision :: (Maybe String)
    , graphiccoSecurity :: (Maybe String)
    , graphiccoUserlevel :: (Maybe String)
    , graphiccoVendor :: (Maybe String)
    , graphiccoRole :: (Maybe String)
    } deriving (Eq,Show)
data Graphicco_Revisionflag = Graphicco_Revisionflag_Changed  | 
			      Graphicco_Revisionflag_Added  |  Graphicco_Revisionflag_Deleted  | 
			      Graphicco_Revisionflag_Off
			    deriving (Eq,Show)
data Graphic = Graphic
    { graphicEntityref :: (Maybe String)
    , graphicFileref :: (Maybe String)
    , graphicFormat :: (Maybe Graphic_Format)
    , graphicSrccredit :: (Maybe String)
    , graphicWidth :: (Maybe String)
    , graphicContentwidth :: (Maybe String)
    , graphicDepth :: (Maybe String)
    , graphicContentdepth :: (Maybe String)
    , graphicAlign :: (Maybe Graphic_Align)
    , graphicValign :: (Maybe Graphic_Valign)
    , graphicScale :: (Maybe String)
    , graphicScalefit :: (Maybe String)
    , graphicId :: (Maybe String)
    , graphicLang :: (Maybe String)
    , graphicRemap :: (Maybe String)
    , graphicXreflabel :: (Maybe String)
    , graphicRevisionflag :: (Maybe Graphic_Revisionflag)
    , graphicArch :: (Maybe String)
    , graphicCondition :: (Maybe String)
    , graphicConformance :: (Maybe String)
    , graphicOs :: (Maybe String)
    , graphicRevision :: (Maybe String)
    , graphicSecurity :: (Maybe String)
    , graphicUserlevel :: (Maybe String)
    , graphicVendor :: (Maybe String)
    , graphicRole :: (Maybe String)
    } deriving (Eq,Show)
data Graphic_Format = Graphic_Format_BMP  | 
		      Graphic_Format_CGM_CHAR  |  Graphic_Format_CGM_BINARY  | 
		      Graphic_Format_CGM_CLEAR  |  Graphic_Format_DITROFF  | 
		      Graphic_Format_DVI  |  Graphic_Format_EPS  |  Graphic_Format_EQN
		       |  Graphic_Format_FAX  |  Graphic_Format_GIF  | 
		      Graphic_Format_GIF87a  |  Graphic_Format_GIF89a  | 
		      Graphic_Format_JPG  |  Graphic_Format_JPEG  |  Graphic_Format_IGES
		       |  Graphic_Format_PCX  |  Graphic_Format_PIC  | 
		      Graphic_Format_PNG  |  Graphic_Format_PS  |  Graphic_Format_SGML
		       |  Graphic_Format_TBL  |  Graphic_Format_TEX  | 
		      Graphic_Format_TIFF  |  Graphic_Format_WMF  |  Graphic_Format_WPG
		       |  Graphic_Format_SVG  |  Graphic_Format_Linespecific
		    deriving (Eq,Show)
data Graphic_Align = Graphic_Align_Left  |  Graphic_Align_Right  | 
		     Graphic_Align_Center
		   deriving (Eq,Show)
data Graphic_Valign = Graphic_Valign_Top  |  Graphic_Valign_Middle
		       |  Graphic_Valign_Bottom
		    deriving (Eq,Show)
data Graphic_Revisionflag = Graphic_Revisionflag_Changed  | 
			    Graphic_Revisionflag_Added  |  Graphic_Revisionflag_Deleted  | 
			    Graphic_Revisionflag_Off
			  deriving (Eq,Show)
data Inlinegraphic = Inlinegraphic
    { inlinegraphicEntityref :: (Maybe String)
    , inlinegraphicFileref :: (Maybe String)
    , inlinegraphicFormat :: (Maybe Inlinegraphic_Format)
    , inlinegraphicSrccredit :: (Maybe String)
    , inlinegraphicWidth :: (Maybe String)
    , inlinegraphicContentwidth :: (Maybe String)
    , inlinegraphicDepth :: (Maybe String)
    , inlinegraphicContentdepth :: (Maybe String)
    , inlinegraphicAlign :: (Maybe Inlinegraphic_Align)
    , inlinegraphicValign :: (Maybe Inlinegraphic_Valign)
    , inlinegraphicScale :: (Maybe String)
    , inlinegraphicScalefit :: (Maybe String)
    , inlinegraphicId :: (Maybe String)
    , inlinegraphicLang :: (Maybe String)
    , inlinegraphicRemap :: (Maybe String)
    , inlinegraphicXreflabel :: (Maybe String)
    , inlinegraphicRevisionflag :: (Maybe Inlinegraphic_Revisionflag)
    , inlinegraphicArch :: (Maybe String)
    , inlinegraphicCondition :: (Maybe String)
    , inlinegraphicConformance :: (Maybe String)
    , inlinegraphicOs :: (Maybe String)
    , inlinegraphicRevision :: (Maybe String)
    , inlinegraphicSecurity :: (Maybe String)
    , inlinegraphicUserlevel :: (Maybe String)
    , inlinegraphicVendor :: (Maybe String)
    , inlinegraphicRole :: (Maybe String)
    } deriving (Eq,Show)
data Inlinegraphic_Format = Inlinegraphic_Format_BMP  | 
			    Inlinegraphic_Format_CGM_CHAR  |  Inlinegraphic_Format_CGM_BINARY
			     |  Inlinegraphic_Format_CGM_CLEAR  |  Inlinegraphic_Format_DITROFF
			     |  Inlinegraphic_Format_DVI  |  Inlinegraphic_Format_EPS  | 
			    Inlinegraphic_Format_EQN  |  Inlinegraphic_Format_FAX  | 
			    Inlinegraphic_Format_GIF  |  Inlinegraphic_Format_GIF87a  | 
			    Inlinegraphic_Format_GIF89a  |  Inlinegraphic_Format_JPG  | 
			    Inlinegraphic_Format_JPEG  |  Inlinegraphic_Format_IGES  | 
			    Inlinegraphic_Format_PCX  |  Inlinegraphic_Format_PIC  | 
			    Inlinegraphic_Format_PNG  |  Inlinegraphic_Format_PS  | 
			    Inlinegraphic_Format_SGML  |  Inlinegraphic_Format_TBL  | 
			    Inlinegraphic_Format_TEX  |  Inlinegraphic_Format_TIFF  | 
			    Inlinegraphic_Format_WMF  |  Inlinegraphic_Format_WPG  | 
			    Inlinegraphic_Format_SVG  |  Inlinegraphic_Format_Linespecific
			  deriving (Eq,Show)
data Inlinegraphic_Align = Inlinegraphic_Align_Left  | 
			   Inlinegraphic_Align_Right  |  Inlinegraphic_Align_Center
			 deriving (Eq,Show)
data Inlinegraphic_Valign = Inlinegraphic_Valign_Top  | 
			    Inlinegraphic_Valign_Middle  |  Inlinegraphic_Valign_Bottom
			  deriving (Eq,Show)
data Inlinegraphic_Revisionflag = Inlinegraphic_Revisionflag_Changed
				   |  Inlinegraphic_Revisionflag_Added  | 
				  Inlinegraphic_Revisionflag_Deleted  | 
				  Inlinegraphic_Revisionflag_Off
				deriving (Eq,Show)
data Mediaobject = Mediaobject Mediaobject_Attrs (Maybe Objectinfo)
			       [(OneOf4 Videoobject Audioobject Imageobject Textobject)]
			       (Maybe Caption)
		 deriving (Eq,Show)
data Mediaobject_Attrs = Mediaobject_Attrs
    { mediaobjectId :: (Maybe String)
    , mediaobjectLang :: (Maybe String)
    , mediaobjectRemap :: (Maybe String)
    , mediaobjectXreflabel :: (Maybe String)
    , mediaobjectRevisionflag :: (Maybe Mediaobject_Revisionflag)
    , mediaobjectArch :: (Maybe String)
    , mediaobjectCondition :: (Maybe String)
    , mediaobjectConformance :: (Maybe String)
    , mediaobjectOs :: (Maybe String)
    , mediaobjectRevision :: (Maybe String)
    , mediaobjectSecurity :: (Maybe String)
    , mediaobjectUserlevel :: (Maybe String)
    , mediaobjectVendor :: (Maybe String)
    , mediaobjectRole :: (Maybe String)
    } deriving (Eq,Show)
data Mediaobject_Revisionflag = Mediaobject_Revisionflag_Changed
				 |  Mediaobject_Revisionflag_Added  | 
				Mediaobject_Revisionflag_Deleted  |  Mediaobject_Revisionflag_Off
			      deriving (Eq,Show)
data Inlinemediaobject = Inlinemediaobject Inlinemediaobject_Attrs
					   (Maybe Objectinfo)
					   [(OneOf4 Videoobject Audioobject Imageobject Textobject)]
		       deriving (Eq,Show)
data Inlinemediaobject_Attrs = Inlinemediaobject_Attrs
    { inlinemediaobjectId :: (Maybe String)
    , inlinemediaobjectLang :: (Maybe String)
    , inlinemediaobjectRemap :: (Maybe String)
    , inlinemediaobjectXreflabel :: (Maybe String)
    , inlinemediaobjectRevisionflag :: (Maybe Inlinemediaobject_Revisionflag)
    , inlinemediaobjectArch :: (Maybe String)
    , inlinemediaobjectCondition :: (Maybe String)
    , inlinemediaobjectConformance :: (Maybe String)
    , inlinemediaobjectOs :: (Maybe String)
    , inlinemediaobjectRevision :: (Maybe String)
    , inlinemediaobjectSecurity :: (Maybe String)
    , inlinemediaobjectUserlevel :: (Maybe String)
    , inlinemediaobjectVendor :: (Maybe String)
    , inlinemediaobjectRole :: (Maybe String)
    } deriving (Eq,Show)
data Inlinemediaobject_Revisionflag = Inlinemediaobject_Revisionflag_Changed
				       |  Inlinemediaobject_Revisionflag_Added  | 
				      Inlinemediaobject_Revisionflag_Deleted  | 
				      Inlinemediaobject_Revisionflag_Off
				    deriving (Eq,Show)
data Videoobject = Videoobject Videoobject_Attrs (Maybe Objectinfo)
			       Videodata
		 deriving (Eq,Show)
data Videoobject_Attrs = Videoobject_Attrs
    { videoobjectId :: (Maybe String)
    , videoobjectLang :: (Maybe String)
    , videoobjectRemap :: (Maybe String)
    , videoobjectXreflabel :: (Maybe String)
    , videoobjectRevisionflag :: (Maybe Videoobject_Revisionflag)
    , videoobjectArch :: (Maybe String)
    , videoobjectCondition :: (Maybe String)
    , videoobjectConformance :: (Maybe String)
    , videoobjectOs :: (Maybe String)
    , videoobjectRevision :: (Maybe String)
    , videoobjectSecurity :: (Maybe String)
    , videoobjectUserlevel :: (Maybe String)
    , videoobjectVendor :: (Maybe String)
    , videoobjectRole :: (Maybe String)
    } deriving (Eq,Show)
data Videoobject_Revisionflag = Videoobject_Revisionflag_Changed
				 |  Videoobject_Revisionflag_Added  | 
				Videoobject_Revisionflag_Deleted  |  Videoobject_Revisionflag_Off
			      deriving (Eq,Show)
data Audioobject = Audioobject Audioobject_Attrs (Maybe Objectinfo)
			       Audiodata
		 deriving (Eq,Show)
data Audioobject_Attrs = Audioobject_Attrs
    { audioobjectId :: (Maybe String)
    , audioobjectLang :: (Maybe String)
    , audioobjectRemap :: (Maybe String)
    , audioobjectXreflabel :: (Maybe String)
    , audioobjectRevisionflag :: (Maybe Audioobject_Revisionflag)
    , audioobjectArch :: (Maybe String)
    , audioobjectCondition :: (Maybe String)
    , audioobjectConformance :: (Maybe String)
    , audioobjectOs :: (Maybe String)
    , audioobjectRevision :: (Maybe String)
    , audioobjectSecurity :: (Maybe String)
    , audioobjectUserlevel :: (Maybe String)
    , audioobjectVendor :: (Maybe String)
    , audioobjectRole :: (Maybe String)
    } deriving (Eq,Show)
data Audioobject_Revisionflag = Audioobject_Revisionflag_Changed
				 |  Audioobject_Revisionflag_Added  | 
				Audioobject_Revisionflag_Deleted  |  Audioobject_Revisionflag_Off
			      deriving (Eq,Show)
data Imageobject = Imageobject Imageobject_Attrs (Maybe Objectinfo)
			       Imagedata
		 deriving (Eq,Show)
data Imageobject_Attrs = Imageobject_Attrs
    { imageobjectId :: (Maybe String)
    , imageobjectLang :: (Maybe String)
    , imageobjectRemap :: (Maybe String)
    , imageobjectXreflabel :: (Maybe String)
    , imageobjectRevisionflag :: (Maybe Imageobject_Revisionflag)
    , imageobjectArch :: (Maybe String)
    , imageobjectCondition :: (Maybe String)
    , imageobjectConformance :: (Maybe String)
    , imageobjectOs :: (Maybe String)
    , imageobjectRevision :: (Maybe String)
    , imageobjectSecurity :: (Maybe String)
    , imageobjectUserlevel :: (Maybe String)
    , imageobjectVendor :: (Maybe String)
    , imageobjectRole :: (Maybe String)
    } deriving (Eq,Show)
data Imageobject_Revisionflag = Imageobject_Revisionflag_Changed
				 |  Imageobject_Revisionflag_Added  | 
				Imageobject_Revisionflag_Deleted  |  Imageobject_Revisionflag_Off
			      deriving (Eq,Show)
data Textobject = Textobject Textobject_Attrs (Maybe Objectinfo)
			     (OneOf3 Phrase Textdata [(OneOf22 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Formalpara Para Simpara Blockquote)])
		deriving (Eq,Show)
data Textobject_Attrs = Textobject_Attrs
    { textobjectId :: (Maybe String)
    , textobjectLang :: (Maybe String)
    , textobjectRemap :: (Maybe String)
    , textobjectXreflabel :: (Maybe String)
    , textobjectRevisionflag :: (Maybe Textobject_Revisionflag)
    , textobjectArch :: (Maybe String)
    , textobjectCondition :: (Maybe String)
    , textobjectConformance :: (Maybe String)
    , textobjectOs :: (Maybe String)
    , textobjectRevision :: (Maybe String)
    , textobjectSecurity :: (Maybe String)
    , textobjectUserlevel :: (Maybe String)
    , textobjectVendor :: (Maybe String)
    , textobjectRole :: (Maybe String)
    } deriving (Eq,Show)
data Textobject_Revisionflag = Textobject_Revisionflag_Changed  | 
			       Textobject_Revisionflag_Added  |  Textobject_Revisionflag_Deleted
			        |  Textobject_Revisionflag_Off
			     deriving (Eq,Show)
data Objectinfo = Objectinfo Objectinfo_Attrs
			     [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
		deriving (Eq,Show)
data Objectinfo_Attrs = Objectinfo_Attrs
    { objectinfoId :: (Maybe String)
    , objectinfoLang :: (Maybe String)
    , objectinfoRemap :: (Maybe String)
    , objectinfoXreflabel :: (Maybe String)
    , objectinfoRevisionflag :: (Maybe Objectinfo_Revisionflag)
    , objectinfoArch :: (Maybe String)
    , objectinfoCondition :: (Maybe String)
    , objectinfoConformance :: (Maybe String)
    , objectinfoOs :: (Maybe String)
    , objectinfoRevision :: (Maybe String)
    , objectinfoSecurity :: (Maybe String)
    , objectinfoUserlevel :: (Maybe String)
    , objectinfoVendor :: (Maybe String)
    , objectinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Objectinfo_Revisionflag = Objectinfo_Revisionflag_Changed  | 
			       Objectinfo_Revisionflag_Added  |  Objectinfo_Revisionflag_Deleted
			        |  Objectinfo_Revisionflag_Off
			     deriving (Eq,Show)
data Videodata = Videodata
    { videodataWidth :: (Maybe String)
    , videodataContentwidth :: (Maybe String)
    , videodataDepth :: (Maybe String)
    , videodataContentdepth :: (Maybe String)
    , videodataAlign :: (Maybe Videodata_Align)
    , videodataValign :: (Maybe Videodata_Valign)
    , videodataScale :: (Maybe String)
    , videodataScalefit :: (Maybe String)
    , videodataEntityref :: (Maybe String)
    , videodataFileref :: (Maybe String)
    , videodataFormat :: (Maybe Videodata_Format)
    , videodataSrccredit :: (Maybe String)
    , videodataId :: (Maybe String)
    , videodataLang :: (Maybe String)
    , videodataRemap :: (Maybe String)
    , videodataXreflabel :: (Maybe String)
    , videodataRevisionflag :: (Maybe Videodata_Revisionflag)
    , videodataArch :: (Maybe String)
    , videodataCondition :: (Maybe String)
    , videodataConformance :: (Maybe String)
    , videodataOs :: (Maybe String)
    , videodataRevision :: (Maybe String)
    , videodataSecurity :: (Maybe String)
    , videodataUserlevel :: (Maybe String)
    , videodataVendor :: (Maybe String)
    , videodataRole :: (Maybe String)
    } deriving (Eq,Show)
data Videodata_Align = Videodata_Align_Left  | 
		       Videodata_Align_Right  |  Videodata_Align_Center
		     deriving (Eq,Show)
data Videodata_Valign = Videodata_Valign_Top  | 
			Videodata_Valign_Middle  |  Videodata_Valign_Bottom
		      deriving (Eq,Show)
data Videodata_Format = Videodata_Format_BMP  | 
			Videodata_Format_CGM_CHAR  |  Videodata_Format_CGM_BINARY  | 
			Videodata_Format_CGM_CLEAR  |  Videodata_Format_DITROFF  | 
			Videodata_Format_DVI  |  Videodata_Format_EPS  | 
			Videodata_Format_EQN  |  Videodata_Format_FAX  | 
			Videodata_Format_GIF  |  Videodata_Format_GIF87a  | 
			Videodata_Format_GIF89a  |  Videodata_Format_JPG  | 
			Videodata_Format_JPEG  |  Videodata_Format_IGES  | 
			Videodata_Format_PCX  |  Videodata_Format_PIC  | 
			Videodata_Format_PNG  |  Videodata_Format_PS  | 
			Videodata_Format_SGML  |  Videodata_Format_TBL  | 
			Videodata_Format_TEX  |  Videodata_Format_TIFF  | 
			Videodata_Format_WMF  |  Videodata_Format_WPG  | 
			Videodata_Format_SVG  |  Videodata_Format_Linespecific
		      deriving (Eq,Show)
data Videodata_Revisionflag = Videodata_Revisionflag_Changed  | 
			      Videodata_Revisionflag_Added  |  Videodata_Revisionflag_Deleted  | 
			      Videodata_Revisionflag_Off
			    deriving (Eq,Show)
data Audiodata = Audiodata
    { audiodataEntityref :: (Maybe String)
    , audiodataFileref :: (Maybe String)
    , audiodataFormat :: (Maybe Audiodata_Format)
    , audiodataSrccredit :: (Maybe String)
    , audiodataId :: (Maybe String)
    , audiodataLang :: (Maybe String)
    , audiodataRemap :: (Maybe String)
    , audiodataXreflabel :: (Maybe String)
    , audiodataRevisionflag :: (Maybe Audiodata_Revisionflag)
    , audiodataArch :: (Maybe String)
    , audiodataCondition :: (Maybe String)
    , audiodataConformance :: (Maybe String)
    , audiodataOs :: (Maybe String)
    , audiodataRevision :: (Maybe String)
    , audiodataSecurity :: (Maybe String)
    , audiodataUserlevel :: (Maybe String)
    , audiodataVendor :: (Maybe String)
    , audiodataRole :: (Maybe String)
    } deriving (Eq,Show)
data Audiodata_Format = Audiodata_Format_BMP  | 
			Audiodata_Format_CGM_CHAR  |  Audiodata_Format_CGM_BINARY  | 
			Audiodata_Format_CGM_CLEAR  |  Audiodata_Format_DITROFF  | 
			Audiodata_Format_DVI  |  Audiodata_Format_EPS  | 
			Audiodata_Format_EQN  |  Audiodata_Format_FAX  | 
			Audiodata_Format_GIF  |  Audiodata_Format_GIF87a  | 
			Audiodata_Format_GIF89a  |  Audiodata_Format_JPG  | 
			Audiodata_Format_JPEG  |  Audiodata_Format_IGES  | 
			Audiodata_Format_PCX  |  Audiodata_Format_PIC  | 
			Audiodata_Format_PNG  |  Audiodata_Format_PS  | 
			Audiodata_Format_SGML  |  Audiodata_Format_TBL  | 
			Audiodata_Format_TEX  |  Audiodata_Format_TIFF  | 
			Audiodata_Format_WMF  |  Audiodata_Format_WPG  | 
			Audiodata_Format_SVG  |  Audiodata_Format_Linespecific
		      deriving (Eq,Show)
data Audiodata_Revisionflag = Audiodata_Revisionflag_Changed  | 
			      Audiodata_Revisionflag_Added  |  Audiodata_Revisionflag_Deleted  | 
			      Audiodata_Revisionflag_Off
			    deriving (Eq,Show)
data Imagedata = Imagedata
    { imagedataWidth :: (Maybe String)
    , imagedataContentwidth :: (Maybe String)
    , imagedataDepth :: (Maybe String)
    , imagedataContentdepth :: (Maybe String)
    , imagedataAlign :: (Maybe Imagedata_Align)
    , imagedataValign :: (Maybe Imagedata_Valign)
    , imagedataScale :: (Maybe String)
    , imagedataScalefit :: (Maybe String)
    , imagedataEntityref :: (Maybe String)
    , imagedataFileref :: (Maybe String)
    , imagedataFormat :: (Maybe Imagedata_Format)
    , imagedataSrccredit :: (Maybe String)
    , imagedataId :: (Maybe String)
    , imagedataLang :: (Maybe String)
    , imagedataRemap :: (Maybe String)
    , imagedataXreflabel :: (Maybe String)
    , imagedataRevisionflag :: (Maybe Imagedata_Revisionflag)
    , imagedataArch :: (Maybe String)
    , imagedataCondition :: (Maybe String)
    , imagedataConformance :: (Maybe String)
    , imagedataOs :: (Maybe String)
    , imagedataRevision :: (Maybe String)
    , imagedataSecurity :: (Maybe String)
    , imagedataUserlevel :: (Maybe String)
    , imagedataVendor :: (Maybe String)
    , imagedataRole :: (Maybe String)
    } deriving (Eq,Show)
data Imagedata_Align = Imagedata_Align_Left  | 
		       Imagedata_Align_Right  |  Imagedata_Align_Center
		     deriving (Eq,Show)
data Imagedata_Valign = Imagedata_Valign_Top  | 
			Imagedata_Valign_Middle  |  Imagedata_Valign_Bottom
		      deriving (Eq,Show)
data Imagedata_Format = Imagedata_Format_BMP  | 
			Imagedata_Format_CGM_CHAR  |  Imagedata_Format_CGM_BINARY  | 
			Imagedata_Format_CGM_CLEAR  |  Imagedata_Format_DITROFF  | 
			Imagedata_Format_DVI  |  Imagedata_Format_EPS  | 
			Imagedata_Format_EQN  |  Imagedata_Format_FAX  | 
			Imagedata_Format_GIF  |  Imagedata_Format_GIF87a  | 
			Imagedata_Format_GIF89a  |  Imagedata_Format_JPG  | 
			Imagedata_Format_JPEG  |  Imagedata_Format_IGES  | 
			Imagedata_Format_PCX  |  Imagedata_Format_PIC  | 
			Imagedata_Format_PNG  |  Imagedata_Format_PS  | 
			Imagedata_Format_SGML  |  Imagedata_Format_TBL  | 
			Imagedata_Format_TEX  |  Imagedata_Format_TIFF  | 
			Imagedata_Format_WMF  |  Imagedata_Format_WPG  | 
			Imagedata_Format_SVG  |  Imagedata_Format_Linespecific
		      deriving (Eq,Show)
data Imagedata_Revisionflag = Imagedata_Revisionflag_Changed  | 
			      Imagedata_Revisionflag_Added  |  Imagedata_Revisionflag_Deleted  | 
			      Imagedata_Revisionflag_Off
			    deriving (Eq,Show)
data Textdata = Textdata
    { textdataEncoding :: (Maybe String)
    , textdataEntityref :: (Maybe String)
    , textdataFileref :: (Maybe String)
    , textdataFormat :: (Maybe Textdata_Format)
    , textdataSrccredit :: (Maybe String)
    , textdataId :: (Maybe String)
    , textdataLang :: (Maybe String)
    , textdataRemap :: (Maybe String)
    , textdataXreflabel :: (Maybe String)
    , textdataRevisionflag :: (Maybe Textdata_Revisionflag)
    , textdataArch :: (Maybe String)
    , textdataCondition :: (Maybe String)
    , textdataConformance :: (Maybe String)
    , textdataOs :: (Maybe String)
    , textdataRevision :: (Maybe String)
    , textdataSecurity :: (Maybe String)
    , textdataUserlevel :: (Maybe String)
    , textdataVendor :: (Maybe String)
    , textdataRole :: (Maybe String)
    } deriving (Eq,Show)
data Textdata_Format = Textdata_Format_BMP  | 
		       Textdata_Format_CGM_CHAR  |  Textdata_Format_CGM_BINARY  | 
		       Textdata_Format_CGM_CLEAR  |  Textdata_Format_DITROFF  | 
		       Textdata_Format_DVI  |  Textdata_Format_EPS  |  Textdata_Format_EQN
		        |  Textdata_Format_FAX  |  Textdata_Format_GIF  | 
		       Textdata_Format_GIF87a  |  Textdata_Format_GIF89a  | 
		       Textdata_Format_JPG  |  Textdata_Format_JPEG  | 
		       Textdata_Format_IGES  |  Textdata_Format_PCX  | 
		       Textdata_Format_PIC  |  Textdata_Format_PNG  |  Textdata_Format_PS
		        |  Textdata_Format_SGML  |  Textdata_Format_TBL  | 
		       Textdata_Format_TEX  |  Textdata_Format_TIFF  | 
		       Textdata_Format_WMF  |  Textdata_Format_WPG  |  Textdata_Format_SVG
		        |  Textdata_Format_Linespecific
		     deriving (Eq,Show)
data Textdata_Revisionflag = Textdata_Revisionflag_Changed  | 
			     Textdata_Revisionflag_Added  |  Textdata_Revisionflag_Deleted  | 
			     Textdata_Revisionflag_Off
			   deriving (Eq,Show)
data Caption = Caption Caption_Attrs [Caption_]
	     deriving (Eq,Show)
data Caption_Attrs = Caption_Attrs
    { captionId :: (Maybe String)
    , captionLang :: (Maybe String)
    , captionRemap :: (Maybe String)
    , captionXreflabel :: (Maybe String)
    , captionRevisionflag :: (Maybe Caption_Revisionflag)
    , captionArch :: (Maybe String)
    , captionCondition :: (Maybe String)
    , captionConformance :: (Maybe String)
    , captionOs :: (Maybe String)
    , captionRevision :: (Maybe String)
    , captionSecurity :: (Maybe String)
    , captionUserlevel :: (Maybe String)
    , captionVendor :: (Maybe String)
    , captionRole :: (Maybe String)
    } deriving (Eq,Show)
data Caption_ = Caption_Calloutlist Calloutlist
	      | Caption_Glosslist Glosslist
	      | Caption_Itemizedlist Itemizedlist
	      | Caption_Orderedlist Orderedlist
	      | Caption_Segmentedlist Segmentedlist
	      | Caption_Simplelist Simplelist
	      | Caption_Variablelist Variablelist
	      | Caption_Caution Caution
	      | Caption_Important Important
	      | Caption_Note Note
	      | Caption_Tip Tip
	      | Caption_Warning Warning
	      | Caption_Literallayout Literallayout
	      | Caption_Programlisting Programlisting
	      | Caption_Programlistingco Programlistingco
	      | Caption_Screen Screen
	      | Caption_Screenco Screenco
	      | Caption_Screenshot Screenshot
	      | Caption_Formalpara Formalpara
	      | Caption_Para Para
	      | Caption_Simpara Simpara
	      | Caption_Blockquote Blockquote
	      deriving (Eq,Show)
data Caption_Revisionflag = Caption_Revisionflag_Changed  | 
			    Caption_Revisionflag_Added  |  Caption_Revisionflag_Deleted  | 
			    Caption_Revisionflag_Off
			  deriving (Eq,Show)
data Mediaobjectco = Mediaobjectco Mediaobjectco_Attrs
				   (Maybe Objectinfo) Imageobjectco
				   [(OneOf2 Imageobjectco Textobject)]
		   deriving (Eq,Show)
data Mediaobjectco_Attrs = Mediaobjectco_Attrs
    { mediaobjectcoId :: (Maybe String)
    , mediaobjectcoLang :: (Maybe String)
    , mediaobjectcoRemap :: (Maybe String)
    , mediaobjectcoXreflabel :: (Maybe String)
    , mediaobjectcoRevisionflag :: (Maybe Mediaobjectco_Revisionflag)
    , mediaobjectcoArch :: (Maybe String)
    , mediaobjectcoCondition :: (Maybe String)
    , mediaobjectcoConformance :: (Maybe String)
    , mediaobjectcoOs :: (Maybe String)
    , mediaobjectcoRevision :: (Maybe String)
    , mediaobjectcoSecurity :: (Maybe String)
    , mediaobjectcoUserlevel :: (Maybe String)
    , mediaobjectcoVendor :: (Maybe String)
    , mediaobjectcoRole :: (Maybe String)
    } deriving (Eq,Show)
data Mediaobjectco_Revisionflag = Mediaobjectco_Revisionflag_Changed
				   |  Mediaobjectco_Revisionflag_Added  | 
				  Mediaobjectco_Revisionflag_Deleted  | 
				  Mediaobjectco_Revisionflag_Off
				deriving (Eq,Show)
data Imageobjectco = Imageobjectco Imageobjectco_Attrs Areaspec
				   Imageobject [Calloutlist]
		   deriving (Eq,Show)
data Imageobjectco_Attrs = Imageobjectco_Attrs
    { imageobjectcoId :: (Maybe String)
    , imageobjectcoLang :: (Maybe String)
    , imageobjectcoRemap :: (Maybe String)
    , imageobjectcoXreflabel :: (Maybe String)
    , imageobjectcoRevisionflag :: (Maybe Imageobjectco_Revisionflag)
    , imageobjectcoArch :: (Maybe String)
    , imageobjectcoCondition :: (Maybe String)
    , imageobjectcoConformance :: (Maybe String)
    , imageobjectcoOs :: (Maybe String)
    , imageobjectcoRevision :: (Maybe String)
    , imageobjectcoSecurity :: (Maybe String)
    , imageobjectcoUserlevel :: (Maybe String)
    , imageobjectcoVendor :: (Maybe String)
    , imageobjectcoRole :: (Maybe String)
    } deriving (Eq,Show)
data Imageobjectco_Revisionflag = Imageobjectco_Revisionflag_Changed
				   |  Imageobjectco_Revisionflag_Added  | 
				  Imageobjectco_Revisionflag_Deleted  | 
				  Imageobjectco_Revisionflag_Off
				deriving (Eq,Show)
data Equation = Equation Equation_Attrs (Maybe Blockinfo)
			 (Maybe (Title,(Maybe Titleabbrev)))
			 (OneOf3 Informalequation (Maybe Alt) (OneOf2 [Graphic] [Mediaobject]))
	      deriving (Eq,Show)
data Equation_Attrs = Equation_Attrs
    { equationLabel :: (Maybe String)
    , equationId :: (Maybe String)
    , equationLang :: (Maybe String)
    , equationRemap :: (Maybe String)
    , equationXreflabel :: (Maybe String)
    , equationRevisionflag :: (Maybe Equation_Revisionflag)
    , equationArch :: (Maybe String)
    , equationCondition :: (Maybe String)
    , equationConformance :: (Maybe String)
    , equationOs :: (Maybe String)
    , equationRevision :: (Maybe String)
    , equationSecurity :: (Maybe String)
    , equationUserlevel :: (Maybe String)
    , equationVendor :: (Maybe String)
    , equationRole :: (Maybe String)
    } deriving (Eq,Show)
data Equation_Revisionflag = Equation_Revisionflag_Changed  | 
			     Equation_Revisionflag_Added  |  Equation_Revisionflag_Deleted  | 
			     Equation_Revisionflag_Off
			   deriving (Eq,Show)
data Informalequation = Informalequation Informalequation_Attrs
					 (Maybe Blockinfo) (Maybe Alt)
					 (OneOf2 [Graphic] [Mediaobject])
		      deriving (Eq,Show)
data Informalequation_Attrs = Informalequation_Attrs
    { informalequationId :: (Maybe String)
    , informalequationLang :: (Maybe String)
    , informalequationRemap :: (Maybe String)
    , informalequationXreflabel :: (Maybe String)
    , informalequationRevisionflag :: (Maybe Informalequation_Revisionflag)
    , informalequationArch :: (Maybe String)
    , informalequationCondition :: (Maybe String)
    , informalequationConformance :: (Maybe String)
    , informalequationOs :: (Maybe String)
    , informalequationRevision :: (Maybe String)
    , informalequationSecurity :: (Maybe String)
    , informalequationUserlevel :: (Maybe String)
    , informalequationVendor :: (Maybe String)
    , informalequationRole :: (Maybe String)
    } deriving (Eq,Show)
data Informalequation_Revisionflag = Informalequation_Revisionflag_Changed
				      |  Informalequation_Revisionflag_Added  | 
				     Informalequation_Revisionflag_Deleted  | 
				     Informalequation_Revisionflag_Off
				   deriving (Eq,Show)
data Inlineequation = Inlineequation Inlineequation_Attrs
				     (Maybe Alt) (OneOf2 [Graphic] [Inlinemediaobject])
		    deriving (Eq,Show)
data Inlineequation_Attrs = Inlineequation_Attrs
    { inlineequationId :: (Maybe String)
    , inlineequationLang :: (Maybe String)
    , inlineequationRemap :: (Maybe String)
    , inlineequationXreflabel :: (Maybe String)
    , inlineequationRevisionflag :: (Maybe Inlineequation_Revisionflag)
    , inlineequationArch :: (Maybe String)
    , inlineequationCondition :: (Maybe String)
    , inlineequationConformance :: (Maybe String)
    , inlineequationOs :: (Maybe String)
    , inlineequationRevision :: (Maybe String)
    , inlineequationSecurity :: (Maybe String)
    , inlineequationUserlevel :: (Maybe String)
    , inlineequationVendor :: (Maybe String)
    , inlineequationRole :: (Maybe String)
    } deriving (Eq,Show)
data Inlineequation_Revisionflag = Inlineequation_Revisionflag_Changed
				    |  Inlineequation_Revisionflag_Added  | 
				   Inlineequation_Revisionflag_Deleted  | 
				   Inlineequation_Revisionflag_Off
				 deriving (Eq,Show)
data Alt = Alt Alt_Attrs String
	 deriving (Eq,Show)
data Alt_Attrs = Alt_Attrs
    { altId :: (Maybe String)
    , altLang :: (Maybe String)
    , altRemap :: (Maybe String)
    , altXreflabel :: (Maybe String)
    , altRevisionflag :: (Maybe Alt_Revisionflag)
    , altArch :: (Maybe String)
    , altCondition :: (Maybe String)
    , altConformance :: (Maybe String)
    , altOs :: (Maybe String)
    , altRevision :: (Maybe String)
    , altSecurity :: (Maybe String)
    , altUserlevel :: (Maybe String)
    , altVendor :: (Maybe String)
    , altRole :: (Maybe String)
    } deriving (Eq,Show)
data Alt_Revisionflag = Alt_Revisionflag_Changed  | 
			Alt_Revisionflag_Added  |  Alt_Revisionflag_Deleted  | 
			Alt_Revisionflag_Off
		      deriving (Eq,Show)
data Table = Table Table_Attrs (Maybe Title) [Tgroup]
	   deriving (Eq,Show)
data Table_Attrs = Table_Attrs
    { tableFrame :: (Maybe Table_Frame)
    , tableColsep :: (Maybe String)
    , tableRowsep :: (Maybe String)
    , tablePgwide :: (Maybe String)
    } deriving (Eq,Show)
data Table_Frame = Table_Frame_Top  |  Table_Frame_Bottom  | 
		   Table_Frame_Topbot  |  Table_Frame_All  |  Table_Frame_Sides  | 
		   Table_Frame_None
		 deriving (Eq,Show)
data Tgroup = Tgroup Tgroup_Attrs [Colspec] (Maybe Thead) Tbody
	    deriving (Eq,Show)
data Tgroup_Attrs = Tgroup_Attrs
    { tgroupCols :: String
    , tgroupColsep :: (Maybe String)
    , tgroupRowsep :: (Maybe String)
    , tgroupAlign :: (Maybe Tgroup_Align)
    } deriving (Eq,Show)
data Tgroup_Align = Tgroup_Align_Left  |  Tgroup_Align_Right  | 
		    Tgroup_Align_Center  |  Tgroup_Align_Justify  |  Tgroup_Align_Char
		  deriving (Eq,Show)
data Colspec = Colspec
    { colspecColnum :: (Maybe String)
    , colspecColname :: (Maybe String)
    , colspecColwidth :: (Maybe String)
    , colspecColsep :: (Maybe String)
    , colspecRowsep :: (Maybe String)
    , colspecAlign :: (Maybe Colspec_Align)
    , colspecChar :: (Maybe String)
    , colspecCharoff :: (Maybe String)
    } deriving (Eq,Show)
data Colspec_Align = Colspec_Align_Left  |  Colspec_Align_Right  | 
		     Colspec_Align_Center  |  Colspec_Align_Justify  | 
		     Colspec_Align_Char
		   deriving (Eq,Show)
data Thead = Thead Thead_Attrs [Row]
	   deriving (Eq,Show)
data Thead_Attrs = Thead_Attrs
    { theadValign :: (Maybe Thead_Valign)
    } deriving (Eq,Show)
data Thead_Valign = Thead_Valign_Top  |  Thead_Valign_Middle  | 
		    Thead_Valign_Bottom
		  deriving (Eq,Show)
data Tbody = Tbody Tbody_Attrs [Row]
	   deriving (Eq,Show)
data Tbody_Attrs = Tbody_Attrs
    { tbodyValign :: (Maybe Tbody_Valign)
    } deriving (Eq,Show)
data Tbody_Valign = Tbody_Valign_Top  |  Tbody_Valign_Middle  | 
		    Tbody_Valign_Bottom
		  deriving (Eq,Show)
data Row = Row Row_Attrs [Entry]
	 deriving (Eq,Show)
data Row_Attrs = Row_Attrs
    { rowRowsep :: (Maybe String)
    , rowValign :: (Maybe Row_Valign)
    } deriving (Eq,Show)
data Row_Valign = Row_Valign_Top  |  Row_Valign_Middle  | 
		  Row_Valign_Bottom
		deriving (Eq,Show)
data Entry = Entry Entry_Attrs [String]
	   deriving (Eq,Show)
data Entry_Attrs = Entry_Attrs
    { entryColname :: (Maybe String)
    , entryNamest :: (Maybe String)
    , entryNameend :: (Maybe String)
    , entryMorerows :: (Maybe String)
    , entryColsep :: (Maybe String)
    , entryRowsep :: (Maybe String)
    , entryAlign :: (Maybe Entry_Align)
    , entryChar :: (Maybe String)
    , entryCharoff :: (Maybe String)
    , entryValign :: (Maybe Entry_Valign)
    } deriving (Eq,Show)
data Entry_Align = Entry_Align_Left  |  Entry_Align_Right  | 
		   Entry_Align_Center  |  Entry_Align_Justify  |  Entry_Align_Char
		 deriving (Eq,Show)
data Entry_Valign = Entry_Valign_Top  |  Entry_Valign_Middle  | 
		    Entry_Valign_Bottom
		  deriving (Eq,Show)
data Informaltable = Informaltable Informaltable_Attrs
				   (Maybe Blockinfo) [Textobject]
				   (OneOf3 [Graphic] [Mediaobject] [Tgroup])
		   deriving (Eq,Show)
data Informaltable_Attrs = Informaltable_Attrs
    { informaltableFrame :: (Maybe Informaltable_Frame)
    , informaltableColsep :: (Maybe String)
    , informaltableRowsep :: (Maybe String)
    , informaltablePgwide :: (Maybe String)
    } deriving (Eq,Show)
data Informaltable_Frame = Informaltable_Frame_Top  | 
			   Informaltable_Frame_Bottom  |  Informaltable_Frame_Topbot  | 
			   Informaltable_Frame_All  |  Informaltable_Frame_Sides  | 
			   Informaltable_Frame_None
			 deriving (Eq,Show)
data Synopsis = Synopsis Synopsis_Attrs [Synopsis_]
	      deriving (Eq,Show)
data Synopsis_Attrs = Synopsis_Attrs
    { synopsisLabel :: (Maybe String)
    , synopsisFormat :: (Defaultable Synopsis_Format)
    , synopsisLinenumbering :: (Maybe Synopsis_Linenumbering)
    , synopsisId :: (Maybe String)
    , synopsisLang :: (Maybe String)
    , synopsisRemap :: (Maybe String)
    , synopsisXreflabel :: (Maybe String)
    , synopsisRevisionflag :: (Maybe Synopsis_Revisionflag)
    , synopsisArch :: (Maybe String)
    , synopsisCondition :: (Maybe String)
    , synopsisConformance :: (Maybe String)
    , synopsisOs :: (Maybe String)
    , synopsisRevision :: (Maybe String)
    , synopsisSecurity :: (Maybe String)
    , synopsisUserlevel :: (Maybe String)
    , synopsisVendor :: (Maybe String)
    , synopsisRole :: (Maybe String)
    } deriving (Eq,Show)
data Synopsis_ = Synopsis_Str String
	       | Synopsis_Footnoteref Footnoteref
	       | Synopsis_Xref Xref
	       | Synopsis_Abbrev Abbrev
	       | Synopsis_Acronym Acronym
	       | Synopsis_Citation Citation
	       | Synopsis_Citerefentry Citerefentry
	       | Synopsis_Citetitle Citetitle
	       | Synopsis_Emphasis Emphasis
	       | Synopsis_Firstterm Firstterm
	       | Synopsis_Foreignphrase Foreignphrase
	       | Synopsis_Glossterm Glossterm
	       | Synopsis_Footnote Footnote
	       | Synopsis_Phrase Phrase
	       | Synopsis_Quote Quote
	       | Synopsis_Trademark Trademark
	       | Synopsis_Wordasword Wordasword
	       | Synopsis_Personname Personname
	       | Synopsis_Link Link
	       | Synopsis_Olink Olink
	       | Synopsis_Ulink Ulink
	       | Synopsis_Action Action
	       | Synopsis_Application Application
	       | Synopsis_Classname Classname
	       | Synopsis_Methodname Methodname
	       | Synopsis_Interfacename Interfacename
	       | Synopsis_Exceptionname Exceptionname
	       | Synopsis_Ooclass Ooclass
	       | Synopsis_Oointerface Oointerface
	       | Synopsis_Ooexception Ooexception
	       | Synopsis_Command Command
	       | Synopsis_Computeroutput Computeroutput
	       | Synopsis_Database Database
	       | Synopsis_Email Email
	       | Synopsis_Envar Envar
	       | Synopsis_Errorcode Errorcode
	       | Synopsis_Errorname Errorname
	       | Synopsis_Errortype Errortype
	       | Synopsis_Errortext Errortext
	       | Synopsis_Filename Filename
	       | Synopsis_Function Function
	       | Synopsis_Guibutton Guibutton
	       | Synopsis_Guiicon Guiicon
	       | Synopsis_Guilabel Guilabel
	       | Synopsis_Guimenu Guimenu
	       | Synopsis_Guimenuitem Guimenuitem
	       | Synopsis_Guisubmenu Guisubmenu
	       | Synopsis_Hardware Hardware
	       | Synopsis_Interface Interface
	       | Synopsis_Keycap Keycap
	       | Synopsis_Keycode Keycode
	       | Synopsis_Keycombo Keycombo
	       | Synopsis_Keysym Keysym
	       | Synopsis_Literal Literal
	       | Synopsis_Constant Constant
	       | Synopsis_Markup Markup
	       | Synopsis_Medialabel Medialabel
	       | Synopsis_Menuchoice Menuchoice
	       | Synopsis_Mousebutton Mousebutton
	       | Synopsis_Option Option
	       | Synopsis_Optional Optional
	       | Synopsis_Parameter Parameter
	       | Synopsis_Prompt Prompt
	       | Synopsis_Property Property
	       | Synopsis_Replaceable Replaceable
	       | Synopsis_Returnvalue Returnvalue
	       | Synopsis_Sgmltag Sgmltag
	       | Synopsis_Structfield Structfield
	       | Synopsis_Structname Structname
	       | Synopsis_Symbol Symbol
	       | Synopsis_Systemitem Systemitem
	       | Synopsis_Token Token
	       | Synopsis_Type Type
	       | Synopsis_Userinput Userinput
	       | Synopsis_Varname Varname
	       | Synopsis_Anchor Anchor
	       | Synopsis_Author Author
	       | Synopsis_Authorinitials Authorinitials
	       | Synopsis_Corpauthor Corpauthor
	       | Synopsis_Modespec Modespec
	       | Synopsis_Othercredit Othercredit
	       | Synopsis_Productname Productname
	       | Synopsis_Productnumber Productnumber
	       | Synopsis_Revhistory Revhistory
	       | Synopsis_Remark Remark
	       | Synopsis_Subscript Subscript
	       | Synopsis_Superscript Superscript
	       | Synopsis_Inlinegraphic Inlinegraphic
	       | Synopsis_Inlinemediaobject Inlinemediaobject
	       | Synopsis_Inlineequation Inlineequation
	       | Synopsis_Synopsis Synopsis
	       | Synopsis_Cmdsynopsis Cmdsynopsis
	       | Synopsis_Funcsynopsis Funcsynopsis
	       | Synopsis_Classsynopsis Classsynopsis
	       | Synopsis_Fieldsynopsis Fieldsynopsis
	       | Synopsis_Constructorsynopsis Constructorsynopsis
	       | Synopsis_Destructorsynopsis Destructorsynopsis
	       | Synopsis_Methodsynopsis Methodsynopsis
	       | Synopsis_Indexterm Indexterm
	       | Synopsis_Beginpage Beginpage
	       | Synopsis_Graphic Graphic
	       | Synopsis_Mediaobject Mediaobject
	       | Synopsis_Co Co
	       | Synopsis_Coref Coref
	       | Synopsis_Textobject Textobject
	       | Synopsis_Lineannotation Lineannotation
	       deriving (Eq,Show)
data Synopsis_Format = Synopsis_Format_Linespecific
		     deriving (Eq,Show)
data Synopsis_Linenumbering = Synopsis_Linenumbering_Numbered  | 
			      Synopsis_Linenumbering_Unnumbered
			    deriving (Eq,Show)
data Synopsis_Revisionflag = Synopsis_Revisionflag_Changed  | 
			     Synopsis_Revisionflag_Added  |  Synopsis_Revisionflag_Deleted  | 
			     Synopsis_Revisionflag_Off
			   deriving (Eq,Show)
data Cmdsynopsis = Cmdsynopsis Cmdsynopsis_Attrs
			       [(OneOf4 Command Arg Group Sbr)] [Synopfragment]
		 deriving (Eq,Show)
data Cmdsynopsis_Attrs = Cmdsynopsis_Attrs
    { cmdsynopsisLabel :: (Maybe String)
    , cmdsynopsisSepchar :: (Defaultable String)
    , cmdsynopsisCmdlength :: (Maybe String)
    , cmdsynopsisId :: (Maybe String)
    , cmdsynopsisLang :: (Maybe String)
    , cmdsynopsisRemap :: (Maybe String)
    , cmdsynopsisXreflabel :: (Maybe String)
    , cmdsynopsisRevisionflag :: (Maybe Cmdsynopsis_Revisionflag)
    , cmdsynopsisArch :: (Maybe String)
    , cmdsynopsisCondition :: (Maybe String)
    , cmdsynopsisConformance :: (Maybe String)
    , cmdsynopsisOs :: (Maybe String)
    , cmdsynopsisRevision :: (Maybe String)
    , cmdsynopsisSecurity :: (Maybe String)
    , cmdsynopsisUserlevel :: (Maybe String)
    , cmdsynopsisVendor :: (Maybe String)
    , cmdsynopsisRole :: (Maybe String)
    } deriving (Eq,Show)
data Cmdsynopsis_Revisionflag = Cmdsynopsis_Revisionflag_Changed
				 |  Cmdsynopsis_Revisionflag_Added  | 
				Cmdsynopsis_Revisionflag_Deleted  |  Cmdsynopsis_Revisionflag_Off
			      deriving (Eq,Show)
data Arg = Arg Arg_Attrs [Arg_]
	 deriving (Eq,Show)
data Arg_Attrs = Arg_Attrs
    { argChoice :: (Defaultable Arg_Choice)
    , argRep :: (Defaultable Arg_Rep)
    , argId :: (Maybe String)
    , argLang :: (Maybe String)
    , argRemap :: (Maybe String)
    , argXreflabel :: (Maybe String)
    , argRevisionflag :: (Maybe Arg_Revisionflag)
    , argArch :: (Maybe String)
    , argCondition :: (Maybe String)
    , argConformance :: (Maybe String)
    , argOs :: (Maybe String)
    , argRevision :: (Maybe String)
    , argSecurity :: (Maybe String)
    , argUserlevel :: (Maybe String)
    , argVendor :: (Maybe String)
    , argRole :: (Maybe String)
    } deriving (Eq,Show)
data Arg_ = Arg_Str String
	  | Arg_Arg Arg
	  | Arg_Group Group
	  | Arg_Option Option
	  | Arg_Synopfragmentref Synopfragmentref
	  | Arg_Replaceable Replaceable
	  | Arg_Sbr Sbr
	  deriving (Eq,Show)
data Arg_Choice = Arg_Choice_Opt  |  Arg_Choice_Req  | 
		  Arg_Choice_Plain
		deriving (Eq,Show)
data Arg_Rep = Arg_Rep_Norepeat  |  Arg_Rep_Repeat
	     deriving (Eq,Show)
data Arg_Revisionflag = Arg_Revisionflag_Changed  | 
			Arg_Revisionflag_Added  |  Arg_Revisionflag_Deleted  | 
			Arg_Revisionflag_Off
		      deriving (Eq,Show)
data Group = Group Group_Attrs
		   [(OneOf6 Arg Group Option Synopfragmentref Replaceable Sbr)]
	   deriving (Eq,Show)
data Group_Attrs = Group_Attrs
    { groupChoice :: (Defaultable Group_Choice)
    , groupRep :: (Defaultable Group_Rep)
    , groupId :: (Maybe String)
    , groupLang :: (Maybe String)
    , groupRemap :: (Maybe String)
    , groupXreflabel :: (Maybe String)
    , groupRevisionflag :: (Maybe Group_Revisionflag)
    , groupArch :: (Maybe String)
    , groupCondition :: (Maybe String)
    , groupConformance :: (Maybe String)
    , groupOs :: (Maybe String)
    , groupRevision :: (Maybe String)
    , groupSecurity :: (Maybe String)
    , groupUserlevel :: (Maybe String)
    , groupVendor :: (Maybe String)
    , groupRole :: (Maybe String)
    } deriving (Eq,Show)
data Group_Choice = Group_Choice_Opt  |  Group_Choice_Req  | 
		    Group_Choice_Plain
		  deriving (Eq,Show)
data Group_Rep = Group_Rep_Norepeat  |  Group_Rep_Repeat
	       deriving (Eq,Show)
data Group_Revisionflag = Group_Revisionflag_Changed  | 
			  Group_Revisionflag_Added  |  Group_Revisionflag_Deleted  | 
			  Group_Revisionflag_Off
			deriving (Eq,Show)
data Sbr = Sbr
    { sbrId :: (Maybe String)
    , sbrLang :: (Maybe String)
    , sbrRemap :: (Maybe String)
    , sbrXreflabel :: (Maybe String)
    , sbrRevisionflag :: (Maybe Sbr_Revisionflag)
    , sbrArch :: (Maybe String)
    , sbrCondition :: (Maybe String)
    , sbrConformance :: (Maybe String)
    , sbrOs :: (Maybe String)
    , sbrRevision :: (Maybe String)
    , sbrSecurity :: (Maybe String)
    , sbrUserlevel :: (Maybe String)
    , sbrVendor :: (Maybe String)
    , sbrRole :: (Maybe String)
    } deriving (Eq,Show)
data Sbr_Revisionflag = Sbr_Revisionflag_Changed  | 
			Sbr_Revisionflag_Added  |  Sbr_Revisionflag_Deleted  | 
			Sbr_Revisionflag_Off
		      deriving (Eq,Show)
data Synopfragmentref = Synopfragmentref Synopfragmentref_Attrs
					 String
		      deriving (Eq,Show)
data Synopfragmentref_Attrs = Synopfragmentref_Attrs
    { synopfragmentrefLinkend :: String
    , synopfragmentrefId :: (Maybe String)
    , synopfragmentrefLang :: (Maybe String)
    , synopfragmentrefRemap :: (Maybe String)
    , synopfragmentrefXreflabel :: (Maybe String)
    , synopfragmentrefRevisionflag :: (Maybe Synopfragmentref_Revisionflag)
    , synopfragmentrefArch :: (Maybe String)
    , synopfragmentrefCondition :: (Maybe String)
    , synopfragmentrefConformance :: (Maybe String)
    , synopfragmentrefOs :: (Maybe String)
    , synopfragmentrefRevision :: (Maybe String)
    , synopfragmentrefSecurity :: (Maybe String)
    , synopfragmentrefUserlevel :: (Maybe String)
    , synopfragmentrefVendor :: (Maybe String)
    , synopfragmentrefRole :: (Maybe String)
    } deriving (Eq,Show)
data Synopfragmentref_Revisionflag = Synopfragmentref_Revisionflag_Changed
				      |  Synopfragmentref_Revisionflag_Added  | 
				     Synopfragmentref_Revisionflag_Deleted  | 
				     Synopfragmentref_Revisionflag_Off
				   deriving (Eq,Show)
data Synopfragment = Synopfragment Synopfragment_Attrs
				   [(OneOf2 Arg Group)]
		   deriving (Eq,Show)
data Synopfragment_Attrs = Synopfragment_Attrs
    { synopfragmentId :: String
    , synopfragmentLang :: (Maybe String)
    , synopfragmentRemap :: (Maybe String)
    , synopfragmentXreflabel :: (Maybe String)
    , synopfragmentRevisionflag :: (Maybe Synopfragment_Revisionflag)
    , synopfragmentArch :: (Maybe String)
    , synopfragmentCondition :: (Maybe String)
    , synopfragmentConformance :: (Maybe String)
    , synopfragmentOs :: (Maybe String)
    , synopfragmentRevision :: (Maybe String)
    , synopfragmentSecurity :: (Maybe String)
    , synopfragmentUserlevel :: (Maybe String)
    , synopfragmentVendor :: (Maybe String)
    , synopfragmentRole :: (Maybe String)
    } deriving (Eq,Show)
data Synopfragment_Revisionflag = Synopfragment_Revisionflag_Changed
				   |  Synopfragment_Revisionflag_Added  | 
				  Synopfragment_Revisionflag_Deleted  | 
				  Synopfragment_Revisionflag_Off
				deriving (Eq,Show)
data Funcsynopsis = Funcsynopsis Funcsynopsis_Attrs
				 [(OneOf2 Funcsynopsisinfo Funcprototype)]
		  deriving (Eq,Show)
data Funcsynopsis_Attrs = Funcsynopsis_Attrs
    { funcsynopsisLabel :: (Maybe String)
    , funcsynopsisId :: (Maybe String)
    , funcsynopsisLang :: (Maybe String)
    , funcsynopsisRemap :: (Maybe String)
    , funcsynopsisXreflabel :: (Maybe String)
    , funcsynopsisRevisionflag :: (Maybe Funcsynopsis_Revisionflag)
    , funcsynopsisArch :: (Maybe String)
    , funcsynopsisCondition :: (Maybe String)
    , funcsynopsisConformance :: (Maybe String)
    , funcsynopsisOs :: (Maybe String)
    , funcsynopsisRevision :: (Maybe String)
    , funcsynopsisSecurity :: (Maybe String)
    , funcsynopsisUserlevel :: (Maybe String)
    , funcsynopsisVendor :: (Maybe String)
    , funcsynopsisRole :: (Maybe String)
    } deriving (Eq,Show)
data Funcsynopsis_Revisionflag = Funcsynopsis_Revisionflag_Changed
				  |  Funcsynopsis_Revisionflag_Added  | 
				 Funcsynopsis_Revisionflag_Deleted  |  Funcsynopsis_Revisionflag_Off
			       deriving (Eq,Show)
data Funcsynopsisinfo = Funcsynopsisinfo Funcsynopsisinfo_Attrs
					 [Funcsynopsisinfo_]
		      deriving (Eq,Show)
data Funcsynopsisinfo_Attrs = Funcsynopsisinfo_Attrs
    { funcsynopsisinfoFormat :: (Defaultable Funcsynopsisinfo_Format)
    , funcsynopsisinfoLinenumbering :: (Maybe Funcsynopsisinfo_Linenumbering)
    , funcsynopsisinfoId :: (Maybe String)
    , funcsynopsisinfoLang :: (Maybe String)
    , funcsynopsisinfoRemap :: (Maybe String)
    , funcsynopsisinfoXreflabel :: (Maybe String)
    , funcsynopsisinfoRevisionflag :: (Maybe Funcsynopsisinfo_Revisionflag)
    , funcsynopsisinfoArch :: (Maybe String)
    , funcsynopsisinfoCondition :: (Maybe String)
    , funcsynopsisinfoConformance :: (Maybe String)
    , funcsynopsisinfoOs :: (Maybe String)
    , funcsynopsisinfoRevision :: (Maybe String)
    , funcsynopsisinfoSecurity :: (Maybe String)
    , funcsynopsisinfoUserlevel :: (Maybe String)
    , funcsynopsisinfoVendor :: (Maybe String)
    , funcsynopsisinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Funcsynopsisinfo_ = Funcsynopsisinfo_Str String
		       | Funcsynopsisinfo_Link Link
		       | Funcsynopsisinfo_Olink Olink
		       | Funcsynopsisinfo_Ulink Ulink
		       | Funcsynopsisinfo_Action Action
		       | Funcsynopsisinfo_Application Application
		       | Funcsynopsisinfo_Classname Classname
		       | Funcsynopsisinfo_Methodname Methodname
		       | Funcsynopsisinfo_Interfacename Interfacename
		       | Funcsynopsisinfo_Exceptionname Exceptionname
		       | Funcsynopsisinfo_Ooclass Ooclass
		       | Funcsynopsisinfo_Oointerface Oointerface
		       | Funcsynopsisinfo_Ooexception Ooexception
		       | Funcsynopsisinfo_Command Command
		       | Funcsynopsisinfo_Computeroutput Computeroutput
		       | Funcsynopsisinfo_Database Database
		       | Funcsynopsisinfo_Email Email
		       | Funcsynopsisinfo_Envar Envar
		       | Funcsynopsisinfo_Errorcode Errorcode
		       | Funcsynopsisinfo_Errorname Errorname
		       | Funcsynopsisinfo_Errortype Errortype
		       | Funcsynopsisinfo_Errortext Errortext
		       | Funcsynopsisinfo_Filename Filename
		       | Funcsynopsisinfo_Function Function
		       | Funcsynopsisinfo_Guibutton Guibutton
		       | Funcsynopsisinfo_Guiicon Guiicon
		       | Funcsynopsisinfo_Guilabel Guilabel
		       | Funcsynopsisinfo_Guimenu Guimenu
		       | Funcsynopsisinfo_Guimenuitem Guimenuitem
		       | Funcsynopsisinfo_Guisubmenu Guisubmenu
		       | Funcsynopsisinfo_Hardware Hardware
		       | Funcsynopsisinfo_Interface Interface
		       | Funcsynopsisinfo_Keycap Keycap
		       | Funcsynopsisinfo_Keycode Keycode
		       | Funcsynopsisinfo_Keycombo Keycombo
		       | Funcsynopsisinfo_Keysym Keysym
		       | Funcsynopsisinfo_Literal Literal
		       | Funcsynopsisinfo_Constant Constant
		       | Funcsynopsisinfo_Markup Markup
		       | Funcsynopsisinfo_Medialabel Medialabel
		       | Funcsynopsisinfo_Menuchoice Menuchoice
		       | Funcsynopsisinfo_Mousebutton Mousebutton
		       | Funcsynopsisinfo_Option Option
		       | Funcsynopsisinfo_Optional Optional
		       | Funcsynopsisinfo_Parameter Parameter
		       | Funcsynopsisinfo_Prompt Prompt
		       | Funcsynopsisinfo_Property Property
		       | Funcsynopsisinfo_Replaceable Replaceable
		       | Funcsynopsisinfo_Returnvalue Returnvalue
		       | Funcsynopsisinfo_Sgmltag Sgmltag
		       | Funcsynopsisinfo_Structfield Structfield
		       | Funcsynopsisinfo_Structname Structname
		       | Funcsynopsisinfo_Symbol Symbol
		       | Funcsynopsisinfo_Systemitem Systemitem
		       | Funcsynopsisinfo_Token Token
		       | Funcsynopsisinfo_Type Type
		       | Funcsynopsisinfo_Userinput Userinput
		       | Funcsynopsisinfo_Varname Varname
		       | Funcsynopsisinfo_Anchor Anchor
		       | Funcsynopsisinfo_Remark Remark
		       | Funcsynopsisinfo_Subscript Subscript
		       | Funcsynopsisinfo_Superscript Superscript
		       | Funcsynopsisinfo_Inlinegraphic Inlinegraphic
		       | Funcsynopsisinfo_Inlinemediaobject Inlinemediaobject
		       | Funcsynopsisinfo_Indexterm Indexterm
		       | Funcsynopsisinfo_Beginpage Beginpage
		       | Funcsynopsisinfo_Textobject Textobject
		       | Funcsynopsisinfo_Lineannotation Lineannotation
		       deriving (Eq,Show)
data Funcsynopsisinfo_Format = Funcsynopsisinfo_Format_Linespecific
			     deriving (Eq,Show)
data Funcsynopsisinfo_Linenumbering = Funcsynopsisinfo_Linenumbering_Numbered
				       |  Funcsynopsisinfo_Linenumbering_Unnumbered
				    deriving (Eq,Show)
data Funcsynopsisinfo_Revisionflag = Funcsynopsisinfo_Revisionflag_Changed
				      |  Funcsynopsisinfo_Revisionflag_Added  | 
				     Funcsynopsisinfo_Revisionflag_Deleted  | 
				     Funcsynopsisinfo_Revisionflag_Off
				   deriving (Eq,Show)
data Funcprototype = Funcprototype Funcprototype_Attrs Funcdef
				   (OneOf3 Void Varargs [Paramdef])
		   deriving (Eq,Show)
data Funcprototype_Attrs = Funcprototype_Attrs
    { funcprototypeId :: (Maybe String)
    , funcprototypeLang :: (Maybe String)
    , funcprototypeRemap :: (Maybe String)
    , funcprototypeXreflabel :: (Maybe String)
    , funcprototypeRevisionflag :: (Maybe Funcprototype_Revisionflag)
    , funcprototypeArch :: (Maybe String)
    , funcprototypeCondition :: (Maybe String)
    , funcprototypeConformance :: (Maybe String)
    , funcprototypeOs :: (Maybe String)
    , funcprototypeRevision :: (Maybe String)
    , funcprototypeSecurity :: (Maybe String)
    , funcprototypeUserlevel :: (Maybe String)
    , funcprototypeVendor :: (Maybe String)
    , funcprototypeRole :: (Maybe String)
    } deriving (Eq,Show)
data Funcprototype_Revisionflag = Funcprototype_Revisionflag_Changed
				   |  Funcprototype_Revisionflag_Added  | 
				  Funcprototype_Revisionflag_Deleted  | 
				  Funcprototype_Revisionflag_Off
				deriving (Eq,Show)
data Funcdef = Funcdef Funcdef_Attrs [Funcdef_]
	     deriving (Eq,Show)
data Funcdef_Attrs = Funcdef_Attrs
    { funcdefId :: (Maybe String)
    , funcdefLang :: (Maybe String)
    , funcdefRemap :: (Maybe String)
    , funcdefXreflabel :: (Maybe String)
    , funcdefRevisionflag :: (Maybe Funcdef_Revisionflag)
    , funcdefArch :: (Maybe String)
    , funcdefCondition :: (Maybe String)
    , funcdefConformance :: (Maybe String)
    , funcdefOs :: (Maybe String)
    , funcdefRevision :: (Maybe String)
    , funcdefSecurity :: (Maybe String)
    , funcdefUserlevel :: (Maybe String)
    , funcdefVendor :: (Maybe String)
    , funcdefRole :: (Maybe String)
    } deriving (Eq,Show)
data Funcdef_ = Funcdef_Str String
	      | Funcdef_Type Type
	      | Funcdef_Replaceable Replaceable
	      | Funcdef_Function Function
	      deriving (Eq,Show)
data Funcdef_Revisionflag = Funcdef_Revisionflag_Changed  | 
			    Funcdef_Revisionflag_Added  |  Funcdef_Revisionflag_Deleted  | 
			    Funcdef_Revisionflag_Off
			  deriving (Eq,Show)
data Void = Void
    { voidId :: (Maybe String)
    , voidLang :: (Maybe String)
    , voidRemap :: (Maybe String)
    , voidXreflabel :: (Maybe String)
    , voidRevisionflag :: (Maybe Void_Revisionflag)
    , voidArch :: (Maybe String)
    , voidCondition :: (Maybe String)
    , voidConformance :: (Maybe String)
    , voidOs :: (Maybe String)
    , voidRevision :: (Maybe String)
    , voidSecurity :: (Maybe String)
    , voidUserlevel :: (Maybe String)
    , voidVendor :: (Maybe String)
    , voidRole :: (Maybe String)
    } deriving (Eq,Show)
data Void_Revisionflag = Void_Revisionflag_Changed  | 
			 Void_Revisionflag_Added  |  Void_Revisionflag_Deleted  | 
			 Void_Revisionflag_Off
		       deriving (Eq,Show)
data Varargs = Varargs
    { varargsId :: (Maybe String)
    , varargsLang :: (Maybe String)
    , varargsRemap :: (Maybe String)
    , varargsXreflabel :: (Maybe String)
    , varargsRevisionflag :: (Maybe Varargs_Revisionflag)
    , varargsArch :: (Maybe String)
    , varargsCondition :: (Maybe String)
    , varargsConformance :: (Maybe String)
    , varargsOs :: (Maybe String)
    , varargsRevision :: (Maybe String)
    , varargsSecurity :: (Maybe String)
    , varargsUserlevel :: (Maybe String)
    , varargsVendor :: (Maybe String)
    , varargsRole :: (Maybe String)
    } deriving (Eq,Show)
data Varargs_Revisionflag = Varargs_Revisionflag_Changed  | 
			    Varargs_Revisionflag_Added  |  Varargs_Revisionflag_Deleted  | 
			    Varargs_Revisionflag_Off
			  deriving (Eq,Show)
data Paramdef = Paramdef Paramdef_Attrs [Paramdef_]
	      deriving (Eq,Show)
data Paramdef_Attrs = Paramdef_Attrs
    { paramdefId :: (Maybe String)
    , paramdefLang :: (Maybe String)
    , paramdefRemap :: (Maybe String)
    , paramdefXreflabel :: (Maybe String)
    , paramdefRevisionflag :: (Maybe Paramdef_Revisionflag)
    , paramdefArch :: (Maybe String)
    , paramdefCondition :: (Maybe String)
    , paramdefConformance :: (Maybe String)
    , paramdefOs :: (Maybe String)
    , paramdefRevision :: (Maybe String)
    , paramdefSecurity :: (Maybe String)
    , paramdefUserlevel :: (Maybe String)
    , paramdefVendor :: (Maybe String)
    , paramdefRole :: (Maybe String)
    } deriving (Eq,Show)
data Paramdef_ = Paramdef_Str String
	       | Paramdef_Type Type
	       | Paramdef_Replaceable Replaceable
	       | Paramdef_Parameter Parameter
	       | Paramdef_Funcparams Funcparams
	       deriving (Eq,Show)
data Paramdef_Revisionflag = Paramdef_Revisionflag_Changed  | 
			     Paramdef_Revisionflag_Added  |  Paramdef_Revisionflag_Deleted  | 
			     Paramdef_Revisionflag_Off
			   deriving (Eq,Show)
data Funcparams = Funcparams Funcparams_Attrs [Funcparams_]
		deriving (Eq,Show)
data Funcparams_Attrs = Funcparams_Attrs
    { funcparamsId :: (Maybe String)
    , funcparamsLang :: (Maybe String)
    , funcparamsRemap :: (Maybe String)
    , funcparamsXreflabel :: (Maybe String)
    , funcparamsRevisionflag :: (Maybe Funcparams_Revisionflag)
    , funcparamsArch :: (Maybe String)
    , funcparamsCondition :: (Maybe String)
    , funcparamsConformance :: (Maybe String)
    , funcparamsOs :: (Maybe String)
    , funcparamsRevision :: (Maybe String)
    , funcparamsSecurity :: (Maybe String)
    , funcparamsUserlevel :: (Maybe String)
    , funcparamsVendor :: (Maybe String)
    , funcparamsRole :: (Maybe String)
    } deriving (Eq,Show)
data Funcparams_ = Funcparams_Str String
		 | Funcparams_Link Link
		 | Funcparams_Olink Olink
		 | Funcparams_Ulink Ulink
		 | Funcparams_Action Action
		 | Funcparams_Application Application
		 | Funcparams_Classname Classname
		 | Funcparams_Methodname Methodname
		 | Funcparams_Interfacename Interfacename
		 | Funcparams_Exceptionname Exceptionname
		 | Funcparams_Ooclass Ooclass
		 | Funcparams_Oointerface Oointerface
		 | Funcparams_Ooexception Ooexception
		 | Funcparams_Command Command
		 | Funcparams_Computeroutput Computeroutput
		 | Funcparams_Database Database
		 | Funcparams_Email Email
		 | Funcparams_Envar Envar
		 | Funcparams_Errorcode Errorcode
		 | Funcparams_Errorname Errorname
		 | Funcparams_Errortype Errortype
		 | Funcparams_Errortext Errortext
		 | Funcparams_Filename Filename
		 | Funcparams_Function Function
		 | Funcparams_Guibutton Guibutton
		 | Funcparams_Guiicon Guiicon
		 | Funcparams_Guilabel Guilabel
		 | Funcparams_Guimenu Guimenu
		 | Funcparams_Guimenuitem Guimenuitem
		 | Funcparams_Guisubmenu Guisubmenu
		 | Funcparams_Hardware Hardware
		 | Funcparams_Interface Interface
		 | Funcparams_Keycap Keycap
		 | Funcparams_Keycode Keycode
		 | Funcparams_Keycombo Keycombo
		 | Funcparams_Keysym Keysym
		 | Funcparams_Literal Literal
		 | Funcparams_Constant Constant
		 | Funcparams_Markup Markup
		 | Funcparams_Medialabel Medialabel
		 | Funcparams_Menuchoice Menuchoice
		 | Funcparams_Mousebutton Mousebutton
		 | Funcparams_Option Option
		 | Funcparams_Optional Optional
		 | Funcparams_Parameter Parameter
		 | Funcparams_Prompt Prompt
		 | Funcparams_Property Property
		 | Funcparams_Replaceable Replaceable
		 | Funcparams_Returnvalue Returnvalue
		 | Funcparams_Sgmltag Sgmltag
		 | Funcparams_Structfield Structfield
		 | Funcparams_Structname Structname
		 | Funcparams_Symbol Symbol
		 | Funcparams_Systemitem Systemitem
		 | Funcparams_Token Token
		 | Funcparams_Type Type
		 | Funcparams_Userinput Userinput
		 | Funcparams_Varname Varname
		 | Funcparams_Anchor Anchor
		 | Funcparams_Remark Remark
		 | Funcparams_Subscript Subscript
		 | Funcparams_Superscript Superscript
		 | Funcparams_Inlinegraphic Inlinegraphic
		 | Funcparams_Inlinemediaobject Inlinemediaobject
		 | Funcparams_Indexterm Indexterm
		 | Funcparams_Beginpage Beginpage
		 deriving (Eq,Show)
data Funcparams_Revisionflag = Funcparams_Revisionflag_Changed  | 
			       Funcparams_Revisionflag_Added  |  Funcparams_Revisionflag_Deleted
			        |  Funcparams_Revisionflag_Off
			     deriving (Eq,Show)
data Classsynopsis = Classsynopsis Classsynopsis_Attrs
				   [(OneOf3 Ooclass Oointerface Ooexception)]
				   [(OneOf5 Classsynopsisinfo Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis)]
		   deriving (Eq,Show)
data Classsynopsis_Attrs = Classsynopsis_Attrs
    { classsynopsisLanguage :: (Maybe String)
    , classsynopsisClass :: (Defaultable Classsynopsis_Class)
    , classsynopsisId :: (Maybe String)
    , classsynopsisLang :: (Maybe String)
    , classsynopsisRemap :: (Maybe String)
    , classsynopsisXreflabel :: (Maybe String)
    , classsynopsisRevisionflag :: (Maybe Classsynopsis_Revisionflag)
    , classsynopsisArch :: (Maybe String)
    , classsynopsisCondition :: (Maybe String)
    , classsynopsisConformance :: (Maybe String)
    , classsynopsisOs :: (Maybe String)
    , classsynopsisRevision :: (Maybe String)
    , classsynopsisSecurity :: (Maybe String)
    , classsynopsisUserlevel :: (Maybe String)
    , classsynopsisVendor :: (Maybe String)
    , classsynopsisRole :: (Maybe String)
    } deriving (Eq,Show)
data Classsynopsis_Class = Classsynopsis_Class_Class  | 
			   Classsynopsis_Class_Interface
			 deriving (Eq,Show)
data Classsynopsis_Revisionflag = Classsynopsis_Revisionflag_Changed
				   |  Classsynopsis_Revisionflag_Added  | 
				  Classsynopsis_Revisionflag_Deleted  | 
				  Classsynopsis_Revisionflag_Off
				deriving (Eq,Show)
data Classsynopsisinfo = Classsynopsisinfo Classsynopsisinfo_Attrs
					   [Classsynopsisinfo_]
		       deriving (Eq,Show)
data Classsynopsisinfo_Attrs = Classsynopsisinfo_Attrs
    { classsynopsisinfoFormat :: (Defaultable Classsynopsisinfo_Format)
    , classsynopsisinfoLinenumbering :: (Maybe Classsynopsisinfo_Linenumbering)
    , classsynopsisinfoId :: (Maybe String)
    , classsynopsisinfoLang :: (Maybe String)
    , classsynopsisinfoRemap :: (Maybe String)
    , classsynopsisinfoXreflabel :: (Maybe String)
    , classsynopsisinfoRevisionflag :: (Maybe Classsynopsisinfo_Revisionflag)
    , classsynopsisinfoArch :: (Maybe String)
    , classsynopsisinfoCondition :: (Maybe String)
    , classsynopsisinfoConformance :: (Maybe String)
    , classsynopsisinfoOs :: (Maybe String)
    , classsynopsisinfoRevision :: (Maybe String)
    , classsynopsisinfoSecurity :: (Maybe String)
    , classsynopsisinfoUserlevel :: (Maybe String)
    , classsynopsisinfoVendor :: (Maybe String)
    , classsynopsisinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Classsynopsisinfo_ = Classsynopsisinfo_Str String
			| Classsynopsisinfo_Link Link
			| Classsynopsisinfo_Olink Olink
			| Classsynopsisinfo_Ulink Ulink
			| Classsynopsisinfo_Action Action
			| Classsynopsisinfo_Application Application
			| Classsynopsisinfo_Classname Classname
			| Classsynopsisinfo_Methodname Methodname
			| Classsynopsisinfo_Interfacename Interfacename
			| Classsynopsisinfo_Exceptionname Exceptionname
			| Classsynopsisinfo_Ooclass Ooclass
			| Classsynopsisinfo_Oointerface Oointerface
			| Classsynopsisinfo_Ooexception Ooexception
			| Classsynopsisinfo_Command Command
			| Classsynopsisinfo_Computeroutput Computeroutput
			| Classsynopsisinfo_Database Database
			| Classsynopsisinfo_Email Email
			| Classsynopsisinfo_Envar Envar
			| Classsynopsisinfo_Errorcode Errorcode
			| Classsynopsisinfo_Errorname Errorname
			| Classsynopsisinfo_Errortype Errortype
			| Classsynopsisinfo_Errortext Errortext
			| Classsynopsisinfo_Filename Filename
			| Classsynopsisinfo_Function Function
			| Classsynopsisinfo_Guibutton Guibutton
			| Classsynopsisinfo_Guiicon Guiicon
			| Classsynopsisinfo_Guilabel Guilabel
			| Classsynopsisinfo_Guimenu Guimenu
			| Classsynopsisinfo_Guimenuitem Guimenuitem
			| Classsynopsisinfo_Guisubmenu Guisubmenu
			| Classsynopsisinfo_Hardware Hardware
			| Classsynopsisinfo_Interface Interface
			| Classsynopsisinfo_Keycap Keycap
			| Classsynopsisinfo_Keycode Keycode
			| Classsynopsisinfo_Keycombo Keycombo
			| Classsynopsisinfo_Keysym Keysym
			| Classsynopsisinfo_Literal Literal
			| Classsynopsisinfo_Constant Constant
			| Classsynopsisinfo_Markup Markup
			| Classsynopsisinfo_Medialabel Medialabel
			| Classsynopsisinfo_Menuchoice Menuchoice
			| Classsynopsisinfo_Mousebutton Mousebutton
			| Classsynopsisinfo_Option Option
			| Classsynopsisinfo_Optional Optional
			| Classsynopsisinfo_Parameter Parameter
			| Classsynopsisinfo_Prompt Prompt
			| Classsynopsisinfo_Property Property
			| Classsynopsisinfo_Replaceable Replaceable
			| Classsynopsisinfo_Returnvalue Returnvalue
			| Classsynopsisinfo_Sgmltag Sgmltag
			| Classsynopsisinfo_Structfield Structfield
			| Classsynopsisinfo_Structname Structname
			| Classsynopsisinfo_Symbol Symbol
			| Classsynopsisinfo_Systemitem Systemitem
			| Classsynopsisinfo_Token Token
			| Classsynopsisinfo_Type Type
			| Classsynopsisinfo_Userinput Userinput
			| Classsynopsisinfo_Varname Varname
			| Classsynopsisinfo_Anchor Anchor
			| Classsynopsisinfo_Remark Remark
			| Classsynopsisinfo_Subscript Subscript
			| Classsynopsisinfo_Superscript Superscript
			| Classsynopsisinfo_Inlinegraphic Inlinegraphic
			| Classsynopsisinfo_Inlinemediaobject Inlinemediaobject
			| Classsynopsisinfo_Indexterm Indexterm
			| Classsynopsisinfo_Beginpage Beginpage
			| Classsynopsisinfo_Textobject Textobject
			| Classsynopsisinfo_Lineannotation Lineannotation
			deriving (Eq,Show)
data Classsynopsisinfo_Format = Classsynopsisinfo_Format_Linespecific
			      deriving (Eq,Show)
data Classsynopsisinfo_Linenumbering = Classsynopsisinfo_Linenumbering_Numbered
				        |  Classsynopsisinfo_Linenumbering_Unnumbered
				     deriving (Eq,Show)
data Classsynopsisinfo_Revisionflag = Classsynopsisinfo_Revisionflag_Changed
				       |  Classsynopsisinfo_Revisionflag_Added  | 
				      Classsynopsisinfo_Revisionflag_Deleted  | 
				      Classsynopsisinfo_Revisionflag_Off
				    deriving (Eq,Show)
data Ooclass = Ooclass Ooclass_Attrs [Modifier] Classname
	     deriving (Eq,Show)
data Ooclass_Attrs = Ooclass_Attrs
    { ooclassId :: (Maybe String)
    , ooclassLang :: (Maybe String)
    , ooclassRemap :: (Maybe String)
    , ooclassXreflabel :: (Maybe String)
    , ooclassRevisionflag :: (Maybe Ooclass_Revisionflag)
    , ooclassArch :: (Maybe String)
    , ooclassCondition :: (Maybe String)
    , ooclassConformance :: (Maybe String)
    , ooclassOs :: (Maybe String)
    , ooclassRevision :: (Maybe String)
    , ooclassSecurity :: (Maybe String)
    , ooclassUserlevel :: (Maybe String)
    , ooclassVendor :: (Maybe String)
    , ooclassRole :: (Maybe String)
    } deriving (Eq,Show)
data Ooclass_Revisionflag = Ooclass_Revisionflag_Changed  | 
			    Ooclass_Revisionflag_Added  |  Ooclass_Revisionflag_Deleted  | 
			    Ooclass_Revisionflag_Off
			  deriving (Eq,Show)
data Oointerface = Oointerface Oointerface_Attrs [Modifier]
			       Interfacename
		 deriving (Eq,Show)
data Oointerface_Attrs = Oointerface_Attrs
    { oointerfaceId :: (Maybe String)
    , oointerfaceLang :: (Maybe String)
    , oointerfaceRemap :: (Maybe String)
    , oointerfaceXreflabel :: (Maybe String)
    , oointerfaceRevisionflag :: (Maybe Oointerface_Revisionflag)
    , oointerfaceArch :: (Maybe String)
    , oointerfaceCondition :: (Maybe String)
    , oointerfaceConformance :: (Maybe String)
    , oointerfaceOs :: (Maybe String)
    , oointerfaceRevision :: (Maybe String)
    , oointerfaceSecurity :: (Maybe String)
    , oointerfaceUserlevel :: (Maybe String)
    , oointerfaceVendor :: (Maybe String)
    , oointerfaceRole :: (Maybe String)
    } deriving (Eq,Show)
data Oointerface_Revisionflag = Oointerface_Revisionflag_Changed
				 |  Oointerface_Revisionflag_Added  | 
				Oointerface_Revisionflag_Deleted  |  Oointerface_Revisionflag_Off
			      deriving (Eq,Show)
data Ooexception = Ooexception Ooexception_Attrs [Modifier]
			       Exceptionname
		 deriving (Eq,Show)
data Ooexception_Attrs = Ooexception_Attrs
    { ooexceptionId :: (Maybe String)
    , ooexceptionLang :: (Maybe String)
    , ooexceptionRemap :: (Maybe String)
    , ooexceptionXreflabel :: (Maybe String)
    , ooexceptionRevisionflag :: (Maybe Ooexception_Revisionflag)
    , ooexceptionArch :: (Maybe String)
    , ooexceptionCondition :: (Maybe String)
    , ooexceptionConformance :: (Maybe String)
    , ooexceptionOs :: (Maybe String)
    , ooexceptionRevision :: (Maybe String)
    , ooexceptionSecurity :: (Maybe String)
    , ooexceptionUserlevel :: (Maybe String)
    , ooexceptionVendor :: (Maybe String)
    , ooexceptionRole :: (Maybe String)
    } deriving (Eq,Show)
data Ooexception_Revisionflag = Ooexception_Revisionflag_Changed
				 |  Ooexception_Revisionflag_Added  | 
				Ooexception_Revisionflag_Deleted  |  Ooexception_Revisionflag_Off
			      deriving (Eq,Show)
data Modifier = Modifier Modifier_Attrs [Modifier_]
	      deriving (Eq,Show)
data Modifier_Attrs = Modifier_Attrs
    { modifierId :: (Maybe String)
    , modifierLang :: (Maybe String)
    , modifierRemap :: (Maybe String)
    , modifierXreflabel :: (Maybe String)
    , modifierRevisionflag :: (Maybe Modifier_Revisionflag)
    , modifierArch :: (Maybe String)
    , modifierCondition :: (Maybe String)
    , modifierConformance :: (Maybe String)
    , modifierOs :: (Maybe String)
    , modifierRevision :: (Maybe String)
    , modifierSecurity :: (Maybe String)
    , modifierUserlevel :: (Maybe String)
    , modifierVendor :: (Maybe String)
    , modifierRole :: (Maybe String)
    } deriving (Eq,Show)
data Modifier_ = Modifier_Str String
	       | Modifier_Replaceable Replaceable
	       | Modifier_Inlinegraphic Inlinegraphic
	       | Modifier_Inlinemediaobject Inlinemediaobject
	       | Modifier_Indexterm Indexterm
	       | Modifier_Beginpage Beginpage
	       deriving (Eq,Show)
data Modifier_Revisionflag = Modifier_Revisionflag_Changed  | 
			     Modifier_Revisionflag_Added  |  Modifier_Revisionflag_Deleted  | 
			     Modifier_Revisionflag_Off
			   deriving (Eq,Show)
data Interfacename = Interfacename Interfacename_Attrs
				   [Interfacename_]
		   deriving (Eq,Show)
data Interfacename_Attrs = Interfacename_Attrs
    { interfacenameId :: (Maybe String)
    , interfacenameLang :: (Maybe String)
    , interfacenameRemap :: (Maybe String)
    , interfacenameXreflabel :: (Maybe String)
    , interfacenameRevisionflag :: (Maybe Interfacename_Revisionflag)
    , interfacenameArch :: (Maybe String)
    , interfacenameCondition :: (Maybe String)
    , interfacenameConformance :: (Maybe String)
    , interfacenameOs :: (Maybe String)
    , interfacenameRevision :: (Maybe String)
    , interfacenameSecurity :: (Maybe String)
    , interfacenameUserlevel :: (Maybe String)
    , interfacenameVendor :: (Maybe String)
    , interfacenameRole :: (Maybe String)
    } deriving (Eq,Show)
data Interfacename_ = Interfacename_Str String
		    | Interfacename_Link Link
		    | Interfacename_Olink Olink
		    | Interfacename_Ulink Ulink
		    | Interfacename_Action Action
		    | Interfacename_Application Application
		    | Interfacename_Classname Classname
		    | Interfacename_Methodname Methodname
		    | Interfacename_Interfacename Interfacename
		    | Interfacename_Exceptionname Exceptionname
		    | Interfacename_Ooclass Ooclass
		    | Interfacename_Oointerface Oointerface
		    | Interfacename_Ooexception Ooexception
		    | Interfacename_Command Command
		    | Interfacename_Computeroutput Computeroutput
		    | Interfacename_Database Database
		    | Interfacename_Email Email
		    | Interfacename_Envar Envar
		    | Interfacename_Errorcode Errorcode
		    | Interfacename_Errorname Errorname
		    | Interfacename_Errortype Errortype
		    | Interfacename_Errortext Errortext
		    | Interfacename_Filename Filename
		    | Interfacename_Function Function
		    | Interfacename_Guibutton Guibutton
		    | Interfacename_Guiicon Guiicon
		    | Interfacename_Guilabel Guilabel
		    | Interfacename_Guimenu Guimenu
		    | Interfacename_Guimenuitem Guimenuitem
		    | Interfacename_Guisubmenu Guisubmenu
		    | Interfacename_Hardware Hardware
		    | Interfacename_Interface Interface
		    | Interfacename_Keycap Keycap
		    | Interfacename_Keycode Keycode
		    | Interfacename_Keycombo Keycombo
		    | Interfacename_Keysym Keysym
		    | Interfacename_Literal Literal
		    | Interfacename_Constant Constant
		    | Interfacename_Markup Markup
		    | Interfacename_Medialabel Medialabel
		    | Interfacename_Menuchoice Menuchoice
		    | Interfacename_Mousebutton Mousebutton
		    | Interfacename_Option Option
		    | Interfacename_Optional Optional
		    | Interfacename_Parameter Parameter
		    | Interfacename_Prompt Prompt
		    | Interfacename_Property Property
		    | Interfacename_Replaceable Replaceable
		    | Interfacename_Returnvalue Returnvalue
		    | Interfacename_Sgmltag Sgmltag
		    | Interfacename_Structfield Structfield
		    | Interfacename_Structname Structname
		    | Interfacename_Symbol Symbol
		    | Interfacename_Systemitem Systemitem
		    | Interfacename_Token Token
		    | Interfacename_Type Type
		    | Interfacename_Userinput Userinput
		    | Interfacename_Varname Varname
		    | Interfacename_Anchor Anchor
		    | Interfacename_Remark Remark
		    | Interfacename_Subscript Subscript
		    | Interfacename_Superscript Superscript
		    | Interfacename_Inlinegraphic Inlinegraphic
		    | Interfacename_Inlinemediaobject Inlinemediaobject
		    | Interfacename_Indexterm Indexterm
		    | Interfacename_Beginpage Beginpage
		    deriving (Eq,Show)
data Interfacename_Revisionflag = Interfacename_Revisionflag_Changed
				   |  Interfacename_Revisionflag_Added  | 
				  Interfacename_Revisionflag_Deleted  | 
				  Interfacename_Revisionflag_Off
				deriving (Eq,Show)
data Exceptionname = Exceptionname Exceptionname_Attrs
				   [Exceptionname_]
		   deriving (Eq,Show)
data Exceptionname_Attrs = Exceptionname_Attrs
    { exceptionnameId :: (Maybe String)
    , exceptionnameLang :: (Maybe String)
    , exceptionnameRemap :: (Maybe String)
    , exceptionnameXreflabel :: (Maybe String)
    , exceptionnameRevisionflag :: (Maybe Exceptionname_Revisionflag)
    , exceptionnameArch :: (Maybe String)
    , exceptionnameCondition :: (Maybe String)
    , exceptionnameConformance :: (Maybe String)
    , exceptionnameOs :: (Maybe String)
    , exceptionnameRevision :: (Maybe String)
    , exceptionnameSecurity :: (Maybe String)
    , exceptionnameUserlevel :: (Maybe String)
    , exceptionnameVendor :: (Maybe String)
    , exceptionnameRole :: (Maybe String)
    } deriving (Eq,Show)
data Exceptionname_ = Exceptionname_Str String
		    | Exceptionname_Replaceable Replaceable
		    | Exceptionname_Inlinegraphic Inlinegraphic
		    | Exceptionname_Inlinemediaobject Inlinemediaobject
		    | Exceptionname_Indexterm Indexterm
		    | Exceptionname_Beginpage Beginpage
		    deriving (Eq,Show)
data Exceptionname_Revisionflag = Exceptionname_Revisionflag_Changed
				   |  Exceptionname_Revisionflag_Added  | 
				  Exceptionname_Revisionflag_Deleted  | 
				  Exceptionname_Revisionflag_Off
				deriving (Eq,Show)
data Fieldsynopsis = Fieldsynopsis Fieldsynopsis_Attrs [Modifier]
				   (Maybe Type) Varname (Maybe Initializer)
		   deriving (Eq,Show)
data Fieldsynopsis_Attrs = Fieldsynopsis_Attrs
    { fieldsynopsisLanguage :: (Maybe String)
    , fieldsynopsisId :: (Maybe String)
    , fieldsynopsisLang :: (Maybe String)
    , fieldsynopsisRemap :: (Maybe String)
    , fieldsynopsisXreflabel :: (Maybe String)
    , fieldsynopsisRevisionflag :: (Maybe Fieldsynopsis_Revisionflag)
    , fieldsynopsisArch :: (Maybe String)
    , fieldsynopsisCondition :: (Maybe String)
    , fieldsynopsisConformance :: (Maybe String)
    , fieldsynopsisOs :: (Maybe String)
    , fieldsynopsisRevision :: (Maybe String)
    , fieldsynopsisSecurity :: (Maybe String)
    , fieldsynopsisUserlevel :: (Maybe String)
    , fieldsynopsisVendor :: (Maybe String)
    , fieldsynopsisRole :: (Maybe String)
    } deriving (Eq,Show)
data Fieldsynopsis_Revisionflag = Fieldsynopsis_Revisionflag_Changed
				   |  Fieldsynopsis_Revisionflag_Added  | 
				  Fieldsynopsis_Revisionflag_Deleted  | 
				  Fieldsynopsis_Revisionflag_Off
				deriving (Eq,Show)
data Initializer = Initializer Initializer_Attrs [Initializer_]
		 deriving (Eq,Show)
data Initializer_Attrs = Initializer_Attrs
    { initializerId :: (Maybe String)
    , initializerLang :: (Maybe String)
    , initializerRemap :: (Maybe String)
    , initializerXreflabel :: (Maybe String)
    , initializerRevisionflag :: (Maybe Initializer_Revisionflag)
    , initializerArch :: (Maybe String)
    , initializerCondition :: (Maybe String)
    , initializerConformance :: (Maybe String)
    , initializerOs :: (Maybe String)
    , initializerRevision :: (Maybe String)
    , initializerSecurity :: (Maybe String)
    , initializerUserlevel :: (Maybe String)
    , initializerVendor :: (Maybe String)
    , initializerRole :: (Maybe String)
    } deriving (Eq,Show)
data Initializer_ = Initializer_Str String
		  | Initializer_Replaceable Replaceable
		  | Initializer_Inlinegraphic Inlinegraphic
		  | Initializer_Inlinemediaobject Inlinemediaobject
		  | Initializer_Indexterm Indexterm
		  | Initializer_Beginpage Beginpage
		  deriving (Eq,Show)
data Initializer_Revisionflag = Initializer_Revisionflag_Changed
				 |  Initializer_Revisionflag_Added  | 
				Initializer_Revisionflag_Deleted  |  Initializer_Revisionflag_Off
			      deriving (Eq,Show)
data Constructorsynopsis = Constructorsynopsis Constructorsynopsis_Attrs
					       [Modifier] (Maybe Methodname)
					       (OneOf2 [Methodparam] Void) [Exceptionname]
			 deriving (Eq,Show)
data Constructorsynopsis_Attrs = Constructorsynopsis_Attrs
    { constructorsynopsisLanguage :: (Maybe String)
    , constructorsynopsisId :: (Maybe String)
    , constructorsynopsisLang :: (Maybe String)
    , constructorsynopsisRemap :: (Maybe String)
    , constructorsynopsisXreflabel :: (Maybe String)
    , constructorsynopsisRevisionflag :: (Maybe Constructorsynopsis_Revisionflag)
    , constructorsynopsisArch :: (Maybe String)
    , constructorsynopsisCondition :: (Maybe String)
    , constructorsynopsisConformance :: (Maybe String)
    , constructorsynopsisOs :: (Maybe String)
    , constructorsynopsisRevision :: (Maybe String)
    , constructorsynopsisSecurity :: (Maybe String)
    , constructorsynopsisUserlevel :: (Maybe String)
    , constructorsynopsisVendor :: (Maybe String)
    , constructorsynopsisRole :: (Maybe String)
    } deriving (Eq,Show)
data Constructorsynopsis_Revisionflag = Constructorsynopsis_Revisionflag_Changed
					 |  Constructorsynopsis_Revisionflag_Added  | 
					Constructorsynopsis_Revisionflag_Deleted  | 
					Constructorsynopsis_Revisionflag_Off
				      deriving (Eq,Show)
data Destructorsynopsis = Destructorsynopsis Destructorsynopsis_Attrs
					     [Modifier] (Maybe Methodname)
					     (OneOf2 [Methodparam] Void) [Exceptionname]
			deriving (Eq,Show)
data Destructorsynopsis_Attrs = Destructorsynopsis_Attrs
    { destructorsynopsisLanguage :: (Maybe String)
    , destructorsynopsisId :: (Maybe String)
    , destructorsynopsisLang :: (Maybe String)
    , destructorsynopsisRemap :: (Maybe String)
    , destructorsynopsisXreflabel :: (Maybe String)
    , destructorsynopsisRevisionflag :: (Maybe Destructorsynopsis_Revisionflag)
    , destructorsynopsisArch :: (Maybe String)
    , destructorsynopsisCondition :: (Maybe String)
    , destructorsynopsisConformance :: (Maybe String)
    , destructorsynopsisOs :: (Maybe String)
    , destructorsynopsisRevision :: (Maybe String)
    , destructorsynopsisSecurity :: (Maybe String)
    , destructorsynopsisUserlevel :: (Maybe String)
    , destructorsynopsisVendor :: (Maybe String)
    , destructorsynopsisRole :: (Maybe String)
    } deriving (Eq,Show)
data Destructorsynopsis_Revisionflag = Destructorsynopsis_Revisionflag_Changed
				        |  Destructorsynopsis_Revisionflag_Added  | 
				       Destructorsynopsis_Revisionflag_Deleted  | 
				       Destructorsynopsis_Revisionflag_Off
				     deriving (Eq,Show)
data Methodsynopsis = Methodsynopsis Methodsynopsis_Attrs
				     [Modifier] (Maybe (OneOf2 Type Void)) Methodname
				     (OneOf2 [Methodparam] Void) [Exceptionname] [Modifier]
		    deriving (Eq,Show)
data Methodsynopsis_Attrs = Methodsynopsis_Attrs
    { methodsynopsisLanguage :: (Maybe String)
    , methodsynopsisId :: (Maybe String)
    , methodsynopsisLang :: (Maybe String)
    , methodsynopsisRemap :: (Maybe String)
    , methodsynopsisXreflabel :: (Maybe String)
    , methodsynopsisRevisionflag :: (Maybe Methodsynopsis_Revisionflag)
    , methodsynopsisArch :: (Maybe String)
    , methodsynopsisCondition :: (Maybe String)
    , methodsynopsisConformance :: (Maybe String)
    , methodsynopsisOs :: (Maybe String)
    , methodsynopsisRevision :: (Maybe String)
    , methodsynopsisSecurity :: (Maybe String)
    , methodsynopsisUserlevel :: (Maybe String)
    , methodsynopsisVendor :: (Maybe String)
    , methodsynopsisRole :: (Maybe String)
    } deriving (Eq,Show)
data Methodsynopsis_Revisionflag = Methodsynopsis_Revisionflag_Changed
				    |  Methodsynopsis_Revisionflag_Added  | 
				   Methodsynopsis_Revisionflag_Deleted  | 
				   Methodsynopsis_Revisionflag_Off
				 deriving (Eq,Show)
data Methodname = Methodname Methodname_Attrs [Methodname_]
		deriving (Eq,Show)
data Methodname_Attrs = Methodname_Attrs
    { methodnameId :: (Maybe String)
    , methodnameLang :: (Maybe String)
    , methodnameRemap :: (Maybe String)
    , methodnameXreflabel :: (Maybe String)
    , methodnameRevisionflag :: (Maybe Methodname_Revisionflag)
    , methodnameArch :: (Maybe String)
    , methodnameCondition :: (Maybe String)
    , methodnameConformance :: (Maybe String)
    , methodnameOs :: (Maybe String)
    , methodnameRevision :: (Maybe String)
    , methodnameSecurity :: (Maybe String)
    , methodnameUserlevel :: (Maybe String)
    , methodnameVendor :: (Maybe String)
    , methodnameRole :: (Maybe String)
    } deriving (Eq,Show)
data Methodname_ = Methodname_Str String
		 | Methodname_Replaceable Replaceable
		 | Methodname_Inlinegraphic Inlinegraphic
		 | Methodname_Inlinemediaobject Inlinemediaobject
		 | Methodname_Indexterm Indexterm
		 | Methodname_Beginpage Beginpage
		 deriving (Eq,Show)
data Methodname_Revisionflag = Methodname_Revisionflag_Changed  | 
			       Methodname_Revisionflag_Added  |  Methodname_Revisionflag_Deleted
			        |  Methodname_Revisionflag_Off
			     deriving (Eq,Show)
data Methodparam = Methodparam Methodparam_Attrs [Modifier]
			       (Maybe Type) (OneOf3 Parameter (Maybe Initializer) Funcparams)
			       [Modifier]
		 deriving (Eq,Show)
data Methodparam_Attrs = Methodparam_Attrs
    { methodparamChoice :: (Defaultable Methodparam_Choice)
    , methodparamRep :: (Defaultable Methodparam_Rep)
    , methodparamId :: (Maybe String)
    , methodparamLang :: (Maybe String)
    , methodparamRemap :: (Maybe String)
    , methodparamXreflabel :: (Maybe String)
    , methodparamRevisionflag :: (Maybe Methodparam_Revisionflag)
    , methodparamArch :: (Maybe String)
    , methodparamCondition :: (Maybe String)
    , methodparamConformance :: (Maybe String)
    , methodparamOs :: (Maybe String)
    , methodparamRevision :: (Maybe String)
    , methodparamSecurity :: (Maybe String)
    , methodparamUserlevel :: (Maybe String)
    , methodparamVendor :: (Maybe String)
    , methodparamRole :: (Maybe String)
    } deriving (Eq,Show)
data Methodparam_Choice = Methodparam_Choice_Opt  | 
			  Methodparam_Choice_Req  |  Methodparam_Choice_Plain
			deriving (Eq,Show)
data Methodparam_Rep = Methodparam_Rep_Norepeat  | 
		       Methodparam_Rep_Repeat
		     deriving (Eq,Show)
data Methodparam_Revisionflag = Methodparam_Revisionflag_Changed
				 |  Methodparam_Revisionflag_Added  | 
				Methodparam_Revisionflag_Deleted  |  Methodparam_Revisionflag_Off
			      deriving (Eq,Show)
data Ackno = Ackno Ackno_Attrs [Ackno_]
	   deriving (Eq,Show)
data Ackno_Attrs = Ackno_Attrs
    { acknoId :: (Maybe String)
    , acknoLang :: (Maybe String)
    , acknoRemap :: (Maybe String)
    , acknoXreflabel :: (Maybe String)
    , acknoRevisionflag :: (Maybe Ackno_Revisionflag)
    , acknoArch :: (Maybe String)
    , acknoCondition :: (Maybe String)
    , acknoConformance :: (Maybe String)
    , acknoOs :: (Maybe String)
    , acknoRevision :: (Maybe String)
    , acknoSecurity :: (Maybe String)
    , acknoUserlevel :: (Maybe String)
    , acknoVendor :: (Maybe String)
    , acknoRole :: (Maybe String)
    } deriving (Eq,Show)
data Ackno_ = Ackno_Str String
	    | Ackno_Link Link
	    | Ackno_Olink Olink
	    | Ackno_Ulink Ulink
	    | Ackno_Emphasis Emphasis
	    | Ackno_Trademark Trademark
	    | Ackno_Replaceable Replaceable
	    | Ackno_Remark Remark
	    | Ackno_Subscript Subscript
	    | Ackno_Superscript Superscript
	    | Ackno_Inlinegraphic Inlinegraphic
	    | Ackno_Inlinemediaobject Inlinemediaobject
	    | Ackno_Indexterm Indexterm
	    deriving (Eq,Show)
data Ackno_Revisionflag = Ackno_Revisionflag_Changed  | 
			  Ackno_Revisionflag_Added  |  Ackno_Revisionflag_Deleted  | 
			  Ackno_Revisionflag_Off
			deriving (Eq,Show)
data Address = Address Address_Attrs [Address_]
	     deriving (Eq,Show)
data Address_Attrs = Address_Attrs
    { addressFormat :: (Defaultable Address_Format)
    , addressLinenumbering :: (Maybe Address_Linenumbering)
    , addressId :: (Maybe String)
    , addressLang :: (Maybe String)
    , addressRemap :: (Maybe String)
    , addressXreflabel :: (Maybe String)
    , addressRevisionflag :: (Maybe Address_Revisionflag)
    , addressArch :: (Maybe String)
    , addressCondition :: (Maybe String)
    , addressConformance :: (Maybe String)
    , addressOs :: (Maybe String)
    , addressRevision :: (Maybe String)
    , addressSecurity :: (Maybe String)
    , addressUserlevel :: (Maybe String)
    , addressVendor :: (Maybe String)
    , addressRole :: (Maybe String)
    } deriving (Eq,Show)
data Address_ = Address_Str String
	      | Address_Personname Personname
	      | Address_Honorific Honorific
	      | Address_Firstname Firstname
	      | Address_Surname Surname
	      | Address_Lineage Lineage
	      | Address_Othername Othername
	      | Address_Affiliation Affiliation
	      | Address_Authorblurb Authorblurb
	      | Address_Contrib Contrib
	      | Address_Street Street
	      | Address_Pob Pob
	      | Address_Postcode Postcode
	      | Address_City City
	      | Address_State State
	      | Address_Country Country
	      | Address_Phone Phone
	      | Address_Fax Fax
	      | Address_Email Email
	      | Address_Otheraddr Otheraddr
	      deriving (Eq,Show)
data Address_Format = Address_Format_Linespecific
		    deriving (Eq,Show)
data Address_Linenumbering = Address_Linenumbering_Numbered  | 
			     Address_Linenumbering_Unnumbered
			   deriving (Eq,Show)
data Address_Revisionflag = Address_Revisionflag_Changed  | 
			    Address_Revisionflag_Added  |  Address_Revisionflag_Deleted  | 
			    Address_Revisionflag_Off
			  deriving (Eq,Show)
data Street = Street Street_Attrs [Street_]
	    deriving (Eq,Show)
data Street_Attrs = Street_Attrs
    { streetId :: (Maybe String)
    , streetLang :: (Maybe String)
    , streetRemap :: (Maybe String)
    , streetXreflabel :: (Maybe String)
    , streetRevisionflag :: (Maybe Street_Revisionflag)
    , streetArch :: (Maybe String)
    , streetCondition :: (Maybe String)
    , streetConformance :: (Maybe String)
    , streetOs :: (Maybe String)
    , streetRevision :: (Maybe String)
    , streetSecurity :: (Maybe String)
    , streetUserlevel :: (Maybe String)
    , streetVendor :: (Maybe String)
    , streetRole :: (Maybe String)
    } deriving (Eq,Show)
data Street_ = Street_Str String
	     | Street_Link Link
	     | Street_Olink Olink
	     | Street_Ulink Ulink
	     | Street_Emphasis Emphasis
	     | Street_Trademark Trademark
	     | Street_Replaceable Replaceable
	     | Street_Remark Remark
	     | Street_Subscript Subscript
	     | Street_Superscript Superscript
	     | Street_Inlinegraphic Inlinegraphic
	     | Street_Inlinemediaobject Inlinemediaobject
	     | Street_Indexterm Indexterm
	     deriving (Eq,Show)
data Street_Revisionflag = Street_Revisionflag_Changed  | 
			   Street_Revisionflag_Added  |  Street_Revisionflag_Deleted  | 
			   Street_Revisionflag_Off
			 deriving (Eq,Show)
data Pob = Pob Pob_Attrs [Pob_]
	 deriving (Eq,Show)
data Pob_Attrs = Pob_Attrs
    { pobId :: (Maybe String)
    , pobLang :: (Maybe String)
    , pobRemap :: (Maybe String)
    , pobXreflabel :: (Maybe String)
    , pobRevisionflag :: (Maybe Pob_Revisionflag)
    , pobArch :: (Maybe String)
    , pobCondition :: (Maybe String)
    , pobConformance :: (Maybe String)
    , pobOs :: (Maybe String)
    , pobRevision :: (Maybe String)
    , pobSecurity :: (Maybe String)
    , pobUserlevel :: (Maybe String)
    , pobVendor :: (Maybe String)
    , pobRole :: (Maybe String)
    } deriving (Eq,Show)
data Pob_ = Pob_Str String
	  | Pob_Link Link
	  | Pob_Olink Olink
	  | Pob_Ulink Ulink
	  | Pob_Emphasis Emphasis
	  | Pob_Trademark Trademark
	  | Pob_Replaceable Replaceable
	  | Pob_Remark Remark
	  | Pob_Subscript Subscript
	  | Pob_Superscript Superscript
	  | Pob_Inlinegraphic Inlinegraphic
	  | Pob_Inlinemediaobject Inlinemediaobject
	  | Pob_Indexterm Indexterm
	  deriving (Eq,Show)
data Pob_Revisionflag = Pob_Revisionflag_Changed  | 
			Pob_Revisionflag_Added  |  Pob_Revisionflag_Deleted  | 
			Pob_Revisionflag_Off
		      deriving (Eq,Show)
data Postcode = Postcode Postcode_Attrs [Postcode_]
	      deriving (Eq,Show)
data Postcode_Attrs = Postcode_Attrs
    { postcodeId :: (Maybe String)
    , postcodeLang :: (Maybe String)
    , postcodeRemap :: (Maybe String)
    , postcodeXreflabel :: (Maybe String)
    , postcodeRevisionflag :: (Maybe Postcode_Revisionflag)
    , postcodeArch :: (Maybe String)
    , postcodeCondition :: (Maybe String)
    , postcodeConformance :: (Maybe String)
    , postcodeOs :: (Maybe String)
    , postcodeRevision :: (Maybe String)
    , postcodeSecurity :: (Maybe String)
    , postcodeUserlevel :: (Maybe String)
    , postcodeVendor :: (Maybe String)
    , postcodeRole :: (Maybe String)
    } deriving (Eq,Show)
data Postcode_ = Postcode_Str String
	       | Postcode_Link Link
	       | Postcode_Olink Olink
	       | Postcode_Ulink Ulink
	       | Postcode_Emphasis Emphasis
	       | Postcode_Trademark Trademark
	       | Postcode_Replaceable Replaceable
	       | Postcode_Remark Remark
	       | Postcode_Subscript Subscript
	       | Postcode_Superscript Superscript
	       | Postcode_Inlinegraphic Inlinegraphic
	       | Postcode_Inlinemediaobject Inlinemediaobject
	       | Postcode_Indexterm Indexterm
	       deriving (Eq,Show)
data Postcode_Revisionflag = Postcode_Revisionflag_Changed  | 
			     Postcode_Revisionflag_Added  |  Postcode_Revisionflag_Deleted  | 
			     Postcode_Revisionflag_Off
			   deriving (Eq,Show)
data City = City City_Attrs [City_]
	  deriving (Eq,Show)
data City_Attrs = City_Attrs
    { cityId :: (Maybe String)
    , cityLang :: (Maybe String)
    , cityRemap :: (Maybe String)
    , cityXreflabel :: (Maybe String)
    , cityRevisionflag :: (Maybe City_Revisionflag)
    , cityArch :: (Maybe String)
    , cityCondition :: (Maybe String)
    , cityConformance :: (Maybe String)
    , cityOs :: (Maybe String)
    , cityRevision :: (Maybe String)
    , citySecurity :: (Maybe String)
    , cityUserlevel :: (Maybe String)
    , cityVendor :: (Maybe String)
    , cityRole :: (Maybe String)
    } deriving (Eq,Show)
data City_ = City_Str String
	   | City_Link Link
	   | City_Olink Olink
	   | City_Ulink Ulink
	   | City_Emphasis Emphasis
	   | City_Trademark Trademark
	   | City_Replaceable Replaceable
	   | City_Remark Remark
	   | City_Subscript Subscript
	   | City_Superscript Superscript
	   | City_Inlinegraphic Inlinegraphic
	   | City_Inlinemediaobject Inlinemediaobject
	   | City_Indexterm Indexterm
	   deriving (Eq,Show)
data City_Revisionflag = City_Revisionflag_Changed  | 
			 City_Revisionflag_Added  |  City_Revisionflag_Deleted  | 
			 City_Revisionflag_Off
		       deriving (Eq,Show)
data State = State State_Attrs [State_]
	   deriving (Eq,Show)
data State_Attrs = State_Attrs
    { stateId :: (Maybe String)
    , stateLang :: (Maybe String)
    , stateRemap :: (Maybe String)
    , stateXreflabel :: (Maybe String)
    , stateRevisionflag :: (Maybe State_Revisionflag)
    , stateArch :: (Maybe String)
    , stateCondition :: (Maybe String)
    , stateConformance :: (Maybe String)
    , stateOs :: (Maybe String)
    , stateRevision :: (Maybe String)
    , stateSecurity :: (Maybe String)
    , stateUserlevel :: (Maybe String)
    , stateVendor :: (Maybe String)
    , stateRole :: (Maybe String)
    } deriving (Eq,Show)
data State_ = State_Str String
	    | State_Link Link
	    | State_Olink Olink
	    | State_Ulink Ulink
	    | State_Emphasis Emphasis
	    | State_Trademark Trademark
	    | State_Replaceable Replaceable
	    | State_Remark Remark
	    | State_Subscript Subscript
	    | State_Superscript Superscript
	    | State_Inlinegraphic Inlinegraphic
	    | State_Inlinemediaobject Inlinemediaobject
	    | State_Indexterm Indexterm
	    deriving (Eq,Show)
data State_Revisionflag = State_Revisionflag_Changed  | 
			  State_Revisionflag_Added  |  State_Revisionflag_Deleted  | 
			  State_Revisionflag_Off
			deriving (Eq,Show)
data Country = Country Country_Attrs [Country_]
	     deriving (Eq,Show)
data Country_Attrs = Country_Attrs
    { countryId :: (Maybe String)
    , countryLang :: (Maybe String)
    , countryRemap :: (Maybe String)
    , countryXreflabel :: (Maybe String)
    , countryRevisionflag :: (Maybe Country_Revisionflag)
    , countryArch :: (Maybe String)
    , countryCondition :: (Maybe String)
    , countryConformance :: (Maybe String)
    , countryOs :: (Maybe String)
    , countryRevision :: (Maybe String)
    , countrySecurity :: (Maybe String)
    , countryUserlevel :: (Maybe String)
    , countryVendor :: (Maybe String)
    , countryRole :: (Maybe String)
    } deriving (Eq,Show)
data Country_ = Country_Str String
	      | Country_Link Link
	      | Country_Olink Olink
	      | Country_Ulink Ulink
	      | Country_Emphasis Emphasis
	      | Country_Trademark Trademark
	      | Country_Replaceable Replaceable
	      | Country_Remark Remark
	      | Country_Subscript Subscript
	      | Country_Superscript Superscript
	      | Country_Inlinegraphic Inlinegraphic
	      | Country_Inlinemediaobject Inlinemediaobject
	      | Country_Indexterm Indexterm
	      deriving (Eq,Show)
data Country_Revisionflag = Country_Revisionflag_Changed  | 
			    Country_Revisionflag_Added  |  Country_Revisionflag_Deleted  | 
			    Country_Revisionflag_Off
			  deriving (Eq,Show)
data Phone = Phone Phone_Attrs [Phone_]
	   deriving (Eq,Show)
data Phone_Attrs = Phone_Attrs
    { phoneId :: (Maybe String)
    , phoneLang :: (Maybe String)
    , phoneRemap :: (Maybe String)
    , phoneXreflabel :: (Maybe String)
    , phoneRevisionflag :: (Maybe Phone_Revisionflag)
    , phoneArch :: (Maybe String)
    , phoneCondition :: (Maybe String)
    , phoneConformance :: (Maybe String)
    , phoneOs :: (Maybe String)
    , phoneRevision :: (Maybe String)
    , phoneSecurity :: (Maybe String)
    , phoneUserlevel :: (Maybe String)
    , phoneVendor :: (Maybe String)
    , phoneRole :: (Maybe String)
    } deriving (Eq,Show)
data Phone_ = Phone_Str String
	    | Phone_Link Link
	    | Phone_Olink Olink
	    | Phone_Ulink Ulink
	    | Phone_Emphasis Emphasis
	    | Phone_Trademark Trademark
	    | Phone_Replaceable Replaceable
	    | Phone_Remark Remark
	    | Phone_Subscript Subscript
	    | Phone_Superscript Superscript
	    | Phone_Inlinegraphic Inlinegraphic
	    | Phone_Inlinemediaobject Inlinemediaobject
	    | Phone_Indexterm Indexterm
	    deriving (Eq,Show)
data Phone_Revisionflag = Phone_Revisionflag_Changed  | 
			  Phone_Revisionflag_Added  |  Phone_Revisionflag_Deleted  | 
			  Phone_Revisionflag_Off
			deriving (Eq,Show)
data Fax = Fax Fax_Attrs [Fax_]
	 deriving (Eq,Show)
data Fax_Attrs = Fax_Attrs
    { faxId :: (Maybe String)
    , faxLang :: (Maybe String)
    , faxRemap :: (Maybe String)
    , faxXreflabel :: (Maybe String)
    , faxRevisionflag :: (Maybe Fax_Revisionflag)
    , faxArch :: (Maybe String)
    , faxCondition :: (Maybe String)
    , faxConformance :: (Maybe String)
    , faxOs :: (Maybe String)
    , faxRevision :: (Maybe String)
    , faxSecurity :: (Maybe String)
    , faxUserlevel :: (Maybe String)
    , faxVendor :: (Maybe String)
    , faxRole :: (Maybe String)
    } deriving (Eq,Show)
data Fax_ = Fax_Str String
	  | Fax_Link Link
	  | Fax_Olink Olink
	  | Fax_Ulink Ulink
	  | Fax_Emphasis Emphasis
	  | Fax_Trademark Trademark
	  | Fax_Replaceable Replaceable
	  | Fax_Remark Remark
	  | Fax_Subscript Subscript
	  | Fax_Superscript Superscript
	  | Fax_Inlinegraphic Inlinegraphic
	  | Fax_Inlinemediaobject Inlinemediaobject
	  | Fax_Indexterm Indexterm
	  deriving (Eq,Show)
data Fax_Revisionflag = Fax_Revisionflag_Changed  | 
			Fax_Revisionflag_Added  |  Fax_Revisionflag_Deleted  | 
			Fax_Revisionflag_Off
		      deriving (Eq,Show)
data Otheraddr = Otheraddr Otheraddr_Attrs [Otheraddr_]
	       deriving (Eq,Show)
data Otheraddr_Attrs = Otheraddr_Attrs
    { otheraddrId :: (Maybe String)
    , otheraddrLang :: (Maybe String)
    , otheraddrRemap :: (Maybe String)
    , otheraddrXreflabel :: (Maybe String)
    , otheraddrRevisionflag :: (Maybe Otheraddr_Revisionflag)
    , otheraddrArch :: (Maybe String)
    , otheraddrCondition :: (Maybe String)
    , otheraddrConformance :: (Maybe String)
    , otheraddrOs :: (Maybe String)
    , otheraddrRevision :: (Maybe String)
    , otheraddrSecurity :: (Maybe String)
    , otheraddrUserlevel :: (Maybe String)
    , otheraddrVendor :: (Maybe String)
    , otheraddrRole :: (Maybe String)
    } deriving (Eq,Show)
data Otheraddr_ = Otheraddr_Str String
		| Otheraddr_Link Link
		| Otheraddr_Olink Olink
		| Otheraddr_Ulink Ulink
		| Otheraddr_Emphasis Emphasis
		| Otheraddr_Trademark Trademark
		| Otheraddr_Replaceable Replaceable
		| Otheraddr_Remark Remark
		| Otheraddr_Subscript Subscript
		| Otheraddr_Superscript Superscript
		| Otheraddr_Inlinegraphic Inlinegraphic
		| Otheraddr_Inlinemediaobject Inlinemediaobject
		| Otheraddr_Indexterm Indexterm
		deriving (Eq,Show)
data Otheraddr_Revisionflag = Otheraddr_Revisionflag_Changed  | 
			      Otheraddr_Revisionflag_Added  |  Otheraddr_Revisionflag_Deleted  | 
			      Otheraddr_Revisionflag_Off
			    deriving (Eq,Show)
data Affiliation = Affiliation Affiliation_Attrs (Maybe Shortaffil)
			       [Jobtitle] (Maybe Orgname) [Orgdiv] [Address]
		 deriving (Eq,Show)
data Affiliation_Attrs = Affiliation_Attrs
    { affiliationId :: (Maybe String)
    , affiliationLang :: (Maybe String)
    , affiliationRemap :: (Maybe String)
    , affiliationXreflabel :: (Maybe String)
    , affiliationRevisionflag :: (Maybe Affiliation_Revisionflag)
    , affiliationArch :: (Maybe String)
    , affiliationCondition :: (Maybe String)
    , affiliationConformance :: (Maybe String)
    , affiliationOs :: (Maybe String)
    , affiliationRevision :: (Maybe String)
    , affiliationSecurity :: (Maybe String)
    , affiliationUserlevel :: (Maybe String)
    , affiliationVendor :: (Maybe String)
    , affiliationRole :: (Maybe String)
    } deriving (Eq,Show)
data Affiliation_Revisionflag = Affiliation_Revisionflag_Changed
				 |  Affiliation_Revisionflag_Added  | 
				Affiliation_Revisionflag_Deleted  |  Affiliation_Revisionflag_Off
			      deriving (Eq,Show)
data Shortaffil = Shortaffil Shortaffil_Attrs [Shortaffil_]
		deriving (Eq,Show)
data Shortaffil_Attrs = Shortaffil_Attrs
    { shortaffilId :: (Maybe String)
    , shortaffilLang :: (Maybe String)
    , shortaffilRemap :: (Maybe String)
    , shortaffilXreflabel :: (Maybe String)
    , shortaffilRevisionflag :: (Maybe Shortaffil_Revisionflag)
    , shortaffilArch :: (Maybe String)
    , shortaffilCondition :: (Maybe String)
    , shortaffilConformance :: (Maybe String)
    , shortaffilOs :: (Maybe String)
    , shortaffilRevision :: (Maybe String)
    , shortaffilSecurity :: (Maybe String)
    , shortaffilUserlevel :: (Maybe String)
    , shortaffilVendor :: (Maybe String)
    , shortaffilRole :: (Maybe String)
    } deriving (Eq,Show)
data Shortaffil_ = Shortaffil_Str String
		 | Shortaffil_Link Link
		 | Shortaffil_Olink Olink
		 | Shortaffil_Ulink Ulink
		 | Shortaffil_Emphasis Emphasis
		 | Shortaffil_Trademark Trademark
		 | Shortaffil_Replaceable Replaceable
		 | Shortaffil_Remark Remark
		 | Shortaffil_Subscript Subscript
		 | Shortaffil_Superscript Superscript
		 | Shortaffil_Inlinegraphic Inlinegraphic
		 | Shortaffil_Inlinemediaobject Inlinemediaobject
		 | Shortaffil_Indexterm Indexterm
		 deriving (Eq,Show)
data Shortaffil_Revisionflag = Shortaffil_Revisionflag_Changed  | 
			       Shortaffil_Revisionflag_Added  |  Shortaffil_Revisionflag_Deleted
			        |  Shortaffil_Revisionflag_Off
			     deriving (Eq,Show)
data Jobtitle = Jobtitle Jobtitle_Attrs [Jobtitle_]
	      deriving (Eq,Show)
data Jobtitle_Attrs = Jobtitle_Attrs
    { jobtitleId :: (Maybe String)
    , jobtitleLang :: (Maybe String)
    , jobtitleRemap :: (Maybe String)
    , jobtitleXreflabel :: (Maybe String)
    , jobtitleRevisionflag :: (Maybe Jobtitle_Revisionflag)
    , jobtitleArch :: (Maybe String)
    , jobtitleCondition :: (Maybe String)
    , jobtitleConformance :: (Maybe String)
    , jobtitleOs :: (Maybe String)
    , jobtitleRevision :: (Maybe String)
    , jobtitleSecurity :: (Maybe String)
    , jobtitleUserlevel :: (Maybe String)
    , jobtitleVendor :: (Maybe String)
    , jobtitleRole :: (Maybe String)
    } deriving (Eq,Show)
data Jobtitle_ = Jobtitle_Str String
	       | Jobtitle_Link Link
	       | Jobtitle_Olink Olink
	       | Jobtitle_Ulink Ulink
	       | Jobtitle_Emphasis Emphasis
	       | Jobtitle_Trademark Trademark
	       | Jobtitle_Replaceable Replaceable
	       | Jobtitle_Remark Remark
	       | Jobtitle_Subscript Subscript
	       | Jobtitle_Superscript Superscript
	       | Jobtitle_Inlinegraphic Inlinegraphic
	       | Jobtitle_Inlinemediaobject Inlinemediaobject
	       | Jobtitle_Indexterm Indexterm
	       deriving (Eq,Show)
data Jobtitle_Revisionflag = Jobtitle_Revisionflag_Changed  | 
			     Jobtitle_Revisionflag_Added  |  Jobtitle_Revisionflag_Deleted  | 
			     Jobtitle_Revisionflag_Off
			   deriving (Eq,Show)
data Orgdiv = Orgdiv Orgdiv_Attrs [Orgdiv_]
	    deriving (Eq,Show)
data Orgdiv_Attrs = Orgdiv_Attrs
    { orgdivId :: (Maybe String)
    , orgdivLang :: (Maybe String)
    , orgdivRemap :: (Maybe String)
    , orgdivXreflabel :: (Maybe String)
    , orgdivRevisionflag :: (Maybe Orgdiv_Revisionflag)
    , orgdivArch :: (Maybe String)
    , orgdivCondition :: (Maybe String)
    , orgdivConformance :: (Maybe String)
    , orgdivOs :: (Maybe String)
    , orgdivRevision :: (Maybe String)
    , orgdivSecurity :: (Maybe String)
    , orgdivUserlevel :: (Maybe String)
    , orgdivVendor :: (Maybe String)
    , orgdivRole :: (Maybe String)
    } deriving (Eq,Show)
data Orgdiv_ = Orgdiv_Str String
	     | Orgdiv_Link Link
	     | Orgdiv_Olink Olink
	     | Orgdiv_Ulink Ulink
	     | Orgdiv_Emphasis Emphasis
	     | Orgdiv_Trademark Trademark
	     | Orgdiv_Replaceable Replaceable
	     | Orgdiv_Remark Remark
	     | Orgdiv_Subscript Subscript
	     | Orgdiv_Superscript Superscript
	     | Orgdiv_Inlinegraphic Inlinegraphic
	     | Orgdiv_Inlinemediaobject Inlinemediaobject
	     | Orgdiv_Indexterm Indexterm
	     deriving (Eq,Show)
data Orgdiv_Revisionflag = Orgdiv_Revisionflag_Changed  | 
			   Orgdiv_Revisionflag_Added  |  Orgdiv_Revisionflag_Deleted  | 
			   Orgdiv_Revisionflag_Off
			 deriving (Eq,Show)
data Artpagenums = Artpagenums Artpagenums_Attrs [Artpagenums_]
		 deriving (Eq,Show)
data Artpagenums_Attrs = Artpagenums_Attrs
    { artpagenumsId :: (Maybe String)
    , artpagenumsLang :: (Maybe String)
    , artpagenumsRemap :: (Maybe String)
    , artpagenumsXreflabel :: (Maybe String)
    , artpagenumsRevisionflag :: (Maybe Artpagenums_Revisionflag)
    , artpagenumsArch :: (Maybe String)
    , artpagenumsCondition :: (Maybe String)
    , artpagenumsConformance :: (Maybe String)
    , artpagenumsOs :: (Maybe String)
    , artpagenumsRevision :: (Maybe String)
    , artpagenumsSecurity :: (Maybe String)
    , artpagenumsUserlevel :: (Maybe String)
    , artpagenumsVendor :: (Maybe String)
    , artpagenumsRole :: (Maybe String)
    } deriving (Eq,Show)
data Artpagenums_ = Artpagenums_Str String
		  | Artpagenums_Link Link
		  | Artpagenums_Olink Olink
		  | Artpagenums_Ulink Ulink
		  | Artpagenums_Emphasis Emphasis
		  | Artpagenums_Trademark Trademark
		  | Artpagenums_Replaceable Replaceable
		  | Artpagenums_Remark Remark
		  | Artpagenums_Subscript Subscript
		  | Artpagenums_Superscript Superscript
		  | Artpagenums_Inlinegraphic Inlinegraphic
		  | Artpagenums_Inlinemediaobject Inlinemediaobject
		  | Artpagenums_Indexterm Indexterm
		  deriving (Eq,Show)
data Artpagenums_Revisionflag = Artpagenums_Revisionflag_Changed
				 |  Artpagenums_Revisionflag_Added  | 
				Artpagenums_Revisionflag_Deleted  |  Artpagenums_Revisionflag_Off
			      deriving (Eq,Show)
data Personname = Personname Personname_Attrs
			     [(OneOf5 Honorific Firstname Surname Lineage Othername)]
		deriving (Eq,Show)
data Personname_Attrs = Personname_Attrs
    { personnameId :: (Maybe String)
    , personnameLang :: (Maybe String)
    , personnameRemap :: (Maybe String)
    , personnameXreflabel :: (Maybe String)
    , personnameRevisionflag :: (Maybe Personname_Revisionflag)
    , personnameArch :: (Maybe String)
    , personnameCondition :: (Maybe String)
    , personnameConformance :: (Maybe String)
    , personnameOs :: (Maybe String)
    , personnameRevision :: (Maybe String)
    , personnameSecurity :: (Maybe String)
    , personnameUserlevel :: (Maybe String)
    , personnameVendor :: (Maybe String)
    , personnameRole :: (Maybe String)
    } deriving (Eq,Show)
data Personname_Revisionflag = Personname_Revisionflag_Changed  | 
			       Personname_Revisionflag_Added  |  Personname_Revisionflag_Deleted
			        |  Personname_Revisionflag_Off
			     deriving (Eq,Show)
data Author = Author Author_Attrs
		     (OneOf2 Personname [(OneOf8 Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib)])
		     [(OneOf3 Personblurb Email Address)]
	    deriving (Eq,Show)
data Author_Attrs = Author_Attrs
    { authorId :: (Maybe String)
    , authorLang :: (Maybe String)
    , authorRemap :: (Maybe String)
    , authorXreflabel :: (Maybe String)
    , authorRevisionflag :: (Maybe Author_Revisionflag)
    , authorArch :: (Maybe String)
    , authorCondition :: (Maybe String)
    , authorConformance :: (Maybe String)
    , authorOs :: (Maybe String)
    , authorRevision :: (Maybe String)
    , authorSecurity :: (Maybe String)
    , authorUserlevel :: (Maybe String)
    , authorVendor :: (Maybe String)
    , authorRole :: (Maybe String)
    } deriving (Eq,Show)
data Author_Revisionflag = Author_Revisionflag_Changed  | 
			   Author_Revisionflag_Added  |  Author_Revisionflag_Deleted  | 
			   Author_Revisionflag_Off
			 deriving (Eq,Show)
data Authorgroup = Authorgroup Authorgroup_Attrs
			       [(OneOf5 Author Editor Collab Corpauthor Othercredit)]
		 deriving (Eq,Show)
data Authorgroup_Attrs = Authorgroup_Attrs
    { authorgroupId :: (Maybe String)
    , authorgroupLang :: (Maybe String)
    , authorgroupRemap :: (Maybe String)
    , authorgroupXreflabel :: (Maybe String)
    , authorgroupRevisionflag :: (Maybe Authorgroup_Revisionflag)
    , authorgroupArch :: (Maybe String)
    , authorgroupCondition :: (Maybe String)
    , authorgroupConformance :: (Maybe String)
    , authorgroupOs :: (Maybe String)
    , authorgroupRevision :: (Maybe String)
    , authorgroupSecurity :: (Maybe String)
    , authorgroupUserlevel :: (Maybe String)
    , authorgroupVendor :: (Maybe String)
    , authorgroupRole :: (Maybe String)
    } deriving (Eq,Show)
data Authorgroup_Revisionflag = Authorgroup_Revisionflag_Changed
				 |  Authorgroup_Revisionflag_Added  | 
				Authorgroup_Revisionflag_Deleted  |  Authorgroup_Revisionflag_Off
			      deriving (Eq,Show)
data Collab = Collab Collab_Attrs Collabname [Affiliation]
	    deriving (Eq,Show)
data Collab_Attrs = Collab_Attrs
    { collabId :: (Maybe String)
    , collabLang :: (Maybe String)
    , collabRemap :: (Maybe String)
    , collabXreflabel :: (Maybe String)
    , collabRevisionflag :: (Maybe Collab_Revisionflag)
    , collabArch :: (Maybe String)
    , collabCondition :: (Maybe String)
    , collabConformance :: (Maybe String)
    , collabOs :: (Maybe String)
    , collabRevision :: (Maybe String)
    , collabSecurity :: (Maybe String)
    , collabUserlevel :: (Maybe String)
    , collabVendor :: (Maybe String)
    , collabRole :: (Maybe String)
    } deriving (Eq,Show)
data Collab_Revisionflag = Collab_Revisionflag_Changed  | 
			   Collab_Revisionflag_Added  |  Collab_Revisionflag_Deleted  | 
			   Collab_Revisionflag_Off
			 deriving (Eq,Show)
data Collabname = Collabname Collabname_Attrs [Collabname_]
		deriving (Eq,Show)
data Collabname_Attrs = Collabname_Attrs
    { collabnameId :: (Maybe String)
    , collabnameLang :: (Maybe String)
    , collabnameRemap :: (Maybe String)
    , collabnameXreflabel :: (Maybe String)
    , collabnameRevisionflag :: (Maybe Collabname_Revisionflag)
    , collabnameArch :: (Maybe String)
    , collabnameCondition :: (Maybe String)
    , collabnameConformance :: (Maybe String)
    , collabnameOs :: (Maybe String)
    , collabnameRevision :: (Maybe String)
    , collabnameSecurity :: (Maybe String)
    , collabnameUserlevel :: (Maybe String)
    , collabnameVendor :: (Maybe String)
    , collabnameRole :: (Maybe String)
    } deriving (Eq,Show)
data Collabname_ = Collabname_Str String
		 | Collabname_Link Link
		 | Collabname_Olink Olink
		 | Collabname_Ulink Ulink
		 | Collabname_Emphasis Emphasis
		 | Collabname_Trademark Trademark
		 | Collabname_Replaceable Replaceable
		 | Collabname_Remark Remark
		 | Collabname_Subscript Subscript
		 | Collabname_Superscript Superscript
		 | Collabname_Inlinegraphic Inlinegraphic
		 | Collabname_Inlinemediaobject Inlinemediaobject
		 | Collabname_Indexterm Indexterm
		 deriving (Eq,Show)
data Collabname_Revisionflag = Collabname_Revisionflag_Changed  | 
			       Collabname_Revisionflag_Added  |  Collabname_Revisionflag_Deleted
			        |  Collabname_Revisionflag_Off
			     deriving (Eq,Show)
data Authorinitials = Authorinitials Authorinitials_Attrs
				     [Authorinitials_]
		    deriving (Eq,Show)
data Authorinitials_Attrs = Authorinitials_Attrs
    { authorinitialsId :: (Maybe String)
    , authorinitialsLang :: (Maybe String)
    , authorinitialsRemap :: (Maybe String)
    , authorinitialsXreflabel :: (Maybe String)
    , authorinitialsRevisionflag :: (Maybe Authorinitials_Revisionflag)
    , authorinitialsArch :: (Maybe String)
    , authorinitialsCondition :: (Maybe String)
    , authorinitialsConformance :: (Maybe String)
    , authorinitialsOs :: (Maybe String)
    , authorinitialsRevision :: (Maybe String)
    , authorinitialsSecurity :: (Maybe String)
    , authorinitialsUserlevel :: (Maybe String)
    , authorinitialsVendor :: (Maybe String)
    , authorinitialsRole :: (Maybe String)
    } deriving (Eq,Show)
data Authorinitials_ = Authorinitials_Str String
		     | Authorinitials_Link Link
		     | Authorinitials_Olink Olink
		     | Authorinitials_Ulink Ulink
		     | Authorinitials_Emphasis Emphasis
		     | Authorinitials_Trademark Trademark
		     | Authorinitials_Replaceable Replaceable
		     | Authorinitials_Remark Remark
		     | Authorinitials_Subscript Subscript
		     | Authorinitials_Superscript Superscript
		     | Authorinitials_Inlinegraphic Inlinegraphic
		     | Authorinitials_Inlinemediaobject Inlinemediaobject
		     | Authorinitials_Indexterm Indexterm
		     deriving (Eq,Show)
data Authorinitials_Revisionflag = Authorinitials_Revisionflag_Changed
				    |  Authorinitials_Revisionflag_Added  | 
				   Authorinitials_Revisionflag_Deleted  | 
				   Authorinitials_Revisionflag_Off
				 deriving (Eq,Show)
data Confgroup = Confgroup Confgroup_Attrs
			   [(OneOf5 Confdates Conftitle Confnum Address Confsponsor)]
	       deriving (Eq,Show)
data Confgroup_Attrs = Confgroup_Attrs
    { confgroupId :: (Maybe String)
    , confgroupLang :: (Maybe String)
    , confgroupRemap :: (Maybe String)
    , confgroupXreflabel :: (Maybe String)
    , confgroupRevisionflag :: (Maybe Confgroup_Revisionflag)
    , confgroupArch :: (Maybe String)
    , confgroupCondition :: (Maybe String)
    , confgroupConformance :: (Maybe String)
    , confgroupOs :: (Maybe String)
    , confgroupRevision :: (Maybe String)
    , confgroupSecurity :: (Maybe String)
    , confgroupUserlevel :: (Maybe String)
    , confgroupVendor :: (Maybe String)
    , confgroupRole :: (Maybe String)
    } deriving (Eq,Show)
data Confgroup_Revisionflag = Confgroup_Revisionflag_Changed  | 
			      Confgroup_Revisionflag_Added  |  Confgroup_Revisionflag_Deleted  | 
			      Confgroup_Revisionflag_Off
			    deriving (Eq,Show)
data Confdates = Confdates Confdates_Attrs [Confdates_]
	       deriving (Eq,Show)
data Confdates_Attrs = Confdates_Attrs
    { confdatesId :: (Maybe String)
    , confdatesLang :: (Maybe String)
    , confdatesRemap :: (Maybe String)
    , confdatesXreflabel :: (Maybe String)
    , confdatesRevisionflag :: (Maybe Confdates_Revisionflag)
    , confdatesArch :: (Maybe String)
    , confdatesCondition :: (Maybe String)
    , confdatesConformance :: (Maybe String)
    , confdatesOs :: (Maybe String)
    , confdatesRevision :: (Maybe String)
    , confdatesSecurity :: (Maybe String)
    , confdatesUserlevel :: (Maybe String)
    , confdatesVendor :: (Maybe String)
    , confdatesRole :: (Maybe String)
    } deriving (Eq,Show)
data Confdates_ = Confdates_Str String
		| Confdates_Link Link
		| Confdates_Olink Olink
		| Confdates_Ulink Ulink
		| Confdates_Emphasis Emphasis
		| Confdates_Trademark Trademark
		| Confdates_Replaceable Replaceable
		| Confdates_Remark Remark
		| Confdates_Subscript Subscript
		| Confdates_Superscript Superscript
		| Confdates_Inlinegraphic Inlinegraphic
		| Confdates_Inlinemediaobject Inlinemediaobject
		| Confdates_Indexterm Indexterm
		deriving (Eq,Show)
data Confdates_Revisionflag = Confdates_Revisionflag_Changed  | 
			      Confdates_Revisionflag_Added  |  Confdates_Revisionflag_Deleted  | 
			      Confdates_Revisionflag_Off
			    deriving (Eq,Show)
data Conftitle = Conftitle Conftitle_Attrs [Conftitle_]
	       deriving (Eq,Show)
data Conftitle_Attrs = Conftitle_Attrs
    { conftitleId :: (Maybe String)
    , conftitleLang :: (Maybe String)
    , conftitleRemap :: (Maybe String)
    , conftitleXreflabel :: (Maybe String)
    , conftitleRevisionflag :: (Maybe Conftitle_Revisionflag)
    , conftitleArch :: (Maybe String)
    , conftitleCondition :: (Maybe String)
    , conftitleConformance :: (Maybe String)
    , conftitleOs :: (Maybe String)
    , conftitleRevision :: (Maybe String)
    , conftitleSecurity :: (Maybe String)
    , conftitleUserlevel :: (Maybe String)
    , conftitleVendor :: (Maybe String)
    , conftitleRole :: (Maybe String)
    } deriving (Eq,Show)
data Conftitle_ = Conftitle_Str String
		| Conftitle_Link Link
		| Conftitle_Olink Olink
		| Conftitle_Ulink Ulink
		| Conftitle_Emphasis Emphasis
		| Conftitle_Trademark Trademark
		| Conftitle_Replaceable Replaceable
		| Conftitle_Remark Remark
		| Conftitle_Subscript Subscript
		| Conftitle_Superscript Superscript
		| Conftitle_Inlinegraphic Inlinegraphic
		| Conftitle_Inlinemediaobject Inlinemediaobject
		| Conftitle_Indexterm Indexterm
		deriving (Eq,Show)
data Conftitle_Revisionflag = Conftitle_Revisionflag_Changed  | 
			      Conftitle_Revisionflag_Added  |  Conftitle_Revisionflag_Deleted  | 
			      Conftitle_Revisionflag_Off
			    deriving (Eq,Show)
data Confnum = Confnum Confnum_Attrs [Confnum_]
	     deriving (Eq,Show)
data Confnum_Attrs = Confnum_Attrs
    { confnumId :: (Maybe String)
    , confnumLang :: (Maybe String)
    , confnumRemap :: (Maybe String)
    , confnumXreflabel :: (Maybe String)
    , confnumRevisionflag :: (Maybe Confnum_Revisionflag)
    , confnumArch :: (Maybe String)
    , confnumCondition :: (Maybe String)
    , confnumConformance :: (Maybe String)
    , confnumOs :: (Maybe String)
    , confnumRevision :: (Maybe String)
    , confnumSecurity :: (Maybe String)
    , confnumUserlevel :: (Maybe String)
    , confnumVendor :: (Maybe String)
    , confnumRole :: (Maybe String)
    } deriving (Eq,Show)
data Confnum_ = Confnum_Str String
	      | Confnum_Link Link
	      | Confnum_Olink Olink
	      | Confnum_Ulink Ulink
	      | Confnum_Emphasis Emphasis
	      | Confnum_Trademark Trademark
	      | Confnum_Replaceable Replaceable
	      | Confnum_Remark Remark
	      | Confnum_Subscript Subscript
	      | Confnum_Superscript Superscript
	      | Confnum_Inlinegraphic Inlinegraphic
	      | Confnum_Inlinemediaobject Inlinemediaobject
	      | Confnum_Indexterm Indexterm
	      deriving (Eq,Show)
data Confnum_Revisionflag = Confnum_Revisionflag_Changed  | 
			    Confnum_Revisionflag_Added  |  Confnum_Revisionflag_Deleted  | 
			    Confnum_Revisionflag_Off
			  deriving (Eq,Show)
data Confsponsor = Confsponsor Confsponsor_Attrs [Confsponsor_]
		 deriving (Eq,Show)
data Confsponsor_Attrs = Confsponsor_Attrs
    { confsponsorId :: (Maybe String)
    , confsponsorLang :: (Maybe String)
    , confsponsorRemap :: (Maybe String)
    , confsponsorXreflabel :: (Maybe String)
    , confsponsorRevisionflag :: (Maybe Confsponsor_Revisionflag)
    , confsponsorArch :: (Maybe String)
    , confsponsorCondition :: (Maybe String)
    , confsponsorConformance :: (Maybe String)
    , confsponsorOs :: (Maybe String)
    , confsponsorRevision :: (Maybe String)
    , confsponsorSecurity :: (Maybe String)
    , confsponsorUserlevel :: (Maybe String)
    , confsponsorVendor :: (Maybe String)
    , confsponsorRole :: (Maybe String)
    } deriving (Eq,Show)
data Confsponsor_ = Confsponsor_Str String
		  | Confsponsor_Link Link
		  | Confsponsor_Olink Olink
		  | Confsponsor_Ulink Ulink
		  | Confsponsor_Emphasis Emphasis
		  | Confsponsor_Trademark Trademark
		  | Confsponsor_Replaceable Replaceable
		  | Confsponsor_Remark Remark
		  | Confsponsor_Subscript Subscript
		  | Confsponsor_Superscript Superscript
		  | Confsponsor_Inlinegraphic Inlinegraphic
		  | Confsponsor_Inlinemediaobject Inlinemediaobject
		  | Confsponsor_Indexterm Indexterm
		  deriving (Eq,Show)
data Confsponsor_Revisionflag = Confsponsor_Revisionflag_Changed
				 |  Confsponsor_Revisionflag_Added  | 
				Confsponsor_Revisionflag_Deleted  |  Confsponsor_Revisionflag_Off
			      deriving (Eq,Show)
data Contractnum = Contractnum Contractnum_Attrs [Contractnum_]
		 deriving (Eq,Show)
data Contractnum_Attrs = Contractnum_Attrs
    { contractnumId :: (Maybe String)
    , contractnumLang :: (Maybe String)
    , contractnumRemap :: (Maybe String)
    , contractnumXreflabel :: (Maybe String)
    , contractnumRevisionflag :: (Maybe Contractnum_Revisionflag)
    , contractnumArch :: (Maybe String)
    , contractnumCondition :: (Maybe String)
    , contractnumConformance :: (Maybe String)
    , contractnumOs :: (Maybe String)
    , contractnumRevision :: (Maybe String)
    , contractnumSecurity :: (Maybe String)
    , contractnumUserlevel :: (Maybe String)
    , contractnumVendor :: (Maybe String)
    , contractnumRole :: (Maybe String)
    } deriving (Eq,Show)
data Contractnum_ = Contractnum_Str String
		  | Contractnum_Link Link
		  | Contractnum_Olink Olink
		  | Contractnum_Ulink Ulink
		  | Contractnum_Emphasis Emphasis
		  | Contractnum_Trademark Trademark
		  | Contractnum_Replaceable Replaceable
		  | Contractnum_Remark Remark
		  | Contractnum_Subscript Subscript
		  | Contractnum_Superscript Superscript
		  | Contractnum_Inlinegraphic Inlinegraphic
		  | Contractnum_Inlinemediaobject Inlinemediaobject
		  | Contractnum_Indexterm Indexterm
		  deriving (Eq,Show)
data Contractnum_Revisionflag = Contractnum_Revisionflag_Changed
				 |  Contractnum_Revisionflag_Added  | 
				Contractnum_Revisionflag_Deleted  |  Contractnum_Revisionflag_Off
			      deriving (Eq,Show)
data Contractsponsor = Contractsponsor Contractsponsor_Attrs
				       [Contractsponsor_]
		     deriving (Eq,Show)
data Contractsponsor_Attrs = Contractsponsor_Attrs
    { contractsponsorId :: (Maybe String)
    , contractsponsorLang :: (Maybe String)
    , contractsponsorRemap :: (Maybe String)
    , contractsponsorXreflabel :: (Maybe String)
    , contractsponsorRevisionflag :: (Maybe Contractsponsor_Revisionflag)
    , contractsponsorArch :: (Maybe String)
    , contractsponsorCondition :: (Maybe String)
    , contractsponsorConformance :: (Maybe String)
    , contractsponsorOs :: (Maybe String)
    , contractsponsorRevision :: (Maybe String)
    , contractsponsorSecurity :: (Maybe String)
    , contractsponsorUserlevel :: (Maybe String)
    , contractsponsorVendor :: (Maybe String)
    , contractsponsorRole :: (Maybe String)
    } deriving (Eq,Show)
data Contractsponsor_ = Contractsponsor_Str String
		      | Contractsponsor_Link Link
		      | Contractsponsor_Olink Olink
		      | Contractsponsor_Ulink Ulink
		      | Contractsponsor_Emphasis Emphasis
		      | Contractsponsor_Trademark Trademark
		      | Contractsponsor_Replaceable Replaceable
		      | Contractsponsor_Remark Remark
		      | Contractsponsor_Subscript Subscript
		      | Contractsponsor_Superscript Superscript
		      | Contractsponsor_Inlinegraphic Inlinegraphic
		      | Contractsponsor_Inlinemediaobject Inlinemediaobject
		      | Contractsponsor_Indexterm Indexterm
		      deriving (Eq,Show)
data Contractsponsor_Revisionflag = Contractsponsor_Revisionflag_Changed
				     |  Contractsponsor_Revisionflag_Added  | 
				    Contractsponsor_Revisionflag_Deleted  | 
				    Contractsponsor_Revisionflag_Off
				  deriving (Eq,Show)
data Copyright = Copyright Copyright_Attrs [Year] [Holder]
	       deriving (Eq,Show)
data Copyright_Attrs = Copyright_Attrs
    { copyrightId :: (Maybe String)
    , copyrightLang :: (Maybe String)
    , copyrightRemap :: (Maybe String)
    , copyrightXreflabel :: (Maybe String)
    , copyrightRevisionflag :: (Maybe Copyright_Revisionflag)
    , copyrightArch :: (Maybe String)
    , copyrightCondition :: (Maybe String)
    , copyrightConformance :: (Maybe String)
    , copyrightOs :: (Maybe String)
    , copyrightRevision :: (Maybe String)
    , copyrightSecurity :: (Maybe String)
    , copyrightUserlevel :: (Maybe String)
    , copyrightVendor :: (Maybe String)
    , copyrightRole :: (Maybe String)
    } deriving (Eq,Show)
data Copyright_Revisionflag = Copyright_Revisionflag_Changed  | 
			      Copyright_Revisionflag_Added  |  Copyright_Revisionflag_Deleted  | 
			      Copyright_Revisionflag_Off
			    deriving (Eq,Show)
data Year = Year Year_Attrs [Year_]
	  deriving (Eq,Show)
data Year_Attrs = Year_Attrs
    { yearId :: (Maybe String)
    , yearLang :: (Maybe String)
    , yearRemap :: (Maybe String)
    , yearXreflabel :: (Maybe String)
    , yearRevisionflag :: (Maybe Year_Revisionflag)
    , yearArch :: (Maybe String)
    , yearCondition :: (Maybe String)
    , yearConformance :: (Maybe String)
    , yearOs :: (Maybe String)
    , yearRevision :: (Maybe String)
    , yearSecurity :: (Maybe String)
    , yearUserlevel :: (Maybe String)
    , yearVendor :: (Maybe String)
    , yearRole :: (Maybe String)
    } deriving (Eq,Show)
data Year_ = Year_Str String
	   | Year_Link Link
	   | Year_Olink Olink
	   | Year_Ulink Ulink
	   | Year_Emphasis Emphasis
	   | Year_Trademark Trademark
	   | Year_Replaceable Replaceable
	   | Year_Remark Remark
	   | Year_Subscript Subscript
	   | Year_Superscript Superscript
	   | Year_Inlinegraphic Inlinegraphic
	   | Year_Inlinemediaobject Inlinemediaobject
	   | Year_Indexterm Indexterm
	   deriving (Eq,Show)
data Year_Revisionflag = Year_Revisionflag_Changed  | 
			 Year_Revisionflag_Added  |  Year_Revisionflag_Deleted  | 
			 Year_Revisionflag_Off
		       deriving (Eq,Show)
data Holder = Holder Holder_Attrs [Holder_]
	    deriving (Eq,Show)
data Holder_Attrs = Holder_Attrs
    { holderId :: (Maybe String)
    , holderLang :: (Maybe String)
    , holderRemap :: (Maybe String)
    , holderXreflabel :: (Maybe String)
    , holderRevisionflag :: (Maybe Holder_Revisionflag)
    , holderArch :: (Maybe String)
    , holderCondition :: (Maybe String)
    , holderConformance :: (Maybe String)
    , holderOs :: (Maybe String)
    , holderRevision :: (Maybe String)
    , holderSecurity :: (Maybe String)
    , holderUserlevel :: (Maybe String)
    , holderVendor :: (Maybe String)
    , holderRole :: (Maybe String)
    } deriving (Eq,Show)
data Holder_ = Holder_Str String
	     | Holder_Link Link
	     | Holder_Olink Olink
	     | Holder_Ulink Ulink
	     | Holder_Emphasis Emphasis
	     | Holder_Trademark Trademark
	     | Holder_Replaceable Replaceable
	     | Holder_Remark Remark
	     | Holder_Subscript Subscript
	     | Holder_Superscript Superscript
	     | Holder_Inlinegraphic Inlinegraphic
	     | Holder_Inlinemediaobject Inlinemediaobject
	     | Holder_Indexterm Indexterm
	     deriving (Eq,Show)
data Holder_Revisionflag = Holder_Revisionflag_Changed  | 
			   Holder_Revisionflag_Added  |  Holder_Revisionflag_Deleted  | 
			   Holder_Revisionflag_Off
			 deriving (Eq,Show)
data Corpauthor = Corpauthor Corpauthor_Attrs [Corpauthor_]
		deriving (Eq,Show)
data Corpauthor_Attrs = Corpauthor_Attrs
    { corpauthorId :: (Maybe String)
    , corpauthorLang :: (Maybe String)
    , corpauthorRemap :: (Maybe String)
    , corpauthorXreflabel :: (Maybe String)
    , corpauthorRevisionflag :: (Maybe Corpauthor_Revisionflag)
    , corpauthorArch :: (Maybe String)
    , corpauthorCondition :: (Maybe String)
    , corpauthorConformance :: (Maybe String)
    , corpauthorOs :: (Maybe String)
    , corpauthorRevision :: (Maybe String)
    , corpauthorSecurity :: (Maybe String)
    , corpauthorUserlevel :: (Maybe String)
    , corpauthorVendor :: (Maybe String)
    , corpauthorRole :: (Maybe String)
    } deriving (Eq,Show)
data Corpauthor_ = Corpauthor_Str String
		 | Corpauthor_Link Link
		 | Corpauthor_Olink Olink
		 | Corpauthor_Ulink Ulink
		 | Corpauthor_Emphasis Emphasis
		 | Corpauthor_Trademark Trademark
		 | Corpauthor_Replaceable Replaceable
		 | Corpauthor_Remark Remark
		 | Corpauthor_Subscript Subscript
		 | Corpauthor_Superscript Superscript
		 | Corpauthor_Inlinegraphic Inlinegraphic
		 | Corpauthor_Inlinemediaobject Inlinemediaobject
		 | Corpauthor_Indexterm Indexterm
		 deriving (Eq,Show)
data Corpauthor_Revisionflag = Corpauthor_Revisionflag_Changed  | 
			       Corpauthor_Revisionflag_Added  |  Corpauthor_Revisionflag_Deleted
			        |  Corpauthor_Revisionflag_Off
			     deriving (Eq,Show)
data Corpname = Corpname Corpname_Attrs [Corpname_]
	      deriving (Eq,Show)
data Corpname_Attrs = Corpname_Attrs
    { corpnameId :: (Maybe String)
    , corpnameLang :: (Maybe String)
    , corpnameRemap :: (Maybe String)
    , corpnameXreflabel :: (Maybe String)
    , corpnameRevisionflag :: (Maybe Corpname_Revisionflag)
    , corpnameArch :: (Maybe String)
    , corpnameCondition :: (Maybe String)
    , corpnameConformance :: (Maybe String)
    , corpnameOs :: (Maybe String)
    , corpnameRevision :: (Maybe String)
    , corpnameSecurity :: (Maybe String)
    , corpnameUserlevel :: (Maybe String)
    , corpnameVendor :: (Maybe String)
    , corpnameRole :: (Maybe String)
    } deriving (Eq,Show)
data Corpname_ = Corpname_Str String
	       | Corpname_Link Link
	       | Corpname_Olink Olink
	       | Corpname_Ulink Ulink
	       | Corpname_Emphasis Emphasis
	       | Corpname_Trademark Trademark
	       | Corpname_Replaceable Replaceable
	       | Corpname_Remark Remark
	       | Corpname_Subscript Subscript
	       | Corpname_Superscript Superscript
	       | Corpname_Inlinegraphic Inlinegraphic
	       | Corpname_Inlinemediaobject Inlinemediaobject
	       | Corpname_Indexterm Indexterm
	       deriving (Eq,Show)
data Corpname_Revisionflag = Corpname_Revisionflag_Changed  | 
			     Corpname_Revisionflag_Added  |  Corpname_Revisionflag_Deleted  | 
			     Corpname_Revisionflag_Off
			   deriving (Eq,Show)
data Date = Date Date_Attrs [Date_]
	  deriving (Eq,Show)
data Date_Attrs = Date_Attrs
    { dateId :: (Maybe String)
    , dateLang :: (Maybe String)
    , dateRemap :: (Maybe String)
    , dateXreflabel :: (Maybe String)
    , dateRevisionflag :: (Maybe Date_Revisionflag)
    , dateArch :: (Maybe String)
    , dateCondition :: (Maybe String)
    , dateConformance :: (Maybe String)
    , dateOs :: (Maybe String)
    , dateRevision :: (Maybe String)
    , dateSecurity :: (Maybe String)
    , dateUserlevel :: (Maybe String)
    , dateVendor :: (Maybe String)
    , dateRole :: (Maybe String)
    } deriving (Eq,Show)
data Date_ = Date_Str String
	   | Date_Link Link
	   | Date_Olink Olink
	   | Date_Ulink Ulink
	   | Date_Emphasis Emphasis
	   | Date_Trademark Trademark
	   | Date_Replaceable Replaceable
	   | Date_Remark Remark
	   | Date_Subscript Subscript
	   | Date_Superscript Superscript
	   | Date_Inlinegraphic Inlinegraphic
	   | Date_Inlinemediaobject Inlinemediaobject
	   | Date_Indexterm Indexterm
	   deriving (Eq,Show)
data Date_Revisionflag = Date_Revisionflag_Changed  | 
			 Date_Revisionflag_Added  |  Date_Revisionflag_Deleted  | 
			 Date_Revisionflag_Off
		       deriving (Eq,Show)
data Edition = Edition Edition_Attrs [Edition_]
	     deriving (Eq,Show)
data Edition_Attrs = Edition_Attrs
    { editionId :: (Maybe String)
    , editionLang :: (Maybe String)
    , editionRemap :: (Maybe String)
    , editionXreflabel :: (Maybe String)
    , editionRevisionflag :: (Maybe Edition_Revisionflag)
    , editionArch :: (Maybe String)
    , editionCondition :: (Maybe String)
    , editionConformance :: (Maybe String)
    , editionOs :: (Maybe String)
    , editionRevision :: (Maybe String)
    , editionSecurity :: (Maybe String)
    , editionUserlevel :: (Maybe String)
    , editionVendor :: (Maybe String)
    , editionRole :: (Maybe String)
    } deriving (Eq,Show)
data Edition_ = Edition_Str String
	      | Edition_Link Link
	      | Edition_Olink Olink
	      | Edition_Ulink Ulink
	      | Edition_Emphasis Emphasis
	      | Edition_Trademark Trademark
	      | Edition_Replaceable Replaceable
	      | Edition_Remark Remark
	      | Edition_Subscript Subscript
	      | Edition_Superscript Superscript
	      | Edition_Inlinegraphic Inlinegraphic
	      | Edition_Inlinemediaobject Inlinemediaobject
	      | Edition_Indexterm Indexterm
	      deriving (Eq,Show)
data Edition_Revisionflag = Edition_Revisionflag_Changed  | 
			    Edition_Revisionflag_Added  |  Edition_Revisionflag_Deleted  | 
			    Edition_Revisionflag_Off
			  deriving (Eq,Show)
data Editor = Editor Editor_Attrs
		     (OneOf2 Personname [(OneOf8 Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib)])
		     [(OneOf3 Personblurb Email Address)]
	    deriving (Eq,Show)
data Editor_Attrs = Editor_Attrs
    { editorId :: (Maybe String)
    , editorLang :: (Maybe String)
    , editorRemap :: (Maybe String)
    , editorXreflabel :: (Maybe String)
    , editorRevisionflag :: (Maybe Editor_Revisionflag)
    , editorArch :: (Maybe String)
    , editorCondition :: (Maybe String)
    , editorConformance :: (Maybe String)
    , editorOs :: (Maybe String)
    , editorRevision :: (Maybe String)
    , editorSecurity :: (Maybe String)
    , editorUserlevel :: (Maybe String)
    , editorVendor :: (Maybe String)
    , editorRole :: (Maybe String)
    } deriving (Eq,Show)
data Editor_Revisionflag = Editor_Revisionflag_Changed  | 
			   Editor_Revisionflag_Added  |  Editor_Revisionflag_Deleted  | 
			   Editor_Revisionflag_Off
			 deriving (Eq,Show)
data Isbn = Isbn Isbn_Attrs [Isbn_]
	  deriving (Eq,Show)
data Isbn_Attrs = Isbn_Attrs
    { isbnId :: (Maybe String)
    , isbnLang :: (Maybe String)
    , isbnRemap :: (Maybe String)
    , isbnXreflabel :: (Maybe String)
    , isbnRevisionflag :: (Maybe Isbn_Revisionflag)
    , isbnArch :: (Maybe String)
    , isbnCondition :: (Maybe String)
    , isbnConformance :: (Maybe String)
    , isbnOs :: (Maybe String)
    , isbnRevision :: (Maybe String)
    , isbnSecurity :: (Maybe String)
    , isbnUserlevel :: (Maybe String)
    , isbnVendor :: (Maybe String)
    , isbnRole :: (Maybe String)
    } deriving (Eq,Show)
data Isbn_ = Isbn_Str String
	   | Isbn_Link Link
	   | Isbn_Olink Olink
	   | Isbn_Ulink Ulink
	   | Isbn_Emphasis Emphasis
	   | Isbn_Trademark Trademark
	   | Isbn_Replaceable Replaceable
	   | Isbn_Remark Remark
	   | Isbn_Subscript Subscript
	   | Isbn_Superscript Superscript
	   | Isbn_Inlinegraphic Inlinegraphic
	   | Isbn_Inlinemediaobject Inlinemediaobject
	   | Isbn_Indexterm Indexterm
	   deriving (Eq,Show)
data Isbn_Revisionflag = Isbn_Revisionflag_Changed  | 
			 Isbn_Revisionflag_Added  |  Isbn_Revisionflag_Deleted  | 
			 Isbn_Revisionflag_Off
		       deriving (Eq,Show)
data Issn = Issn Issn_Attrs [Issn_]
	  deriving (Eq,Show)
data Issn_Attrs = Issn_Attrs
    { issnId :: (Maybe String)
    , issnLang :: (Maybe String)
    , issnRemap :: (Maybe String)
    , issnXreflabel :: (Maybe String)
    , issnRevisionflag :: (Maybe Issn_Revisionflag)
    , issnArch :: (Maybe String)
    , issnCondition :: (Maybe String)
    , issnConformance :: (Maybe String)
    , issnOs :: (Maybe String)
    , issnRevision :: (Maybe String)
    , issnSecurity :: (Maybe String)
    , issnUserlevel :: (Maybe String)
    , issnVendor :: (Maybe String)
    , issnRole :: (Maybe String)
    } deriving (Eq,Show)
data Issn_ = Issn_Str String
	   | Issn_Link Link
	   | Issn_Olink Olink
	   | Issn_Ulink Ulink
	   | Issn_Emphasis Emphasis
	   | Issn_Trademark Trademark
	   | Issn_Replaceable Replaceable
	   | Issn_Remark Remark
	   | Issn_Subscript Subscript
	   | Issn_Superscript Superscript
	   | Issn_Inlinegraphic Inlinegraphic
	   | Issn_Inlinemediaobject Inlinemediaobject
	   | Issn_Indexterm Indexterm
	   deriving (Eq,Show)
data Issn_Revisionflag = Issn_Revisionflag_Changed  | 
			 Issn_Revisionflag_Added  |  Issn_Revisionflag_Deleted  | 
			 Issn_Revisionflag_Off
		       deriving (Eq,Show)
data Biblioid = Biblioid Biblioid_Attrs [Biblioid_]
	      deriving (Eq,Show)
data Biblioid_Attrs = Biblioid_Attrs
    { biblioidClass :: (Maybe Biblioid_Class)
    , biblioidOtherclass :: (Maybe String)
    , biblioidId :: (Maybe String)
    , biblioidLang :: (Maybe String)
    , biblioidRemap :: (Maybe String)
    , biblioidXreflabel :: (Maybe String)
    , biblioidRevisionflag :: (Maybe Biblioid_Revisionflag)
    , biblioidArch :: (Maybe String)
    , biblioidCondition :: (Maybe String)
    , biblioidConformance :: (Maybe String)
    , biblioidOs :: (Maybe String)
    , biblioidRevision :: (Maybe String)
    , biblioidSecurity :: (Maybe String)
    , biblioidUserlevel :: (Maybe String)
    , biblioidVendor :: (Maybe String)
    , biblioidRole :: (Maybe String)
    } deriving (Eq,Show)
data Biblioid_ = Biblioid_Str String
	       | Biblioid_Link Link
	       | Biblioid_Olink Olink
	       | Biblioid_Ulink Ulink
	       | Biblioid_Emphasis Emphasis
	       | Biblioid_Trademark Trademark
	       | Biblioid_Replaceable Replaceable
	       | Biblioid_Remark Remark
	       | Biblioid_Subscript Subscript
	       | Biblioid_Superscript Superscript
	       | Biblioid_Inlinegraphic Inlinegraphic
	       | Biblioid_Inlinemediaobject Inlinemediaobject
	       | Biblioid_Indexterm Indexterm
	       deriving (Eq,Show)
data Biblioid_Class = Biblioid_Class_Uri  |  Biblioid_Class_Doi  | 
		      Biblioid_Class_Isbn  |  Biblioid_Class_Issn  | 
		      Biblioid_Class_Libraryofcongress  |  Biblioid_Class_Pubnumber  | 
		      Biblioid_Class_Other
		    deriving (Eq,Show)
data Biblioid_Revisionflag = Biblioid_Revisionflag_Changed  | 
			     Biblioid_Revisionflag_Added  |  Biblioid_Revisionflag_Deleted  | 
			     Biblioid_Revisionflag_Off
			   deriving (Eq,Show)
data Citebiblioid = Citebiblioid Citebiblioid_Attrs [Citebiblioid_]
		  deriving (Eq,Show)
data Citebiblioid_Attrs = Citebiblioid_Attrs
    { citebiblioidClass :: (Maybe Citebiblioid_Class)
    , citebiblioidOtherclass :: (Maybe String)
    , citebiblioidId :: (Maybe String)
    , citebiblioidLang :: (Maybe String)
    , citebiblioidRemap :: (Maybe String)
    , citebiblioidXreflabel :: (Maybe String)
    , citebiblioidRevisionflag :: (Maybe Citebiblioid_Revisionflag)
    , citebiblioidArch :: (Maybe String)
    , citebiblioidCondition :: (Maybe String)
    , citebiblioidConformance :: (Maybe String)
    , citebiblioidOs :: (Maybe String)
    , citebiblioidRevision :: (Maybe String)
    , citebiblioidSecurity :: (Maybe String)
    , citebiblioidUserlevel :: (Maybe String)
    , citebiblioidVendor :: (Maybe String)
    , citebiblioidRole :: (Maybe String)
    } deriving (Eq,Show)
data Citebiblioid_ = Citebiblioid_Str String
		   | Citebiblioid_Link Link
		   | Citebiblioid_Olink Olink
		   | Citebiblioid_Ulink Ulink
		   | Citebiblioid_Emphasis Emphasis
		   | Citebiblioid_Trademark Trademark
		   | Citebiblioid_Replaceable Replaceable
		   | Citebiblioid_Remark Remark
		   | Citebiblioid_Subscript Subscript
		   | Citebiblioid_Superscript Superscript
		   | Citebiblioid_Inlinegraphic Inlinegraphic
		   | Citebiblioid_Inlinemediaobject Inlinemediaobject
		   | Citebiblioid_Indexterm Indexterm
		   deriving (Eq,Show)
data Citebiblioid_Class = Citebiblioid_Class_Uri  | 
			  Citebiblioid_Class_Doi  |  Citebiblioid_Class_Isbn  | 
			  Citebiblioid_Class_Issn  |  Citebiblioid_Class_Libraryofcongress
			   |  Citebiblioid_Class_Pubnumber  |  Citebiblioid_Class_Other
			deriving (Eq,Show)
data Citebiblioid_Revisionflag = Citebiblioid_Revisionflag_Changed
				  |  Citebiblioid_Revisionflag_Added  | 
				 Citebiblioid_Revisionflag_Deleted  |  Citebiblioid_Revisionflag_Off
			       deriving (Eq,Show)
data Bibliosource = Bibliosource Bibliosource_Attrs [Bibliosource_]
		  deriving (Eq,Show)
data Bibliosource_Attrs = Bibliosource_Attrs
    { bibliosourceClass :: (Maybe Bibliosource_Class)
    , bibliosourceOtherclass :: (Maybe String)
    , bibliosourceId :: (Maybe String)
    , bibliosourceLang :: (Maybe String)
    , bibliosourceRemap :: (Maybe String)
    , bibliosourceXreflabel :: (Maybe String)
    , bibliosourceRevisionflag :: (Maybe Bibliosource_Revisionflag)
    , bibliosourceArch :: (Maybe String)
    , bibliosourceCondition :: (Maybe String)
    , bibliosourceConformance :: (Maybe String)
    , bibliosourceOs :: (Maybe String)
    , bibliosourceRevision :: (Maybe String)
    , bibliosourceSecurity :: (Maybe String)
    , bibliosourceUserlevel :: (Maybe String)
    , bibliosourceVendor :: (Maybe String)
    , bibliosourceRole :: (Maybe String)
    } deriving (Eq,Show)
data Bibliosource_ = Bibliosource_Str String
		   | Bibliosource_Link Link
		   | Bibliosource_Olink Olink
		   | Bibliosource_Ulink Ulink
		   | Bibliosource_Emphasis Emphasis
		   | Bibliosource_Trademark Trademark
		   | Bibliosource_Replaceable Replaceable
		   | Bibliosource_Remark Remark
		   | Bibliosource_Subscript Subscript
		   | Bibliosource_Superscript Superscript
		   | Bibliosource_Inlinegraphic Inlinegraphic
		   | Bibliosource_Inlinemediaobject Inlinemediaobject
		   | Bibliosource_Indexterm Indexterm
		   deriving (Eq,Show)
data Bibliosource_Class = Bibliosource_Class_Uri  | 
			  Bibliosource_Class_Doi  |  Bibliosource_Class_Isbn  | 
			  Bibliosource_Class_Issn  |  Bibliosource_Class_Libraryofcongress
			   |  Bibliosource_Class_Pubnumber  |  Bibliosource_Class_Other
			deriving (Eq,Show)
data Bibliosource_Revisionflag = Bibliosource_Revisionflag_Changed
				  |  Bibliosource_Revisionflag_Added  | 
				 Bibliosource_Revisionflag_Deleted  |  Bibliosource_Revisionflag_Off
			       deriving (Eq,Show)
data Bibliorelation = Bibliorelation Bibliorelation_Attrs
				     [Bibliorelation_]
		    deriving (Eq,Show)
data Bibliorelation_Attrs = Bibliorelation_Attrs
    { bibliorelationClass :: (Maybe Bibliorelation_Class)
    , bibliorelationOtherclass :: (Maybe String)
    , bibliorelationType :: (Maybe Bibliorelation_Type)
    , bibliorelationOthertype :: (Maybe String)
    , bibliorelationId :: (Maybe String)
    , bibliorelationLang :: (Maybe String)
    , bibliorelationRemap :: (Maybe String)
    , bibliorelationXreflabel :: (Maybe String)
    , bibliorelationRevisionflag :: (Maybe Bibliorelation_Revisionflag)
    , bibliorelationArch :: (Maybe String)
    , bibliorelationCondition :: (Maybe String)
    , bibliorelationConformance :: (Maybe String)
    , bibliorelationOs :: (Maybe String)
    , bibliorelationRevision :: (Maybe String)
    , bibliorelationSecurity :: (Maybe String)
    , bibliorelationUserlevel :: (Maybe String)
    , bibliorelationVendor :: (Maybe String)
    , bibliorelationRole :: (Maybe String)
    } deriving (Eq,Show)
data Bibliorelation_ = Bibliorelation_Str String
		     | Bibliorelation_Link Link
		     | Bibliorelation_Olink Olink
		     | Bibliorelation_Ulink Ulink
		     | Bibliorelation_Emphasis Emphasis
		     | Bibliorelation_Trademark Trademark
		     | Bibliorelation_Replaceable Replaceable
		     | Bibliorelation_Remark Remark
		     | Bibliorelation_Subscript Subscript
		     | Bibliorelation_Superscript Superscript
		     | Bibliorelation_Inlinegraphic Inlinegraphic
		     | Bibliorelation_Inlinemediaobject Inlinemediaobject
		     | Bibliorelation_Indexterm Indexterm
		     deriving (Eq,Show)
data Bibliorelation_Class = Bibliorelation_Class_Uri  | 
			    Bibliorelation_Class_Doi  |  Bibliorelation_Class_Isbn  | 
			    Bibliorelation_Class_Issn  | 
			    Bibliorelation_Class_Libraryofcongress  | 
			    Bibliorelation_Class_Pubnumber  |  Bibliorelation_Class_Other
			  deriving (Eq,Show)
data Bibliorelation_Type = Bibliorelation_Type_Isversionof  | 
			   Bibliorelation_Type_Hasversion  |  Bibliorelation_Type_Isreplacedby
			    |  Bibliorelation_Type_Replaces  | 
			   Bibliorelation_Type_Isrequiredby  |  Bibliorelation_Type_Requires
			    |  Bibliorelation_Type_Ispartof  |  Bibliorelation_Type_Haspart
			    |  Bibliorelation_Type_Isreferencedby  | 
			   Bibliorelation_Type_References  |  Bibliorelation_Type_Isformatof
			    |  Bibliorelation_Type_Hasformat  |  Bibliorelation_Type_Othertype
			 deriving (Eq,Show)
data Bibliorelation_Revisionflag = Bibliorelation_Revisionflag_Changed
				    |  Bibliorelation_Revisionflag_Added  | 
				   Bibliorelation_Revisionflag_Deleted  | 
				   Bibliorelation_Revisionflag_Off
				 deriving (Eq,Show)
data Bibliocoverage = Bibliocoverage Bibliocoverage_Attrs
				     [Bibliocoverage_]
		    deriving (Eq,Show)
data Bibliocoverage_Attrs = Bibliocoverage_Attrs
    { bibliocoverageSpatial :: (Maybe Bibliocoverage_Spatial)
    , bibliocoverageOtherspatial :: (Maybe String)
    , bibliocoverageTemporal :: (Maybe Bibliocoverage_Temporal)
    , bibliocoverageOthertemporal :: (Maybe String)
    , bibliocoverageId :: (Maybe String)
    , bibliocoverageLang :: (Maybe String)
    , bibliocoverageRemap :: (Maybe String)
    , bibliocoverageXreflabel :: (Maybe String)
    , bibliocoverageRevisionflag :: (Maybe Bibliocoverage_Revisionflag)
    , bibliocoverageArch :: (Maybe String)
    , bibliocoverageCondition :: (Maybe String)
    , bibliocoverageConformance :: (Maybe String)
    , bibliocoverageOs :: (Maybe String)
    , bibliocoverageRevision :: (Maybe String)
    , bibliocoverageSecurity :: (Maybe String)
    , bibliocoverageUserlevel :: (Maybe String)
    , bibliocoverageVendor :: (Maybe String)
    , bibliocoverageRole :: (Maybe String)
    } deriving (Eq,Show)
data Bibliocoverage_ = Bibliocoverage_Str String
		     | Bibliocoverage_Link Link
		     | Bibliocoverage_Olink Olink
		     | Bibliocoverage_Ulink Ulink
		     | Bibliocoverage_Emphasis Emphasis
		     | Bibliocoverage_Trademark Trademark
		     | Bibliocoverage_Replaceable Replaceable
		     | Bibliocoverage_Remark Remark
		     | Bibliocoverage_Subscript Subscript
		     | Bibliocoverage_Superscript Superscript
		     | Bibliocoverage_Inlinegraphic Inlinegraphic
		     | Bibliocoverage_Inlinemediaobject Inlinemediaobject
		     | Bibliocoverage_Indexterm Indexterm
		     deriving (Eq,Show)
data Bibliocoverage_Spatial = Bibliocoverage_Spatial_Dcmipoint  | 
			      Bibliocoverage_Spatial_Iso3166  |  Bibliocoverage_Spatial_Dcmibox
			       |  Bibliocoverage_Spatial_Tgn  | 
			      Bibliocoverage_Spatial_Otherspatial
			    deriving (Eq,Show)
data Bibliocoverage_Temporal = Bibliocoverage_Temporal_Dcmiperiod
			        |  Bibliocoverage_Temporal_W3c_dtf  | 
			       Bibliocoverage_Temporal_Othertemporal
			     deriving (Eq,Show)
data Bibliocoverage_Revisionflag = Bibliocoverage_Revisionflag_Changed
				    |  Bibliocoverage_Revisionflag_Added  | 
				   Bibliocoverage_Revisionflag_Deleted  | 
				   Bibliocoverage_Revisionflag_Off
				 deriving (Eq,Show)
data Invpartnumber = Invpartnumber Invpartnumber_Attrs
				   [Invpartnumber_]
		   deriving (Eq,Show)
data Invpartnumber_Attrs = Invpartnumber_Attrs
    { invpartnumberId :: (Maybe String)
    , invpartnumberLang :: (Maybe String)
    , invpartnumberRemap :: (Maybe String)
    , invpartnumberXreflabel :: (Maybe String)
    , invpartnumberRevisionflag :: (Maybe Invpartnumber_Revisionflag)
    , invpartnumberArch :: (Maybe String)
    , invpartnumberCondition :: (Maybe String)
    , invpartnumberConformance :: (Maybe String)
    , invpartnumberOs :: (Maybe String)
    , invpartnumberRevision :: (Maybe String)
    , invpartnumberSecurity :: (Maybe String)
    , invpartnumberUserlevel :: (Maybe String)
    , invpartnumberVendor :: (Maybe String)
    , invpartnumberRole :: (Maybe String)
    } deriving (Eq,Show)
data Invpartnumber_ = Invpartnumber_Str String
		    | Invpartnumber_Link Link
		    | Invpartnumber_Olink Olink
		    | Invpartnumber_Ulink Ulink
		    | Invpartnumber_Emphasis Emphasis
		    | Invpartnumber_Trademark Trademark
		    | Invpartnumber_Replaceable Replaceable
		    | Invpartnumber_Remark Remark
		    | Invpartnumber_Subscript Subscript
		    | Invpartnumber_Superscript Superscript
		    | Invpartnumber_Inlinegraphic Inlinegraphic
		    | Invpartnumber_Inlinemediaobject Inlinemediaobject
		    | Invpartnumber_Indexterm Indexterm
		    deriving (Eq,Show)
data Invpartnumber_Revisionflag = Invpartnumber_Revisionflag_Changed
				   |  Invpartnumber_Revisionflag_Added  | 
				  Invpartnumber_Revisionflag_Deleted  | 
				  Invpartnumber_Revisionflag_Off
				deriving (Eq,Show)
data Issuenum = Issuenum Issuenum_Attrs [Issuenum_]
	      deriving (Eq,Show)
data Issuenum_Attrs = Issuenum_Attrs
    { issuenumId :: (Maybe String)
    , issuenumLang :: (Maybe String)
    , issuenumRemap :: (Maybe String)
    , issuenumXreflabel :: (Maybe String)
    , issuenumRevisionflag :: (Maybe Issuenum_Revisionflag)
    , issuenumArch :: (Maybe String)
    , issuenumCondition :: (Maybe String)
    , issuenumConformance :: (Maybe String)
    , issuenumOs :: (Maybe String)
    , issuenumRevision :: (Maybe String)
    , issuenumSecurity :: (Maybe String)
    , issuenumUserlevel :: (Maybe String)
    , issuenumVendor :: (Maybe String)
    , issuenumRole :: (Maybe String)
    } deriving (Eq,Show)
data Issuenum_ = Issuenum_Str String
	       | Issuenum_Link Link
	       | Issuenum_Olink Olink
	       | Issuenum_Ulink Ulink
	       | Issuenum_Emphasis Emphasis
	       | Issuenum_Trademark Trademark
	       | Issuenum_Replaceable Replaceable
	       | Issuenum_Remark Remark
	       | Issuenum_Subscript Subscript
	       | Issuenum_Superscript Superscript
	       | Issuenum_Inlinegraphic Inlinegraphic
	       | Issuenum_Inlinemediaobject Inlinemediaobject
	       | Issuenum_Indexterm Indexterm
	       deriving (Eq,Show)
data Issuenum_Revisionflag = Issuenum_Revisionflag_Changed  | 
			     Issuenum_Revisionflag_Added  |  Issuenum_Revisionflag_Deleted  | 
			     Issuenum_Revisionflag_Off
			   deriving (Eq,Show)
data Legalnotice = Legalnotice Legalnotice_Attrs (Maybe Blockinfo)
			       (Maybe Title)
			       [(OneOf24 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Formalpara Para Simpara Blockquote Indexterm Beginpage)]
		 deriving (Eq,Show)
data Legalnotice_Attrs = Legalnotice_Attrs
    { legalnoticeId :: (Maybe String)
    , legalnoticeLang :: (Maybe String)
    , legalnoticeRemap :: (Maybe String)
    , legalnoticeXreflabel :: (Maybe String)
    , legalnoticeRevisionflag :: (Maybe Legalnotice_Revisionflag)
    , legalnoticeArch :: (Maybe String)
    , legalnoticeCondition :: (Maybe String)
    , legalnoticeConformance :: (Maybe String)
    , legalnoticeOs :: (Maybe String)
    , legalnoticeRevision :: (Maybe String)
    , legalnoticeSecurity :: (Maybe String)
    , legalnoticeUserlevel :: (Maybe String)
    , legalnoticeVendor :: (Maybe String)
    , legalnoticeRole :: (Maybe String)
    } deriving (Eq,Show)
data Legalnotice_Revisionflag = Legalnotice_Revisionflag_Changed
				 |  Legalnotice_Revisionflag_Added  | 
				Legalnotice_Revisionflag_Deleted  |  Legalnotice_Revisionflag_Off
			      deriving (Eq,Show)
data Modespec = Modespec Modespec_Attrs [Modespec_]
	      deriving (Eq,Show)
data Modespec_Attrs = Modespec_Attrs
    { modespecApplication :: (Maybe Modespec_Application)
    , modespecId :: (Maybe String)
    , modespecLang :: (Maybe String)
    , modespecRemap :: (Maybe String)
    , modespecXreflabel :: (Maybe String)
    , modespecRevisionflag :: (Maybe Modespec_Revisionflag)
    , modespecArch :: (Maybe String)
    , modespecCondition :: (Maybe String)
    , modespecConformance :: (Maybe String)
    , modespecOs :: (Maybe String)
    , modespecRevision :: (Maybe String)
    , modespecSecurity :: (Maybe String)
    , modespecUserlevel :: (Maybe String)
    , modespecVendor :: (Maybe String)
    , modespecRole :: (Maybe String)
    } deriving (Eq,Show)
data Modespec_ = Modespec_Str String
	       | Modespec_Link Link
	       | Modespec_Olink Olink
	       | Modespec_Ulink Ulink
	       | Modespec_Emphasis Emphasis
	       | Modespec_Trademark Trademark
	       | Modespec_Replaceable Replaceable
	       | Modespec_Remark Remark
	       | Modespec_Subscript Subscript
	       | Modespec_Superscript Superscript
	       | Modespec_Inlinegraphic Inlinegraphic
	       | Modespec_Inlinemediaobject Inlinemediaobject
	       | Modespec_Indexterm Indexterm
	       deriving (Eq,Show)
data Modespec_Application = Modespec_Application_BMP  | 
			    Modespec_Application_CGM_CHAR  |  Modespec_Application_CGM_BINARY
			     |  Modespec_Application_CGM_CLEAR  |  Modespec_Application_DITROFF
			     |  Modespec_Application_DVI  |  Modespec_Application_EPS  | 
			    Modespec_Application_EQN  |  Modespec_Application_FAX  | 
			    Modespec_Application_GIF  |  Modespec_Application_GIF87a  | 
			    Modespec_Application_GIF89a  |  Modespec_Application_JPG  | 
			    Modespec_Application_JPEG  |  Modespec_Application_IGES  | 
			    Modespec_Application_PCX  |  Modespec_Application_PIC  | 
			    Modespec_Application_PNG  |  Modespec_Application_PS  | 
			    Modespec_Application_SGML  |  Modespec_Application_TBL  | 
			    Modespec_Application_TEX  |  Modespec_Application_TIFF  | 
			    Modespec_Application_WMF  |  Modespec_Application_WPG  | 
			    Modespec_Application_SVG  |  Modespec_Application_Linespecific
			  deriving (Eq,Show)
data Modespec_Revisionflag = Modespec_Revisionflag_Changed  | 
			     Modespec_Revisionflag_Added  |  Modespec_Revisionflag_Deleted  | 
			     Modespec_Revisionflag_Off
			   deriving (Eq,Show)
data Orgname = Orgname Orgname_Attrs [Orgname_]
	     deriving (Eq,Show)
data Orgname_Attrs = Orgname_Attrs
    { orgnameId :: (Maybe String)
    , orgnameLang :: (Maybe String)
    , orgnameRemap :: (Maybe String)
    , orgnameXreflabel :: (Maybe String)
    , orgnameRevisionflag :: (Maybe Orgname_Revisionflag)
    , orgnameArch :: (Maybe String)
    , orgnameCondition :: (Maybe String)
    , orgnameConformance :: (Maybe String)
    , orgnameOs :: (Maybe String)
    , orgnameRevision :: (Maybe String)
    , orgnameSecurity :: (Maybe String)
    , orgnameUserlevel :: (Maybe String)
    , orgnameVendor :: (Maybe String)
    , orgnameClass :: (Maybe Orgname_Class)
    , orgnameOtherclass :: (Maybe String)
    , orgnameRole :: (Maybe String)
    } deriving (Eq,Show)
data Orgname_ = Orgname_Str String
	      | Orgname_Link Link
	      | Orgname_Olink Olink
	      | Orgname_Ulink Ulink
	      | Orgname_Emphasis Emphasis
	      | Orgname_Trademark Trademark
	      | Orgname_Replaceable Replaceable
	      | Orgname_Remark Remark
	      | Orgname_Subscript Subscript
	      | Orgname_Superscript Superscript
	      | Orgname_Inlinegraphic Inlinegraphic
	      | Orgname_Inlinemediaobject Inlinemediaobject
	      | Orgname_Indexterm Indexterm
	      deriving (Eq,Show)
data Orgname_Revisionflag = Orgname_Revisionflag_Changed  | 
			    Orgname_Revisionflag_Added  |  Orgname_Revisionflag_Deleted  | 
			    Orgname_Revisionflag_Off
			  deriving (Eq,Show)
data Orgname_Class = Orgname_Class_Corporation  | 
		     Orgname_Class_Nonprofit  |  Orgname_Class_Consortium  | 
		     Orgname_Class_Informal  |  Orgname_Class_Other
		   deriving (Eq,Show)
data Othercredit = Othercredit Othercredit_Attrs
			       (OneOf2 Personname [(OneOf8 Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib)])
			       [(OneOf3 Personblurb Email Address)]
		 deriving (Eq,Show)
data Othercredit_Attrs = Othercredit_Attrs
    { othercreditId :: (Maybe String)
    , othercreditLang :: (Maybe String)
    , othercreditRemap :: (Maybe String)
    , othercreditXreflabel :: (Maybe String)
    , othercreditRevisionflag :: (Maybe Othercredit_Revisionflag)
    , othercreditArch :: (Maybe String)
    , othercreditCondition :: (Maybe String)
    , othercreditConformance :: (Maybe String)
    , othercreditOs :: (Maybe String)
    , othercreditRevision :: (Maybe String)
    , othercreditSecurity :: (Maybe String)
    , othercreditUserlevel :: (Maybe String)
    , othercreditVendor :: (Maybe String)
    , othercreditRole :: (Maybe String)
    } deriving (Eq,Show)
data Othercredit_Revisionflag = Othercredit_Revisionflag_Changed
				 |  Othercredit_Revisionflag_Added  | 
				Othercredit_Revisionflag_Deleted  |  Othercredit_Revisionflag_Off
			      deriving (Eq,Show)
data Pagenums = Pagenums Pagenums_Attrs [Pagenums_]
	      deriving (Eq,Show)
data Pagenums_Attrs = Pagenums_Attrs
    { pagenumsId :: (Maybe String)
    , pagenumsLang :: (Maybe String)
    , pagenumsRemap :: (Maybe String)
    , pagenumsXreflabel :: (Maybe String)
    , pagenumsRevisionflag :: (Maybe Pagenums_Revisionflag)
    , pagenumsArch :: (Maybe String)
    , pagenumsCondition :: (Maybe String)
    , pagenumsConformance :: (Maybe String)
    , pagenumsOs :: (Maybe String)
    , pagenumsRevision :: (Maybe String)
    , pagenumsSecurity :: (Maybe String)
    , pagenumsUserlevel :: (Maybe String)
    , pagenumsVendor :: (Maybe String)
    , pagenumsRole :: (Maybe String)
    } deriving (Eq,Show)
data Pagenums_ = Pagenums_Str String
	       | Pagenums_Link Link
	       | Pagenums_Olink Olink
	       | Pagenums_Ulink Ulink
	       | Pagenums_Emphasis Emphasis
	       | Pagenums_Trademark Trademark
	       | Pagenums_Replaceable Replaceable
	       | Pagenums_Remark Remark
	       | Pagenums_Subscript Subscript
	       | Pagenums_Superscript Superscript
	       | Pagenums_Inlinegraphic Inlinegraphic
	       | Pagenums_Inlinemediaobject Inlinemediaobject
	       | Pagenums_Indexterm Indexterm
	       deriving (Eq,Show)
data Pagenums_Revisionflag = Pagenums_Revisionflag_Changed  | 
			     Pagenums_Revisionflag_Added  |  Pagenums_Revisionflag_Deleted  | 
			     Pagenums_Revisionflag_Off
			   deriving (Eq,Show)
data Contrib = Contrib Contrib_Attrs [Contrib_]
	     deriving (Eq,Show)
data Contrib_Attrs = Contrib_Attrs
    { contribId :: (Maybe String)
    , contribLang :: (Maybe String)
    , contribRemap :: (Maybe String)
    , contribXreflabel :: (Maybe String)
    , contribRevisionflag :: (Maybe Contrib_Revisionflag)
    , contribArch :: (Maybe String)
    , contribCondition :: (Maybe String)
    , contribConformance :: (Maybe String)
    , contribOs :: (Maybe String)
    , contribRevision :: (Maybe String)
    , contribSecurity :: (Maybe String)
    , contribUserlevel :: (Maybe String)
    , contribVendor :: (Maybe String)
    , contribRole :: (Maybe String)
    } deriving (Eq,Show)
data Contrib_ = Contrib_Str String
	      | Contrib_Link Link
	      | Contrib_Olink Olink
	      | Contrib_Ulink Ulink
	      | Contrib_Emphasis Emphasis
	      | Contrib_Trademark Trademark
	      | Contrib_Replaceable Replaceable
	      | Contrib_Remark Remark
	      | Contrib_Subscript Subscript
	      | Contrib_Superscript Superscript
	      | Contrib_Inlinegraphic Inlinegraphic
	      | Contrib_Inlinemediaobject Inlinemediaobject
	      | Contrib_Indexterm Indexterm
	      deriving (Eq,Show)
data Contrib_Revisionflag = Contrib_Revisionflag_Changed  | 
			    Contrib_Revisionflag_Added  |  Contrib_Revisionflag_Deleted  | 
			    Contrib_Revisionflag_Off
			  deriving (Eq,Show)
data Firstname = Firstname Firstname_Attrs [Firstname_]
	       deriving (Eq,Show)
data Firstname_Attrs = Firstname_Attrs
    { firstnameId :: (Maybe String)
    , firstnameLang :: (Maybe String)
    , firstnameRemap :: (Maybe String)
    , firstnameXreflabel :: (Maybe String)
    , firstnameRevisionflag :: (Maybe Firstname_Revisionflag)
    , firstnameArch :: (Maybe String)
    , firstnameCondition :: (Maybe String)
    , firstnameConformance :: (Maybe String)
    , firstnameOs :: (Maybe String)
    , firstnameRevision :: (Maybe String)
    , firstnameSecurity :: (Maybe String)
    , firstnameUserlevel :: (Maybe String)
    , firstnameVendor :: (Maybe String)
    , firstnameRole :: (Maybe String)
    } deriving (Eq,Show)
data Firstname_ = Firstname_Str String
		| Firstname_Link Link
		| Firstname_Olink Olink
		| Firstname_Ulink Ulink
		| Firstname_Emphasis Emphasis
		| Firstname_Trademark Trademark
		| Firstname_Replaceable Replaceable
		| Firstname_Remark Remark
		| Firstname_Subscript Subscript
		| Firstname_Superscript Superscript
		| Firstname_Inlinegraphic Inlinegraphic
		| Firstname_Inlinemediaobject Inlinemediaobject
		| Firstname_Indexterm Indexterm
		deriving (Eq,Show)
data Firstname_Revisionflag = Firstname_Revisionflag_Changed  | 
			      Firstname_Revisionflag_Added  |  Firstname_Revisionflag_Deleted  | 
			      Firstname_Revisionflag_Off
			    deriving (Eq,Show)
data Honorific = Honorific Honorific_Attrs [Honorific_]
	       deriving (Eq,Show)
data Honorific_Attrs = Honorific_Attrs
    { honorificId :: (Maybe String)
    , honorificLang :: (Maybe String)
    , honorificRemap :: (Maybe String)
    , honorificXreflabel :: (Maybe String)
    , honorificRevisionflag :: (Maybe Honorific_Revisionflag)
    , honorificArch :: (Maybe String)
    , honorificCondition :: (Maybe String)
    , honorificConformance :: (Maybe String)
    , honorificOs :: (Maybe String)
    , honorificRevision :: (Maybe String)
    , honorificSecurity :: (Maybe String)
    , honorificUserlevel :: (Maybe String)
    , honorificVendor :: (Maybe String)
    , honorificRole :: (Maybe String)
    } deriving (Eq,Show)
data Honorific_ = Honorific_Str String
		| Honorific_Link Link
		| Honorific_Olink Olink
		| Honorific_Ulink Ulink
		| Honorific_Emphasis Emphasis
		| Honorific_Trademark Trademark
		| Honorific_Replaceable Replaceable
		| Honorific_Remark Remark
		| Honorific_Subscript Subscript
		| Honorific_Superscript Superscript
		| Honorific_Inlinegraphic Inlinegraphic
		| Honorific_Inlinemediaobject Inlinemediaobject
		| Honorific_Indexterm Indexterm
		deriving (Eq,Show)
data Honorific_Revisionflag = Honorific_Revisionflag_Changed  | 
			      Honorific_Revisionflag_Added  |  Honorific_Revisionflag_Deleted  | 
			      Honorific_Revisionflag_Off
			    deriving (Eq,Show)
data Lineage = Lineage Lineage_Attrs [Lineage_]
	     deriving (Eq,Show)
data Lineage_Attrs = Lineage_Attrs
    { lineageId :: (Maybe String)
    , lineageLang :: (Maybe String)
    , lineageRemap :: (Maybe String)
    , lineageXreflabel :: (Maybe String)
    , lineageRevisionflag :: (Maybe Lineage_Revisionflag)
    , lineageArch :: (Maybe String)
    , lineageCondition :: (Maybe String)
    , lineageConformance :: (Maybe String)
    , lineageOs :: (Maybe String)
    , lineageRevision :: (Maybe String)
    , lineageSecurity :: (Maybe String)
    , lineageUserlevel :: (Maybe String)
    , lineageVendor :: (Maybe String)
    , lineageRole :: (Maybe String)
    } deriving (Eq,Show)
data Lineage_ = Lineage_Str String
	      | Lineage_Link Link
	      | Lineage_Olink Olink
	      | Lineage_Ulink Ulink
	      | Lineage_Emphasis Emphasis
	      | Lineage_Trademark Trademark
	      | Lineage_Replaceable Replaceable
	      | Lineage_Remark Remark
	      | Lineage_Subscript Subscript
	      | Lineage_Superscript Superscript
	      | Lineage_Inlinegraphic Inlinegraphic
	      | Lineage_Inlinemediaobject Inlinemediaobject
	      | Lineage_Indexterm Indexterm
	      deriving (Eq,Show)
data Lineage_Revisionflag = Lineage_Revisionflag_Changed  | 
			    Lineage_Revisionflag_Added  |  Lineage_Revisionflag_Deleted  | 
			    Lineage_Revisionflag_Off
			  deriving (Eq,Show)
data Othername = Othername Othername_Attrs [Othername_]
	       deriving (Eq,Show)
data Othername_Attrs = Othername_Attrs
    { othernameId :: (Maybe String)
    , othernameLang :: (Maybe String)
    , othernameRemap :: (Maybe String)
    , othernameXreflabel :: (Maybe String)
    , othernameRevisionflag :: (Maybe Othername_Revisionflag)
    , othernameArch :: (Maybe String)
    , othernameCondition :: (Maybe String)
    , othernameConformance :: (Maybe String)
    , othernameOs :: (Maybe String)
    , othernameRevision :: (Maybe String)
    , othernameSecurity :: (Maybe String)
    , othernameUserlevel :: (Maybe String)
    , othernameVendor :: (Maybe String)
    , othernameRole :: (Maybe String)
    } deriving (Eq,Show)
data Othername_ = Othername_Str String
		| Othername_Link Link
		| Othername_Olink Olink
		| Othername_Ulink Ulink
		| Othername_Emphasis Emphasis
		| Othername_Trademark Trademark
		| Othername_Replaceable Replaceable
		| Othername_Remark Remark
		| Othername_Subscript Subscript
		| Othername_Superscript Superscript
		| Othername_Inlinegraphic Inlinegraphic
		| Othername_Inlinemediaobject Inlinemediaobject
		| Othername_Indexterm Indexterm
		deriving (Eq,Show)
data Othername_Revisionflag = Othername_Revisionflag_Changed  | 
			      Othername_Revisionflag_Added  |  Othername_Revisionflag_Deleted  | 
			      Othername_Revisionflag_Off
			    deriving (Eq,Show)
data Surname = Surname Surname_Attrs [Surname_]
	     deriving (Eq,Show)
data Surname_Attrs = Surname_Attrs
    { surnameId :: (Maybe String)
    , surnameLang :: (Maybe String)
    , surnameRemap :: (Maybe String)
    , surnameXreflabel :: (Maybe String)
    , surnameRevisionflag :: (Maybe Surname_Revisionflag)
    , surnameArch :: (Maybe String)
    , surnameCondition :: (Maybe String)
    , surnameConformance :: (Maybe String)
    , surnameOs :: (Maybe String)
    , surnameRevision :: (Maybe String)
    , surnameSecurity :: (Maybe String)
    , surnameUserlevel :: (Maybe String)
    , surnameVendor :: (Maybe String)
    , surnameRole :: (Maybe String)
    } deriving (Eq,Show)
data Surname_ = Surname_Str String
	      | Surname_Link Link
	      | Surname_Olink Olink
	      | Surname_Ulink Ulink
	      | Surname_Emphasis Emphasis
	      | Surname_Trademark Trademark
	      | Surname_Replaceable Replaceable
	      | Surname_Remark Remark
	      | Surname_Subscript Subscript
	      | Surname_Superscript Superscript
	      | Surname_Inlinegraphic Inlinegraphic
	      | Surname_Inlinemediaobject Inlinemediaobject
	      | Surname_Indexterm Indexterm
	      deriving (Eq,Show)
data Surname_Revisionflag = Surname_Revisionflag_Changed  | 
			    Surname_Revisionflag_Added  |  Surname_Revisionflag_Deleted  | 
			    Surname_Revisionflag_Off
			  deriving (Eq,Show)
data Printhistory = Printhistory Printhistory_Attrs
				 [(OneOf3 Formalpara Para Simpara)]
		  deriving (Eq,Show)
data Printhistory_Attrs = Printhistory_Attrs
    { printhistoryId :: (Maybe String)
    , printhistoryLang :: (Maybe String)
    , printhistoryRemap :: (Maybe String)
    , printhistoryXreflabel :: (Maybe String)
    , printhistoryRevisionflag :: (Maybe Printhistory_Revisionflag)
    , printhistoryArch :: (Maybe String)
    , printhistoryCondition :: (Maybe String)
    , printhistoryConformance :: (Maybe String)
    , printhistoryOs :: (Maybe String)
    , printhistoryRevision :: (Maybe String)
    , printhistorySecurity :: (Maybe String)
    , printhistoryUserlevel :: (Maybe String)
    , printhistoryVendor :: (Maybe String)
    , printhistoryRole :: (Maybe String)
    } deriving (Eq,Show)
data Printhistory_Revisionflag = Printhistory_Revisionflag_Changed
				  |  Printhistory_Revisionflag_Added  | 
				 Printhistory_Revisionflag_Deleted  |  Printhistory_Revisionflag_Off
			       deriving (Eq,Show)
data Productname = Productname Productname_Attrs [Productname_]
		 deriving (Eq,Show)
data Productname_Attrs = Productname_Attrs
    { productnameClass :: (Defaultable Productname_Class)
    , productnameId :: (Maybe String)
    , productnameLang :: (Maybe String)
    , productnameRemap :: (Maybe String)
    , productnameXreflabel :: (Maybe String)
    , productnameRevisionflag :: (Maybe Productname_Revisionflag)
    , productnameArch :: (Maybe String)
    , productnameCondition :: (Maybe String)
    , productnameConformance :: (Maybe String)
    , productnameOs :: (Maybe String)
    , productnameRevision :: (Maybe String)
    , productnameSecurity :: (Maybe String)
    , productnameUserlevel :: (Maybe String)
    , productnameVendor :: (Maybe String)
    , productnameRole :: (Maybe String)
    } deriving (Eq,Show)
data Productname_ = Productname_Str String
		  | Productname_Footnoteref Footnoteref
		  | Productname_Xref Xref
		  | Productname_Abbrev Abbrev
		  | Productname_Acronym Acronym
		  | Productname_Citation Citation
		  | Productname_Citerefentry Citerefentry
		  | Productname_Citetitle Citetitle
		  | Productname_Emphasis Emphasis
		  | Productname_Firstterm Firstterm
		  | Productname_Foreignphrase Foreignphrase
		  | Productname_Glossterm Glossterm
		  | Productname_Footnote Footnote
		  | Productname_Phrase Phrase
		  | Productname_Quote Quote
		  | Productname_Trademark Trademark
		  | Productname_Wordasword Wordasword
		  | Productname_Personname Personname
		  | Productname_Link Link
		  | Productname_Olink Olink
		  | Productname_Ulink Ulink
		  | Productname_Action Action
		  | Productname_Application Application
		  | Productname_Classname Classname
		  | Productname_Methodname Methodname
		  | Productname_Interfacename Interfacename
		  | Productname_Exceptionname Exceptionname
		  | Productname_Ooclass Ooclass
		  | Productname_Oointerface Oointerface
		  | Productname_Ooexception Ooexception
		  | Productname_Command Command
		  | Productname_Computeroutput Computeroutput
		  | Productname_Database Database
		  | Productname_Email Email
		  | Productname_Envar Envar
		  | Productname_Errorcode Errorcode
		  | Productname_Errorname Errorname
		  | Productname_Errortype Errortype
		  | Productname_Errortext Errortext
		  | Productname_Filename Filename
		  | Productname_Function Function
		  | Productname_Guibutton Guibutton
		  | Productname_Guiicon Guiicon
		  | Productname_Guilabel Guilabel
		  | Productname_Guimenu Guimenu
		  | Productname_Guimenuitem Guimenuitem
		  | Productname_Guisubmenu Guisubmenu
		  | Productname_Hardware Hardware
		  | Productname_Interface Interface
		  | Productname_Keycap Keycap
		  | Productname_Keycode Keycode
		  | Productname_Keycombo Keycombo
		  | Productname_Keysym Keysym
		  | Productname_Literal Literal
		  | Productname_Constant Constant
		  | Productname_Markup Markup
		  | Productname_Medialabel Medialabel
		  | Productname_Menuchoice Menuchoice
		  | Productname_Mousebutton Mousebutton
		  | Productname_Option Option
		  | Productname_Optional Optional
		  | Productname_Parameter Parameter
		  | Productname_Prompt Prompt
		  | Productname_Property Property
		  | Productname_Replaceable Replaceable
		  | Productname_Returnvalue Returnvalue
		  | Productname_Sgmltag Sgmltag
		  | Productname_Structfield Structfield
		  | Productname_Structname Structname
		  | Productname_Symbol Symbol
		  | Productname_Systemitem Systemitem
		  | Productname_Token Token
		  | Productname_Type Type
		  | Productname_Userinput Userinput
		  | Productname_Varname Varname
		  | Productname_Anchor Anchor
		  | Productname_Author Author
		  | Productname_Authorinitials Authorinitials
		  | Productname_Corpauthor Corpauthor
		  | Productname_Modespec Modespec
		  | Productname_Othercredit Othercredit
		  | Productname_Productname Productname
		  | Productname_Productnumber Productnumber
		  | Productname_Revhistory Revhistory
		  | Productname_Remark Remark
		  | Productname_Subscript Subscript
		  | Productname_Superscript Superscript
		  | Productname_Inlinegraphic Inlinegraphic
		  | Productname_Inlinemediaobject Inlinemediaobject
		  | Productname_Inlineequation Inlineequation
		  | Productname_Synopsis Synopsis
		  | Productname_Cmdsynopsis Cmdsynopsis
		  | Productname_Funcsynopsis Funcsynopsis
		  | Productname_Classsynopsis Classsynopsis
		  | Productname_Fieldsynopsis Fieldsynopsis
		  | Productname_Constructorsynopsis Constructorsynopsis
		  | Productname_Destructorsynopsis Destructorsynopsis
		  | Productname_Methodsynopsis Methodsynopsis
		  | Productname_Indexterm Indexterm
		  | Productname_Beginpage Beginpage
		  deriving (Eq,Show)
data Productname_Class = Productname_Class_Service  | 
			 Productname_Class_Trade  |  Productname_Class_Registered  | 
			 Productname_Class_Copyright
		       deriving (Eq,Show)
data Productname_Revisionflag = Productname_Revisionflag_Changed
				 |  Productname_Revisionflag_Added  | 
				Productname_Revisionflag_Deleted  |  Productname_Revisionflag_Off
			      deriving (Eq,Show)
data Productnumber = Productnumber Productnumber_Attrs
				   [Productnumber_]
		   deriving (Eq,Show)
data Productnumber_Attrs = Productnumber_Attrs
    { productnumberId :: (Maybe String)
    , productnumberLang :: (Maybe String)
    , productnumberRemap :: (Maybe String)
    , productnumberXreflabel :: (Maybe String)
    , productnumberRevisionflag :: (Maybe Productnumber_Revisionflag)
    , productnumberArch :: (Maybe String)
    , productnumberCondition :: (Maybe String)
    , productnumberConformance :: (Maybe String)
    , productnumberOs :: (Maybe String)
    , productnumberRevision :: (Maybe String)
    , productnumberSecurity :: (Maybe String)
    , productnumberUserlevel :: (Maybe String)
    , productnumberVendor :: (Maybe String)
    , productnumberRole :: (Maybe String)
    } deriving (Eq,Show)
data Productnumber_ = Productnumber_Str String
		    | Productnumber_Link Link
		    | Productnumber_Olink Olink
		    | Productnumber_Ulink Ulink
		    | Productnumber_Emphasis Emphasis
		    | Productnumber_Trademark Trademark
		    | Productnumber_Replaceable Replaceable
		    | Productnumber_Remark Remark
		    | Productnumber_Subscript Subscript
		    | Productnumber_Superscript Superscript
		    | Productnumber_Inlinegraphic Inlinegraphic
		    | Productnumber_Inlinemediaobject Inlinemediaobject
		    | Productnumber_Indexterm Indexterm
		    deriving (Eq,Show)
data Productnumber_Revisionflag = Productnumber_Revisionflag_Changed
				   |  Productnumber_Revisionflag_Added  | 
				  Productnumber_Revisionflag_Deleted  | 
				  Productnumber_Revisionflag_Off
				deriving (Eq,Show)
data Pubdate = Pubdate Pubdate_Attrs [Pubdate_]
	     deriving (Eq,Show)
data Pubdate_Attrs = Pubdate_Attrs
    { pubdateId :: (Maybe String)
    , pubdateLang :: (Maybe String)
    , pubdateRemap :: (Maybe String)
    , pubdateXreflabel :: (Maybe String)
    , pubdateRevisionflag :: (Maybe Pubdate_Revisionflag)
    , pubdateArch :: (Maybe String)
    , pubdateCondition :: (Maybe String)
    , pubdateConformance :: (Maybe String)
    , pubdateOs :: (Maybe String)
    , pubdateRevision :: (Maybe String)
    , pubdateSecurity :: (Maybe String)
    , pubdateUserlevel :: (Maybe String)
    , pubdateVendor :: (Maybe String)
    , pubdateRole :: (Maybe String)
    } deriving (Eq,Show)
data Pubdate_ = Pubdate_Str String
	      | Pubdate_Link Link
	      | Pubdate_Olink Olink
	      | Pubdate_Ulink Ulink
	      | Pubdate_Emphasis Emphasis
	      | Pubdate_Trademark Trademark
	      | Pubdate_Replaceable Replaceable
	      | Pubdate_Remark Remark
	      | Pubdate_Subscript Subscript
	      | Pubdate_Superscript Superscript
	      | Pubdate_Inlinegraphic Inlinegraphic
	      | Pubdate_Inlinemediaobject Inlinemediaobject
	      | Pubdate_Indexterm Indexterm
	      deriving (Eq,Show)
data Pubdate_Revisionflag = Pubdate_Revisionflag_Changed  | 
			    Pubdate_Revisionflag_Added  |  Pubdate_Revisionflag_Deleted  | 
			    Pubdate_Revisionflag_Off
			  deriving (Eq,Show)
data Publisher = Publisher Publisher_Attrs Publishername [Address]
	       deriving (Eq,Show)
data Publisher_Attrs = Publisher_Attrs
    { publisherId :: (Maybe String)
    , publisherLang :: (Maybe String)
    , publisherRemap :: (Maybe String)
    , publisherXreflabel :: (Maybe String)
    , publisherRevisionflag :: (Maybe Publisher_Revisionflag)
    , publisherArch :: (Maybe String)
    , publisherCondition :: (Maybe String)
    , publisherConformance :: (Maybe String)
    , publisherOs :: (Maybe String)
    , publisherRevision :: (Maybe String)
    , publisherSecurity :: (Maybe String)
    , publisherUserlevel :: (Maybe String)
    , publisherVendor :: (Maybe String)
    , publisherRole :: (Maybe String)
    } deriving (Eq,Show)
data Publisher_Revisionflag = Publisher_Revisionflag_Changed  | 
			      Publisher_Revisionflag_Added  |  Publisher_Revisionflag_Deleted  | 
			      Publisher_Revisionflag_Off
			    deriving (Eq,Show)
data Publishername = Publishername Publishername_Attrs
				   [Publishername_]
		   deriving (Eq,Show)
data Publishername_Attrs = Publishername_Attrs
    { publishernameId :: (Maybe String)
    , publishernameLang :: (Maybe String)
    , publishernameRemap :: (Maybe String)
    , publishernameXreflabel :: (Maybe String)
    , publishernameRevisionflag :: (Maybe Publishername_Revisionflag)
    , publishernameArch :: (Maybe String)
    , publishernameCondition :: (Maybe String)
    , publishernameConformance :: (Maybe String)
    , publishernameOs :: (Maybe String)
    , publishernameRevision :: (Maybe String)
    , publishernameSecurity :: (Maybe String)
    , publishernameUserlevel :: (Maybe String)
    , publishernameVendor :: (Maybe String)
    , publishernameRole :: (Maybe String)
    } deriving (Eq,Show)
data Publishername_ = Publishername_Str String
		    | Publishername_Link Link
		    | Publishername_Olink Olink
		    | Publishername_Ulink Ulink
		    | Publishername_Emphasis Emphasis
		    | Publishername_Trademark Trademark
		    | Publishername_Replaceable Replaceable
		    | Publishername_Remark Remark
		    | Publishername_Subscript Subscript
		    | Publishername_Superscript Superscript
		    | Publishername_Inlinegraphic Inlinegraphic
		    | Publishername_Inlinemediaobject Inlinemediaobject
		    | Publishername_Indexterm Indexterm
		    deriving (Eq,Show)
data Publishername_Revisionflag = Publishername_Revisionflag_Changed
				   |  Publishername_Revisionflag_Added  | 
				  Publishername_Revisionflag_Deleted  | 
				  Publishername_Revisionflag_Off
				deriving (Eq,Show)
data Pubsnumber = Pubsnumber Pubsnumber_Attrs [Pubsnumber_]
		deriving (Eq,Show)
data Pubsnumber_Attrs = Pubsnumber_Attrs
    { pubsnumberId :: (Maybe String)
    , pubsnumberLang :: (Maybe String)
    , pubsnumberRemap :: (Maybe String)
    , pubsnumberXreflabel :: (Maybe String)
    , pubsnumberRevisionflag :: (Maybe Pubsnumber_Revisionflag)
    , pubsnumberArch :: (Maybe String)
    , pubsnumberCondition :: (Maybe String)
    , pubsnumberConformance :: (Maybe String)
    , pubsnumberOs :: (Maybe String)
    , pubsnumberRevision :: (Maybe String)
    , pubsnumberSecurity :: (Maybe String)
    , pubsnumberUserlevel :: (Maybe String)
    , pubsnumberVendor :: (Maybe String)
    , pubsnumberRole :: (Maybe String)
    } deriving (Eq,Show)
data Pubsnumber_ = Pubsnumber_Str String
		 | Pubsnumber_Link Link
		 | Pubsnumber_Olink Olink
		 | Pubsnumber_Ulink Ulink
		 | Pubsnumber_Emphasis Emphasis
		 | Pubsnumber_Trademark Trademark
		 | Pubsnumber_Replaceable Replaceable
		 | Pubsnumber_Remark Remark
		 | Pubsnumber_Subscript Subscript
		 | Pubsnumber_Superscript Superscript
		 | Pubsnumber_Inlinegraphic Inlinegraphic
		 | Pubsnumber_Inlinemediaobject Inlinemediaobject
		 | Pubsnumber_Indexterm Indexterm
		 deriving (Eq,Show)
data Pubsnumber_Revisionflag = Pubsnumber_Revisionflag_Changed  | 
			       Pubsnumber_Revisionflag_Added  |  Pubsnumber_Revisionflag_Deleted
			        |  Pubsnumber_Revisionflag_Off
			     deriving (Eq,Show)
data Releaseinfo = Releaseinfo Releaseinfo_Attrs [Releaseinfo_]
		 deriving (Eq,Show)
data Releaseinfo_Attrs = Releaseinfo_Attrs
    { releaseinfoId :: (Maybe String)
    , releaseinfoLang :: (Maybe String)
    , releaseinfoRemap :: (Maybe String)
    , releaseinfoXreflabel :: (Maybe String)
    , releaseinfoRevisionflag :: (Maybe Releaseinfo_Revisionflag)
    , releaseinfoArch :: (Maybe String)
    , releaseinfoCondition :: (Maybe String)
    , releaseinfoConformance :: (Maybe String)
    , releaseinfoOs :: (Maybe String)
    , releaseinfoRevision :: (Maybe String)
    , releaseinfoSecurity :: (Maybe String)
    , releaseinfoUserlevel :: (Maybe String)
    , releaseinfoVendor :: (Maybe String)
    , releaseinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Releaseinfo_ = Releaseinfo_Str String
		  | Releaseinfo_Link Link
		  | Releaseinfo_Olink Olink
		  | Releaseinfo_Ulink Ulink
		  | Releaseinfo_Emphasis Emphasis
		  | Releaseinfo_Trademark Trademark
		  | Releaseinfo_Replaceable Replaceable
		  | Releaseinfo_Remark Remark
		  | Releaseinfo_Subscript Subscript
		  | Releaseinfo_Superscript Superscript
		  | Releaseinfo_Inlinegraphic Inlinegraphic
		  | Releaseinfo_Inlinemediaobject Inlinemediaobject
		  | Releaseinfo_Indexterm Indexterm
		  deriving (Eq,Show)
data Releaseinfo_Revisionflag = Releaseinfo_Revisionflag_Changed
				 |  Releaseinfo_Revisionflag_Added  | 
				Releaseinfo_Revisionflag_Deleted  |  Releaseinfo_Revisionflag_Off
			      deriving (Eq,Show)
data Revhistory = Revhistory Revhistory_Attrs [Revision]
		deriving (Eq,Show)
data Revhistory_Attrs = Revhistory_Attrs
    { revhistoryId :: (Maybe String)
    , revhistoryLang :: (Maybe String)
    , revhistoryRemap :: (Maybe String)
    , revhistoryXreflabel :: (Maybe String)
    , revhistoryRevisionflag :: (Maybe Revhistory_Revisionflag)
    , revhistoryArch :: (Maybe String)
    , revhistoryCondition :: (Maybe String)
    , revhistoryConformance :: (Maybe String)
    , revhistoryOs :: (Maybe String)
    , revhistoryRevision :: (Maybe String)
    , revhistorySecurity :: (Maybe String)
    , revhistoryUserlevel :: (Maybe String)
    , revhistoryVendor :: (Maybe String)
    , revhistoryRole :: (Maybe String)
    } deriving (Eq,Show)
data Revhistory_Revisionflag = Revhistory_Revisionflag_Changed  | 
			       Revhistory_Revisionflag_Added  |  Revhistory_Revisionflag_Deleted
			        |  Revhistory_Revisionflag_Off
			     deriving (Eq,Show)
data Revision = Revision Revision_Attrs Revnumber Date
			 [Authorinitials] (Maybe (OneOf2 Revremark Revdescription))
	      deriving (Eq,Show)
data Revision_Attrs = Revision_Attrs
    { revisionId :: (Maybe String)
    , revisionLang :: (Maybe String)
    , revisionRemap :: (Maybe String)
    , revisionXreflabel :: (Maybe String)
    , revisionRevisionflag :: (Maybe Revision_Revisionflag)
    , revisionArch :: (Maybe String)
    , revisionCondition :: (Maybe String)
    , revisionConformance :: (Maybe String)
    , revisionOs :: (Maybe String)
    , revisionRevision :: (Maybe String)
    , revisionSecurity :: (Maybe String)
    , revisionUserlevel :: (Maybe String)
    , revisionVendor :: (Maybe String)
    , revisionRole :: (Maybe String)
    } deriving (Eq,Show)
data Revision_Revisionflag = Revision_Revisionflag_Changed  | 
			     Revision_Revisionflag_Added  |  Revision_Revisionflag_Deleted  | 
			     Revision_Revisionflag_Off
			   deriving (Eq,Show)
data Revnumber = Revnumber Revnumber_Attrs [Revnumber_]
	       deriving (Eq,Show)
data Revnumber_Attrs = Revnumber_Attrs
    { revnumberId :: (Maybe String)
    , revnumberLang :: (Maybe String)
    , revnumberRemap :: (Maybe String)
    , revnumberXreflabel :: (Maybe String)
    , revnumberRevisionflag :: (Maybe Revnumber_Revisionflag)
    , revnumberArch :: (Maybe String)
    , revnumberCondition :: (Maybe String)
    , revnumberConformance :: (Maybe String)
    , revnumberOs :: (Maybe String)
    , revnumberRevision :: (Maybe String)
    , revnumberSecurity :: (Maybe String)
    , revnumberUserlevel :: (Maybe String)
    , revnumberVendor :: (Maybe String)
    , revnumberRole :: (Maybe String)
    } deriving (Eq,Show)
data Revnumber_ = Revnumber_Str String
		| Revnumber_Link Link
		| Revnumber_Olink Olink
		| Revnumber_Ulink Ulink
		| Revnumber_Emphasis Emphasis
		| Revnumber_Trademark Trademark
		| Revnumber_Replaceable Replaceable
		| Revnumber_Remark Remark
		| Revnumber_Subscript Subscript
		| Revnumber_Superscript Superscript
		| Revnumber_Inlinegraphic Inlinegraphic
		| Revnumber_Inlinemediaobject Inlinemediaobject
		| Revnumber_Indexterm Indexterm
		deriving (Eq,Show)
data Revnumber_Revisionflag = Revnumber_Revisionflag_Changed  | 
			      Revnumber_Revisionflag_Added  |  Revnumber_Revisionflag_Deleted  | 
			      Revnumber_Revisionflag_Off
			    deriving (Eq,Show)
data Revremark = Revremark Revremark_Attrs [Revremark_]
	       deriving (Eq,Show)
data Revremark_Attrs = Revremark_Attrs
    { revremarkId :: (Maybe String)
    , revremarkLang :: (Maybe String)
    , revremarkRemap :: (Maybe String)
    , revremarkXreflabel :: (Maybe String)
    , revremarkRevisionflag :: (Maybe Revremark_Revisionflag)
    , revremarkArch :: (Maybe String)
    , revremarkCondition :: (Maybe String)
    , revremarkConformance :: (Maybe String)
    , revremarkOs :: (Maybe String)
    , revremarkRevision :: (Maybe String)
    , revremarkSecurity :: (Maybe String)
    , revremarkUserlevel :: (Maybe String)
    , revremarkVendor :: (Maybe String)
    , revremarkRole :: (Maybe String)
    } deriving (Eq,Show)
data Revremark_ = Revremark_Str String
		| Revremark_Link Link
		| Revremark_Olink Olink
		| Revremark_Ulink Ulink
		| Revremark_Emphasis Emphasis
		| Revremark_Trademark Trademark
		| Revremark_Replaceable Replaceable
		| Revremark_Remark Remark
		| Revremark_Subscript Subscript
		| Revremark_Superscript Superscript
		| Revremark_Inlinegraphic Inlinegraphic
		| Revremark_Inlinemediaobject Inlinemediaobject
		| Revremark_Indexterm Indexterm
		deriving (Eq,Show)
data Revremark_Revisionflag = Revremark_Revisionflag_Changed  | 
			      Revremark_Revisionflag_Added  |  Revremark_Revisionflag_Deleted  | 
			      Revremark_Revisionflag_Off
			    deriving (Eq,Show)
data Revdescription = Revdescription Revdescription_Attrs
				     [(OneOf49 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Procedure Anchor Bridgehead Remark Highlights Indexterm)]
		    deriving (Eq,Show)
data Revdescription_Attrs = Revdescription_Attrs
    { revdescriptionId :: (Maybe String)
    , revdescriptionLang :: (Maybe String)
    , revdescriptionRemap :: (Maybe String)
    , revdescriptionXreflabel :: (Maybe String)
    , revdescriptionRevisionflag :: (Maybe Revdescription_Revisionflag)
    , revdescriptionArch :: (Maybe String)
    , revdescriptionCondition :: (Maybe String)
    , revdescriptionConformance :: (Maybe String)
    , revdescriptionOs :: (Maybe String)
    , revdescriptionRevision :: (Maybe String)
    , revdescriptionSecurity :: (Maybe String)
    , revdescriptionUserlevel :: (Maybe String)
    , revdescriptionVendor :: (Maybe String)
    , revdescriptionRole :: (Maybe String)
    } deriving (Eq,Show)
data Revdescription_Revisionflag = Revdescription_Revisionflag_Changed
				    |  Revdescription_Revisionflag_Added  | 
				   Revdescription_Revisionflag_Deleted  | 
				   Revdescription_Revisionflag_Off
				 deriving (Eq,Show)
data Seriesvolnums = Seriesvolnums Seriesvolnums_Attrs
				   [Seriesvolnums_]
		   deriving (Eq,Show)
data Seriesvolnums_Attrs = Seriesvolnums_Attrs
    { seriesvolnumsId :: (Maybe String)
    , seriesvolnumsLang :: (Maybe String)
    , seriesvolnumsRemap :: (Maybe String)
    , seriesvolnumsXreflabel :: (Maybe String)
    , seriesvolnumsRevisionflag :: (Maybe Seriesvolnums_Revisionflag)
    , seriesvolnumsArch :: (Maybe String)
    , seriesvolnumsCondition :: (Maybe String)
    , seriesvolnumsConformance :: (Maybe String)
    , seriesvolnumsOs :: (Maybe String)
    , seriesvolnumsRevision :: (Maybe String)
    , seriesvolnumsSecurity :: (Maybe String)
    , seriesvolnumsUserlevel :: (Maybe String)
    , seriesvolnumsVendor :: (Maybe String)
    , seriesvolnumsRole :: (Maybe String)
    } deriving (Eq,Show)
data Seriesvolnums_ = Seriesvolnums_Str String
		    | Seriesvolnums_Link Link
		    | Seriesvolnums_Olink Olink
		    | Seriesvolnums_Ulink Ulink
		    | Seriesvolnums_Emphasis Emphasis
		    | Seriesvolnums_Trademark Trademark
		    | Seriesvolnums_Replaceable Replaceable
		    | Seriesvolnums_Remark Remark
		    | Seriesvolnums_Subscript Subscript
		    | Seriesvolnums_Superscript Superscript
		    | Seriesvolnums_Inlinegraphic Inlinegraphic
		    | Seriesvolnums_Inlinemediaobject Inlinemediaobject
		    | Seriesvolnums_Indexterm Indexterm
		    deriving (Eq,Show)
data Seriesvolnums_Revisionflag = Seriesvolnums_Revisionflag_Changed
				   |  Seriesvolnums_Revisionflag_Added  | 
				  Seriesvolnums_Revisionflag_Deleted  | 
				  Seriesvolnums_Revisionflag_Off
				deriving (Eq,Show)
data Volumenum = Volumenum Volumenum_Attrs [Volumenum_]
	       deriving (Eq,Show)
data Volumenum_Attrs = Volumenum_Attrs
    { volumenumId :: (Maybe String)
    , volumenumLang :: (Maybe String)
    , volumenumRemap :: (Maybe String)
    , volumenumXreflabel :: (Maybe String)
    , volumenumRevisionflag :: (Maybe Volumenum_Revisionflag)
    , volumenumArch :: (Maybe String)
    , volumenumCondition :: (Maybe String)
    , volumenumConformance :: (Maybe String)
    , volumenumOs :: (Maybe String)
    , volumenumRevision :: (Maybe String)
    , volumenumSecurity :: (Maybe String)
    , volumenumUserlevel :: (Maybe String)
    , volumenumVendor :: (Maybe String)
    , volumenumRole :: (Maybe String)
    } deriving (Eq,Show)
data Volumenum_ = Volumenum_Str String
		| Volumenum_Link Link
		| Volumenum_Olink Olink
		| Volumenum_Ulink Ulink
		| Volumenum_Emphasis Emphasis
		| Volumenum_Trademark Trademark
		| Volumenum_Replaceable Replaceable
		| Volumenum_Remark Remark
		| Volumenum_Subscript Subscript
		| Volumenum_Superscript Superscript
		| Volumenum_Inlinegraphic Inlinegraphic
		| Volumenum_Inlinemediaobject Inlinemediaobject
		| Volumenum_Indexterm Indexterm
		deriving (Eq,Show)
data Volumenum_Revisionflag = Volumenum_Revisionflag_Changed  | 
			      Volumenum_Revisionflag_Added  |  Volumenum_Revisionflag_Deleted  | 
			      Volumenum_Revisionflag_Off
			    deriving (Eq,Show)
data Accel = Accel Accel_Attrs [Accel_]
	   deriving (Eq,Show)
data Accel_Attrs = Accel_Attrs
    { accelId :: (Maybe String)
    , accelLang :: (Maybe String)
    , accelRemap :: (Maybe String)
    , accelXreflabel :: (Maybe String)
    , accelRevisionflag :: (Maybe Accel_Revisionflag)
    , accelArch :: (Maybe String)
    , accelCondition :: (Maybe String)
    , accelConformance :: (Maybe String)
    , accelOs :: (Maybe String)
    , accelRevision :: (Maybe String)
    , accelSecurity :: (Maybe String)
    , accelUserlevel :: (Maybe String)
    , accelVendor :: (Maybe String)
    , accelRole :: (Maybe String)
    } deriving (Eq,Show)
data Accel_ = Accel_Str String
	    | Accel_Replaceable Replaceable
	    | Accel_Inlinegraphic Inlinegraphic
	    | Accel_Inlinemediaobject Inlinemediaobject
	    | Accel_Indexterm Indexterm
	    | Accel_Beginpage Beginpage
	    deriving (Eq,Show)
data Accel_Revisionflag = Accel_Revisionflag_Changed  | 
			  Accel_Revisionflag_Added  |  Accel_Revisionflag_Deleted  | 
			  Accel_Revisionflag_Off
			deriving (Eq,Show)
data Action = Action Action_Attrs [Action_]
	    deriving (Eq,Show)
data Action_Attrs = Action_Attrs
    { actionMoreinfo :: (Defaultable Action_Moreinfo)
    , actionId :: (Maybe String)
    , actionLang :: (Maybe String)
    , actionRemap :: (Maybe String)
    , actionXreflabel :: (Maybe String)
    , actionRevisionflag :: (Maybe Action_Revisionflag)
    , actionArch :: (Maybe String)
    , actionCondition :: (Maybe String)
    , actionConformance :: (Maybe String)
    , actionOs :: (Maybe String)
    , actionRevision :: (Maybe String)
    , actionSecurity :: (Maybe String)
    , actionUserlevel :: (Maybe String)
    , actionVendor :: (Maybe String)
    , actionRole :: (Maybe String)
    } deriving (Eq,Show)
data Action_ = Action_Str String
	     | Action_Link Link
	     | Action_Olink Olink
	     | Action_Ulink Ulink
	     | Action_Action Action
	     | Action_Application Application
	     | Action_Classname Classname
	     | Action_Methodname Methodname
	     | Action_Interfacename Interfacename
	     | Action_Exceptionname Exceptionname
	     | Action_Ooclass Ooclass
	     | Action_Oointerface Oointerface
	     | Action_Ooexception Ooexception
	     | Action_Command Command
	     | Action_Computeroutput Computeroutput
	     | Action_Database Database
	     | Action_Email Email
	     | Action_Envar Envar
	     | Action_Errorcode Errorcode
	     | Action_Errorname Errorname
	     | Action_Errortype Errortype
	     | Action_Errortext Errortext
	     | Action_Filename Filename
	     | Action_Function Function
	     | Action_Guibutton Guibutton
	     | Action_Guiicon Guiicon
	     | Action_Guilabel Guilabel
	     | Action_Guimenu Guimenu
	     | Action_Guimenuitem Guimenuitem
	     | Action_Guisubmenu Guisubmenu
	     | Action_Hardware Hardware
	     | Action_Interface Interface
	     | Action_Keycap Keycap
	     | Action_Keycode Keycode
	     | Action_Keycombo Keycombo
	     | Action_Keysym Keysym
	     | Action_Literal Literal
	     | Action_Constant Constant
	     | Action_Markup Markup
	     | Action_Medialabel Medialabel
	     | Action_Menuchoice Menuchoice
	     | Action_Mousebutton Mousebutton
	     | Action_Option Option
	     | Action_Optional Optional
	     | Action_Parameter Parameter
	     | Action_Prompt Prompt
	     | Action_Property Property
	     | Action_Replaceable Replaceable
	     | Action_Returnvalue Returnvalue
	     | Action_Sgmltag Sgmltag
	     | Action_Structfield Structfield
	     | Action_Structname Structname
	     | Action_Symbol Symbol
	     | Action_Systemitem Systemitem
	     | Action_Token Token
	     | Action_Type Type
	     | Action_Userinput Userinput
	     | Action_Varname Varname
	     | Action_Anchor Anchor
	     | Action_Remark Remark
	     | Action_Subscript Subscript
	     | Action_Superscript Superscript
	     | Action_Inlinegraphic Inlinegraphic
	     | Action_Inlinemediaobject Inlinemediaobject
	     | Action_Indexterm Indexterm
	     | Action_Beginpage Beginpage
	     deriving (Eq,Show)
data Action_Moreinfo = Action_Moreinfo_Refentry  | 
		       Action_Moreinfo_None
		     deriving (Eq,Show)
data Action_Revisionflag = Action_Revisionflag_Changed  | 
			   Action_Revisionflag_Added  |  Action_Revisionflag_Deleted  | 
			   Action_Revisionflag_Off
			 deriving (Eq,Show)
data Application = Application Application_Attrs [Application_]
		 deriving (Eq,Show)
data Application_Attrs = Application_Attrs
    { applicationClass :: (Maybe Application_Class)
    , applicationMoreinfo :: (Defaultable Application_Moreinfo)
    , applicationId :: (Maybe String)
    , applicationLang :: (Maybe String)
    , applicationRemap :: (Maybe String)
    , applicationXreflabel :: (Maybe String)
    , applicationRevisionflag :: (Maybe Application_Revisionflag)
    , applicationArch :: (Maybe String)
    , applicationCondition :: (Maybe String)
    , applicationConformance :: (Maybe String)
    , applicationOs :: (Maybe String)
    , applicationRevision :: (Maybe String)
    , applicationSecurity :: (Maybe String)
    , applicationUserlevel :: (Maybe String)
    , applicationVendor :: (Maybe String)
    , applicationRole :: (Maybe String)
    } deriving (Eq,Show)
data Application_ = Application_Str String
		  | Application_Footnoteref Footnoteref
		  | Application_Xref Xref
		  | Application_Abbrev Abbrev
		  | Application_Acronym Acronym
		  | Application_Citation Citation
		  | Application_Citerefentry Citerefentry
		  | Application_Citetitle Citetitle
		  | Application_Emphasis Emphasis
		  | Application_Firstterm Firstterm
		  | Application_Foreignphrase Foreignphrase
		  | Application_Glossterm Glossterm
		  | Application_Footnote Footnote
		  | Application_Phrase Phrase
		  | Application_Quote Quote
		  | Application_Trademark Trademark
		  | Application_Wordasword Wordasword
		  | Application_Personname Personname
		  | Application_Link Link
		  | Application_Olink Olink
		  | Application_Ulink Ulink
		  | Application_Action Action
		  | Application_Application Application
		  | Application_Classname Classname
		  | Application_Methodname Methodname
		  | Application_Interfacename Interfacename
		  | Application_Exceptionname Exceptionname
		  | Application_Ooclass Ooclass
		  | Application_Oointerface Oointerface
		  | Application_Ooexception Ooexception
		  | Application_Command Command
		  | Application_Computeroutput Computeroutput
		  | Application_Database Database
		  | Application_Email Email
		  | Application_Envar Envar
		  | Application_Errorcode Errorcode
		  | Application_Errorname Errorname
		  | Application_Errortype Errortype
		  | Application_Errortext Errortext
		  | Application_Filename Filename
		  | Application_Function Function
		  | Application_Guibutton Guibutton
		  | Application_Guiicon Guiicon
		  | Application_Guilabel Guilabel
		  | Application_Guimenu Guimenu
		  | Application_Guimenuitem Guimenuitem
		  | Application_Guisubmenu Guisubmenu
		  | Application_Hardware Hardware
		  | Application_Interface Interface
		  | Application_Keycap Keycap
		  | Application_Keycode Keycode
		  | Application_Keycombo Keycombo
		  | Application_Keysym Keysym
		  | Application_Literal Literal
		  | Application_Constant Constant
		  | Application_Markup Markup
		  | Application_Medialabel Medialabel
		  | Application_Menuchoice Menuchoice
		  | Application_Mousebutton Mousebutton
		  | Application_Option Option
		  | Application_Optional Optional
		  | Application_Parameter Parameter
		  | Application_Prompt Prompt
		  | Application_Property Property
		  | Application_Replaceable Replaceable
		  | Application_Returnvalue Returnvalue
		  | Application_Sgmltag Sgmltag
		  | Application_Structfield Structfield
		  | Application_Structname Structname
		  | Application_Symbol Symbol
		  | Application_Systemitem Systemitem
		  | Application_Token Token
		  | Application_Type Type
		  | Application_Userinput Userinput
		  | Application_Varname Varname
		  | Application_Anchor Anchor
		  | Application_Author Author
		  | Application_Authorinitials Authorinitials
		  | Application_Corpauthor Corpauthor
		  | Application_Modespec Modespec
		  | Application_Othercredit Othercredit
		  | Application_Productname Productname
		  | Application_Productnumber Productnumber
		  | Application_Revhistory Revhistory
		  | Application_Remark Remark
		  | Application_Subscript Subscript
		  | Application_Superscript Superscript
		  | Application_Inlinegraphic Inlinegraphic
		  | Application_Inlinemediaobject Inlinemediaobject
		  | Application_Inlineequation Inlineequation
		  | Application_Synopsis Synopsis
		  | Application_Cmdsynopsis Cmdsynopsis
		  | Application_Funcsynopsis Funcsynopsis
		  | Application_Classsynopsis Classsynopsis
		  | Application_Fieldsynopsis Fieldsynopsis
		  | Application_Constructorsynopsis Constructorsynopsis
		  | Application_Destructorsynopsis Destructorsynopsis
		  | Application_Methodsynopsis Methodsynopsis
		  | Application_Indexterm Indexterm
		  | Application_Beginpage Beginpage
		  deriving (Eq,Show)
data Application_Class = Application_Class_Hardware  | 
			 Application_Class_Software
		       deriving (Eq,Show)
data Application_Moreinfo = Application_Moreinfo_Refentry  | 
			    Application_Moreinfo_None
			  deriving (Eq,Show)
data Application_Revisionflag = Application_Revisionflag_Changed
				 |  Application_Revisionflag_Added  | 
				Application_Revisionflag_Deleted  |  Application_Revisionflag_Off
			      deriving (Eq,Show)
data Classname = Classname Classname_Attrs [Classname_]
	       deriving (Eq,Show)
data Classname_Attrs = Classname_Attrs
    { classnameId :: (Maybe String)
    , classnameLang :: (Maybe String)
    , classnameRemap :: (Maybe String)
    , classnameXreflabel :: (Maybe String)
    , classnameRevisionflag :: (Maybe Classname_Revisionflag)
    , classnameArch :: (Maybe String)
    , classnameCondition :: (Maybe String)
    , classnameConformance :: (Maybe String)
    , classnameOs :: (Maybe String)
    , classnameRevision :: (Maybe String)
    , classnameSecurity :: (Maybe String)
    , classnameUserlevel :: (Maybe String)
    , classnameVendor :: (Maybe String)
    , classnameRole :: (Maybe String)
    } deriving (Eq,Show)
data Classname_ = Classname_Str String
		| Classname_Replaceable Replaceable
		| Classname_Inlinegraphic Inlinegraphic
		| Classname_Inlinemediaobject Inlinemediaobject
		| Classname_Indexterm Indexterm
		| Classname_Beginpage Beginpage
		deriving (Eq,Show)
data Classname_Revisionflag = Classname_Revisionflag_Changed  | 
			      Classname_Revisionflag_Added  |  Classname_Revisionflag_Deleted  | 
			      Classname_Revisionflag_Off
			    deriving (Eq,Show)
data Co = Co
    { coLabel :: (Maybe String)
    , coLinkends :: (Maybe String)
    , coId :: String
    , coLang :: (Maybe String)
    , coRemap :: (Maybe String)
    , coXreflabel :: (Maybe String)
    , coRevisionflag :: (Maybe Co_Revisionflag)
    , coArch :: (Maybe String)
    , coCondition :: (Maybe String)
    , coConformance :: (Maybe String)
    , coOs :: (Maybe String)
    , coRevision :: (Maybe String)
    , coSecurity :: (Maybe String)
    , coUserlevel :: (Maybe String)
    , coVendor :: (Maybe String)
    , coRole :: (Maybe String)
    } deriving (Eq,Show)
data Co_Revisionflag = Co_Revisionflag_Changed  | 
		       Co_Revisionflag_Added  |  Co_Revisionflag_Deleted  | 
		       Co_Revisionflag_Off
		     deriving (Eq,Show)
data Coref = Coref
    { corefLabel :: (Maybe String)
    , corefLinkend :: String
    , corefId :: (Maybe String)
    , corefLang :: (Maybe String)
    , corefRemap :: (Maybe String)
    , corefXreflabel :: (Maybe String)
    , corefRevisionflag :: (Maybe Coref_Revisionflag)
    , corefArch :: (Maybe String)
    , corefCondition :: (Maybe String)
    , corefConformance :: (Maybe String)
    , corefOs :: (Maybe String)
    , corefRevision :: (Maybe String)
    , corefSecurity :: (Maybe String)
    , corefUserlevel :: (Maybe String)
    , corefVendor :: (Maybe String)
    , corefRole :: (Maybe String)
    } deriving (Eq,Show)
data Coref_Revisionflag = Coref_Revisionflag_Changed  | 
			  Coref_Revisionflag_Added  |  Coref_Revisionflag_Deleted  | 
			  Coref_Revisionflag_Off
			deriving (Eq,Show)
data Command = Command Command_Attrs [Command_]
	     deriving (Eq,Show)
data Command_Attrs = Command_Attrs
    { commandMoreinfo :: (Defaultable Command_Moreinfo)
    , commandId :: (Maybe String)
    , commandLang :: (Maybe String)
    , commandRemap :: (Maybe String)
    , commandXreflabel :: (Maybe String)
    , commandRevisionflag :: (Maybe Command_Revisionflag)
    , commandArch :: (Maybe String)
    , commandCondition :: (Maybe String)
    , commandConformance :: (Maybe String)
    , commandOs :: (Maybe String)
    , commandRevision :: (Maybe String)
    , commandSecurity :: (Maybe String)
    , commandUserlevel :: (Maybe String)
    , commandVendor :: (Maybe String)
    , commandRole :: (Maybe String)
    } deriving (Eq,Show)
data Command_ = Command_Str String
	      | Command_Link Link
	      | Command_Olink Olink
	      | Command_Ulink Ulink
	      | Command_Action Action
	      | Command_Application Application
	      | Command_Classname Classname
	      | Command_Methodname Methodname
	      | Command_Interfacename Interfacename
	      | Command_Exceptionname Exceptionname
	      | Command_Ooclass Ooclass
	      | Command_Oointerface Oointerface
	      | Command_Ooexception Ooexception
	      | Command_Command Command
	      | Command_Computeroutput Computeroutput
	      | Command_Database Database
	      | Command_Email Email
	      | Command_Envar Envar
	      | Command_Errorcode Errorcode
	      | Command_Errorname Errorname
	      | Command_Errortype Errortype
	      | Command_Errortext Errortext
	      | Command_Filename Filename
	      | Command_Function Function
	      | Command_Guibutton Guibutton
	      | Command_Guiicon Guiicon
	      | Command_Guilabel Guilabel
	      | Command_Guimenu Guimenu
	      | Command_Guimenuitem Guimenuitem
	      | Command_Guisubmenu Guisubmenu
	      | Command_Hardware Hardware
	      | Command_Interface Interface
	      | Command_Keycap Keycap
	      | Command_Keycode Keycode
	      | Command_Keycombo Keycombo
	      | Command_Keysym Keysym
	      | Command_Literal Literal
	      | Command_Constant Constant
	      | Command_Markup Markup
	      | Command_Medialabel Medialabel
	      | Command_Menuchoice Menuchoice
	      | Command_Mousebutton Mousebutton
	      | Command_Option Option
	      | Command_Optional Optional
	      | Command_Parameter Parameter
	      | Command_Prompt Prompt
	      | Command_Property Property
	      | Command_Replaceable Replaceable
	      | Command_Returnvalue Returnvalue
	      | Command_Sgmltag Sgmltag
	      | Command_Structfield Structfield
	      | Command_Structname Structname
	      | Command_Symbol Symbol
	      | Command_Systemitem Systemitem
	      | Command_Token Token
	      | Command_Type Type
	      | Command_Userinput Userinput
	      | Command_Varname Varname
	      | Command_Anchor Anchor
	      | Command_Remark Remark
	      | Command_Subscript Subscript
	      | Command_Superscript Superscript
	      | Command_Inlinegraphic Inlinegraphic
	      | Command_Inlinemediaobject Inlinemediaobject
	      | Command_Indexterm Indexterm
	      | Command_Beginpage Beginpage
	      deriving (Eq,Show)
data Command_Moreinfo = Command_Moreinfo_Refentry  | 
			Command_Moreinfo_None
		      deriving (Eq,Show)
data Command_Revisionflag = Command_Revisionflag_Changed  | 
			    Command_Revisionflag_Added  |  Command_Revisionflag_Deleted  | 
			    Command_Revisionflag_Off
			  deriving (Eq,Show)
data Computeroutput = Computeroutput Computeroutput_Attrs
				     [Computeroutput_]
		    deriving (Eq,Show)
data Computeroutput_Attrs = Computeroutput_Attrs
    { computeroutputMoreinfo :: (Defaultable Computeroutput_Moreinfo)
    , computeroutputId :: (Maybe String)
    , computeroutputLang :: (Maybe String)
    , computeroutputRemap :: (Maybe String)
    , computeroutputXreflabel :: (Maybe String)
    , computeroutputRevisionflag :: (Maybe Computeroutput_Revisionflag)
    , computeroutputArch :: (Maybe String)
    , computeroutputCondition :: (Maybe String)
    , computeroutputConformance :: (Maybe String)
    , computeroutputOs :: (Maybe String)
    , computeroutputRevision :: (Maybe String)
    , computeroutputSecurity :: (Maybe String)
    , computeroutputUserlevel :: (Maybe String)
    , computeroutputVendor :: (Maybe String)
    , computeroutputRole :: (Maybe String)
    } deriving (Eq,Show)
data Computeroutput_ = Computeroutput_Str String
		     | Computeroutput_Link Link
		     | Computeroutput_Olink Olink
		     | Computeroutput_Ulink Ulink
		     | Computeroutput_Action Action
		     | Computeroutput_Application Application
		     | Computeroutput_Classname Classname
		     | Computeroutput_Methodname Methodname
		     | Computeroutput_Interfacename Interfacename
		     | Computeroutput_Exceptionname Exceptionname
		     | Computeroutput_Ooclass Ooclass
		     | Computeroutput_Oointerface Oointerface
		     | Computeroutput_Ooexception Ooexception
		     | Computeroutput_Command Command
		     | Computeroutput_Computeroutput Computeroutput
		     | Computeroutput_Database Database
		     | Computeroutput_Email Email
		     | Computeroutput_Envar Envar
		     | Computeroutput_Errorcode Errorcode
		     | Computeroutput_Errorname Errorname
		     | Computeroutput_Errortype Errortype
		     | Computeroutput_Errortext Errortext
		     | Computeroutput_Filename Filename
		     | Computeroutput_Function Function
		     | Computeroutput_Guibutton Guibutton
		     | Computeroutput_Guiicon Guiicon
		     | Computeroutput_Guilabel Guilabel
		     | Computeroutput_Guimenu Guimenu
		     | Computeroutput_Guimenuitem Guimenuitem
		     | Computeroutput_Guisubmenu Guisubmenu
		     | Computeroutput_Hardware Hardware
		     | Computeroutput_Interface Interface
		     | Computeroutput_Keycap Keycap
		     | Computeroutput_Keycode Keycode
		     | Computeroutput_Keycombo Keycombo
		     | Computeroutput_Keysym Keysym
		     | Computeroutput_Literal Literal
		     | Computeroutput_Constant Constant
		     | Computeroutput_Markup Markup
		     | Computeroutput_Medialabel Medialabel
		     | Computeroutput_Menuchoice Menuchoice
		     | Computeroutput_Mousebutton Mousebutton
		     | Computeroutput_Option Option
		     | Computeroutput_Optional Optional
		     | Computeroutput_Parameter Parameter
		     | Computeroutput_Prompt Prompt
		     | Computeroutput_Property Property
		     | Computeroutput_Replaceable Replaceable
		     | Computeroutput_Returnvalue Returnvalue
		     | Computeroutput_Sgmltag Sgmltag
		     | Computeroutput_Structfield Structfield
		     | Computeroutput_Structname Structname
		     | Computeroutput_Symbol Symbol
		     | Computeroutput_Systemitem Systemitem
		     | Computeroutput_Token Token
		     | Computeroutput_Type Type
		     | Computeroutput_Userinput Userinput
		     | Computeroutput_Varname Varname
		     | Computeroutput_Anchor Anchor
		     | Computeroutput_Remark Remark
		     | Computeroutput_Subscript Subscript
		     | Computeroutput_Superscript Superscript
		     | Computeroutput_Inlinegraphic Inlinegraphic
		     | Computeroutput_Inlinemediaobject Inlinemediaobject
		     | Computeroutput_Indexterm Indexterm
		     | Computeroutput_Beginpage Beginpage
		     | Computeroutput_Co Co
		     deriving (Eq,Show)
data Computeroutput_Moreinfo = Computeroutput_Moreinfo_Refentry  | 
			       Computeroutput_Moreinfo_None
			     deriving (Eq,Show)
data Computeroutput_Revisionflag = Computeroutput_Revisionflag_Changed
				    |  Computeroutput_Revisionflag_Added  | 
				   Computeroutput_Revisionflag_Deleted  | 
				   Computeroutput_Revisionflag_Off
				 deriving (Eq,Show)
data Database = Database Database_Attrs [Database_]
	      deriving (Eq,Show)
data Database_Attrs = Database_Attrs
    { databaseClass :: (Maybe Database_Class)
    , databaseMoreinfo :: (Defaultable Database_Moreinfo)
    , databaseId :: (Maybe String)
    , databaseLang :: (Maybe String)
    , databaseRemap :: (Maybe String)
    , databaseXreflabel :: (Maybe String)
    , databaseRevisionflag :: (Maybe Database_Revisionflag)
    , databaseArch :: (Maybe String)
    , databaseCondition :: (Maybe String)
    , databaseConformance :: (Maybe String)
    , databaseOs :: (Maybe String)
    , databaseRevision :: (Maybe String)
    , databaseSecurity :: (Maybe String)
    , databaseUserlevel :: (Maybe String)
    , databaseVendor :: (Maybe String)
    , databaseRole :: (Maybe String)
    } deriving (Eq,Show)
data Database_ = Database_Str String
	       | Database_Link Link
	       | Database_Olink Olink
	       | Database_Ulink Ulink
	       | Database_Action Action
	       | Database_Application Application
	       | Database_Classname Classname
	       | Database_Methodname Methodname
	       | Database_Interfacename Interfacename
	       | Database_Exceptionname Exceptionname
	       | Database_Ooclass Ooclass
	       | Database_Oointerface Oointerface
	       | Database_Ooexception Ooexception
	       | Database_Command Command
	       | Database_Computeroutput Computeroutput
	       | Database_Database Database
	       | Database_Email Email
	       | Database_Envar Envar
	       | Database_Errorcode Errorcode
	       | Database_Errorname Errorname
	       | Database_Errortype Errortype
	       | Database_Errortext Errortext
	       | Database_Filename Filename
	       | Database_Function Function
	       | Database_Guibutton Guibutton
	       | Database_Guiicon Guiicon
	       | Database_Guilabel Guilabel
	       | Database_Guimenu Guimenu
	       | Database_Guimenuitem Guimenuitem
	       | Database_Guisubmenu Guisubmenu
	       | Database_Hardware Hardware
	       | Database_Interface Interface
	       | Database_Keycap Keycap
	       | Database_Keycode Keycode
	       | Database_Keycombo Keycombo
	       | Database_Keysym Keysym
	       | Database_Literal Literal
	       | Database_Constant Constant
	       | Database_Markup Markup
	       | Database_Medialabel Medialabel
	       | Database_Menuchoice Menuchoice
	       | Database_Mousebutton Mousebutton
	       | Database_Option Option
	       | Database_Optional Optional
	       | Database_Parameter Parameter
	       | Database_Prompt Prompt
	       | Database_Property Property
	       | Database_Replaceable Replaceable
	       | Database_Returnvalue Returnvalue
	       | Database_Sgmltag Sgmltag
	       | Database_Structfield Structfield
	       | Database_Structname Structname
	       | Database_Symbol Symbol
	       | Database_Systemitem Systemitem
	       | Database_Token Token
	       | Database_Type Type
	       | Database_Userinput Userinput
	       | Database_Varname Varname
	       | Database_Anchor Anchor
	       | Database_Remark Remark
	       | Database_Subscript Subscript
	       | Database_Superscript Superscript
	       | Database_Inlinegraphic Inlinegraphic
	       | Database_Inlinemediaobject Inlinemediaobject
	       | Database_Indexterm Indexterm
	       | Database_Beginpage Beginpage
	       deriving (Eq,Show)
data Database_Class = Database_Class_Name  |  Database_Class_Table
		       |  Database_Class_Field  |  Database_Class_Key1  | 
		      Database_Class_Key2  |  Database_Class_Record
		    deriving (Eq,Show)
data Database_Moreinfo = Database_Moreinfo_Refentry  | 
			 Database_Moreinfo_None
		       deriving (Eq,Show)
data Database_Revisionflag = Database_Revisionflag_Changed  | 
			     Database_Revisionflag_Added  |  Database_Revisionflag_Deleted  | 
			     Database_Revisionflag_Off
			   deriving (Eq,Show)
data Email = Email Email_Attrs [Email_]
	   deriving (Eq,Show)
data Email_Attrs = Email_Attrs
    { emailId :: (Maybe String)
    , emailLang :: (Maybe String)
    , emailRemap :: (Maybe String)
    , emailXreflabel :: (Maybe String)
    , emailRevisionflag :: (Maybe Email_Revisionflag)
    , emailArch :: (Maybe String)
    , emailCondition :: (Maybe String)
    , emailConformance :: (Maybe String)
    , emailOs :: (Maybe String)
    , emailRevision :: (Maybe String)
    , emailSecurity :: (Maybe String)
    , emailUserlevel :: (Maybe String)
    , emailVendor :: (Maybe String)
    , emailRole :: (Maybe String)
    } deriving (Eq,Show)
data Email_ = Email_Str String
	    | Email_Link Link
	    | Email_Olink Olink
	    | Email_Ulink Ulink
	    | Email_Emphasis Emphasis
	    | Email_Trademark Trademark
	    | Email_Replaceable Replaceable
	    | Email_Remark Remark
	    | Email_Subscript Subscript
	    | Email_Superscript Superscript
	    | Email_Inlinegraphic Inlinegraphic
	    | Email_Inlinemediaobject Inlinemediaobject
	    | Email_Indexterm Indexterm
	    deriving (Eq,Show)
data Email_Revisionflag = Email_Revisionflag_Changed  | 
			  Email_Revisionflag_Added  |  Email_Revisionflag_Deleted  | 
			  Email_Revisionflag_Off
			deriving (Eq,Show)
data Envar = Envar Envar_Attrs [Envar_]
	   deriving (Eq,Show)
data Envar_Attrs = Envar_Attrs
    { envarId :: (Maybe String)
    , envarLang :: (Maybe String)
    , envarRemap :: (Maybe String)
    , envarXreflabel :: (Maybe String)
    , envarRevisionflag :: (Maybe Envar_Revisionflag)
    , envarArch :: (Maybe String)
    , envarCondition :: (Maybe String)
    , envarConformance :: (Maybe String)
    , envarOs :: (Maybe String)
    , envarRevision :: (Maybe String)
    , envarSecurity :: (Maybe String)
    , envarUserlevel :: (Maybe String)
    , envarVendor :: (Maybe String)
    , envarRole :: (Maybe String)
    } deriving (Eq,Show)
data Envar_ = Envar_Str String
	    | Envar_Replaceable Replaceable
	    | Envar_Inlinegraphic Inlinegraphic
	    | Envar_Inlinemediaobject Inlinemediaobject
	    | Envar_Indexterm Indexterm
	    | Envar_Beginpage Beginpage
	    deriving (Eq,Show)
data Envar_Revisionflag = Envar_Revisionflag_Changed  | 
			  Envar_Revisionflag_Added  |  Envar_Revisionflag_Deleted  | 
			  Envar_Revisionflag_Off
			deriving (Eq,Show)
data Errorcode = Errorcode Errorcode_Attrs [Errorcode_]
	       deriving (Eq,Show)
data Errorcode_Attrs = Errorcode_Attrs
    { errorcodeMoreinfo :: (Defaultable Errorcode_Moreinfo)
    , errorcodeId :: (Maybe String)
    , errorcodeLang :: (Maybe String)
    , errorcodeRemap :: (Maybe String)
    , errorcodeXreflabel :: (Maybe String)
    , errorcodeRevisionflag :: (Maybe Errorcode_Revisionflag)
    , errorcodeArch :: (Maybe String)
    , errorcodeCondition :: (Maybe String)
    , errorcodeConformance :: (Maybe String)
    , errorcodeOs :: (Maybe String)
    , errorcodeRevision :: (Maybe String)
    , errorcodeSecurity :: (Maybe String)
    , errorcodeUserlevel :: (Maybe String)
    , errorcodeVendor :: (Maybe String)
    , errorcodeRole :: (Maybe String)
    } deriving (Eq,Show)
data Errorcode_ = Errorcode_Str String
		| Errorcode_Replaceable Replaceable
		| Errorcode_Inlinegraphic Inlinegraphic
		| Errorcode_Inlinemediaobject Inlinemediaobject
		| Errorcode_Indexterm Indexterm
		| Errorcode_Beginpage Beginpage
		deriving (Eq,Show)
data Errorcode_Moreinfo = Errorcode_Moreinfo_Refentry  | 
			  Errorcode_Moreinfo_None
			deriving (Eq,Show)
data Errorcode_Revisionflag = Errorcode_Revisionflag_Changed  | 
			      Errorcode_Revisionflag_Added  |  Errorcode_Revisionflag_Deleted  | 
			      Errorcode_Revisionflag_Off
			    deriving (Eq,Show)
data Errorname = Errorname Errorname_Attrs [Errorname_]
	       deriving (Eq,Show)
data Errorname_Attrs = Errorname_Attrs
    { errornameId :: (Maybe String)
    , errornameLang :: (Maybe String)
    , errornameRemap :: (Maybe String)
    , errornameXreflabel :: (Maybe String)
    , errornameRevisionflag :: (Maybe Errorname_Revisionflag)
    , errornameArch :: (Maybe String)
    , errornameCondition :: (Maybe String)
    , errornameConformance :: (Maybe String)
    , errornameOs :: (Maybe String)
    , errornameRevision :: (Maybe String)
    , errornameSecurity :: (Maybe String)
    , errornameUserlevel :: (Maybe String)
    , errornameVendor :: (Maybe String)
    , errornameRole :: (Maybe String)
    } deriving (Eq,Show)
data Errorname_ = Errorname_Str String
		| Errorname_Replaceable Replaceable
		| Errorname_Inlinegraphic Inlinegraphic
		| Errorname_Inlinemediaobject Inlinemediaobject
		| Errorname_Indexterm Indexterm
		| Errorname_Beginpage Beginpage
		deriving (Eq,Show)
data Errorname_Revisionflag = Errorname_Revisionflag_Changed  | 
			      Errorname_Revisionflag_Added  |  Errorname_Revisionflag_Deleted  | 
			      Errorname_Revisionflag_Off
			    deriving (Eq,Show)
data Errortext = Errortext Errortext_Attrs [Errortext_]
	       deriving (Eq,Show)
data Errortext_Attrs = Errortext_Attrs
    { errortextId :: (Maybe String)
    , errortextLang :: (Maybe String)
    , errortextRemap :: (Maybe String)
    , errortextXreflabel :: (Maybe String)
    , errortextRevisionflag :: (Maybe Errortext_Revisionflag)
    , errortextArch :: (Maybe String)
    , errortextCondition :: (Maybe String)
    , errortextConformance :: (Maybe String)
    , errortextOs :: (Maybe String)
    , errortextRevision :: (Maybe String)
    , errortextSecurity :: (Maybe String)
    , errortextUserlevel :: (Maybe String)
    , errortextVendor :: (Maybe String)
    , errortextRole :: (Maybe String)
    } deriving (Eq,Show)
data Errortext_ = Errortext_Str String
		| Errortext_Replaceable Replaceable
		| Errortext_Inlinegraphic Inlinegraphic
		| Errortext_Inlinemediaobject Inlinemediaobject
		| Errortext_Indexterm Indexterm
		| Errortext_Beginpage Beginpage
		deriving (Eq,Show)
data Errortext_Revisionflag = Errortext_Revisionflag_Changed  | 
			      Errortext_Revisionflag_Added  |  Errortext_Revisionflag_Deleted  | 
			      Errortext_Revisionflag_Off
			    deriving (Eq,Show)
data Errortype = Errortype Errortype_Attrs [Errortype_]
	       deriving (Eq,Show)
data Errortype_Attrs = Errortype_Attrs
    { errortypeId :: (Maybe String)
    , errortypeLang :: (Maybe String)
    , errortypeRemap :: (Maybe String)
    , errortypeXreflabel :: (Maybe String)
    , errortypeRevisionflag :: (Maybe Errortype_Revisionflag)
    , errortypeArch :: (Maybe String)
    , errortypeCondition :: (Maybe String)
    , errortypeConformance :: (Maybe String)
    , errortypeOs :: (Maybe String)
    , errortypeRevision :: (Maybe String)
    , errortypeSecurity :: (Maybe String)
    , errortypeUserlevel :: (Maybe String)
    , errortypeVendor :: (Maybe String)
    , errortypeRole :: (Maybe String)
    } deriving (Eq,Show)
data Errortype_ = Errortype_Str String
		| Errortype_Replaceable Replaceable
		| Errortype_Inlinegraphic Inlinegraphic
		| Errortype_Inlinemediaobject Inlinemediaobject
		| Errortype_Indexterm Indexterm
		| Errortype_Beginpage Beginpage
		deriving (Eq,Show)
data Errortype_Revisionflag = Errortype_Revisionflag_Changed  | 
			      Errortype_Revisionflag_Added  |  Errortype_Revisionflag_Deleted  | 
			      Errortype_Revisionflag_Off
			    deriving (Eq,Show)
data Filename = Filename Filename_Attrs [Filename_]
	      deriving (Eq,Show)
data Filename_Attrs = Filename_Attrs
    { filenameClass :: (Maybe Filename_Class)
    , filenamePath :: (Maybe String)
    , filenameMoreinfo :: (Defaultable Filename_Moreinfo)
    , filenameId :: (Maybe String)
    , filenameLang :: (Maybe String)
    , filenameRemap :: (Maybe String)
    , filenameXreflabel :: (Maybe String)
    , filenameRevisionflag :: (Maybe Filename_Revisionflag)
    , filenameArch :: (Maybe String)
    , filenameCondition :: (Maybe String)
    , filenameConformance :: (Maybe String)
    , filenameOs :: (Maybe String)
    , filenameRevision :: (Maybe String)
    , filenameSecurity :: (Maybe String)
    , filenameUserlevel :: (Maybe String)
    , filenameVendor :: (Maybe String)
    , filenameRole :: (Maybe String)
    } deriving (Eq,Show)
data Filename_ = Filename_Str String
	       | Filename_Link Link
	       | Filename_Olink Olink
	       | Filename_Ulink Ulink
	       | Filename_Action Action
	       | Filename_Application Application
	       | Filename_Classname Classname
	       | Filename_Methodname Methodname
	       | Filename_Interfacename Interfacename
	       | Filename_Exceptionname Exceptionname
	       | Filename_Ooclass Ooclass
	       | Filename_Oointerface Oointerface
	       | Filename_Ooexception Ooexception
	       | Filename_Command Command
	       | Filename_Computeroutput Computeroutput
	       | Filename_Database Database
	       | Filename_Email Email
	       | Filename_Envar Envar
	       | Filename_Errorcode Errorcode
	       | Filename_Errorname Errorname
	       | Filename_Errortype Errortype
	       | Filename_Errortext Errortext
	       | Filename_Filename Filename
	       | Filename_Function Function
	       | Filename_Guibutton Guibutton
	       | Filename_Guiicon Guiicon
	       | Filename_Guilabel Guilabel
	       | Filename_Guimenu Guimenu
	       | Filename_Guimenuitem Guimenuitem
	       | Filename_Guisubmenu Guisubmenu
	       | Filename_Hardware Hardware
	       | Filename_Interface Interface
	       | Filename_Keycap Keycap
	       | Filename_Keycode Keycode
	       | Filename_Keycombo Keycombo
	       | Filename_Keysym Keysym
	       | Filename_Literal Literal
	       | Filename_Constant Constant
	       | Filename_Markup Markup
	       | Filename_Medialabel Medialabel
	       | Filename_Menuchoice Menuchoice
	       | Filename_Mousebutton Mousebutton
	       | Filename_Option Option
	       | Filename_Optional Optional
	       | Filename_Parameter Parameter
	       | Filename_Prompt Prompt
	       | Filename_Property Property
	       | Filename_Replaceable Replaceable
	       | Filename_Returnvalue Returnvalue
	       | Filename_Sgmltag Sgmltag
	       | Filename_Structfield Structfield
	       | Filename_Structname Structname
	       | Filename_Symbol Symbol
	       | Filename_Systemitem Systemitem
	       | Filename_Token Token
	       | Filename_Type Type
	       | Filename_Userinput Userinput
	       | Filename_Varname Varname
	       | Filename_Anchor Anchor
	       | Filename_Remark Remark
	       | Filename_Subscript Subscript
	       | Filename_Superscript Superscript
	       | Filename_Inlinegraphic Inlinegraphic
	       | Filename_Inlinemediaobject Inlinemediaobject
	       | Filename_Indexterm Indexterm
	       | Filename_Beginpage Beginpage
	       deriving (Eq,Show)
data Filename_Class = Filename_Class_Headerfile  | 
		      Filename_Class_Partition  |  Filename_Class_Devicefile  | 
		      Filename_Class_Libraryfile  |  Filename_Class_Directory  | 
		      Filename_Class_Extension  |  Filename_Class_Symlink
		    deriving (Eq,Show)
data Filename_Moreinfo = Filename_Moreinfo_Refentry  | 
			 Filename_Moreinfo_None
		       deriving (Eq,Show)
data Filename_Revisionflag = Filename_Revisionflag_Changed  | 
			     Filename_Revisionflag_Added  |  Filename_Revisionflag_Deleted  | 
			     Filename_Revisionflag_Off
			   deriving (Eq,Show)
data Function = Function Function_Attrs [Function_]
	      deriving (Eq,Show)
data Function_Attrs = Function_Attrs
    { functionMoreinfo :: (Defaultable Function_Moreinfo)
    , functionId :: (Maybe String)
    , functionLang :: (Maybe String)
    , functionRemap :: (Maybe String)
    , functionXreflabel :: (Maybe String)
    , functionRevisionflag :: (Maybe Function_Revisionflag)
    , functionArch :: (Maybe String)
    , functionCondition :: (Maybe String)
    , functionConformance :: (Maybe String)
    , functionOs :: (Maybe String)
    , functionRevision :: (Maybe String)
    , functionSecurity :: (Maybe String)
    , functionUserlevel :: (Maybe String)
    , functionVendor :: (Maybe String)
    , functionRole :: (Maybe String)
    } deriving (Eq,Show)
data Function_ = Function_Str String
	       | Function_Link Link
	       | Function_Olink Olink
	       | Function_Ulink Ulink
	       | Function_Action Action
	       | Function_Application Application
	       | Function_Classname Classname
	       | Function_Methodname Methodname
	       | Function_Interfacename Interfacename
	       | Function_Exceptionname Exceptionname
	       | Function_Ooclass Ooclass
	       | Function_Oointerface Oointerface
	       | Function_Ooexception Ooexception
	       | Function_Command Command
	       | Function_Computeroutput Computeroutput
	       | Function_Database Database
	       | Function_Email Email
	       | Function_Envar Envar
	       | Function_Errorcode Errorcode
	       | Function_Errorname Errorname
	       | Function_Errortype Errortype
	       | Function_Errortext Errortext
	       | Function_Filename Filename
	       | Function_Function Function
	       | Function_Guibutton Guibutton
	       | Function_Guiicon Guiicon
	       | Function_Guilabel Guilabel
	       | Function_Guimenu Guimenu
	       | Function_Guimenuitem Guimenuitem
	       | Function_Guisubmenu Guisubmenu
	       | Function_Hardware Hardware
	       | Function_Interface Interface
	       | Function_Keycap Keycap
	       | Function_Keycode Keycode
	       | Function_Keycombo Keycombo
	       | Function_Keysym Keysym
	       | Function_Literal Literal
	       | Function_Constant Constant
	       | Function_Markup Markup
	       | Function_Medialabel Medialabel
	       | Function_Menuchoice Menuchoice
	       | Function_Mousebutton Mousebutton
	       | Function_Option Option
	       | Function_Optional Optional
	       | Function_Parameter Parameter
	       | Function_Prompt Prompt
	       | Function_Property Property
	       | Function_Replaceable Replaceable
	       | Function_Returnvalue Returnvalue
	       | Function_Sgmltag Sgmltag
	       | Function_Structfield Structfield
	       | Function_Structname Structname
	       | Function_Symbol Symbol
	       | Function_Systemitem Systemitem
	       | Function_Token Token
	       | Function_Type Type
	       | Function_Userinput Userinput
	       | Function_Varname Varname
	       | Function_Anchor Anchor
	       | Function_Remark Remark
	       | Function_Subscript Subscript
	       | Function_Superscript Superscript
	       | Function_Inlinegraphic Inlinegraphic
	       | Function_Inlinemediaobject Inlinemediaobject
	       | Function_Indexterm Indexterm
	       | Function_Beginpage Beginpage
	       deriving (Eq,Show)
data Function_Moreinfo = Function_Moreinfo_Refentry  | 
			 Function_Moreinfo_None
		       deriving (Eq,Show)
data Function_Revisionflag = Function_Revisionflag_Changed  | 
			     Function_Revisionflag_Added  |  Function_Revisionflag_Deleted  | 
			     Function_Revisionflag_Off
			   deriving (Eq,Show)
data Guibutton = Guibutton Guibutton_Attrs [Guibutton_]
	       deriving (Eq,Show)
data Guibutton_Attrs = Guibutton_Attrs
    { guibuttonMoreinfo :: (Defaultable Guibutton_Moreinfo)
    , guibuttonId :: (Maybe String)
    , guibuttonLang :: (Maybe String)
    , guibuttonRemap :: (Maybe String)
    , guibuttonXreflabel :: (Maybe String)
    , guibuttonRevisionflag :: (Maybe Guibutton_Revisionflag)
    , guibuttonArch :: (Maybe String)
    , guibuttonCondition :: (Maybe String)
    , guibuttonConformance :: (Maybe String)
    , guibuttonOs :: (Maybe String)
    , guibuttonRevision :: (Maybe String)
    , guibuttonSecurity :: (Maybe String)
    , guibuttonUserlevel :: (Maybe String)
    , guibuttonVendor :: (Maybe String)
    , guibuttonRole :: (Maybe String)
    } deriving (Eq,Show)
data Guibutton_ = Guibutton_Str String
		| Guibutton_Replaceable Replaceable
		| Guibutton_Inlinegraphic Inlinegraphic
		| Guibutton_Inlinemediaobject Inlinemediaobject
		| Guibutton_Indexterm Indexterm
		| Guibutton_Beginpage Beginpage
		| Guibutton_Accel Accel
		deriving (Eq,Show)
data Guibutton_Moreinfo = Guibutton_Moreinfo_Refentry  | 
			  Guibutton_Moreinfo_None
			deriving (Eq,Show)
data Guibutton_Revisionflag = Guibutton_Revisionflag_Changed  | 
			      Guibutton_Revisionflag_Added  |  Guibutton_Revisionflag_Deleted  | 
			      Guibutton_Revisionflag_Off
			    deriving (Eq,Show)
data Guiicon = Guiicon Guiicon_Attrs [Guiicon_]
	     deriving (Eq,Show)
data Guiicon_Attrs = Guiicon_Attrs
    { guiiconMoreinfo :: (Defaultable Guiicon_Moreinfo)
    , guiiconId :: (Maybe String)
    , guiiconLang :: (Maybe String)
    , guiiconRemap :: (Maybe String)
    , guiiconXreflabel :: (Maybe String)
    , guiiconRevisionflag :: (Maybe Guiicon_Revisionflag)
    , guiiconArch :: (Maybe String)
    , guiiconCondition :: (Maybe String)
    , guiiconConformance :: (Maybe String)
    , guiiconOs :: (Maybe String)
    , guiiconRevision :: (Maybe String)
    , guiiconSecurity :: (Maybe String)
    , guiiconUserlevel :: (Maybe String)
    , guiiconVendor :: (Maybe String)
    , guiiconRole :: (Maybe String)
    } deriving (Eq,Show)
data Guiicon_ = Guiicon_Str String
	      | Guiicon_Replaceable Replaceable
	      | Guiicon_Inlinegraphic Inlinegraphic
	      | Guiicon_Inlinemediaobject Inlinemediaobject
	      | Guiicon_Indexterm Indexterm
	      | Guiicon_Beginpage Beginpage
	      | Guiicon_Accel Accel
	      deriving (Eq,Show)
data Guiicon_Moreinfo = Guiicon_Moreinfo_Refentry  | 
			Guiicon_Moreinfo_None
		      deriving (Eq,Show)
data Guiicon_Revisionflag = Guiicon_Revisionflag_Changed  | 
			    Guiicon_Revisionflag_Added  |  Guiicon_Revisionflag_Deleted  | 
			    Guiicon_Revisionflag_Off
			  deriving (Eq,Show)
data Guilabel = Guilabel Guilabel_Attrs [Guilabel_]
	      deriving (Eq,Show)
data Guilabel_Attrs = Guilabel_Attrs
    { guilabelMoreinfo :: (Defaultable Guilabel_Moreinfo)
    , guilabelId :: (Maybe String)
    , guilabelLang :: (Maybe String)
    , guilabelRemap :: (Maybe String)
    , guilabelXreflabel :: (Maybe String)
    , guilabelRevisionflag :: (Maybe Guilabel_Revisionflag)
    , guilabelArch :: (Maybe String)
    , guilabelCondition :: (Maybe String)
    , guilabelConformance :: (Maybe String)
    , guilabelOs :: (Maybe String)
    , guilabelRevision :: (Maybe String)
    , guilabelSecurity :: (Maybe String)
    , guilabelUserlevel :: (Maybe String)
    , guilabelVendor :: (Maybe String)
    , guilabelRole :: (Maybe String)
    } deriving (Eq,Show)
data Guilabel_ = Guilabel_Str String
	       | Guilabel_Replaceable Replaceable
	       | Guilabel_Inlinegraphic Inlinegraphic
	       | Guilabel_Inlinemediaobject Inlinemediaobject
	       | Guilabel_Indexterm Indexterm
	       | Guilabel_Beginpage Beginpage
	       | Guilabel_Accel Accel
	       deriving (Eq,Show)
data Guilabel_Moreinfo = Guilabel_Moreinfo_Refentry  | 
			 Guilabel_Moreinfo_None
		       deriving (Eq,Show)
data Guilabel_Revisionflag = Guilabel_Revisionflag_Changed  | 
			     Guilabel_Revisionflag_Added  |  Guilabel_Revisionflag_Deleted  | 
			     Guilabel_Revisionflag_Off
			   deriving (Eq,Show)
data Guimenu = Guimenu Guimenu_Attrs [Guimenu_]
	     deriving (Eq,Show)
data Guimenu_Attrs = Guimenu_Attrs
    { guimenuMoreinfo :: (Defaultable Guimenu_Moreinfo)
    , guimenuId :: (Maybe String)
    , guimenuLang :: (Maybe String)
    , guimenuRemap :: (Maybe String)
    , guimenuXreflabel :: (Maybe String)
    , guimenuRevisionflag :: (Maybe Guimenu_Revisionflag)
    , guimenuArch :: (Maybe String)
    , guimenuCondition :: (Maybe String)
    , guimenuConformance :: (Maybe String)
    , guimenuOs :: (Maybe String)
    , guimenuRevision :: (Maybe String)
    , guimenuSecurity :: (Maybe String)
    , guimenuUserlevel :: (Maybe String)
    , guimenuVendor :: (Maybe String)
    , guimenuRole :: (Maybe String)
    } deriving (Eq,Show)
data Guimenu_ = Guimenu_Str String
	      | Guimenu_Replaceable Replaceable
	      | Guimenu_Inlinegraphic Inlinegraphic
	      | Guimenu_Inlinemediaobject Inlinemediaobject
	      | Guimenu_Indexterm Indexterm
	      | Guimenu_Beginpage Beginpage
	      | Guimenu_Accel Accel
	      deriving (Eq,Show)
data Guimenu_Moreinfo = Guimenu_Moreinfo_Refentry  | 
			Guimenu_Moreinfo_None
		      deriving (Eq,Show)
data Guimenu_Revisionflag = Guimenu_Revisionflag_Changed  | 
			    Guimenu_Revisionflag_Added  |  Guimenu_Revisionflag_Deleted  | 
			    Guimenu_Revisionflag_Off
			  deriving (Eq,Show)
data Guimenuitem = Guimenuitem Guimenuitem_Attrs [Guimenuitem_]
		 deriving (Eq,Show)
data Guimenuitem_Attrs = Guimenuitem_Attrs
    { guimenuitemMoreinfo :: (Defaultable Guimenuitem_Moreinfo)
    , guimenuitemId :: (Maybe String)
    , guimenuitemLang :: (Maybe String)
    , guimenuitemRemap :: (Maybe String)
    , guimenuitemXreflabel :: (Maybe String)
    , guimenuitemRevisionflag :: (Maybe Guimenuitem_Revisionflag)
    , guimenuitemArch :: (Maybe String)
    , guimenuitemCondition :: (Maybe String)
    , guimenuitemConformance :: (Maybe String)
    , guimenuitemOs :: (Maybe String)
    , guimenuitemRevision :: (Maybe String)
    , guimenuitemSecurity :: (Maybe String)
    , guimenuitemUserlevel :: (Maybe String)
    , guimenuitemVendor :: (Maybe String)
    , guimenuitemRole :: (Maybe String)
    } deriving (Eq,Show)
data Guimenuitem_ = Guimenuitem_Str String
		  | Guimenuitem_Replaceable Replaceable
		  | Guimenuitem_Inlinegraphic Inlinegraphic
		  | Guimenuitem_Inlinemediaobject Inlinemediaobject
		  | Guimenuitem_Indexterm Indexterm
		  | Guimenuitem_Beginpage Beginpage
		  | Guimenuitem_Accel Accel
		  deriving (Eq,Show)
data Guimenuitem_Moreinfo = Guimenuitem_Moreinfo_Refentry  | 
			    Guimenuitem_Moreinfo_None
			  deriving (Eq,Show)
data Guimenuitem_Revisionflag = Guimenuitem_Revisionflag_Changed
				 |  Guimenuitem_Revisionflag_Added  | 
				Guimenuitem_Revisionflag_Deleted  |  Guimenuitem_Revisionflag_Off
			      deriving (Eq,Show)
data Guisubmenu = Guisubmenu Guisubmenu_Attrs [Guisubmenu_]
		deriving (Eq,Show)
data Guisubmenu_Attrs = Guisubmenu_Attrs
    { guisubmenuMoreinfo :: (Defaultable Guisubmenu_Moreinfo)
    , guisubmenuId :: (Maybe String)
    , guisubmenuLang :: (Maybe String)
    , guisubmenuRemap :: (Maybe String)
    , guisubmenuXreflabel :: (Maybe String)
    , guisubmenuRevisionflag :: (Maybe Guisubmenu_Revisionflag)
    , guisubmenuArch :: (Maybe String)
    , guisubmenuCondition :: (Maybe String)
    , guisubmenuConformance :: (Maybe String)
    , guisubmenuOs :: (Maybe String)
    , guisubmenuRevision :: (Maybe String)
    , guisubmenuSecurity :: (Maybe String)
    , guisubmenuUserlevel :: (Maybe String)
    , guisubmenuVendor :: (Maybe String)
    , guisubmenuRole :: (Maybe String)
    } deriving (Eq,Show)
data Guisubmenu_ = Guisubmenu_Str String
		 | Guisubmenu_Replaceable Replaceable
		 | Guisubmenu_Inlinegraphic Inlinegraphic
		 | Guisubmenu_Inlinemediaobject Inlinemediaobject
		 | Guisubmenu_Indexterm Indexterm
		 | Guisubmenu_Beginpage Beginpage
		 | Guisubmenu_Accel Accel
		 deriving (Eq,Show)
data Guisubmenu_Moreinfo = Guisubmenu_Moreinfo_Refentry  | 
			   Guisubmenu_Moreinfo_None
			 deriving (Eq,Show)
data Guisubmenu_Revisionflag = Guisubmenu_Revisionflag_Changed  | 
			       Guisubmenu_Revisionflag_Added  |  Guisubmenu_Revisionflag_Deleted
			        |  Guisubmenu_Revisionflag_Off
			     deriving (Eq,Show)
data Hardware = Hardware Hardware_Attrs [Hardware_]
	      deriving (Eq,Show)
data Hardware_Attrs = Hardware_Attrs
    { hardwareMoreinfo :: (Defaultable Hardware_Moreinfo)
    , hardwareId :: (Maybe String)
    , hardwareLang :: (Maybe String)
    , hardwareRemap :: (Maybe String)
    , hardwareXreflabel :: (Maybe String)
    , hardwareRevisionflag :: (Maybe Hardware_Revisionflag)
    , hardwareArch :: (Maybe String)
    , hardwareCondition :: (Maybe String)
    , hardwareConformance :: (Maybe String)
    , hardwareOs :: (Maybe String)
    , hardwareRevision :: (Maybe String)
    , hardwareSecurity :: (Maybe String)
    , hardwareUserlevel :: (Maybe String)
    , hardwareVendor :: (Maybe String)
    , hardwareRole :: (Maybe String)
    } deriving (Eq,Show)
data Hardware_ = Hardware_Str String
	       | Hardware_Link Link
	       | Hardware_Olink Olink
	       | Hardware_Ulink Ulink
	       | Hardware_Action Action
	       | Hardware_Application Application
	       | Hardware_Classname Classname
	       | Hardware_Methodname Methodname
	       | Hardware_Interfacename Interfacename
	       | Hardware_Exceptionname Exceptionname
	       | Hardware_Ooclass Ooclass
	       | Hardware_Oointerface Oointerface
	       | Hardware_Ooexception Ooexception
	       | Hardware_Command Command
	       | Hardware_Computeroutput Computeroutput
	       | Hardware_Database Database
	       | Hardware_Email Email
	       | Hardware_Envar Envar
	       | Hardware_Errorcode Errorcode
	       | Hardware_Errorname Errorname
	       | Hardware_Errortype Errortype
	       | Hardware_Errortext Errortext
	       | Hardware_Filename Filename
	       | Hardware_Function Function
	       | Hardware_Guibutton Guibutton
	       | Hardware_Guiicon Guiicon
	       | Hardware_Guilabel Guilabel
	       | Hardware_Guimenu Guimenu
	       | Hardware_Guimenuitem Guimenuitem
	       | Hardware_Guisubmenu Guisubmenu
	       | Hardware_Hardware Hardware
	       | Hardware_Interface Interface
	       | Hardware_Keycap Keycap
	       | Hardware_Keycode Keycode
	       | Hardware_Keycombo Keycombo
	       | Hardware_Keysym Keysym
	       | Hardware_Literal Literal
	       | Hardware_Constant Constant
	       | Hardware_Markup Markup
	       | Hardware_Medialabel Medialabel
	       | Hardware_Menuchoice Menuchoice
	       | Hardware_Mousebutton Mousebutton
	       | Hardware_Option Option
	       | Hardware_Optional Optional
	       | Hardware_Parameter Parameter
	       | Hardware_Prompt Prompt
	       | Hardware_Property Property
	       | Hardware_Replaceable Replaceable
	       | Hardware_Returnvalue Returnvalue
	       | Hardware_Sgmltag Sgmltag
	       | Hardware_Structfield Structfield
	       | Hardware_Structname Structname
	       | Hardware_Symbol Symbol
	       | Hardware_Systemitem Systemitem
	       | Hardware_Token Token
	       | Hardware_Type Type
	       | Hardware_Userinput Userinput
	       | Hardware_Varname Varname
	       | Hardware_Anchor Anchor
	       | Hardware_Remark Remark
	       | Hardware_Subscript Subscript
	       | Hardware_Superscript Superscript
	       | Hardware_Inlinegraphic Inlinegraphic
	       | Hardware_Inlinemediaobject Inlinemediaobject
	       | Hardware_Indexterm Indexterm
	       | Hardware_Beginpage Beginpage
	       deriving (Eq,Show)
data Hardware_Moreinfo = Hardware_Moreinfo_Refentry  | 
			 Hardware_Moreinfo_None
		       deriving (Eq,Show)
data Hardware_Revisionflag = Hardware_Revisionflag_Changed  | 
			     Hardware_Revisionflag_Added  |  Hardware_Revisionflag_Deleted  | 
			     Hardware_Revisionflag_Off
			   deriving (Eq,Show)
data Interface = Interface Interface_Attrs [Interface_]
	       deriving (Eq,Show)
data Interface_Attrs = Interface_Attrs
    { interfaceMoreinfo :: (Defaultable Interface_Moreinfo)
    , interfaceId :: (Maybe String)
    , interfaceLang :: (Maybe String)
    , interfaceRemap :: (Maybe String)
    , interfaceXreflabel :: (Maybe String)
    , interfaceRevisionflag :: (Maybe Interface_Revisionflag)
    , interfaceArch :: (Maybe String)
    , interfaceCondition :: (Maybe String)
    , interfaceConformance :: (Maybe String)
    , interfaceOs :: (Maybe String)
    , interfaceRevision :: (Maybe String)
    , interfaceSecurity :: (Maybe String)
    , interfaceUserlevel :: (Maybe String)
    , interfaceVendor :: (Maybe String)
    , interfaceRole :: (Maybe String)
    } deriving (Eq,Show)
data Interface_ = Interface_Str String
		| Interface_Replaceable Replaceable
		| Interface_Inlinegraphic Inlinegraphic
		| Interface_Inlinemediaobject Inlinemediaobject
		| Interface_Indexterm Indexterm
		| Interface_Beginpage Beginpage
		| Interface_Accel Accel
		deriving (Eq,Show)
data Interface_Moreinfo = Interface_Moreinfo_Refentry  | 
			  Interface_Moreinfo_None
			deriving (Eq,Show)
data Interface_Revisionflag = Interface_Revisionflag_Changed  | 
			      Interface_Revisionflag_Added  |  Interface_Revisionflag_Deleted  | 
			      Interface_Revisionflag_Off
			    deriving (Eq,Show)
data Keycap = Keycap Keycap_Attrs [Keycap_]
	    deriving (Eq,Show)
data Keycap_Attrs = Keycap_Attrs
    { keycapMoreinfo :: (Defaultable Keycap_Moreinfo)
    , keycapId :: (Maybe String)
    , keycapLang :: (Maybe String)
    , keycapRemap :: (Maybe String)
    , keycapXreflabel :: (Maybe String)
    , keycapRevisionflag :: (Maybe Keycap_Revisionflag)
    , keycapArch :: (Maybe String)
    , keycapCondition :: (Maybe String)
    , keycapConformance :: (Maybe String)
    , keycapOs :: (Maybe String)
    , keycapRevision :: (Maybe String)
    , keycapSecurity :: (Maybe String)
    , keycapUserlevel :: (Maybe String)
    , keycapVendor :: (Maybe String)
    , keycapRole :: (Maybe String)
    } deriving (Eq,Show)
data Keycap_ = Keycap_Str String
	     | Keycap_Link Link
	     | Keycap_Olink Olink
	     | Keycap_Ulink Ulink
	     | Keycap_Action Action
	     | Keycap_Application Application
	     | Keycap_Classname Classname
	     | Keycap_Methodname Methodname
	     | Keycap_Interfacename Interfacename
	     | Keycap_Exceptionname Exceptionname
	     | Keycap_Ooclass Ooclass
	     | Keycap_Oointerface Oointerface
	     | Keycap_Ooexception Ooexception
	     | Keycap_Command Command
	     | Keycap_Computeroutput Computeroutput
	     | Keycap_Database Database
	     | Keycap_Email Email
	     | Keycap_Envar Envar
	     | Keycap_Errorcode Errorcode
	     | Keycap_Errorname Errorname
	     | Keycap_Errortype Errortype
	     | Keycap_Errortext Errortext
	     | Keycap_Filename Filename
	     | Keycap_Function Function
	     | Keycap_Guibutton Guibutton
	     | Keycap_Guiicon Guiicon
	     | Keycap_Guilabel Guilabel
	     | Keycap_Guimenu Guimenu
	     | Keycap_Guimenuitem Guimenuitem
	     | Keycap_Guisubmenu Guisubmenu
	     | Keycap_Hardware Hardware
	     | Keycap_Interface Interface
	     | Keycap_Keycap Keycap
	     | Keycap_Keycode Keycode
	     | Keycap_Keycombo Keycombo
	     | Keycap_Keysym Keysym
	     | Keycap_Literal Literal
	     | Keycap_Constant Constant
	     | Keycap_Markup Markup
	     | Keycap_Medialabel Medialabel
	     | Keycap_Menuchoice Menuchoice
	     | Keycap_Mousebutton Mousebutton
	     | Keycap_Option Option
	     | Keycap_Optional Optional
	     | Keycap_Parameter Parameter
	     | Keycap_Prompt Prompt
	     | Keycap_Property Property
	     | Keycap_Replaceable Replaceable
	     | Keycap_Returnvalue Returnvalue
	     | Keycap_Sgmltag Sgmltag
	     | Keycap_Structfield Structfield
	     | Keycap_Structname Structname
	     | Keycap_Symbol Symbol
	     | Keycap_Systemitem Systemitem
	     | Keycap_Token Token
	     | Keycap_Type Type
	     | Keycap_Userinput Userinput
	     | Keycap_Varname Varname
	     | Keycap_Anchor Anchor
	     | Keycap_Remark Remark
	     | Keycap_Subscript Subscript
	     | Keycap_Superscript Superscript
	     | Keycap_Inlinegraphic Inlinegraphic
	     | Keycap_Inlinemediaobject Inlinemediaobject
	     | Keycap_Indexterm Indexterm
	     | Keycap_Beginpage Beginpage
	     deriving (Eq,Show)
data Keycap_Moreinfo = Keycap_Moreinfo_Refentry  | 
		       Keycap_Moreinfo_None
		     deriving (Eq,Show)
data Keycap_Revisionflag = Keycap_Revisionflag_Changed  | 
			   Keycap_Revisionflag_Added  |  Keycap_Revisionflag_Deleted  | 
			   Keycap_Revisionflag_Off
			 deriving (Eq,Show)
data Keycode = Keycode Keycode_Attrs [Keycode_]
	     deriving (Eq,Show)
data Keycode_Attrs = Keycode_Attrs
    { keycodeId :: (Maybe String)
    , keycodeLang :: (Maybe String)
    , keycodeRemap :: (Maybe String)
    , keycodeXreflabel :: (Maybe String)
    , keycodeRevisionflag :: (Maybe Keycode_Revisionflag)
    , keycodeArch :: (Maybe String)
    , keycodeCondition :: (Maybe String)
    , keycodeConformance :: (Maybe String)
    , keycodeOs :: (Maybe String)
    , keycodeRevision :: (Maybe String)
    , keycodeSecurity :: (Maybe String)
    , keycodeUserlevel :: (Maybe String)
    , keycodeVendor :: (Maybe String)
    , keycodeRole :: (Maybe String)
    } deriving (Eq,Show)
data Keycode_ = Keycode_Str String
	      | Keycode_Replaceable Replaceable
	      | Keycode_Inlinegraphic Inlinegraphic
	      | Keycode_Inlinemediaobject Inlinemediaobject
	      | Keycode_Indexterm Indexterm
	      | Keycode_Beginpage Beginpage
	      deriving (Eq,Show)
data Keycode_Revisionflag = Keycode_Revisionflag_Changed  | 
			    Keycode_Revisionflag_Added  |  Keycode_Revisionflag_Deleted  | 
			    Keycode_Revisionflag_Off
			  deriving (Eq,Show)
data Keycombo = Keycombo Keycombo_Attrs
			 [(OneOf4 Keycap Keycombo Keysym Mousebutton)]
	      deriving (Eq,Show)
data Keycombo_Attrs = Keycombo_Attrs
    { keycomboAction :: (Maybe Keycombo_Action)
    , keycomboOtheraction :: (Maybe String)
    , keycomboMoreinfo :: (Defaultable Keycombo_Moreinfo)
    , keycomboId :: (Maybe String)
    , keycomboLang :: (Maybe String)
    , keycomboRemap :: (Maybe String)
    , keycomboXreflabel :: (Maybe String)
    , keycomboRevisionflag :: (Maybe Keycombo_Revisionflag)
    , keycomboArch :: (Maybe String)
    , keycomboCondition :: (Maybe String)
    , keycomboConformance :: (Maybe String)
    , keycomboOs :: (Maybe String)
    , keycomboRevision :: (Maybe String)
    , keycomboSecurity :: (Maybe String)
    , keycomboUserlevel :: (Maybe String)
    , keycomboVendor :: (Maybe String)
    , keycomboRole :: (Maybe String)
    } deriving (Eq,Show)
data Keycombo_Action = Keycombo_Action_Click  | 
		       Keycombo_Action_Double_click  |  Keycombo_Action_Press  | 
		       Keycombo_Action_Seq  |  Keycombo_Action_Simul  | 
		       Keycombo_Action_Other
		     deriving (Eq,Show)
data Keycombo_Moreinfo = Keycombo_Moreinfo_Refentry  | 
			 Keycombo_Moreinfo_None
		       deriving (Eq,Show)
data Keycombo_Revisionflag = Keycombo_Revisionflag_Changed  | 
			     Keycombo_Revisionflag_Added  |  Keycombo_Revisionflag_Deleted  | 
			     Keycombo_Revisionflag_Off
			   deriving (Eq,Show)
data Keysym = Keysym Keysym_Attrs [Keysym_]
	    deriving (Eq,Show)
data Keysym_Attrs = Keysym_Attrs
    { keysymId :: (Maybe String)
    , keysymLang :: (Maybe String)
    , keysymRemap :: (Maybe String)
    , keysymXreflabel :: (Maybe String)
    , keysymRevisionflag :: (Maybe Keysym_Revisionflag)
    , keysymArch :: (Maybe String)
    , keysymCondition :: (Maybe String)
    , keysymConformance :: (Maybe String)
    , keysymOs :: (Maybe String)
    , keysymRevision :: (Maybe String)
    , keysymSecurity :: (Maybe String)
    , keysymUserlevel :: (Maybe String)
    , keysymVendor :: (Maybe String)
    , keysymRole :: (Maybe String)
    } deriving (Eq,Show)
data Keysym_ = Keysym_Str String
	     | Keysym_Replaceable Replaceable
	     | Keysym_Inlinegraphic Inlinegraphic
	     | Keysym_Inlinemediaobject Inlinemediaobject
	     | Keysym_Indexterm Indexterm
	     | Keysym_Beginpage Beginpage
	     deriving (Eq,Show)
data Keysym_Revisionflag = Keysym_Revisionflag_Changed  | 
			   Keysym_Revisionflag_Added  |  Keysym_Revisionflag_Deleted  | 
			   Keysym_Revisionflag_Off
			 deriving (Eq,Show)
data Lineannotation = Lineannotation Lineannotation_Attrs
				     [Lineannotation_]
		    deriving (Eq,Show)
data Lineannotation_Attrs = Lineannotation_Attrs
    { lineannotationId :: (Maybe String)
    , lineannotationLang :: (Maybe String)
    , lineannotationRemap :: (Maybe String)
    , lineannotationXreflabel :: (Maybe String)
    , lineannotationRevisionflag :: (Maybe Lineannotation_Revisionflag)
    , lineannotationArch :: (Maybe String)
    , lineannotationCondition :: (Maybe String)
    , lineannotationConformance :: (Maybe String)
    , lineannotationOs :: (Maybe String)
    , lineannotationRevision :: (Maybe String)
    , lineannotationSecurity :: (Maybe String)
    , lineannotationUserlevel :: (Maybe String)
    , lineannotationVendor :: (Maybe String)
    , lineannotationRole :: (Maybe String)
    } deriving (Eq,Show)
data Lineannotation_ = Lineannotation_Str String
		     | Lineannotation_Footnoteref Footnoteref
		     | Lineannotation_Xref Xref
		     | Lineannotation_Abbrev Abbrev
		     | Lineannotation_Acronym Acronym
		     | Lineannotation_Citation Citation
		     | Lineannotation_Citerefentry Citerefentry
		     | Lineannotation_Citetitle Citetitle
		     | Lineannotation_Emphasis Emphasis
		     | Lineannotation_Firstterm Firstterm
		     | Lineannotation_Foreignphrase Foreignphrase
		     | Lineannotation_Glossterm Glossterm
		     | Lineannotation_Footnote Footnote
		     | Lineannotation_Phrase Phrase
		     | Lineannotation_Quote Quote
		     | Lineannotation_Trademark Trademark
		     | Lineannotation_Wordasword Wordasword
		     | Lineannotation_Personname Personname
		     | Lineannotation_Link Link
		     | Lineannotation_Olink Olink
		     | Lineannotation_Ulink Ulink
		     | Lineannotation_Action Action
		     | Lineannotation_Application Application
		     | Lineannotation_Classname Classname
		     | Lineannotation_Methodname Methodname
		     | Lineannotation_Interfacename Interfacename
		     | Lineannotation_Exceptionname Exceptionname
		     | Lineannotation_Ooclass Ooclass
		     | Lineannotation_Oointerface Oointerface
		     | Lineannotation_Ooexception Ooexception
		     | Lineannotation_Command Command
		     | Lineannotation_Computeroutput Computeroutput
		     | Lineannotation_Database Database
		     | Lineannotation_Email Email
		     | Lineannotation_Envar Envar
		     | Lineannotation_Errorcode Errorcode
		     | Lineannotation_Errorname Errorname
		     | Lineannotation_Errortype Errortype
		     | Lineannotation_Errortext Errortext
		     | Lineannotation_Filename Filename
		     | Lineannotation_Function Function
		     | Lineannotation_Guibutton Guibutton
		     | Lineannotation_Guiicon Guiicon
		     | Lineannotation_Guilabel Guilabel
		     | Lineannotation_Guimenu Guimenu
		     | Lineannotation_Guimenuitem Guimenuitem
		     | Lineannotation_Guisubmenu Guisubmenu
		     | Lineannotation_Hardware Hardware
		     | Lineannotation_Interface Interface
		     | Lineannotation_Keycap Keycap
		     | Lineannotation_Keycode Keycode
		     | Lineannotation_Keycombo Keycombo
		     | Lineannotation_Keysym Keysym
		     | Lineannotation_Literal Literal
		     | Lineannotation_Constant Constant
		     | Lineannotation_Markup Markup
		     | Lineannotation_Medialabel Medialabel
		     | Lineannotation_Menuchoice Menuchoice
		     | Lineannotation_Mousebutton Mousebutton
		     | Lineannotation_Option Option
		     | Lineannotation_Optional Optional
		     | Lineannotation_Parameter Parameter
		     | Lineannotation_Prompt Prompt
		     | Lineannotation_Property Property
		     | Lineannotation_Replaceable Replaceable
		     | Lineannotation_Returnvalue Returnvalue
		     | Lineannotation_Sgmltag Sgmltag
		     | Lineannotation_Structfield Structfield
		     | Lineannotation_Structname Structname
		     | Lineannotation_Symbol Symbol
		     | Lineannotation_Systemitem Systemitem
		     | Lineannotation_Token Token
		     | Lineannotation_Type Type
		     | Lineannotation_Userinput Userinput
		     | Lineannotation_Varname Varname
		     | Lineannotation_Anchor Anchor
		     | Lineannotation_Author Author
		     | Lineannotation_Authorinitials Authorinitials
		     | Lineannotation_Corpauthor Corpauthor
		     | Lineannotation_Modespec Modespec
		     | Lineannotation_Othercredit Othercredit
		     | Lineannotation_Productname Productname
		     | Lineannotation_Productnumber Productnumber
		     | Lineannotation_Revhistory Revhistory
		     | Lineannotation_Remark Remark
		     | Lineannotation_Subscript Subscript
		     | Lineannotation_Superscript Superscript
		     | Lineannotation_Inlinegraphic Inlinegraphic
		     | Lineannotation_Inlinemediaobject Inlinemediaobject
		     | Lineannotation_Inlineequation Inlineequation
		     | Lineannotation_Synopsis Synopsis
		     | Lineannotation_Cmdsynopsis Cmdsynopsis
		     | Lineannotation_Funcsynopsis Funcsynopsis
		     | Lineannotation_Classsynopsis Classsynopsis
		     | Lineannotation_Fieldsynopsis Fieldsynopsis
		     | Lineannotation_Constructorsynopsis Constructorsynopsis
		     | Lineannotation_Destructorsynopsis Destructorsynopsis
		     | Lineannotation_Methodsynopsis Methodsynopsis
		     | Lineannotation_Indexterm Indexterm
		     | Lineannotation_Beginpage Beginpage
		     deriving (Eq,Show)
data Lineannotation_Revisionflag = Lineannotation_Revisionflag_Changed
				    |  Lineannotation_Revisionflag_Added  | 
				   Lineannotation_Revisionflag_Deleted  | 
				   Lineannotation_Revisionflag_Off
				 deriving (Eq,Show)
data Literal = Literal Literal_Attrs [Literal_]
	     deriving (Eq,Show)
data Literal_Attrs = Literal_Attrs
    { literalMoreinfo :: (Defaultable Literal_Moreinfo)
    , literalId :: (Maybe String)
    , literalLang :: (Maybe String)
    , literalRemap :: (Maybe String)
    , literalXreflabel :: (Maybe String)
    , literalRevisionflag :: (Maybe Literal_Revisionflag)
    , literalArch :: (Maybe String)
    , literalCondition :: (Maybe String)
    , literalConformance :: (Maybe String)
    , literalOs :: (Maybe String)
    , literalRevision :: (Maybe String)
    , literalSecurity :: (Maybe String)
    , literalUserlevel :: (Maybe String)
    , literalVendor :: (Maybe String)
    , literalRole :: (Maybe String)
    } deriving (Eq,Show)
data Literal_ = Literal_Str String
	      | Literal_Link Link
	      | Literal_Olink Olink
	      | Literal_Ulink Ulink
	      | Literal_Action Action
	      | Literal_Application Application
	      | Literal_Classname Classname
	      | Literal_Methodname Methodname
	      | Literal_Interfacename Interfacename
	      | Literal_Exceptionname Exceptionname
	      | Literal_Ooclass Ooclass
	      | Literal_Oointerface Oointerface
	      | Literal_Ooexception Ooexception
	      | Literal_Command Command
	      | Literal_Computeroutput Computeroutput
	      | Literal_Database Database
	      | Literal_Email Email
	      | Literal_Envar Envar
	      | Literal_Errorcode Errorcode
	      | Literal_Errorname Errorname
	      | Literal_Errortype Errortype
	      | Literal_Errortext Errortext
	      | Literal_Filename Filename
	      | Literal_Function Function
	      | Literal_Guibutton Guibutton
	      | Literal_Guiicon Guiicon
	      | Literal_Guilabel Guilabel
	      | Literal_Guimenu Guimenu
	      | Literal_Guimenuitem Guimenuitem
	      | Literal_Guisubmenu Guisubmenu
	      | Literal_Hardware Hardware
	      | Literal_Interface Interface
	      | Literal_Keycap Keycap
	      | Literal_Keycode Keycode
	      | Literal_Keycombo Keycombo
	      | Literal_Keysym Keysym
	      | Literal_Literal Literal
	      | Literal_Constant Constant
	      | Literal_Markup Markup
	      | Literal_Medialabel Medialabel
	      | Literal_Menuchoice Menuchoice
	      | Literal_Mousebutton Mousebutton
	      | Literal_Option Option
	      | Literal_Optional Optional
	      | Literal_Parameter Parameter
	      | Literal_Prompt Prompt
	      | Literal_Property Property
	      | Literal_Replaceable Replaceable
	      | Literal_Returnvalue Returnvalue
	      | Literal_Sgmltag Sgmltag
	      | Literal_Structfield Structfield
	      | Literal_Structname Structname
	      | Literal_Symbol Symbol
	      | Literal_Systemitem Systemitem
	      | Literal_Token Token
	      | Literal_Type Type
	      | Literal_Userinput Userinput
	      | Literal_Varname Varname
	      | Literal_Anchor Anchor
	      | Literal_Remark Remark
	      | Literal_Subscript Subscript
	      | Literal_Superscript Superscript
	      | Literal_Inlinegraphic Inlinegraphic
	      | Literal_Inlinemediaobject Inlinemediaobject
	      | Literal_Indexterm Indexterm
	      | Literal_Beginpage Beginpage
	      deriving (Eq,Show)
data Literal_Moreinfo = Literal_Moreinfo_Refentry  | 
			Literal_Moreinfo_None
		      deriving (Eq,Show)
data Literal_Revisionflag = Literal_Revisionflag_Changed  | 
			    Literal_Revisionflag_Added  |  Literal_Revisionflag_Deleted  | 
			    Literal_Revisionflag_Off
			  deriving (Eq,Show)
data Constant = Constant Constant_Attrs [Constant_]
	      deriving (Eq,Show)
data Constant_Attrs = Constant_Attrs
    { constantClass :: (Maybe Constant_Class)
    , constantId :: (Maybe String)
    , constantLang :: (Maybe String)
    , constantRemap :: (Maybe String)
    , constantXreflabel :: (Maybe String)
    , constantRevisionflag :: (Maybe Constant_Revisionflag)
    , constantArch :: (Maybe String)
    , constantCondition :: (Maybe String)
    , constantConformance :: (Maybe String)
    , constantOs :: (Maybe String)
    , constantRevision :: (Maybe String)
    , constantSecurity :: (Maybe String)
    , constantUserlevel :: (Maybe String)
    , constantVendor :: (Maybe String)
    , constantRole :: (Maybe String)
    } deriving (Eq,Show)
data Constant_ = Constant_Str String
	       | Constant_Replaceable Replaceable
	       | Constant_Inlinegraphic Inlinegraphic
	       | Constant_Inlinemediaobject Inlinemediaobject
	       | Constant_Indexterm Indexterm
	       | Constant_Beginpage Beginpage
	       deriving (Eq,Show)
data Constant_Class = Constant_Class_Limit
		    deriving (Eq,Show)
data Constant_Revisionflag = Constant_Revisionflag_Changed  | 
			     Constant_Revisionflag_Added  |  Constant_Revisionflag_Deleted  | 
			     Constant_Revisionflag_Off
			   deriving (Eq,Show)
data Varname = Varname Varname_Attrs [Varname_]
	     deriving (Eq,Show)
data Varname_Attrs = Varname_Attrs
    { varnameId :: (Maybe String)
    , varnameLang :: (Maybe String)
    , varnameRemap :: (Maybe String)
    , varnameXreflabel :: (Maybe String)
    , varnameRevisionflag :: (Maybe Varname_Revisionflag)
    , varnameArch :: (Maybe String)
    , varnameCondition :: (Maybe String)
    , varnameConformance :: (Maybe String)
    , varnameOs :: (Maybe String)
    , varnameRevision :: (Maybe String)
    , varnameSecurity :: (Maybe String)
    , varnameUserlevel :: (Maybe String)
    , varnameVendor :: (Maybe String)
    , varnameRole :: (Maybe String)
    } deriving (Eq,Show)
data Varname_ = Varname_Str String
	      | Varname_Replaceable Replaceable
	      | Varname_Inlinegraphic Inlinegraphic
	      | Varname_Inlinemediaobject Inlinemediaobject
	      | Varname_Indexterm Indexterm
	      | Varname_Beginpage Beginpage
	      deriving (Eq,Show)
data Varname_Revisionflag = Varname_Revisionflag_Changed  | 
			    Varname_Revisionflag_Added  |  Varname_Revisionflag_Deleted  | 
			    Varname_Revisionflag_Off
			  deriving (Eq,Show)
data Markup = Markup Markup_Attrs [Markup_]
	    deriving (Eq,Show)
data Markup_Attrs = Markup_Attrs
    { markupId :: (Maybe String)
    , markupLang :: (Maybe String)
    , markupRemap :: (Maybe String)
    , markupXreflabel :: (Maybe String)
    , markupRevisionflag :: (Maybe Markup_Revisionflag)
    , markupArch :: (Maybe String)
    , markupCondition :: (Maybe String)
    , markupConformance :: (Maybe String)
    , markupOs :: (Maybe String)
    , markupRevision :: (Maybe String)
    , markupSecurity :: (Maybe String)
    , markupUserlevel :: (Maybe String)
    , markupVendor :: (Maybe String)
    , markupRole :: (Maybe String)
    } deriving (Eq,Show)
data Markup_ = Markup_Str String
	     | Markup_Replaceable Replaceable
	     | Markup_Inlinegraphic Inlinegraphic
	     | Markup_Inlinemediaobject Inlinemediaobject
	     | Markup_Indexterm Indexterm
	     | Markup_Beginpage Beginpage
	     deriving (Eq,Show)
data Markup_Revisionflag = Markup_Revisionflag_Changed  | 
			   Markup_Revisionflag_Added  |  Markup_Revisionflag_Deleted  | 
			   Markup_Revisionflag_Off
			 deriving (Eq,Show)
data Medialabel = Medialabel Medialabel_Attrs [Medialabel_]
		deriving (Eq,Show)
data Medialabel_Attrs = Medialabel_Attrs
    { medialabelClass :: (Maybe Medialabel_Class)
    , medialabelId :: (Maybe String)
    , medialabelLang :: (Maybe String)
    , medialabelRemap :: (Maybe String)
    , medialabelXreflabel :: (Maybe String)
    , medialabelRevisionflag :: (Maybe Medialabel_Revisionflag)
    , medialabelArch :: (Maybe String)
    , medialabelCondition :: (Maybe String)
    , medialabelConformance :: (Maybe String)
    , medialabelOs :: (Maybe String)
    , medialabelRevision :: (Maybe String)
    , medialabelSecurity :: (Maybe String)
    , medialabelUserlevel :: (Maybe String)
    , medialabelVendor :: (Maybe String)
    , medialabelRole :: (Maybe String)
    } deriving (Eq,Show)
data Medialabel_ = Medialabel_Str String
		 | Medialabel_Replaceable Replaceable
		 | Medialabel_Inlinegraphic Inlinegraphic
		 | Medialabel_Inlinemediaobject Inlinemediaobject
		 | Medialabel_Indexterm Indexterm
		 | Medialabel_Beginpage Beginpage
		 deriving (Eq,Show)
data Medialabel_Class = Medialabel_Class_Cartridge  | 
			Medialabel_Class_Cdrom  |  Medialabel_Class_Disk  | 
			Medialabel_Class_Tape
		      deriving (Eq,Show)
data Medialabel_Revisionflag = Medialabel_Revisionflag_Changed  | 
			       Medialabel_Revisionflag_Added  |  Medialabel_Revisionflag_Deleted
			        |  Medialabel_Revisionflag_Off
			     deriving (Eq,Show)
data Menuchoice = Menuchoice Menuchoice_Attrs (Maybe Shortcut)
			     [(OneOf7 Guibutton Guiicon Guilabel Guimenu Guimenuitem Guisubmenu Interface)]
		deriving (Eq,Show)
data Menuchoice_Attrs = Menuchoice_Attrs
    { menuchoiceMoreinfo :: (Defaultable Menuchoice_Moreinfo)
    , menuchoiceId :: (Maybe String)
    , menuchoiceLang :: (Maybe String)
    , menuchoiceRemap :: (Maybe String)
    , menuchoiceXreflabel :: (Maybe String)
    , menuchoiceRevisionflag :: (Maybe Menuchoice_Revisionflag)
    , menuchoiceArch :: (Maybe String)
    , menuchoiceCondition :: (Maybe String)
    , menuchoiceConformance :: (Maybe String)
    , menuchoiceOs :: (Maybe String)
    , menuchoiceRevision :: (Maybe String)
    , menuchoiceSecurity :: (Maybe String)
    , menuchoiceUserlevel :: (Maybe String)
    , menuchoiceVendor :: (Maybe String)
    , menuchoiceRole :: (Maybe String)
    } deriving (Eq,Show)
data Menuchoice_Moreinfo = Menuchoice_Moreinfo_Refentry  | 
			   Menuchoice_Moreinfo_None
			 deriving (Eq,Show)
data Menuchoice_Revisionflag = Menuchoice_Revisionflag_Changed  | 
			       Menuchoice_Revisionflag_Added  |  Menuchoice_Revisionflag_Deleted
			        |  Menuchoice_Revisionflag_Off
			     deriving (Eq,Show)
data Shortcut = Shortcut Shortcut_Attrs
			 [(OneOf4 Keycap Keycombo Keysym Mousebutton)]
	      deriving (Eq,Show)
data Shortcut_Attrs = Shortcut_Attrs
    { shortcutAction :: (Maybe Shortcut_Action)
    , shortcutOtheraction :: (Maybe String)
    , shortcutMoreinfo :: (Defaultable Shortcut_Moreinfo)
    , shortcutId :: (Maybe String)
    , shortcutLang :: (Maybe String)
    , shortcutRemap :: (Maybe String)
    , shortcutXreflabel :: (Maybe String)
    , shortcutRevisionflag :: (Maybe Shortcut_Revisionflag)
    , shortcutArch :: (Maybe String)
    , shortcutCondition :: (Maybe String)
    , shortcutConformance :: (Maybe String)
    , shortcutOs :: (Maybe String)
    , shortcutRevision :: (Maybe String)
    , shortcutSecurity :: (Maybe String)
    , shortcutUserlevel :: (Maybe String)
    , shortcutVendor :: (Maybe String)
    , shortcutRole :: (Maybe String)
    } deriving (Eq,Show)
data Shortcut_Action = Shortcut_Action_Click  | 
		       Shortcut_Action_Double_click  |  Shortcut_Action_Press  | 
		       Shortcut_Action_Seq  |  Shortcut_Action_Simul  | 
		       Shortcut_Action_Other
		     deriving (Eq,Show)
data Shortcut_Moreinfo = Shortcut_Moreinfo_Refentry  | 
			 Shortcut_Moreinfo_None
		       deriving (Eq,Show)
data Shortcut_Revisionflag = Shortcut_Revisionflag_Changed  | 
			     Shortcut_Revisionflag_Added  |  Shortcut_Revisionflag_Deleted  | 
			     Shortcut_Revisionflag_Off
			   deriving (Eq,Show)
data Mousebutton = Mousebutton Mousebutton_Attrs [Mousebutton_]
		 deriving (Eq,Show)
data Mousebutton_Attrs = Mousebutton_Attrs
    { mousebuttonMoreinfo :: (Defaultable Mousebutton_Moreinfo)
    , mousebuttonId :: (Maybe String)
    , mousebuttonLang :: (Maybe String)
    , mousebuttonRemap :: (Maybe String)
    , mousebuttonXreflabel :: (Maybe String)
    , mousebuttonRevisionflag :: (Maybe Mousebutton_Revisionflag)
    , mousebuttonArch :: (Maybe String)
    , mousebuttonCondition :: (Maybe String)
    , mousebuttonConformance :: (Maybe String)
    , mousebuttonOs :: (Maybe String)
    , mousebuttonRevision :: (Maybe String)
    , mousebuttonSecurity :: (Maybe String)
    , mousebuttonUserlevel :: (Maybe String)
    , mousebuttonVendor :: (Maybe String)
    , mousebuttonRole :: (Maybe String)
    } deriving (Eq,Show)
data Mousebutton_ = Mousebutton_Str String
		  | Mousebutton_Replaceable Replaceable
		  | Mousebutton_Inlinegraphic Inlinegraphic
		  | Mousebutton_Inlinemediaobject Inlinemediaobject
		  | Mousebutton_Indexterm Indexterm
		  | Mousebutton_Beginpage Beginpage
		  deriving (Eq,Show)
data Mousebutton_Moreinfo = Mousebutton_Moreinfo_Refentry  | 
			    Mousebutton_Moreinfo_None
			  deriving (Eq,Show)
data Mousebutton_Revisionflag = Mousebutton_Revisionflag_Changed
				 |  Mousebutton_Revisionflag_Added  | 
				Mousebutton_Revisionflag_Deleted  |  Mousebutton_Revisionflag_Off
			      deriving (Eq,Show)
data Msgtext = Msgtext Msgtext_Attrs
		       [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)]
	     deriving (Eq,Show)
data Msgtext_Attrs = Msgtext_Attrs
    { msgtextId :: (Maybe String)
    , msgtextLang :: (Maybe String)
    , msgtextRemap :: (Maybe String)
    , msgtextXreflabel :: (Maybe String)
    , msgtextRevisionflag :: (Maybe Msgtext_Revisionflag)
    , msgtextArch :: (Maybe String)
    , msgtextCondition :: (Maybe String)
    , msgtextConformance :: (Maybe String)
    , msgtextOs :: (Maybe String)
    , msgtextRevision :: (Maybe String)
    , msgtextSecurity :: (Maybe String)
    , msgtextUserlevel :: (Maybe String)
    , msgtextVendor :: (Maybe String)
    , msgtextRole :: (Maybe String)
    } deriving (Eq,Show)
data Msgtext_Revisionflag = Msgtext_Revisionflag_Changed  | 
			    Msgtext_Revisionflag_Added  |  Msgtext_Revisionflag_Deleted  | 
			    Msgtext_Revisionflag_Off
			  deriving (Eq,Show)
data Option = Option Option_Attrs [Option_]
	    deriving (Eq,Show)
data Option_Attrs = Option_Attrs
    { optionId :: (Maybe String)
    , optionLang :: (Maybe String)
    , optionRemap :: (Maybe String)
    , optionXreflabel :: (Maybe String)
    , optionRevisionflag :: (Maybe Option_Revisionflag)
    , optionArch :: (Maybe String)
    , optionCondition :: (Maybe String)
    , optionConformance :: (Maybe String)
    , optionOs :: (Maybe String)
    , optionRevision :: (Maybe String)
    , optionSecurity :: (Maybe String)
    , optionUserlevel :: (Maybe String)
    , optionVendor :: (Maybe String)
    , optionRole :: (Maybe String)
    } deriving (Eq,Show)
data Option_ = Option_Str String
	     | Option_Link Link
	     | Option_Olink Olink
	     | Option_Ulink Ulink
	     | Option_Action Action
	     | Option_Application Application
	     | Option_Classname Classname
	     | Option_Methodname Methodname
	     | Option_Interfacename Interfacename
	     | Option_Exceptionname Exceptionname
	     | Option_Ooclass Ooclass
	     | Option_Oointerface Oointerface
	     | Option_Ooexception Ooexception
	     | Option_Command Command
	     | Option_Computeroutput Computeroutput
	     | Option_Database Database
	     | Option_Email Email
	     | Option_Envar Envar
	     | Option_Errorcode Errorcode
	     | Option_Errorname Errorname
	     | Option_Errortype Errortype
	     | Option_Errortext Errortext
	     | Option_Filename Filename
	     | Option_Function Function
	     | Option_Guibutton Guibutton
	     | Option_Guiicon Guiicon
	     | Option_Guilabel Guilabel
	     | Option_Guimenu Guimenu
	     | Option_Guimenuitem Guimenuitem
	     | Option_Guisubmenu Guisubmenu
	     | Option_Hardware Hardware
	     | Option_Interface Interface
	     | Option_Keycap Keycap
	     | Option_Keycode Keycode
	     | Option_Keycombo Keycombo
	     | Option_Keysym Keysym
	     | Option_Literal Literal
	     | Option_Constant Constant
	     | Option_Markup Markup
	     | Option_Medialabel Medialabel
	     | Option_Menuchoice Menuchoice
	     | Option_Mousebutton Mousebutton
	     | Option_Option Option
	     | Option_Optional Optional
	     | Option_Parameter Parameter
	     | Option_Prompt Prompt
	     | Option_Property Property
	     | Option_Replaceable Replaceable
	     | Option_Returnvalue Returnvalue
	     | Option_Sgmltag Sgmltag
	     | Option_Structfield Structfield
	     | Option_Structname Structname
	     | Option_Symbol Symbol
	     | Option_Systemitem Systemitem
	     | Option_Token Token
	     | Option_Type Type
	     | Option_Userinput Userinput
	     | Option_Varname Varname
	     | Option_Anchor Anchor
	     | Option_Remark Remark
	     | Option_Subscript Subscript
	     | Option_Superscript Superscript
	     | Option_Inlinegraphic Inlinegraphic
	     | Option_Inlinemediaobject Inlinemediaobject
	     | Option_Indexterm Indexterm
	     | Option_Beginpage Beginpage
	     deriving (Eq,Show)
data Option_Revisionflag = Option_Revisionflag_Changed  | 
			   Option_Revisionflag_Added  |  Option_Revisionflag_Deleted  | 
			   Option_Revisionflag_Off
			 deriving (Eq,Show)
data Optional = Optional Optional_Attrs [Optional_]
	      deriving (Eq,Show)
data Optional_Attrs = Optional_Attrs
    { optionalId :: (Maybe String)
    , optionalLang :: (Maybe String)
    , optionalRemap :: (Maybe String)
    , optionalXreflabel :: (Maybe String)
    , optionalRevisionflag :: (Maybe Optional_Revisionflag)
    , optionalArch :: (Maybe String)
    , optionalCondition :: (Maybe String)
    , optionalConformance :: (Maybe String)
    , optionalOs :: (Maybe String)
    , optionalRevision :: (Maybe String)
    , optionalSecurity :: (Maybe String)
    , optionalUserlevel :: (Maybe String)
    , optionalVendor :: (Maybe String)
    , optionalRole :: (Maybe String)
    } deriving (Eq,Show)
data Optional_ = Optional_Str String
	       | Optional_Link Link
	       | Optional_Olink Olink
	       | Optional_Ulink Ulink
	       | Optional_Action Action
	       | Optional_Application Application
	       | Optional_Classname Classname
	       | Optional_Methodname Methodname
	       | Optional_Interfacename Interfacename
	       | Optional_Exceptionname Exceptionname
	       | Optional_Ooclass Ooclass
	       | Optional_Oointerface Oointerface
	       | Optional_Ooexception Ooexception
	       | Optional_Command Command
	       | Optional_Computeroutput Computeroutput
	       | Optional_Database Database
	       | Optional_Email Email
	       | Optional_Envar Envar
	       | Optional_Errorcode Errorcode
	       | Optional_Errorname Errorname
	       | Optional_Errortype Errortype
	       | Optional_Errortext Errortext
	       | Optional_Filename Filename
	       | Optional_Function Function
	       | Optional_Guibutton Guibutton
	       | Optional_Guiicon Guiicon
	       | Optional_Guilabel Guilabel
	       | Optional_Guimenu Guimenu
	       | Optional_Guimenuitem Guimenuitem
	       | Optional_Guisubmenu Guisubmenu
	       | Optional_Hardware Hardware
	       | Optional_Interface Interface
	       | Optional_Keycap Keycap
	       | Optional_Keycode Keycode
	       | Optional_Keycombo Keycombo
	       | Optional_Keysym Keysym
	       | Optional_Literal Literal
	       | Optional_Constant Constant
	       | Optional_Markup Markup
	       | Optional_Medialabel Medialabel
	       | Optional_Menuchoice Menuchoice
	       | Optional_Mousebutton Mousebutton
	       | Optional_Option Option
	       | Optional_Optional Optional
	       | Optional_Parameter Parameter
	       | Optional_Prompt Prompt
	       | Optional_Property Property
	       | Optional_Replaceable Replaceable
	       | Optional_Returnvalue Returnvalue
	       | Optional_Sgmltag Sgmltag
	       | Optional_Structfield Structfield
	       | Optional_Structname Structname
	       | Optional_Symbol Symbol
	       | Optional_Systemitem Systemitem
	       | Optional_Token Token
	       | Optional_Type Type
	       | Optional_Userinput Userinput
	       | Optional_Varname Varname
	       | Optional_Anchor Anchor
	       | Optional_Remark Remark
	       | Optional_Subscript Subscript
	       | Optional_Superscript Superscript
	       | Optional_Inlinegraphic Inlinegraphic
	       | Optional_Inlinemediaobject Inlinemediaobject
	       | Optional_Indexterm Indexterm
	       | Optional_Beginpage Beginpage
	       deriving (Eq,Show)
data Optional_Revisionflag = Optional_Revisionflag_Changed  | 
			     Optional_Revisionflag_Added  |  Optional_Revisionflag_Deleted  | 
			     Optional_Revisionflag_Off
			   deriving (Eq,Show)
data Parameter = Parameter Parameter_Attrs [Parameter_]
	       deriving (Eq,Show)
data Parameter_Attrs = Parameter_Attrs
    { parameterClass :: (Maybe Parameter_Class)
    , parameterMoreinfo :: (Defaultable Parameter_Moreinfo)
    , parameterId :: (Maybe String)
    , parameterLang :: (Maybe String)
    , parameterRemap :: (Maybe String)
    , parameterXreflabel :: (Maybe String)
    , parameterRevisionflag :: (Maybe Parameter_Revisionflag)
    , parameterArch :: (Maybe String)
    , parameterCondition :: (Maybe String)
    , parameterConformance :: (Maybe String)
    , parameterOs :: (Maybe String)
    , parameterRevision :: (Maybe String)
    , parameterSecurity :: (Maybe String)
    , parameterUserlevel :: (Maybe String)
    , parameterVendor :: (Maybe String)
    , parameterRole :: (Maybe String)
    } deriving (Eq,Show)
data Parameter_ = Parameter_Str String
		| Parameter_Link Link
		| Parameter_Olink Olink
		| Parameter_Ulink Ulink
		| Parameter_Action Action
		| Parameter_Application Application
		| Parameter_Classname Classname
		| Parameter_Methodname Methodname
		| Parameter_Interfacename Interfacename
		| Parameter_Exceptionname Exceptionname
		| Parameter_Ooclass Ooclass
		| Parameter_Oointerface Oointerface
		| Parameter_Ooexception Ooexception
		| Parameter_Command Command
		| Parameter_Computeroutput Computeroutput
		| Parameter_Database Database
		| Parameter_Email Email
		| Parameter_Envar Envar
		| Parameter_Errorcode Errorcode
		| Parameter_Errorname Errorname
		| Parameter_Errortype Errortype
		| Parameter_Errortext Errortext
		| Parameter_Filename Filename
		| Parameter_Function Function
		| Parameter_Guibutton Guibutton
		| Parameter_Guiicon Guiicon
		| Parameter_Guilabel Guilabel
		| Parameter_Guimenu Guimenu
		| Parameter_Guimenuitem Guimenuitem
		| Parameter_Guisubmenu Guisubmenu
		| Parameter_Hardware Hardware
		| Parameter_Interface Interface
		| Parameter_Keycap Keycap
		| Parameter_Keycode Keycode
		| Parameter_Keycombo Keycombo
		| Parameter_Keysym Keysym
		| Parameter_Literal Literal
		| Parameter_Constant Constant
		| Parameter_Markup Markup
		| Parameter_Medialabel Medialabel
		| Parameter_Menuchoice Menuchoice
		| Parameter_Mousebutton Mousebutton
		| Parameter_Option Option
		| Parameter_Optional Optional
		| Parameter_Parameter Parameter
		| Parameter_Prompt Prompt
		| Parameter_Property Property
		| Parameter_Replaceable Replaceable
		| Parameter_Returnvalue Returnvalue
		| Parameter_Sgmltag Sgmltag
		| Parameter_Structfield Structfield
		| Parameter_Structname Structname
		| Parameter_Symbol Symbol
		| Parameter_Systemitem Systemitem
		| Parameter_Token Token
		| Parameter_Type Type
		| Parameter_Userinput Userinput
		| Parameter_Varname Varname
		| Parameter_Anchor Anchor
		| Parameter_Remark Remark
		| Parameter_Subscript Subscript
		| Parameter_Superscript Superscript
		| Parameter_Inlinegraphic Inlinegraphic
		| Parameter_Inlinemediaobject Inlinemediaobject
		| Parameter_Indexterm Indexterm
		| Parameter_Beginpage Beginpage
		deriving (Eq,Show)
data Parameter_Class = Parameter_Class_Command  | 
		       Parameter_Class_Function  |  Parameter_Class_Option
		     deriving (Eq,Show)
data Parameter_Moreinfo = Parameter_Moreinfo_Refentry  | 
			  Parameter_Moreinfo_None
			deriving (Eq,Show)
data Parameter_Revisionflag = Parameter_Revisionflag_Changed  | 
			      Parameter_Revisionflag_Added  |  Parameter_Revisionflag_Deleted  | 
			      Parameter_Revisionflag_Off
			    deriving (Eq,Show)
data Prompt = Prompt Prompt_Attrs [Prompt_]
	    deriving (Eq,Show)
data Prompt_Attrs = Prompt_Attrs
    { promptMoreinfo :: (Defaultable Prompt_Moreinfo)
    , promptId :: (Maybe String)
    , promptLang :: (Maybe String)
    , promptRemap :: (Maybe String)
    , promptXreflabel :: (Maybe String)
    , promptRevisionflag :: (Maybe Prompt_Revisionflag)
    , promptArch :: (Maybe String)
    , promptCondition :: (Maybe String)
    , promptConformance :: (Maybe String)
    , promptOs :: (Maybe String)
    , promptRevision :: (Maybe String)
    , promptSecurity :: (Maybe String)
    , promptUserlevel :: (Maybe String)
    , promptVendor :: (Maybe String)
    , promptRole :: (Maybe String)
    } deriving (Eq,Show)
data Prompt_ = Prompt_Str String
	     | Prompt_Replaceable Replaceable
	     | Prompt_Inlinegraphic Inlinegraphic
	     | Prompt_Inlinemediaobject Inlinemediaobject
	     | Prompt_Indexterm Indexterm
	     | Prompt_Beginpage Beginpage
	     | Prompt_Co Co
	     deriving (Eq,Show)
data Prompt_Moreinfo = Prompt_Moreinfo_Refentry  | 
		       Prompt_Moreinfo_None
		     deriving (Eq,Show)
data Prompt_Revisionflag = Prompt_Revisionflag_Changed  | 
			   Prompt_Revisionflag_Added  |  Prompt_Revisionflag_Deleted  | 
			   Prompt_Revisionflag_Off
			 deriving (Eq,Show)
data Property = Property Property_Attrs [Property_]
	      deriving (Eq,Show)
data Property_Attrs = Property_Attrs
    { propertyMoreinfo :: (Defaultable Property_Moreinfo)
    , propertyId :: (Maybe String)
    , propertyLang :: (Maybe String)
    , propertyRemap :: (Maybe String)
    , propertyXreflabel :: (Maybe String)
    , propertyRevisionflag :: (Maybe Property_Revisionflag)
    , propertyArch :: (Maybe String)
    , propertyCondition :: (Maybe String)
    , propertyConformance :: (Maybe String)
    , propertyOs :: (Maybe String)
    , propertyRevision :: (Maybe String)
    , propertySecurity :: (Maybe String)
    , propertyUserlevel :: (Maybe String)
    , propertyVendor :: (Maybe String)
    , propertyRole :: (Maybe String)
    } deriving (Eq,Show)
data Property_ = Property_Str String
	       | Property_Link Link
	       | Property_Olink Olink
	       | Property_Ulink Ulink
	       | Property_Action Action
	       | Property_Application Application
	       | Property_Classname Classname
	       | Property_Methodname Methodname
	       | Property_Interfacename Interfacename
	       | Property_Exceptionname Exceptionname
	       | Property_Ooclass Ooclass
	       | Property_Oointerface Oointerface
	       | Property_Ooexception Ooexception
	       | Property_Command Command
	       | Property_Computeroutput Computeroutput
	       | Property_Database Database
	       | Property_Email Email
	       | Property_Envar Envar
	       | Property_Errorcode Errorcode
	       | Property_Errorname Errorname
	       | Property_Errortype Errortype
	       | Property_Errortext Errortext
	       | Property_Filename Filename
	       | Property_Function Function
	       | Property_Guibutton Guibutton
	       | Property_Guiicon Guiicon
	       | Property_Guilabel Guilabel
	       | Property_Guimenu Guimenu
	       | Property_Guimenuitem Guimenuitem
	       | Property_Guisubmenu Guisubmenu
	       | Property_Hardware Hardware
	       | Property_Interface Interface
	       | Property_Keycap Keycap
	       | Property_Keycode Keycode
	       | Property_Keycombo Keycombo
	       | Property_Keysym Keysym
	       | Property_Literal Literal
	       | Property_Constant Constant
	       | Property_Markup Markup
	       | Property_Medialabel Medialabel
	       | Property_Menuchoice Menuchoice
	       | Property_Mousebutton Mousebutton
	       | Property_Option Option
	       | Property_Optional Optional
	       | Property_Parameter Parameter
	       | Property_Prompt Prompt
	       | Property_Property Property
	       | Property_Replaceable Replaceable
	       | Property_Returnvalue Returnvalue
	       | Property_Sgmltag Sgmltag
	       | Property_Structfield Structfield
	       | Property_Structname Structname
	       | Property_Symbol Symbol
	       | Property_Systemitem Systemitem
	       | Property_Token Token
	       | Property_Type Type
	       | Property_Userinput Userinput
	       | Property_Varname Varname
	       | Property_Anchor Anchor
	       | Property_Remark Remark
	       | Property_Subscript Subscript
	       | Property_Superscript Superscript
	       | Property_Inlinegraphic Inlinegraphic
	       | Property_Inlinemediaobject Inlinemediaobject
	       | Property_Indexterm Indexterm
	       | Property_Beginpage Beginpage
	       deriving (Eq,Show)
data Property_Moreinfo = Property_Moreinfo_Refentry  | 
			 Property_Moreinfo_None
		       deriving (Eq,Show)
data Property_Revisionflag = Property_Revisionflag_Changed  | 
			     Property_Revisionflag_Added  |  Property_Revisionflag_Deleted  | 
			     Property_Revisionflag_Off
			   deriving (Eq,Show)
data Replaceable = Replaceable Replaceable_Attrs [Replaceable_]
		 deriving (Eq,Show)
data Replaceable_Attrs = Replaceable_Attrs
    { replaceableClass :: (Maybe Replaceable_Class)
    , replaceableId :: (Maybe String)
    , replaceableLang :: (Maybe String)
    , replaceableRemap :: (Maybe String)
    , replaceableXreflabel :: (Maybe String)
    , replaceableRevisionflag :: (Maybe Replaceable_Revisionflag)
    , replaceableArch :: (Maybe String)
    , replaceableCondition :: (Maybe String)
    , replaceableConformance :: (Maybe String)
    , replaceableOs :: (Maybe String)
    , replaceableRevision :: (Maybe String)
    , replaceableSecurity :: (Maybe String)
    , replaceableUserlevel :: (Maybe String)
    , replaceableVendor :: (Maybe String)
    , replaceableRole :: (Maybe String)
    } deriving (Eq,Show)
data Replaceable_ = Replaceable_Str String
		  | Replaceable_Link Link
		  | Replaceable_Olink Olink
		  | Replaceable_Ulink Ulink
		  | Replaceable_Optional Optional
		  | Replaceable_Anchor Anchor
		  | Replaceable_Remark Remark
		  | Replaceable_Subscript Subscript
		  | Replaceable_Superscript Superscript
		  | Replaceable_Inlinegraphic Inlinegraphic
		  | Replaceable_Inlinemediaobject Inlinemediaobject
		  | Replaceable_Co Co
		  deriving (Eq,Show)
data Replaceable_Class = Replaceable_Class_Command  | 
			 Replaceable_Class_Function  |  Replaceable_Class_Option  | 
			 Replaceable_Class_Parameter
		       deriving (Eq,Show)
data Replaceable_Revisionflag = Replaceable_Revisionflag_Changed
				 |  Replaceable_Revisionflag_Added  | 
				Replaceable_Revisionflag_Deleted  |  Replaceable_Revisionflag_Off
			      deriving (Eq,Show)
data Returnvalue = Returnvalue Returnvalue_Attrs [Returnvalue_]
		 deriving (Eq,Show)
data Returnvalue_Attrs = Returnvalue_Attrs
    { returnvalueId :: (Maybe String)
    , returnvalueLang :: (Maybe String)
    , returnvalueRemap :: (Maybe String)
    , returnvalueXreflabel :: (Maybe String)
    , returnvalueRevisionflag :: (Maybe Returnvalue_Revisionflag)
    , returnvalueArch :: (Maybe String)
    , returnvalueCondition :: (Maybe String)
    , returnvalueConformance :: (Maybe String)
    , returnvalueOs :: (Maybe String)
    , returnvalueRevision :: (Maybe String)
    , returnvalueSecurity :: (Maybe String)
    , returnvalueUserlevel :: (Maybe String)
    , returnvalueVendor :: (Maybe String)
    , returnvalueRole :: (Maybe String)
    } deriving (Eq,Show)
data Returnvalue_ = Returnvalue_Str String
		  | Returnvalue_Replaceable Replaceable
		  | Returnvalue_Inlinegraphic Inlinegraphic
		  | Returnvalue_Inlinemediaobject Inlinemediaobject
		  | Returnvalue_Indexterm Indexterm
		  | Returnvalue_Beginpage Beginpage
		  deriving (Eq,Show)
data Returnvalue_Revisionflag = Returnvalue_Revisionflag_Changed
				 |  Returnvalue_Revisionflag_Added  | 
				Returnvalue_Revisionflag_Deleted  |  Returnvalue_Revisionflag_Off
			      deriving (Eq,Show)
data Sgmltag = Sgmltag Sgmltag_Attrs [Sgmltag_]
	     deriving (Eq,Show)
data Sgmltag_Attrs = Sgmltag_Attrs
    { sgmltagClass :: (Maybe Sgmltag_Class)
    , sgmltagId :: (Maybe String)
    , sgmltagLang :: (Maybe String)
    , sgmltagRemap :: (Maybe String)
    , sgmltagXreflabel :: (Maybe String)
    , sgmltagRevisionflag :: (Maybe Sgmltag_Revisionflag)
    , sgmltagArch :: (Maybe String)
    , sgmltagCondition :: (Maybe String)
    , sgmltagConformance :: (Maybe String)
    , sgmltagOs :: (Maybe String)
    , sgmltagRevision :: (Maybe String)
    , sgmltagSecurity :: (Maybe String)
    , sgmltagUserlevel :: (Maybe String)
    , sgmltagVendor :: (Maybe String)
    , sgmltagRole :: (Maybe String)
    } deriving (Eq,Show)
data Sgmltag_ = Sgmltag_Str String
	      | Sgmltag_Replaceable Replaceable
	      | Sgmltag_Inlinegraphic Inlinegraphic
	      | Sgmltag_Inlinemediaobject Inlinemediaobject
	      | Sgmltag_Indexterm Indexterm
	      | Sgmltag_Beginpage Beginpage
	      deriving (Eq,Show)
data Sgmltag_Class = Sgmltag_Class_Attribute  | 
		     Sgmltag_Class_Attvalue  |  Sgmltag_Class_Element  | 
		     Sgmltag_Class_Endtag  |  Sgmltag_Class_Emptytag  | 
		     Sgmltag_Class_Genentity  |  Sgmltag_Class_Numcharref  | 
		     Sgmltag_Class_Paramentity  |  Sgmltag_Class_Pi  | 
		     Sgmltag_Class_Xmlpi  |  Sgmltag_Class_Starttag  | 
		     Sgmltag_Class_Sgmlcomment
		   deriving (Eq,Show)
data Sgmltag_Revisionflag = Sgmltag_Revisionflag_Changed  | 
			    Sgmltag_Revisionflag_Added  |  Sgmltag_Revisionflag_Deleted  | 
			    Sgmltag_Revisionflag_Off
			  deriving (Eq,Show)
data Structfield = Structfield Structfield_Attrs [Structfield_]
		 deriving (Eq,Show)
data Structfield_Attrs = Structfield_Attrs
    { structfieldId :: (Maybe String)
    , structfieldLang :: (Maybe String)
    , structfieldRemap :: (Maybe String)
    , structfieldXreflabel :: (Maybe String)
    , structfieldRevisionflag :: (Maybe Structfield_Revisionflag)
    , structfieldArch :: (Maybe String)
    , structfieldCondition :: (Maybe String)
    , structfieldConformance :: (Maybe String)
    , structfieldOs :: (Maybe String)
    , structfieldRevision :: (Maybe String)
    , structfieldSecurity :: (Maybe String)
    , structfieldUserlevel :: (Maybe String)
    , structfieldVendor :: (Maybe String)
    , structfieldRole :: (Maybe String)
    } deriving (Eq,Show)
data Structfield_ = Structfield_Str String
		  | Structfield_Replaceable Replaceable
		  | Structfield_Inlinegraphic Inlinegraphic
		  | Structfield_Inlinemediaobject Inlinemediaobject
		  | Structfield_Indexterm Indexterm
		  | Structfield_Beginpage Beginpage
		  deriving (Eq,Show)
data Structfield_Revisionflag = Structfield_Revisionflag_Changed
				 |  Structfield_Revisionflag_Added  | 
				Structfield_Revisionflag_Deleted  |  Structfield_Revisionflag_Off
			      deriving (Eq,Show)
data Structname = Structname Structname_Attrs [Structname_]
		deriving (Eq,Show)
data Structname_Attrs = Structname_Attrs
    { structnameId :: (Maybe String)
    , structnameLang :: (Maybe String)
    , structnameRemap :: (Maybe String)
    , structnameXreflabel :: (Maybe String)
    , structnameRevisionflag :: (Maybe Structname_Revisionflag)
    , structnameArch :: (Maybe String)
    , structnameCondition :: (Maybe String)
    , structnameConformance :: (Maybe String)
    , structnameOs :: (Maybe String)
    , structnameRevision :: (Maybe String)
    , structnameSecurity :: (Maybe String)
    , structnameUserlevel :: (Maybe String)
    , structnameVendor :: (Maybe String)
    , structnameRole :: (Maybe String)
    } deriving (Eq,Show)
data Structname_ = Structname_Str String
		 | Structname_Replaceable Replaceable
		 | Structname_Inlinegraphic Inlinegraphic
		 | Structname_Inlinemediaobject Inlinemediaobject
		 | Structname_Indexterm Indexterm
		 | Structname_Beginpage Beginpage
		 deriving (Eq,Show)
data Structname_Revisionflag = Structname_Revisionflag_Changed  | 
			       Structname_Revisionflag_Added  |  Structname_Revisionflag_Deleted
			        |  Structname_Revisionflag_Off
			     deriving (Eq,Show)
data Symbol = Symbol Symbol_Attrs [Symbol_]
	    deriving (Eq,Show)
data Symbol_Attrs = Symbol_Attrs
    { symbolClass :: (Maybe Symbol_Class)
    , symbolId :: (Maybe String)
    , symbolLang :: (Maybe String)
    , symbolRemap :: (Maybe String)
    , symbolXreflabel :: (Maybe String)
    , symbolRevisionflag :: (Maybe Symbol_Revisionflag)
    , symbolArch :: (Maybe String)
    , symbolCondition :: (Maybe String)
    , symbolConformance :: (Maybe String)
    , symbolOs :: (Maybe String)
    , symbolRevision :: (Maybe String)
    , symbolSecurity :: (Maybe String)
    , symbolUserlevel :: (Maybe String)
    , symbolVendor :: (Maybe String)
    , symbolRole :: (Maybe String)
    } deriving (Eq,Show)
data Symbol_ = Symbol_Str String
	     | Symbol_Replaceable Replaceable
	     | Symbol_Inlinegraphic Inlinegraphic
	     | Symbol_Inlinemediaobject Inlinemediaobject
	     | Symbol_Indexterm Indexterm
	     | Symbol_Beginpage Beginpage
	     deriving (Eq,Show)
data Symbol_Class = Symbol_Class_Limit
		  deriving (Eq,Show)
data Symbol_Revisionflag = Symbol_Revisionflag_Changed  | 
			   Symbol_Revisionflag_Added  |  Symbol_Revisionflag_Deleted  | 
			   Symbol_Revisionflag_Off
			 deriving (Eq,Show)
data Systemitem = Systemitem Systemitem_Attrs [Systemitem_]
		deriving (Eq,Show)
data Systemitem_Attrs = Systemitem_Attrs
    { systemitemClass :: (Maybe Systemitem_Class)
    , systemitemMoreinfo :: (Defaultable Systemitem_Moreinfo)
    , systemitemId :: (Maybe String)
    , systemitemLang :: (Maybe String)
    , systemitemRemap :: (Maybe String)
    , systemitemXreflabel :: (Maybe String)
    , systemitemRevisionflag :: (Maybe Systemitem_Revisionflag)
    , systemitemArch :: (Maybe String)
    , systemitemCondition :: (Maybe String)
    , systemitemConformance :: (Maybe String)
    , systemitemOs :: (Maybe String)
    , systemitemRevision :: (Maybe String)
    , systemitemSecurity :: (Maybe String)
    , systemitemUserlevel :: (Maybe String)
    , systemitemVendor :: (Maybe String)
    , systemitemRole :: (Maybe String)
    } deriving (Eq,Show)
data Systemitem_ = Systemitem_Str String
		 | Systemitem_Link Link
		 | Systemitem_Olink Olink
		 | Systemitem_Ulink Ulink
		 | Systemitem_Action Action
		 | Systemitem_Application Application
		 | Systemitem_Classname Classname
		 | Systemitem_Methodname Methodname
		 | Systemitem_Interfacename Interfacename
		 | Systemitem_Exceptionname Exceptionname
		 | Systemitem_Ooclass Ooclass
		 | Systemitem_Oointerface Oointerface
		 | Systemitem_Ooexception Ooexception
		 | Systemitem_Command Command
		 | Systemitem_Computeroutput Computeroutput
		 | Systemitem_Database Database
		 | Systemitem_Email Email
		 | Systemitem_Envar Envar
		 | Systemitem_Errorcode Errorcode
		 | Systemitem_Errorname Errorname
		 | Systemitem_Errortype Errortype
		 | Systemitem_Errortext Errortext
		 | Systemitem_Filename Filename
		 | Systemitem_Function Function
		 | Systemitem_Guibutton Guibutton
		 | Systemitem_Guiicon Guiicon
		 | Systemitem_Guilabel Guilabel
		 | Systemitem_Guimenu Guimenu
		 | Systemitem_Guimenuitem Guimenuitem
		 | Systemitem_Guisubmenu Guisubmenu
		 | Systemitem_Hardware Hardware
		 | Systemitem_Interface Interface
		 | Systemitem_Keycap Keycap
		 | Systemitem_Keycode Keycode
		 | Systemitem_Keycombo Keycombo
		 | Systemitem_Keysym Keysym
		 | Systemitem_Literal Literal
		 | Systemitem_Constant Constant
		 | Systemitem_Markup Markup
		 | Systemitem_Medialabel Medialabel
		 | Systemitem_Menuchoice Menuchoice
		 | Systemitem_Mousebutton Mousebutton
		 | Systemitem_Option Option
		 | Systemitem_Optional Optional
		 | Systemitem_Parameter Parameter
		 | Systemitem_Prompt Prompt
		 | Systemitem_Property Property
		 | Systemitem_Replaceable Replaceable
		 | Systemitem_Returnvalue Returnvalue
		 | Systemitem_Sgmltag Sgmltag
		 | Systemitem_Structfield Structfield
		 | Systemitem_Structname Structname
		 | Systemitem_Symbol Symbol
		 | Systemitem_Systemitem Systemitem
		 | Systemitem_Token Token
		 | Systemitem_Type Type
		 | Systemitem_Userinput Userinput
		 | Systemitem_Varname Varname
		 | Systemitem_Anchor Anchor
		 | Systemitem_Remark Remark
		 | Systemitem_Subscript Subscript
		 | Systemitem_Superscript Superscript
		 | Systemitem_Inlinegraphic Inlinegraphic
		 | Systemitem_Inlinemediaobject Inlinemediaobject
		 | Systemitem_Indexterm Indexterm
		 | Systemitem_Beginpage Beginpage
		 | Systemitem_Acronym Acronym
		 | Systemitem_Co Co
		 deriving (Eq,Show)
data Systemitem_Class = Systemitem_Class_Constant  | 
			Systemitem_Class_Event  |  Systemitem_Class_Eventhandler  | 
			Systemitem_Class_Domainname  |  Systemitem_Class_Fqdomainname  | 
			Systemitem_Class_Ipaddress  |  Systemitem_Class_Netmask  | 
			Systemitem_Class_Etheraddress  |  Systemitem_Class_Groupname  | 
			Systemitem_Class_Library  |  Systemitem_Class_Macro  | 
			Systemitem_Class_Osname  |  Systemitem_Class_Filesystem  | 
			Systemitem_Class_Resource  |  Systemitem_Class_Systemname  | 
			Systemitem_Class_Username  |  Systemitem_Class_Newsgroup
		      deriving (Eq,Show)
data Systemitem_Moreinfo = Systemitem_Moreinfo_Refentry  | 
			   Systemitem_Moreinfo_None
			 deriving (Eq,Show)
data Systemitem_Revisionflag = Systemitem_Revisionflag_Changed  | 
			       Systemitem_Revisionflag_Added  |  Systemitem_Revisionflag_Deleted
			        |  Systemitem_Revisionflag_Off
			     deriving (Eq,Show)
data Token = Token Token_Attrs [Token_]
	   deriving (Eq,Show)
data Token_Attrs = Token_Attrs
    { tokenId :: (Maybe String)
    , tokenLang :: (Maybe String)
    , tokenRemap :: (Maybe String)
    , tokenXreflabel :: (Maybe String)
    , tokenRevisionflag :: (Maybe Token_Revisionflag)
    , tokenArch :: (Maybe String)
    , tokenCondition :: (Maybe String)
    , tokenConformance :: (Maybe String)
    , tokenOs :: (Maybe String)
    , tokenRevision :: (Maybe String)
    , tokenSecurity :: (Maybe String)
    , tokenUserlevel :: (Maybe String)
    , tokenVendor :: (Maybe String)
    , tokenRole :: (Maybe String)
    } deriving (Eq,Show)
data Token_ = Token_Str String
	    | Token_Replaceable Replaceable
	    | Token_Inlinegraphic Inlinegraphic
	    | Token_Inlinemediaobject Inlinemediaobject
	    | Token_Indexterm Indexterm
	    | Token_Beginpage Beginpage
	    deriving (Eq,Show)
data Token_Revisionflag = Token_Revisionflag_Changed  | 
			  Token_Revisionflag_Added  |  Token_Revisionflag_Deleted  | 
			  Token_Revisionflag_Off
			deriving (Eq,Show)
data Type = Type Type_Attrs [Type_]
	  deriving (Eq,Show)
data Type_Attrs = Type_Attrs
    { typeId :: (Maybe String)
    , typeLang :: (Maybe String)
    , typeRemap :: (Maybe String)
    , typeXreflabel :: (Maybe String)
    , typeRevisionflag :: (Maybe Type_Revisionflag)
    , typeArch :: (Maybe String)
    , typeCondition :: (Maybe String)
    , typeConformance :: (Maybe String)
    , typeOs :: (Maybe String)
    , typeRevision :: (Maybe String)
    , typeSecurity :: (Maybe String)
    , typeUserlevel :: (Maybe String)
    , typeVendor :: (Maybe String)
    , typeRole :: (Maybe String)
    } deriving (Eq,Show)
data Type_ = Type_Str String
	   | Type_Replaceable Replaceable
	   | Type_Inlinegraphic Inlinegraphic
	   | Type_Inlinemediaobject Inlinemediaobject
	   | Type_Indexterm Indexterm
	   | Type_Beginpage Beginpage
	   deriving (Eq,Show)
data Type_Revisionflag = Type_Revisionflag_Changed  | 
			 Type_Revisionflag_Added  |  Type_Revisionflag_Deleted  | 
			 Type_Revisionflag_Off
		       deriving (Eq,Show)
data Userinput = Userinput Userinput_Attrs [Userinput_]
	       deriving (Eq,Show)
data Userinput_Attrs = Userinput_Attrs
    { userinputMoreinfo :: (Defaultable Userinput_Moreinfo)
    , userinputId :: (Maybe String)
    , userinputLang :: (Maybe String)
    , userinputRemap :: (Maybe String)
    , userinputXreflabel :: (Maybe String)
    , userinputRevisionflag :: (Maybe Userinput_Revisionflag)
    , userinputArch :: (Maybe String)
    , userinputCondition :: (Maybe String)
    , userinputConformance :: (Maybe String)
    , userinputOs :: (Maybe String)
    , userinputRevision :: (Maybe String)
    , userinputSecurity :: (Maybe String)
    , userinputUserlevel :: (Maybe String)
    , userinputVendor :: (Maybe String)
    , userinputRole :: (Maybe String)
    } deriving (Eq,Show)
data Userinput_ = Userinput_Str String
		| Userinput_Link Link
		| Userinput_Olink Olink
		| Userinput_Ulink Ulink
		| Userinput_Action Action
		| Userinput_Application Application
		| Userinput_Classname Classname
		| Userinput_Methodname Methodname
		| Userinput_Interfacename Interfacename
		| Userinput_Exceptionname Exceptionname
		| Userinput_Ooclass Ooclass
		| Userinput_Oointerface Oointerface
		| Userinput_Ooexception Ooexception
		| Userinput_Command Command
		| Userinput_Computeroutput Computeroutput
		| Userinput_Database Database
		| Userinput_Email Email
		| Userinput_Envar Envar
		| Userinput_Errorcode Errorcode
		| Userinput_Errorname Errorname
		| Userinput_Errortype Errortype
		| Userinput_Errortext Errortext
		| Userinput_Filename Filename
		| Userinput_Function Function
		| Userinput_Guibutton Guibutton
		| Userinput_Guiicon Guiicon
		| Userinput_Guilabel Guilabel
		| Userinput_Guimenu Guimenu
		| Userinput_Guimenuitem Guimenuitem
		| Userinput_Guisubmenu Guisubmenu
		| Userinput_Hardware Hardware
		| Userinput_Interface Interface
		| Userinput_Keycap Keycap
		| Userinput_Keycode Keycode
		| Userinput_Keycombo Keycombo
		| Userinput_Keysym Keysym
		| Userinput_Literal Literal
		| Userinput_Constant Constant
		| Userinput_Markup Markup
		| Userinput_Medialabel Medialabel
		| Userinput_Menuchoice Menuchoice
		| Userinput_Mousebutton Mousebutton
		| Userinput_Option Option
		| Userinput_Optional Optional
		| Userinput_Parameter Parameter
		| Userinput_Prompt Prompt
		| Userinput_Property Property
		| Userinput_Replaceable Replaceable
		| Userinput_Returnvalue Returnvalue
		| Userinput_Sgmltag Sgmltag
		| Userinput_Structfield Structfield
		| Userinput_Structname Structname
		| Userinput_Symbol Symbol
		| Userinput_Systemitem Systemitem
		| Userinput_Token Token
		| Userinput_Type Type
		| Userinput_Userinput Userinput
		| Userinput_Varname Varname
		| Userinput_Anchor Anchor
		| Userinput_Remark Remark
		| Userinput_Subscript Subscript
		| Userinput_Superscript Superscript
		| Userinput_Inlinegraphic Inlinegraphic
		| Userinput_Inlinemediaobject Inlinemediaobject
		| Userinput_Indexterm Indexterm
		| Userinput_Beginpage Beginpage
		| Userinput_Co Co
		deriving (Eq,Show)
data Userinput_Moreinfo = Userinput_Moreinfo_Refentry  | 
			  Userinput_Moreinfo_None
			deriving (Eq,Show)
data Userinput_Revisionflag = Userinput_Revisionflag_Changed  | 
			      Userinput_Revisionflag_Added  |  Userinput_Revisionflag_Deleted  | 
			      Userinput_Revisionflag_Off
			    deriving (Eq,Show)
data Abbrev = Abbrev Abbrev_Attrs [Abbrev_]
	    deriving (Eq,Show)
data Abbrev_Attrs = Abbrev_Attrs
    { abbrevId :: (Maybe String)
    , abbrevLang :: (Maybe String)
    , abbrevRemap :: (Maybe String)
    , abbrevXreflabel :: (Maybe String)
    , abbrevRevisionflag :: (Maybe Abbrev_Revisionflag)
    , abbrevArch :: (Maybe String)
    , abbrevCondition :: (Maybe String)
    , abbrevConformance :: (Maybe String)
    , abbrevOs :: (Maybe String)
    , abbrevRevision :: (Maybe String)
    , abbrevSecurity :: (Maybe String)
    , abbrevUserlevel :: (Maybe String)
    , abbrevVendor :: (Maybe String)
    , abbrevRole :: (Maybe String)
    } deriving (Eq,Show)
data Abbrev_ = Abbrev_Str String
	     | Abbrev_Acronym Acronym
	     | Abbrev_Emphasis Emphasis
	     | Abbrev_Trademark Trademark
	     | Abbrev_Link Link
	     | Abbrev_Olink Olink
	     | Abbrev_Ulink Ulink
	     | Abbrev_Anchor Anchor
	     | Abbrev_Remark Remark
	     | Abbrev_Subscript Subscript
	     | Abbrev_Superscript Superscript
	     | Abbrev_Inlinegraphic Inlinegraphic
	     | Abbrev_Inlinemediaobject Inlinemediaobject
	     | Abbrev_Indexterm Indexterm
	     | Abbrev_Beginpage Beginpage
	     deriving (Eq,Show)
data Abbrev_Revisionflag = Abbrev_Revisionflag_Changed  | 
			   Abbrev_Revisionflag_Added  |  Abbrev_Revisionflag_Deleted  | 
			   Abbrev_Revisionflag_Off
			 deriving (Eq,Show)
data Acronym = Acronym Acronym_Attrs [Acronym_]
	     deriving (Eq,Show)
data Acronym_Attrs = Acronym_Attrs
    { acronymId :: (Maybe String)
    , acronymLang :: (Maybe String)
    , acronymRemap :: (Maybe String)
    , acronymXreflabel :: (Maybe String)
    , acronymRevisionflag :: (Maybe Acronym_Revisionflag)
    , acronymArch :: (Maybe String)
    , acronymCondition :: (Maybe String)
    , acronymConformance :: (Maybe String)
    , acronymOs :: (Maybe String)
    , acronymRevision :: (Maybe String)
    , acronymSecurity :: (Maybe String)
    , acronymUserlevel :: (Maybe String)
    , acronymVendor :: (Maybe String)
    , acronymRole :: (Maybe String)
    } deriving (Eq,Show)
data Acronym_ = Acronym_Str String
	      | Acronym_Acronym Acronym
	      | Acronym_Emphasis Emphasis
	      | Acronym_Trademark Trademark
	      | Acronym_Link Link
	      | Acronym_Olink Olink
	      | Acronym_Ulink Ulink
	      | Acronym_Anchor Anchor
	      | Acronym_Remark Remark
	      | Acronym_Subscript Subscript
	      | Acronym_Superscript Superscript
	      | Acronym_Inlinegraphic Inlinegraphic
	      | Acronym_Inlinemediaobject Inlinemediaobject
	      | Acronym_Indexterm Indexterm
	      | Acronym_Beginpage Beginpage
	      deriving (Eq,Show)
data Acronym_Revisionflag = Acronym_Revisionflag_Changed  | 
			    Acronym_Revisionflag_Added  |  Acronym_Revisionflag_Deleted  | 
			    Acronym_Revisionflag_Off
			  deriving (Eq,Show)
data Citation = Citation Citation_Attrs [Citation_]
	      deriving (Eq,Show)
data Citation_Attrs = Citation_Attrs
    { citationId :: (Maybe String)
    , citationLang :: (Maybe String)
    , citationRemap :: (Maybe String)
    , citationXreflabel :: (Maybe String)
    , citationRevisionflag :: (Maybe Citation_Revisionflag)
    , citationArch :: (Maybe String)
    , citationCondition :: (Maybe String)
    , citationConformance :: (Maybe String)
    , citationOs :: (Maybe String)
    , citationRevision :: (Maybe String)
    , citationSecurity :: (Maybe String)
    , citationUserlevel :: (Maybe String)
    , citationVendor :: (Maybe String)
    , citationRole :: (Maybe String)
    } deriving (Eq,Show)
data Citation_ = Citation_Str String
	       | Citation_Footnoteref Footnoteref
	       | Citation_Xref Xref
	       | Citation_Abbrev Abbrev
	       | Citation_Acronym Acronym
	       | Citation_Citation Citation
	       | Citation_Citerefentry Citerefentry
	       | Citation_Citetitle Citetitle
	       | Citation_Emphasis Emphasis
	       | Citation_Firstterm Firstterm
	       | Citation_Foreignphrase Foreignphrase
	       | Citation_Glossterm Glossterm
	       | Citation_Footnote Footnote
	       | Citation_Phrase Phrase
	       | Citation_Quote Quote
	       | Citation_Trademark Trademark
	       | Citation_Wordasword Wordasword
	       | Citation_Personname Personname
	       | Citation_Link Link
	       | Citation_Olink Olink
	       | Citation_Ulink Ulink
	       | Citation_Action Action
	       | Citation_Application Application
	       | Citation_Classname Classname
	       | Citation_Methodname Methodname
	       | Citation_Interfacename Interfacename
	       | Citation_Exceptionname Exceptionname
	       | Citation_Ooclass Ooclass
	       | Citation_Oointerface Oointerface
	       | Citation_Ooexception Ooexception
	       | Citation_Command Command
	       | Citation_Computeroutput Computeroutput
	       | Citation_Database Database
	       | Citation_Email Email
	       | Citation_Envar Envar
	       | Citation_Errorcode Errorcode
	       | Citation_Errorname Errorname
	       | Citation_Errortype Errortype
	       | Citation_Errortext Errortext
	       | Citation_Filename Filename
	       | Citation_Function Function
	       | Citation_Guibutton Guibutton
	       | Citation_Guiicon Guiicon
	       | Citation_Guilabel Guilabel
	       | Citation_Guimenu Guimenu
	       | Citation_Guimenuitem Guimenuitem
	       | Citation_Guisubmenu Guisubmenu
	       | Citation_Hardware Hardware
	       | Citation_Interface Interface
	       | Citation_Keycap Keycap
	       | Citation_Keycode Keycode
	       | Citation_Keycombo Keycombo
	       | Citation_Keysym Keysym
	       | Citation_Literal Literal
	       | Citation_Constant Constant
	       | Citation_Markup Markup
	       | Citation_Medialabel Medialabel
	       | Citation_Menuchoice Menuchoice
	       | Citation_Mousebutton Mousebutton
	       | Citation_Option Option
	       | Citation_Optional Optional
	       | Citation_Parameter Parameter
	       | Citation_Prompt Prompt
	       | Citation_Property Property
	       | Citation_Replaceable Replaceable
	       | Citation_Returnvalue Returnvalue
	       | Citation_Sgmltag Sgmltag
	       | Citation_Structfield Structfield
	       | Citation_Structname Structname
	       | Citation_Symbol Symbol
	       | Citation_Systemitem Systemitem
	       | Citation_Token Token
	       | Citation_Type Type
	       | Citation_Userinput Userinput
	       | Citation_Varname Varname
	       | Citation_Anchor Anchor
	       | Citation_Author Author
	       | Citation_Authorinitials Authorinitials
	       | Citation_Corpauthor Corpauthor
	       | Citation_Modespec Modespec
	       | Citation_Othercredit Othercredit
	       | Citation_Productname Productname
	       | Citation_Productnumber Productnumber
	       | Citation_Revhistory Revhistory
	       | Citation_Remark Remark
	       | Citation_Subscript Subscript
	       | Citation_Superscript Superscript
	       | Citation_Inlinegraphic Inlinegraphic
	       | Citation_Inlinemediaobject Inlinemediaobject
	       | Citation_Inlineequation Inlineequation
	       | Citation_Synopsis Synopsis
	       | Citation_Cmdsynopsis Cmdsynopsis
	       | Citation_Funcsynopsis Funcsynopsis
	       | Citation_Classsynopsis Classsynopsis
	       | Citation_Fieldsynopsis Fieldsynopsis
	       | Citation_Constructorsynopsis Constructorsynopsis
	       | Citation_Destructorsynopsis Destructorsynopsis
	       | Citation_Methodsynopsis Methodsynopsis
	       | Citation_Indexterm Indexterm
	       | Citation_Beginpage Beginpage
	       deriving (Eq,Show)
data Citation_Revisionflag = Citation_Revisionflag_Changed  | 
			     Citation_Revisionflag_Added  |  Citation_Revisionflag_Deleted  | 
			     Citation_Revisionflag_Off
			   deriving (Eq,Show)
data Citerefentry = Citerefentry Citerefentry_Attrs Refentrytitle
				 (Maybe Manvolnum)
		  deriving (Eq,Show)
data Citerefentry_Attrs = Citerefentry_Attrs
    { citerefentryId :: (Maybe String)
    , citerefentryLang :: (Maybe String)
    , citerefentryRemap :: (Maybe String)
    , citerefentryXreflabel :: (Maybe String)
    , citerefentryRevisionflag :: (Maybe Citerefentry_Revisionflag)
    , citerefentryArch :: (Maybe String)
    , citerefentryCondition :: (Maybe String)
    , citerefentryConformance :: (Maybe String)
    , citerefentryOs :: (Maybe String)
    , citerefentryRevision :: (Maybe String)
    , citerefentrySecurity :: (Maybe String)
    , citerefentryUserlevel :: (Maybe String)
    , citerefentryVendor :: (Maybe String)
    , citerefentryRole :: (Maybe String)
    } deriving (Eq,Show)
data Citerefentry_Revisionflag = Citerefentry_Revisionflag_Changed
				  |  Citerefentry_Revisionflag_Added  | 
				 Citerefentry_Revisionflag_Deleted  |  Citerefentry_Revisionflag_Off
			       deriving (Eq,Show)
data Refentrytitle = Refentrytitle Refentrytitle_Attrs
				   [Refentrytitle_]
		   deriving (Eq,Show)
data Refentrytitle_Attrs = Refentrytitle_Attrs
    { refentrytitleId :: (Maybe String)
    , refentrytitleLang :: (Maybe String)
    , refentrytitleRemap :: (Maybe String)
    , refentrytitleXreflabel :: (Maybe String)
    , refentrytitleRevisionflag :: (Maybe Refentrytitle_Revisionflag)
    , refentrytitleArch :: (Maybe String)
    , refentrytitleCondition :: (Maybe String)
    , refentrytitleConformance :: (Maybe String)
    , refentrytitleOs :: (Maybe String)
    , refentrytitleRevision :: (Maybe String)
    , refentrytitleSecurity :: (Maybe String)
    , refentrytitleUserlevel :: (Maybe String)
    , refentrytitleVendor :: (Maybe String)
    , refentrytitleRole :: (Maybe String)
    } deriving (Eq,Show)
data Refentrytitle_ = Refentrytitle_Str String
		    | Refentrytitle_Footnoteref Footnoteref
		    | Refentrytitle_Xref Xref
		    | Refentrytitle_Abbrev Abbrev
		    | Refentrytitle_Acronym Acronym
		    | Refentrytitle_Citation Citation
		    | Refentrytitle_Citerefentry Citerefentry
		    | Refentrytitle_Citetitle Citetitle
		    | Refentrytitle_Emphasis Emphasis
		    | Refentrytitle_Firstterm Firstterm
		    | Refentrytitle_Foreignphrase Foreignphrase
		    | Refentrytitle_Glossterm Glossterm
		    | Refentrytitle_Footnote Footnote
		    | Refentrytitle_Phrase Phrase
		    | Refentrytitle_Quote Quote
		    | Refentrytitle_Trademark Trademark
		    | Refentrytitle_Wordasword Wordasword
		    | Refentrytitle_Personname Personname
		    | Refentrytitle_Link Link
		    | Refentrytitle_Olink Olink
		    | Refentrytitle_Ulink Ulink
		    | Refentrytitle_Action Action
		    | Refentrytitle_Application Application
		    | Refentrytitle_Classname Classname
		    | Refentrytitle_Methodname Methodname
		    | Refentrytitle_Interfacename Interfacename
		    | Refentrytitle_Exceptionname Exceptionname
		    | Refentrytitle_Ooclass Ooclass
		    | Refentrytitle_Oointerface Oointerface
		    | Refentrytitle_Ooexception Ooexception
		    | Refentrytitle_Command Command
		    | Refentrytitle_Computeroutput Computeroutput
		    | Refentrytitle_Database Database
		    | Refentrytitle_Email Email
		    | Refentrytitle_Envar Envar
		    | Refentrytitle_Errorcode Errorcode
		    | Refentrytitle_Errorname Errorname
		    | Refentrytitle_Errortype Errortype
		    | Refentrytitle_Errortext Errortext
		    | Refentrytitle_Filename Filename
		    | Refentrytitle_Function Function
		    | Refentrytitle_Guibutton Guibutton
		    | Refentrytitle_Guiicon Guiicon
		    | Refentrytitle_Guilabel Guilabel
		    | Refentrytitle_Guimenu Guimenu
		    | Refentrytitle_Guimenuitem Guimenuitem
		    | Refentrytitle_Guisubmenu Guisubmenu
		    | Refentrytitle_Hardware Hardware
		    | Refentrytitle_Interface Interface
		    | Refentrytitle_Keycap Keycap
		    | Refentrytitle_Keycode Keycode
		    | Refentrytitle_Keycombo Keycombo
		    | Refentrytitle_Keysym Keysym
		    | Refentrytitle_Literal Literal
		    | Refentrytitle_Constant Constant
		    | Refentrytitle_Markup Markup
		    | Refentrytitle_Medialabel Medialabel
		    | Refentrytitle_Menuchoice Menuchoice
		    | Refentrytitle_Mousebutton Mousebutton
		    | Refentrytitle_Option Option
		    | Refentrytitle_Optional Optional
		    | Refentrytitle_Parameter Parameter
		    | Refentrytitle_Prompt Prompt
		    | Refentrytitle_Property Property
		    | Refentrytitle_Replaceable Replaceable
		    | Refentrytitle_Returnvalue Returnvalue
		    | Refentrytitle_Sgmltag Sgmltag
		    | Refentrytitle_Structfield Structfield
		    | Refentrytitle_Structname Structname
		    | Refentrytitle_Symbol Symbol
		    | Refentrytitle_Systemitem Systemitem
		    | Refentrytitle_Token Token
		    | Refentrytitle_Type Type
		    | Refentrytitle_Userinput Userinput
		    | Refentrytitle_Varname Varname
		    | Refentrytitle_Anchor Anchor
		    | Refentrytitle_Author Author
		    | Refentrytitle_Authorinitials Authorinitials
		    | Refentrytitle_Corpauthor Corpauthor
		    | Refentrytitle_Modespec Modespec
		    | Refentrytitle_Othercredit Othercredit
		    | Refentrytitle_Productname Productname
		    | Refentrytitle_Productnumber Productnumber
		    | Refentrytitle_Revhistory Revhistory
		    | Refentrytitle_Remark Remark
		    | Refentrytitle_Subscript Subscript
		    | Refentrytitle_Superscript Superscript
		    | Refentrytitle_Inlinegraphic Inlinegraphic
		    | Refentrytitle_Inlinemediaobject Inlinemediaobject
		    | Refentrytitle_Inlineequation Inlineequation
		    | Refentrytitle_Synopsis Synopsis
		    | Refentrytitle_Cmdsynopsis Cmdsynopsis
		    | Refentrytitle_Funcsynopsis Funcsynopsis
		    | Refentrytitle_Classsynopsis Classsynopsis
		    | Refentrytitle_Fieldsynopsis Fieldsynopsis
		    | Refentrytitle_Constructorsynopsis Constructorsynopsis
		    | Refentrytitle_Destructorsynopsis Destructorsynopsis
		    | Refentrytitle_Methodsynopsis Methodsynopsis
		    | Refentrytitle_Indexterm Indexterm
		    | Refentrytitle_Beginpage Beginpage
		    deriving (Eq,Show)
data Refentrytitle_Revisionflag = Refentrytitle_Revisionflag_Changed
				   |  Refentrytitle_Revisionflag_Added  | 
				  Refentrytitle_Revisionflag_Deleted  | 
				  Refentrytitle_Revisionflag_Off
				deriving (Eq,Show)
data Manvolnum = Manvolnum Manvolnum_Attrs [Manvolnum_]
	       deriving (Eq,Show)
data Manvolnum_Attrs = Manvolnum_Attrs
    { manvolnumId :: (Maybe String)
    , manvolnumLang :: (Maybe String)
    , manvolnumRemap :: (Maybe String)
    , manvolnumXreflabel :: (Maybe String)
    , manvolnumRevisionflag :: (Maybe Manvolnum_Revisionflag)
    , manvolnumArch :: (Maybe String)
    , manvolnumCondition :: (Maybe String)
    , manvolnumConformance :: (Maybe String)
    , manvolnumOs :: (Maybe String)
    , manvolnumRevision :: (Maybe String)
    , manvolnumSecurity :: (Maybe String)
    , manvolnumUserlevel :: (Maybe String)
    , manvolnumVendor :: (Maybe String)
    , manvolnumRole :: (Maybe String)
    } deriving (Eq,Show)
data Manvolnum_ = Manvolnum_Str String
		| Manvolnum_Acronym Acronym
		| Manvolnum_Emphasis Emphasis
		| Manvolnum_Trademark Trademark
		| Manvolnum_Link Link
		| Manvolnum_Olink Olink
		| Manvolnum_Ulink Ulink
		| Manvolnum_Anchor Anchor
		| Manvolnum_Remark Remark
		| Manvolnum_Subscript Subscript
		| Manvolnum_Superscript Superscript
		| Manvolnum_Inlinegraphic Inlinegraphic
		| Manvolnum_Inlinemediaobject Inlinemediaobject
		| Manvolnum_Indexterm Indexterm
		| Manvolnum_Beginpage Beginpage
		deriving (Eq,Show)
data Manvolnum_Revisionflag = Manvolnum_Revisionflag_Changed  | 
			      Manvolnum_Revisionflag_Added  |  Manvolnum_Revisionflag_Deleted  | 
			      Manvolnum_Revisionflag_Off
			    deriving (Eq,Show)
data Citetitle = Citetitle Citetitle_Attrs [Citetitle_]
	       deriving (Eq,Show)
data Citetitle_Attrs = Citetitle_Attrs
    { citetitlePubwork :: (Maybe Citetitle_Pubwork)
    , citetitleId :: (Maybe String)
    , citetitleLang :: (Maybe String)
    , citetitleRemap :: (Maybe String)
    , citetitleXreflabel :: (Maybe String)
    , citetitleRevisionflag :: (Maybe Citetitle_Revisionflag)
    , citetitleArch :: (Maybe String)
    , citetitleCondition :: (Maybe String)
    , citetitleConformance :: (Maybe String)
    , citetitleOs :: (Maybe String)
    , citetitleRevision :: (Maybe String)
    , citetitleSecurity :: (Maybe String)
    , citetitleUserlevel :: (Maybe String)
    , citetitleVendor :: (Maybe String)
    , citetitleRole :: (Maybe String)
    } deriving (Eq,Show)
data Citetitle_ = Citetitle_Str String
		| Citetitle_Footnoteref Footnoteref
		| Citetitle_Xref Xref
		| Citetitle_Abbrev Abbrev
		| Citetitle_Acronym Acronym
		| Citetitle_Citation Citation
		| Citetitle_Citerefentry Citerefentry
		| Citetitle_Citetitle Citetitle
		| Citetitle_Emphasis Emphasis
		| Citetitle_Firstterm Firstterm
		| Citetitle_Foreignphrase Foreignphrase
		| Citetitle_Glossterm Glossterm
		| Citetitle_Footnote Footnote
		| Citetitle_Phrase Phrase
		| Citetitle_Quote Quote
		| Citetitle_Trademark Trademark
		| Citetitle_Wordasword Wordasword
		| Citetitle_Personname Personname
		| Citetitle_Link Link
		| Citetitle_Olink Olink
		| Citetitle_Ulink Ulink
		| Citetitle_Action Action
		| Citetitle_Application Application
		| Citetitle_Classname Classname
		| Citetitle_Methodname Methodname
		| Citetitle_Interfacename Interfacename
		| Citetitle_Exceptionname Exceptionname
		| Citetitle_Ooclass Ooclass
		| Citetitle_Oointerface Oointerface
		| Citetitle_Ooexception Ooexception
		| Citetitle_Command Command
		| Citetitle_Computeroutput Computeroutput
		| Citetitle_Database Database
		| Citetitle_Email Email
		| Citetitle_Envar Envar
		| Citetitle_Errorcode Errorcode
		| Citetitle_Errorname Errorname
		| Citetitle_Errortype Errortype
		| Citetitle_Errortext Errortext
		| Citetitle_Filename Filename
		| Citetitle_Function Function
		| Citetitle_Guibutton Guibutton
		| Citetitle_Guiicon Guiicon
		| Citetitle_Guilabel Guilabel
		| Citetitle_Guimenu Guimenu
		| Citetitle_Guimenuitem Guimenuitem
		| Citetitle_Guisubmenu Guisubmenu
		| Citetitle_Hardware Hardware
		| Citetitle_Interface Interface
		| Citetitle_Keycap Keycap
		| Citetitle_Keycode Keycode
		| Citetitle_Keycombo Keycombo
		| Citetitle_Keysym Keysym
		| Citetitle_Literal Literal
		| Citetitle_Constant Constant
		| Citetitle_Markup Markup
		| Citetitle_Medialabel Medialabel
		| Citetitle_Menuchoice Menuchoice
		| Citetitle_Mousebutton Mousebutton
		| Citetitle_Option Option
		| Citetitle_Optional Optional
		| Citetitle_Parameter Parameter
		| Citetitle_Prompt Prompt
		| Citetitle_Property Property
		| Citetitle_Replaceable Replaceable
		| Citetitle_Returnvalue Returnvalue
		| Citetitle_Sgmltag Sgmltag
		| Citetitle_Structfield Structfield
		| Citetitle_Structname Structname
		| Citetitle_Symbol Symbol
		| Citetitle_Systemitem Systemitem
		| Citetitle_Token Token
		| Citetitle_Type Type
		| Citetitle_Userinput Userinput
		| Citetitle_Varname Varname
		| Citetitle_Anchor Anchor
		| Citetitle_Author Author
		| Citetitle_Authorinitials Authorinitials
		| Citetitle_Corpauthor Corpauthor
		| Citetitle_Modespec Modespec
		| Citetitle_Othercredit Othercredit
		| Citetitle_Productname Productname
		| Citetitle_Productnumber Productnumber
		| Citetitle_Revhistory Revhistory
		| Citetitle_Remark Remark
		| Citetitle_Subscript Subscript
		| Citetitle_Superscript Superscript
		| Citetitle_Inlinegraphic Inlinegraphic
		| Citetitle_Inlinemediaobject Inlinemediaobject
		| Citetitle_Inlineequation Inlineequation
		| Citetitle_Synopsis Synopsis
		| Citetitle_Cmdsynopsis Cmdsynopsis
		| Citetitle_Funcsynopsis Funcsynopsis
		| Citetitle_Classsynopsis Classsynopsis
		| Citetitle_Fieldsynopsis Fieldsynopsis
		| Citetitle_Constructorsynopsis Constructorsynopsis
		| Citetitle_Destructorsynopsis Destructorsynopsis
		| Citetitle_Methodsynopsis Methodsynopsis
		| Citetitle_Indexterm Indexterm
		| Citetitle_Beginpage Beginpage
		deriving (Eq,Show)
data Citetitle_Pubwork = Citetitle_Pubwork_Article  | 
			 Citetitle_Pubwork_Book  |  Citetitle_Pubwork_Chapter  | 
			 Citetitle_Pubwork_Part  |  Citetitle_Pubwork_Refentry  | 
			 Citetitle_Pubwork_Section  |  Citetitle_Pubwork_Journal  | 
			 Citetitle_Pubwork_Series  |  Citetitle_Pubwork_Set  | 
			 Citetitle_Pubwork_Manuscript
		       deriving (Eq,Show)
data Citetitle_Revisionflag = Citetitle_Revisionflag_Changed  | 
			      Citetitle_Revisionflag_Added  |  Citetitle_Revisionflag_Deleted  | 
			      Citetitle_Revisionflag_Off
			    deriving (Eq,Show)
data Emphasis = Emphasis Emphasis_Attrs [Emphasis_]
	      deriving (Eq,Show)
data Emphasis_Attrs = Emphasis_Attrs
    { emphasisId :: (Maybe String)
    , emphasisLang :: (Maybe String)
    , emphasisRemap :: (Maybe String)
    , emphasisXreflabel :: (Maybe String)
    , emphasisRevisionflag :: (Maybe Emphasis_Revisionflag)
    , emphasisArch :: (Maybe String)
    , emphasisCondition :: (Maybe String)
    , emphasisConformance :: (Maybe String)
    , emphasisOs :: (Maybe String)
    , emphasisRevision :: (Maybe String)
    , emphasisSecurity :: (Maybe String)
    , emphasisUserlevel :: (Maybe String)
    , emphasisVendor :: (Maybe String)
    , emphasisRole :: (Maybe String)
    } deriving (Eq,Show)
data Emphasis_ = Emphasis_Str String
	       | Emphasis_Footnoteref Footnoteref
	       | Emphasis_Xref Xref
	       | Emphasis_Abbrev Abbrev
	       | Emphasis_Acronym Acronym
	       | Emphasis_Citation Citation
	       | Emphasis_Citerefentry Citerefentry
	       | Emphasis_Citetitle Citetitle
	       | Emphasis_Emphasis Emphasis
	       | Emphasis_Firstterm Firstterm
	       | Emphasis_Foreignphrase Foreignphrase
	       | Emphasis_Glossterm Glossterm
	       | Emphasis_Footnote Footnote
	       | Emphasis_Phrase Phrase
	       | Emphasis_Quote Quote
	       | Emphasis_Trademark Trademark
	       | Emphasis_Wordasword Wordasword
	       | Emphasis_Personname Personname
	       | Emphasis_Link Link
	       | Emphasis_Olink Olink
	       | Emphasis_Ulink Ulink
	       | Emphasis_Action Action
	       | Emphasis_Application Application
	       | Emphasis_Classname Classname
	       | Emphasis_Methodname Methodname
	       | Emphasis_Interfacename Interfacename
	       | Emphasis_Exceptionname Exceptionname
	       | Emphasis_Ooclass Ooclass
	       | Emphasis_Oointerface Oointerface
	       | Emphasis_Ooexception Ooexception
	       | Emphasis_Command Command
	       | Emphasis_Computeroutput Computeroutput
	       | Emphasis_Database Database
	       | Emphasis_Email Email
	       | Emphasis_Envar Envar
	       | Emphasis_Errorcode Errorcode
	       | Emphasis_Errorname Errorname
	       | Emphasis_Errortype Errortype
	       | Emphasis_Errortext Errortext
	       | Emphasis_Filename Filename
	       | Emphasis_Function Function
	       | Emphasis_Guibutton Guibutton
	       | Emphasis_Guiicon Guiicon
	       | Emphasis_Guilabel Guilabel
	       | Emphasis_Guimenu Guimenu
	       | Emphasis_Guimenuitem Guimenuitem
	       | Emphasis_Guisubmenu Guisubmenu
	       | Emphasis_Hardware Hardware
	       | Emphasis_Interface Interface
	       | Emphasis_Keycap Keycap
	       | Emphasis_Keycode Keycode
	       | Emphasis_Keycombo Keycombo
	       | Emphasis_Keysym Keysym
	       | Emphasis_Literal Literal
	       | Emphasis_Constant Constant
	       | Emphasis_Markup Markup
	       | Emphasis_Medialabel Medialabel
	       | Emphasis_Menuchoice Menuchoice
	       | Emphasis_Mousebutton Mousebutton
	       | Emphasis_Option Option
	       | Emphasis_Optional Optional
	       | Emphasis_Parameter Parameter
	       | Emphasis_Prompt Prompt
	       | Emphasis_Property Property
	       | Emphasis_Replaceable Replaceable
	       | Emphasis_Returnvalue Returnvalue
	       | Emphasis_Sgmltag Sgmltag
	       | Emphasis_Structfield Structfield
	       | Emphasis_Structname Structname
	       | Emphasis_Symbol Symbol
	       | Emphasis_Systemitem Systemitem
	       | Emphasis_Token Token
	       | Emphasis_Type Type
	       | Emphasis_Userinput Userinput
	       | Emphasis_Varname Varname
	       | Emphasis_Anchor Anchor
	       | Emphasis_Author Author
	       | Emphasis_Authorinitials Authorinitials
	       | Emphasis_Corpauthor Corpauthor
	       | Emphasis_Modespec Modespec
	       | Emphasis_Othercredit Othercredit
	       | Emphasis_Productname Productname
	       | Emphasis_Productnumber Productnumber
	       | Emphasis_Revhistory Revhistory
	       | Emphasis_Remark Remark
	       | Emphasis_Subscript Subscript
	       | Emphasis_Superscript Superscript
	       | Emphasis_Inlinegraphic Inlinegraphic
	       | Emphasis_Inlinemediaobject Inlinemediaobject
	       | Emphasis_Inlineequation Inlineequation
	       | Emphasis_Synopsis Synopsis
	       | Emphasis_Cmdsynopsis Cmdsynopsis
	       | Emphasis_Funcsynopsis Funcsynopsis
	       | Emphasis_Classsynopsis Classsynopsis
	       | Emphasis_Fieldsynopsis Fieldsynopsis
	       | Emphasis_Constructorsynopsis Constructorsynopsis
	       | Emphasis_Destructorsynopsis Destructorsynopsis
	       | Emphasis_Methodsynopsis Methodsynopsis
	       | Emphasis_Indexterm Indexterm
	       | Emphasis_Beginpage Beginpage
	       deriving (Eq,Show)
data Emphasis_Revisionflag = Emphasis_Revisionflag_Changed  | 
			     Emphasis_Revisionflag_Added  |  Emphasis_Revisionflag_Deleted  | 
			     Emphasis_Revisionflag_Off
			   deriving (Eq,Show)
data Firstterm = Firstterm Firstterm_Attrs [Firstterm_]
	       deriving (Eq,Show)
data Firstterm_Attrs = Firstterm_Attrs
    { firsttermLinkend :: (Maybe String)
    , firsttermId :: (Maybe String)
    , firsttermLang :: (Maybe String)
    , firsttermRemap :: (Maybe String)
    , firsttermXreflabel :: (Maybe String)
    , firsttermRevisionflag :: (Maybe Firstterm_Revisionflag)
    , firsttermArch :: (Maybe String)
    , firsttermCondition :: (Maybe String)
    , firsttermConformance :: (Maybe String)
    , firsttermOs :: (Maybe String)
    , firsttermRevision :: (Maybe String)
    , firsttermSecurity :: (Maybe String)
    , firsttermUserlevel :: (Maybe String)
    , firsttermVendor :: (Maybe String)
    , firsttermRole :: (Maybe String)
    } deriving (Eq,Show)
data Firstterm_ = Firstterm_Str String
		| Firstterm_Acronym Acronym
		| Firstterm_Emphasis Emphasis
		| Firstterm_Trademark Trademark
		| Firstterm_Link Link
		| Firstterm_Olink Olink
		| Firstterm_Ulink Ulink
		| Firstterm_Anchor Anchor
		| Firstterm_Remark Remark
		| Firstterm_Subscript Subscript
		| Firstterm_Superscript Superscript
		| Firstterm_Inlinegraphic Inlinegraphic
		| Firstterm_Inlinemediaobject Inlinemediaobject
		| Firstterm_Indexterm Indexterm
		| Firstterm_Beginpage Beginpage
		deriving (Eq,Show)
data Firstterm_Revisionflag = Firstterm_Revisionflag_Changed  | 
			      Firstterm_Revisionflag_Added  |  Firstterm_Revisionflag_Deleted  | 
			      Firstterm_Revisionflag_Off
			    deriving (Eq,Show)
data Foreignphrase = Foreignphrase Foreignphrase_Attrs
				   [Foreignphrase_]
		   deriving (Eq,Show)
data Foreignphrase_Attrs = Foreignphrase_Attrs
    { foreignphraseId :: (Maybe String)
    , foreignphraseLang :: (Maybe String)
    , foreignphraseRemap :: (Maybe String)
    , foreignphraseXreflabel :: (Maybe String)
    , foreignphraseRevisionflag :: (Maybe Foreignphrase_Revisionflag)
    , foreignphraseArch :: (Maybe String)
    , foreignphraseCondition :: (Maybe String)
    , foreignphraseConformance :: (Maybe String)
    , foreignphraseOs :: (Maybe String)
    , foreignphraseRevision :: (Maybe String)
    , foreignphraseSecurity :: (Maybe String)
    , foreignphraseUserlevel :: (Maybe String)
    , foreignphraseVendor :: (Maybe String)
    , foreignphraseRole :: (Maybe String)
    } deriving (Eq,Show)
data Foreignphrase_ = Foreignphrase_Str String
		    | Foreignphrase_Footnoteref Footnoteref
		    | Foreignphrase_Xref Xref
		    | Foreignphrase_Abbrev Abbrev
		    | Foreignphrase_Acronym Acronym
		    | Foreignphrase_Citation Citation
		    | Foreignphrase_Citerefentry Citerefentry
		    | Foreignphrase_Citetitle Citetitle
		    | Foreignphrase_Emphasis Emphasis
		    | Foreignphrase_Firstterm Firstterm
		    | Foreignphrase_Foreignphrase Foreignphrase
		    | Foreignphrase_Glossterm Glossterm
		    | Foreignphrase_Footnote Footnote
		    | Foreignphrase_Phrase Phrase
		    | Foreignphrase_Quote Quote
		    | Foreignphrase_Trademark Trademark
		    | Foreignphrase_Wordasword Wordasword
		    | Foreignphrase_Personname Personname
		    | Foreignphrase_Link Link
		    | Foreignphrase_Olink Olink
		    | Foreignphrase_Ulink Ulink
		    | Foreignphrase_Action Action
		    | Foreignphrase_Application Application
		    | Foreignphrase_Classname Classname
		    | Foreignphrase_Methodname Methodname
		    | Foreignphrase_Interfacename Interfacename
		    | Foreignphrase_Exceptionname Exceptionname
		    | Foreignphrase_Ooclass Ooclass
		    | Foreignphrase_Oointerface Oointerface
		    | Foreignphrase_Ooexception Ooexception
		    | Foreignphrase_Command Command
		    | Foreignphrase_Computeroutput Computeroutput
		    | Foreignphrase_Database Database
		    | Foreignphrase_Email Email
		    | Foreignphrase_Envar Envar
		    | Foreignphrase_Errorcode Errorcode
		    | Foreignphrase_Errorname Errorname
		    | Foreignphrase_Errortype Errortype
		    | Foreignphrase_Errortext Errortext
		    | Foreignphrase_Filename Filename
		    | Foreignphrase_Function Function
		    | Foreignphrase_Guibutton Guibutton
		    | Foreignphrase_Guiicon Guiicon
		    | Foreignphrase_Guilabel Guilabel
		    | Foreignphrase_Guimenu Guimenu
		    | Foreignphrase_Guimenuitem Guimenuitem
		    | Foreignphrase_Guisubmenu Guisubmenu
		    | Foreignphrase_Hardware Hardware
		    | Foreignphrase_Interface Interface
		    | Foreignphrase_Keycap Keycap
		    | Foreignphrase_Keycode Keycode
		    | Foreignphrase_Keycombo Keycombo
		    | Foreignphrase_Keysym Keysym
		    | Foreignphrase_Literal Literal
		    | Foreignphrase_Constant Constant
		    | Foreignphrase_Markup Markup
		    | Foreignphrase_Medialabel Medialabel
		    | Foreignphrase_Menuchoice Menuchoice
		    | Foreignphrase_Mousebutton Mousebutton
		    | Foreignphrase_Option Option
		    | Foreignphrase_Optional Optional
		    | Foreignphrase_Parameter Parameter
		    | Foreignphrase_Prompt Prompt
		    | Foreignphrase_Property Property
		    | Foreignphrase_Replaceable Replaceable
		    | Foreignphrase_Returnvalue Returnvalue
		    | Foreignphrase_Sgmltag Sgmltag
		    | Foreignphrase_Structfield Structfield
		    | Foreignphrase_Structname Structname
		    | Foreignphrase_Symbol Symbol
		    | Foreignphrase_Systemitem Systemitem
		    | Foreignphrase_Token Token
		    | Foreignphrase_Type Type
		    | Foreignphrase_Userinput Userinput
		    | Foreignphrase_Varname Varname
		    | Foreignphrase_Anchor Anchor
		    | Foreignphrase_Author Author
		    | Foreignphrase_Authorinitials Authorinitials
		    | Foreignphrase_Corpauthor Corpauthor
		    | Foreignphrase_Modespec Modespec
		    | Foreignphrase_Othercredit Othercredit
		    | Foreignphrase_Productname Productname
		    | Foreignphrase_Productnumber Productnumber
		    | Foreignphrase_Revhistory Revhistory
		    | Foreignphrase_Remark Remark
		    | Foreignphrase_Subscript Subscript
		    | Foreignphrase_Superscript Superscript
		    | Foreignphrase_Inlinegraphic Inlinegraphic
		    | Foreignphrase_Inlinemediaobject Inlinemediaobject
		    | Foreignphrase_Inlineequation Inlineequation
		    | Foreignphrase_Synopsis Synopsis
		    | Foreignphrase_Cmdsynopsis Cmdsynopsis
		    | Foreignphrase_Funcsynopsis Funcsynopsis
		    | Foreignphrase_Classsynopsis Classsynopsis
		    | Foreignphrase_Fieldsynopsis Fieldsynopsis
		    | Foreignphrase_Constructorsynopsis Constructorsynopsis
		    | Foreignphrase_Destructorsynopsis Destructorsynopsis
		    | Foreignphrase_Methodsynopsis Methodsynopsis
		    | Foreignphrase_Indexterm Indexterm
		    | Foreignphrase_Beginpage Beginpage
		    deriving (Eq,Show)
data Foreignphrase_Revisionflag = Foreignphrase_Revisionflag_Changed
				   |  Foreignphrase_Revisionflag_Added  | 
				  Foreignphrase_Revisionflag_Deleted  | 
				  Foreignphrase_Revisionflag_Off
				deriving (Eq,Show)
data Glossterm = Glossterm Glossterm_Attrs [Glossterm_]
	       deriving (Eq,Show)
data Glossterm_Attrs = Glossterm_Attrs
    { glosstermLinkend :: (Maybe String)
    , glosstermBaseform :: (Maybe String)
    , glosstermId :: (Maybe String)
    , glosstermLang :: (Maybe String)
    , glosstermRemap :: (Maybe String)
    , glosstermXreflabel :: (Maybe String)
    , glosstermRevisionflag :: (Maybe Glossterm_Revisionflag)
    , glosstermArch :: (Maybe String)
    , glosstermCondition :: (Maybe String)
    , glosstermConformance :: (Maybe String)
    , glosstermOs :: (Maybe String)
    , glosstermRevision :: (Maybe String)
    , glosstermSecurity :: (Maybe String)
    , glosstermUserlevel :: (Maybe String)
    , glosstermVendor :: (Maybe String)
    , glosstermRole :: (Maybe String)
    } deriving (Eq,Show)
data Glossterm_ = Glossterm_Str String
		| Glossterm_Footnoteref Footnoteref
		| Glossterm_Xref Xref
		| Glossterm_Abbrev Abbrev
		| Glossterm_Acronym Acronym
		| Glossterm_Citation Citation
		| Glossterm_Citerefentry Citerefentry
		| Glossterm_Citetitle Citetitle
		| Glossterm_Emphasis Emphasis
		| Glossterm_Firstterm Firstterm
		| Glossterm_Foreignphrase Foreignphrase
		| Glossterm_Glossterm Glossterm
		| Glossterm_Footnote Footnote
		| Glossterm_Phrase Phrase
		| Glossterm_Quote Quote
		| Glossterm_Trademark Trademark
		| Glossterm_Wordasword Wordasword
		| Glossterm_Personname Personname
		| Glossterm_Link Link
		| Glossterm_Olink Olink
		| Glossterm_Ulink Ulink
		| Glossterm_Action Action
		| Glossterm_Application Application
		| Glossterm_Classname Classname
		| Glossterm_Methodname Methodname
		| Glossterm_Interfacename Interfacename
		| Glossterm_Exceptionname Exceptionname
		| Glossterm_Ooclass Ooclass
		| Glossterm_Oointerface Oointerface
		| Glossterm_Ooexception Ooexception
		| Glossterm_Command Command
		| Glossterm_Computeroutput Computeroutput
		| Glossterm_Database Database
		| Glossterm_Email Email
		| Glossterm_Envar Envar
		| Glossterm_Errorcode Errorcode
		| Glossterm_Errorname Errorname
		| Glossterm_Errortype Errortype
		| Glossterm_Errortext Errortext
		| Glossterm_Filename Filename
		| Glossterm_Function Function
		| Glossterm_Guibutton Guibutton
		| Glossterm_Guiicon Guiicon
		| Glossterm_Guilabel Guilabel
		| Glossterm_Guimenu Guimenu
		| Glossterm_Guimenuitem Guimenuitem
		| Glossterm_Guisubmenu Guisubmenu
		| Glossterm_Hardware Hardware
		| Glossterm_Interface Interface
		| Glossterm_Keycap Keycap
		| Glossterm_Keycode Keycode
		| Glossterm_Keycombo Keycombo
		| Glossterm_Keysym Keysym
		| Glossterm_Literal Literal
		| Glossterm_Constant Constant
		| Glossterm_Markup Markup
		| Glossterm_Medialabel Medialabel
		| Glossterm_Menuchoice Menuchoice
		| Glossterm_Mousebutton Mousebutton
		| Glossterm_Option Option
		| Glossterm_Optional Optional
		| Glossterm_Parameter Parameter
		| Glossterm_Prompt Prompt
		| Glossterm_Property Property
		| Glossterm_Replaceable Replaceable
		| Glossterm_Returnvalue Returnvalue
		| Glossterm_Sgmltag Sgmltag
		| Glossterm_Structfield Structfield
		| Glossterm_Structname Structname
		| Glossterm_Symbol Symbol
		| Glossterm_Systemitem Systemitem
		| Glossterm_Token Token
		| Glossterm_Type Type
		| Glossterm_Userinput Userinput
		| Glossterm_Varname Varname
		| Glossterm_Anchor Anchor
		| Glossterm_Author Author
		| Glossterm_Authorinitials Authorinitials
		| Glossterm_Corpauthor Corpauthor
		| Glossterm_Modespec Modespec
		| Glossterm_Othercredit Othercredit
		| Glossterm_Productname Productname
		| Glossterm_Productnumber Productnumber
		| Glossterm_Revhistory Revhistory
		| Glossterm_Remark Remark
		| Glossterm_Subscript Subscript
		| Glossterm_Superscript Superscript
		| Glossterm_Inlinegraphic Inlinegraphic
		| Glossterm_Inlinemediaobject Inlinemediaobject
		| Glossterm_Inlineequation Inlineequation
		| Glossterm_Synopsis Synopsis
		| Glossterm_Cmdsynopsis Cmdsynopsis
		| Glossterm_Funcsynopsis Funcsynopsis
		| Glossterm_Classsynopsis Classsynopsis
		| Glossterm_Fieldsynopsis Fieldsynopsis
		| Glossterm_Constructorsynopsis Constructorsynopsis
		| Glossterm_Destructorsynopsis Destructorsynopsis
		| Glossterm_Methodsynopsis Methodsynopsis
		| Glossterm_Indexterm Indexterm
		| Glossterm_Beginpage Beginpage
		deriving (Eq,Show)
data Glossterm_Revisionflag = Glossterm_Revisionflag_Changed  | 
			      Glossterm_Revisionflag_Added  |  Glossterm_Revisionflag_Deleted  | 
			      Glossterm_Revisionflag_Off
			    deriving (Eq,Show)
data Phrase = Phrase Phrase_Attrs [Phrase_]
	    deriving (Eq,Show)
data Phrase_Attrs = Phrase_Attrs
    { phraseId :: (Maybe String)
    , phraseLang :: (Maybe String)
    , phraseRemap :: (Maybe String)
    , phraseXreflabel :: (Maybe String)
    , phraseRevisionflag :: (Maybe Phrase_Revisionflag)
    , phraseArch :: (Maybe String)
    , phraseCondition :: (Maybe String)
    , phraseConformance :: (Maybe String)
    , phraseOs :: (Maybe String)
    , phraseRevision :: (Maybe String)
    , phraseSecurity :: (Maybe String)
    , phraseUserlevel :: (Maybe String)
    , phraseVendor :: (Maybe String)
    , phraseRole :: (Maybe String)
    } deriving (Eq,Show)
data Phrase_ = Phrase_Str String
	     | Phrase_Footnoteref Footnoteref
	     | Phrase_Xref Xref
	     | Phrase_Abbrev Abbrev
	     | Phrase_Acronym Acronym
	     | Phrase_Citation Citation
	     | Phrase_Citerefentry Citerefentry
	     | Phrase_Citetitle Citetitle
	     | Phrase_Emphasis Emphasis
	     | Phrase_Firstterm Firstterm
	     | Phrase_Foreignphrase Foreignphrase
	     | Phrase_Glossterm Glossterm
	     | Phrase_Footnote Footnote
	     | Phrase_Phrase Phrase
	     | Phrase_Quote Quote
	     | Phrase_Trademark Trademark
	     | Phrase_Wordasword Wordasword
	     | Phrase_Personname Personname
	     | Phrase_Link Link
	     | Phrase_Olink Olink
	     | Phrase_Ulink Ulink
	     | Phrase_Action Action
	     | Phrase_Application Application
	     | Phrase_Classname Classname
	     | Phrase_Methodname Methodname
	     | Phrase_Interfacename Interfacename
	     | Phrase_Exceptionname Exceptionname
	     | Phrase_Ooclass Ooclass
	     | Phrase_Oointerface Oointerface
	     | Phrase_Ooexception Ooexception
	     | Phrase_Command Command
	     | Phrase_Computeroutput Computeroutput
	     | Phrase_Database Database
	     | Phrase_Email Email
	     | Phrase_Envar Envar
	     | Phrase_Errorcode Errorcode
	     | Phrase_Errorname Errorname
	     | Phrase_Errortype Errortype
	     | Phrase_Errortext Errortext
	     | Phrase_Filename Filename
	     | Phrase_Function Function
	     | Phrase_Guibutton Guibutton
	     | Phrase_Guiicon Guiicon
	     | Phrase_Guilabel Guilabel
	     | Phrase_Guimenu Guimenu
	     | Phrase_Guimenuitem Guimenuitem
	     | Phrase_Guisubmenu Guisubmenu
	     | Phrase_Hardware Hardware
	     | Phrase_Interface Interface
	     | Phrase_Keycap Keycap
	     | Phrase_Keycode Keycode
	     | Phrase_Keycombo Keycombo
	     | Phrase_Keysym Keysym
	     | Phrase_Literal Literal
	     | Phrase_Constant Constant
	     | Phrase_Markup Markup
	     | Phrase_Medialabel Medialabel
	     | Phrase_Menuchoice Menuchoice
	     | Phrase_Mousebutton Mousebutton
	     | Phrase_Option Option
	     | Phrase_Optional Optional
	     | Phrase_Parameter Parameter
	     | Phrase_Prompt Prompt
	     | Phrase_Property Property
	     | Phrase_Replaceable Replaceable
	     | Phrase_Returnvalue Returnvalue
	     | Phrase_Sgmltag Sgmltag
	     | Phrase_Structfield Structfield
	     | Phrase_Structname Structname
	     | Phrase_Symbol Symbol
	     | Phrase_Systemitem Systemitem
	     | Phrase_Token Token
	     | Phrase_Type Type
	     | Phrase_Userinput Userinput
	     | Phrase_Varname Varname
	     | Phrase_Anchor Anchor
	     | Phrase_Author Author
	     | Phrase_Authorinitials Authorinitials
	     | Phrase_Corpauthor Corpauthor
	     | Phrase_Modespec Modespec
	     | Phrase_Othercredit Othercredit
	     | Phrase_Productname Productname
	     | Phrase_Productnumber Productnumber
	     | Phrase_Revhistory Revhistory
	     | Phrase_Remark Remark
	     | Phrase_Subscript Subscript
	     | Phrase_Superscript Superscript
	     | Phrase_Inlinegraphic Inlinegraphic
	     | Phrase_Inlinemediaobject Inlinemediaobject
	     | Phrase_Inlineequation Inlineequation
	     | Phrase_Synopsis Synopsis
	     | Phrase_Cmdsynopsis Cmdsynopsis
	     | Phrase_Funcsynopsis Funcsynopsis
	     | Phrase_Classsynopsis Classsynopsis
	     | Phrase_Fieldsynopsis Fieldsynopsis
	     | Phrase_Constructorsynopsis Constructorsynopsis
	     | Phrase_Destructorsynopsis Destructorsynopsis
	     | Phrase_Methodsynopsis Methodsynopsis
	     | Phrase_Indexterm Indexterm
	     | Phrase_Beginpage Beginpage
	     deriving (Eq,Show)
data Phrase_Revisionflag = Phrase_Revisionflag_Changed  | 
			   Phrase_Revisionflag_Added  |  Phrase_Revisionflag_Deleted  | 
			   Phrase_Revisionflag_Off
			 deriving (Eq,Show)
data Quote = Quote Quote_Attrs [Quote_]
	   deriving (Eq,Show)
data Quote_Attrs = Quote_Attrs
    { quoteId :: (Maybe String)
    , quoteLang :: (Maybe String)
    , quoteRemap :: (Maybe String)
    , quoteXreflabel :: (Maybe String)
    , quoteRevisionflag :: (Maybe Quote_Revisionflag)
    , quoteArch :: (Maybe String)
    , quoteCondition :: (Maybe String)
    , quoteConformance :: (Maybe String)
    , quoteOs :: (Maybe String)
    , quoteRevision :: (Maybe String)
    , quoteSecurity :: (Maybe String)
    , quoteUserlevel :: (Maybe String)
    , quoteVendor :: (Maybe String)
    , quoteRole :: (Maybe String)
    } deriving (Eq,Show)
data Quote_ = Quote_Str String
	    | Quote_Footnoteref Footnoteref
	    | Quote_Xref Xref
	    | Quote_Abbrev Abbrev
	    | Quote_Acronym Acronym
	    | Quote_Citation Citation
	    | Quote_Citerefentry Citerefentry
	    | Quote_Citetitle Citetitle
	    | Quote_Emphasis Emphasis
	    | Quote_Firstterm Firstterm
	    | Quote_Foreignphrase Foreignphrase
	    | Quote_Glossterm Glossterm
	    | Quote_Footnote Footnote
	    | Quote_Phrase Phrase
	    | Quote_Quote Quote
	    | Quote_Trademark Trademark
	    | Quote_Wordasword Wordasword
	    | Quote_Personname Personname
	    | Quote_Link Link
	    | Quote_Olink Olink
	    | Quote_Ulink Ulink
	    | Quote_Action Action
	    | Quote_Application Application
	    | Quote_Classname Classname
	    | Quote_Methodname Methodname
	    | Quote_Interfacename Interfacename
	    | Quote_Exceptionname Exceptionname
	    | Quote_Ooclass Ooclass
	    | Quote_Oointerface Oointerface
	    | Quote_Ooexception Ooexception
	    | Quote_Command Command
	    | Quote_Computeroutput Computeroutput
	    | Quote_Database Database
	    | Quote_Email Email
	    | Quote_Envar Envar
	    | Quote_Errorcode Errorcode
	    | Quote_Errorname Errorname
	    | Quote_Errortype Errortype
	    | Quote_Errortext Errortext
	    | Quote_Filename Filename
	    | Quote_Function Function
	    | Quote_Guibutton Guibutton
	    | Quote_Guiicon Guiicon
	    | Quote_Guilabel Guilabel
	    | Quote_Guimenu Guimenu
	    | Quote_Guimenuitem Guimenuitem
	    | Quote_Guisubmenu Guisubmenu
	    | Quote_Hardware Hardware
	    | Quote_Interface Interface
	    | Quote_Keycap Keycap
	    | Quote_Keycode Keycode
	    | Quote_Keycombo Keycombo
	    | Quote_Keysym Keysym
	    | Quote_Literal Literal
	    | Quote_Constant Constant
	    | Quote_Markup Markup
	    | Quote_Medialabel Medialabel
	    | Quote_Menuchoice Menuchoice
	    | Quote_Mousebutton Mousebutton
	    | Quote_Option Option
	    | Quote_Optional Optional
	    | Quote_Parameter Parameter
	    | Quote_Prompt Prompt
	    | Quote_Property Property
	    | Quote_Replaceable Replaceable
	    | Quote_Returnvalue Returnvalue
	    | Quote_Sgmltag Sgmltag
	    | Quote_Structfield Structfield
	    | Quote_Structname Structname
	    | Quote_Symbol Symbol
	    | Quote_Systemitem Systemitem
	    | Quote_Token Token
	    | Quote_Type Type
	    | Quote_Userinput Userinput
	    | Quote_Varname Varname
	    | Quote_Anchor Anchor
	    | Quote_Author Author
	    | Quote_Authorinitials Authorinitials
	    | Quote_Corpauthor Corpauthor
	    | Quote_Modespec Modespec
	    | Quote_Othercredit Othercredit
	    | Quote_Productname Productname
	    | Quote_Productnumber Productnumber
	    | Quote_Revhistory Revhistory
	    | Quote_Remark Remark
	    | Quote_Subscript Subscript
	    | Quote_Superscript Superscript
	    | Quote_Inlinegraphic Inlinegraphic
	    | Quote_Inlinemediaobject Inlinemediaobject
	    | Quote_Inlineequation Inlineequation
	    | Quote_Synopsis Synopsis
	    | Quote_Cmdsynopsis Cmdsynopsis
	    | Quote_Funcsynopsis Funcsynopsis
	    | Quote_Classsynopsis Classsynopsis
	    | Quote_Fieldsynopsis Fieldsynopsis
	    | Quote_Constructorsynopsis Constructorsynopsis
	    | Quote_Destructorsynopsis Destructorsynopsis
	    | Quote_Methodsynopsis Methodsynopsis
	    | Quote_Indexterm Indexterm
	    | Quote_Beginpage Beginpage
	    deriving (Eq,Show)
data Quote_Revisionflag = Quote_Revisionflag_Changed  | 
			  Quote_Revisionflag_Added  |  Quote_Revisionflag_Deleted  | 
			  Quote_Revisionflag_Off
			deriving (Eq,Show)
data Subscript = Subscript Subscript_Attrs [Subscript_]
	       deriving (Eq,Show)
data Subscript_Attrs = Subscript_Attrs
    { subscriptId :: (Maybe String)
    , subscriptLang :: (Maybe String)
    , subscriptRemap :: (Maybe String)
    , subscriptXreflabel :: (Maybe String)
    , subscriptRevisionflag :: (Maybe Subscript_Revisionflag)
    , subscriptArch :: (Maybe String)
    , subscriptCondition :: (Maybe String)
    , subscriptConformance :: (Maybe String)
    , subscriptOs :: (Maybe String)
    , subscriptRevision :: (Maybe String)
    , subscriptSecurity :: (Maybe String)
    , subscriptUserlevel :: (Maybe String)
    , subscriptVendor :: (Maybe String)
    , subscriptRole :: (Maybe String)
    } deriving (Eq,Show)
data Subscript_ = Subscript_Str String
		| Subscript_Link Link
		| Subscript_Olink Olink
		| Subscript_Ulink Ulink
		| Subscript_Emphasis Emphasis
		| Subscript_Replaceable Replaceable
		| Subscript_Symbol Symbol
		| Subscript_Inlinegraphic Inlinegraphic
		| Subscript_Inlinemediaobject Inlinemediaobject
		| Subscript_Anchor Anchor
		| Subscript_Remark Remark
		| Subscript_Subscript Subscript
		| Subscript_Superscript Superscript
		deriving (Eq,Show)
data Subscript_Revisionflag = Subscript_Revisionflag_Changed  | 
			      Subscript_Revisionflag_Added  |  Subscript_Revisionflag_Deleted  | 
			      Subscript_Revisionflag_Off
			    deriving (Eq,Show)
data Superscript = Superscript Superscript_Attrs [Superscript_]
		 deriving (Eq,Show)
data Superscript_Attrs = Superscript_Attrs
    { superscriptId :: (Maybe String)
    , superscriptLang :: (Maybe String)
    , superscriptRemap :: (Maybe String)
    , superscriptXreflabel :: (Maybe String)
    , superscriptRevisionflag :: (Maybe Superscript_Revisionflag)
    , superscriptArch :: (Maybe String)
    , superscriptCondition :: (Maybe String)
    , superscriptConformance :: (Maybe String)
    , superscriptOs :: (Maybe String)
    , superscriptRevision :: (Maybe String)
    , superscriptSecurity :: (Maybe String)
    , superscriptUserlevel :: (Maybe String)
    , superscriptVendor :: (Maybe String)
    , superscriptRole :: (Maybe String)
    } deriving (Eq,Show)
data Superscript_ = Superscript_Str String
		  | Superscript_Link Link
		  | Superscript_Olink Olink
		  | Superscript_Ulink Ulink
		  | Superscript_Emphasis Emphasis
		  | Superscript_Replaceable Replaceable
		  | Superscript_Symbol Symbol
		  | Superscript_Inlinegraphic Inlinegraphic
		  | Superscript_Inlinemediaobject Inlinemediaobject
		  | Superscript_Anchor Anchor
		  | Superscript_Remark Remark
		  | Superscript_Subscript Subscript
		  | Superscript_Superscript Superscript
		  deriving (Eq,Show)
data Superscript_Revisionflag = Superscript_Revisionflag_Changed
				 |  Superscript_Revisionflag_Added  | 
				Superscript_Revisionflag_Deleted  |  Superscript_Revisionflag_Off
			      deriving (Eq,Show)
data Trademark = Trademark Trademark_Attrs [Trademark_]
	       deriving (Eq,Show)
data Trademark_Attrs = Trademark_Attrs
    { trademarkClass :: (Defaultable Trademark_Class)
    , trademarkId :: (Maybe String)
    , trademarkLang :: (Maybe String)
    , trademarkRemap :: (Maybe String)
    , trademarkXreflabel :: (Maybe String)
    , trademarkRevisionflag :: (Maybe Trademark_Revisionflag)
    , trademarkArch :: (Maybe String)
    , trademarkCondition :: (Maybe String)
    , trademarkConformance :: (Maybe String)
    , trademarkOs :: (Maybe String)
    , trademarkRevision :: (Maybe String)
    , trademarkSecurity :: (Maybe String)
    , trademarkUserlevel :: (Maybe String)
    , trademarkVendor :: (Maybe String)
    , trademarkRole :: (Maybe String)
    } deriving (Eq,Show)
data Trademark_ = Trademark_Str String
		| Trademark_Link Link
		| Trademark_Olink Olink
		| Trademark_Ulink Ulink
		| Trademark_Action Action
		| Trademark_Application Application
		| Trademark_Classname Classname
		| Trademark_Methodname Methodname
		| Trademark_Interfacename Interfacename
		| Trademark_Exceptionname Exceptionname
		| Trademark_Ooclass Ooclass
		| Trademark_Oointerface Oointerface
		| Trademark_Ooexception Ooexception
		| Trademark_Command Command
		| Trademark_Computeroutput Computeroutput
		| Trademark_Database Database
		| Trademark_Email Email
		| Trademark_Envar Envar
		| Trademark_Errorcode Errorcode
		| Trademark_Errorname Errorname
		| Trademark_Errortype Errortype
		| Trademark_Errortext Errortext
		| Trademark_Filename Filename
		| Trademark_Function Function
		| Trademark_Guibutton Guibutton
		| Trademark_Guiicon Guiicon
		| Trademark_Guilabel Guilabel
		| Trademark_Guimenu Guimenu
		| Trademark_Guimenuitem Guimenuitem
		| Trademark_Guisubmenu Guisubmenu
		| Trademark_Hardware Hardware
		| Trademark_Interface Interface
		| Trademark_Keycap Keycap
		| Trademark_Keycode Keycode
		| Trademark_Keycombo Keycombo
		| Trademark_Keysym Keysym
		| Trademark_Literal Literal
		| Trademark_Constant Constant
		| Trademark_Markup Markup
		| Trademark_Medialabel Medialabel
		| Trademark_Menuchoice Menuchoice
		| Trademark_Mousebutton Mousebutton
		| Trademark_Option Option
		| Trademark_Optional Optional
		| Trademark_Parameter Parameter
		| Trademark_Prompt Prompt
		| Trademark_Property Property
		| Trademark_Replaceable Replaceable
		| Trademark_Returnvalue Returnvalue
		| Trademark_Sgmltag Sgmltag
		| Trademark_Structfield Structfield
		| Trademark_Structname Structname
		| Trademark_Symbol Symbol
		| Trademark_Systemitem Systemitem
		| Trademark_Token Token
		| Trademark_Type Type
		| Trademark_Userinput Userinput
		| Trademark_Varname Varname
		| Trademark_Anchor Anchor
		| Trademark_Remark Remark
		| Trademark_Subscript Subscript
		| Trademark_Superscript Superscript
		| Trademark_Inlinegraphic Inlinegraphic
		| Trademark_Inlinemediaobject Inlinemediaobject
		| Trademark_Emphasis Emphasis
		deriving (Eq,Show)
data Trademark_Class = Trademark_Class_Service  | 
		       Trademark_Class_Trade  |  Trademark_Class_Registered  | 
		       Trademark_Class_Copyright
		     deriving (Eq,Show)
data Trademark_Revisionflag = Trademark_Revisionflag_Changed  | 
			      Trademark_Revisionflag_Added  |  Trademark_Revisionflag_Deleted  | 
			      Trademark_Revisionflag_Off
			    deriving (Eq,Show)
data Wordasword = Wordasword Wordasword_Attrs [Wordasword_]
		deriving (Eq,Show)
data Wordasword_Attrs = Wordasword_Attrs
    { wordaswordId :: (Maybe String)
    , wordaswordLang :: (Maybe String)
    , wordaswordRemap :: (Maybe String)
    , wordaswordXreflabel :: (Maybe String)
    , wordaswordRevisionflag :: (Maybe Wordasword_Revisionflag)
    , wordaswordArch :: (Maybe String)
    , wordaswordCondition :: (Maybe String)
    , wordaswordConformance :: (Maybe String)
    , wordaswordOs :: (Maybe String)
    , wordaswordRevision :: (Maybe String)
    , wordaswordSecurity :: (Maybe String)
    , wordaswordUserlevel :: (Maybe String)
    , wordaswordVendor :: (Maybe String)
    , wordaswordRole :: (Maybe String)
    } deriving (Eq,Show)
data Wordasword_ = Wordasword_Str String
		 | Wordasword_Acronym Acronym
		 | Wordasword_Emphasis Emphasis
		 | Wordasword_Trademark Trademark
		 | Wordasword_Link Link
		 | Wordasword_Olink Olink
		 | Wordasword_Ulink Ulink
		 | Wordasword_Anchor Anchor
		 | Wordasword_Remark Remark
		 | Wordasword_Subscript Subscript
		 | Wordasword_Superscript Superscript
		 | Wordasword_Inlinegraphic Inlinegraphic
		 | Wordasword_Inlinemediaobject Inlinemediaobject
		 | Wordasword_Indexterm Indexterm
		 | Wordasword_Beginpage Beginpage
		 deriving (Eq,Show)
data Wordasword_Revisionflag = Wordasword_Revisionflag_Changed  | 
			       Wordasword_Revisionflag_Added  |  Wordasword_Revisionflag_Deleted
			        |  Wordasword_Revisionflag_Off
			     deriving (Eq,Show)
data Link = Link Link_Attrs [Link_]
	  deriving (Eq,Show)
data Link_Attrs = Link_Attrs
    { linkEndterm :: (Maybe String)
    , linkLinkend :: String
    , linkType :: (Maybe String)
    , linkId :: (Maybe String)
    , linkLang :: (Maybe String)
    , linkRemap :: (Maybe String)
    , linkXreflabel :: (Maybe String)
    , linkRevisionflag :: (Maybe Link_Revisionflag)
    , linkArch :: (Maybe String)
    , linkCondition :: (Maybe String)
    , linkConformance :: (Maybe String)
    , linkOs :: (Maybe String)
    , linkRevision :: (Maybe String)
    , linkSecurity :: (Maybe String)
    , linkUserlevel :: (Maybe String)
    , linkVendor :: (Maybe String)
    , linkRole :: (Maybe String)
    } deriving (Eq,Show)
data Link_ = Link_Str String
	   | Link_Footnoteref Footnoteref
	   | Link_Xref Xref
	   | Link_Abbrev Abbrev
	   | Link_Acronym Acronym
	   | Link_Citation Citation
	   | Link_Citerefentry Citerefentry
	   | Link_Citetitle Citetitle
	   | Link_Emphasis Emphasis
	   | Link_Firstterm Firstterm
	   | Link_Foreignphrase Foreignphrase
	   | Link_Glossterm Glossterm
	   | Link_Footnote Footnote
	   | Link_Phrase Phrase
	   | Link_Quote Quote
	   | Link_Trademark Trademark
	   | Link_Wordasword Wordasword
	   | Link_Personname Personname
	   | Link_Link Link
	   | Link_Olink Olink
	   | Link_Ulink Ulink
	   | Link_Action Action
	   | Link_Application Application
	   | Link_Classname Classname
	   | Link_Methodname Methodname
	   | Link_Interfacename Interfacename
	   | Link_Exceptionname Exceptionname
	   | Link_Ooclass Ooclass
	   | Link_Oointerface Oointerface
	   | Link_Ooexception Ooexception
	   | Link_Command Command
	   | Link_Computeroutput Computeroutput
	   | Link_Database Database
	   | Link_Email Email
	   | Link_Envar Envar
	   | Link_Errorcode Errorcode
	   | Link_Errorname Errorname
	   | Link_Errortype Errortype
	   | Link_Errortext Errortext
	   | Link_Filename Filename
	   | Link_Function Function
	   | Link_Guibutton Guibutton
	   | Link_Guiicon Guiicon
	   | Link_Guilabel Guilabel
	   | Link_Guimenu Guimenu
	   | Link_Guimenuitem Guimenuitem
	   | Link_Guisubmenu Guisubmenu
	   | Link_Hardware Hardware
	   | Link_Interface Interface
	   | Link_Keycap Keycap
	   | Link_Keycode Keycode
	   | Link_Keycombo Keycombo
	   | Link_Keysym Keysym
	   | Link_Literal Literal
	   | Link_Constant Constant
	   | Link_Markup Markup
	   | Link_Medialabel Medialabel
	   | Link_Menuchoice Menuchoice
	   | Link_Mousebutton Mousebutton
	   | Link_Option Option
	   | Link_Optional Optional
	   | Link_Parameter Parameter
	   | Link_Prompt Prompt
	   | Link_Property Property
	   | Link_Replaceable Replaceable
	   | Link_Returnvalue Returnvalue
	   | Link_Sgmltag Sgmltag
	   | Link_Structfield Structfield
	   | Link_Structname Structname
	   | Link_Symbol Symbol
	   | Link_Systemitem Systemitem
	   | Link_Token Token
	   | Link_Type Type
	   | Link_Userinput Userinput
	   | Link_Varname Varname
	   | Link_Anchor Anchor
	   | Link_Author Author
	   | Link_Authorinitials Authorinitials
	   | Link_Corpauthor Corpauthor
	   | Link_Modespec Modespec
	   | Link_Othercredit Othercredit
	   | Link_Productname Productname
	   | Link_Productnumber Productnumber
	   | Link_Revhistory Revhistory
	   | Link_Remark Remark
	   | Link_Subscript Subscript
	   | Link_Superscript Superscript
	   | Link_Inlinegraphic Inlinegraphic
	   | Link_Inlinemediaobject Inlinemediaobject
	   | Link_Inlineequation Inlineequation
	   | Link_Synopsis Synopsis
	   | Link_Cmdsynopsis Cmdsynopsis
	   | Link_Funcsynopsis Funcsynopsis
	   | Link_Classsynopsis Classsynopsis
	   | Link_Fieldsynopsis Fieldsynopsis
	   | Link_Constructorsynopsis Constructorsynopsis
	   | Link_Destructorsynopsis Destructorsynopsis
	   | Link_Methodsynopsis Methodsynopsis
	   | Link_Indexterm Indexterm
	   | Link_Beginpage Beginpage
	   deriving (Eq,Show)
data Link_Revisionflag = Link_Revisionflag_Changed  | 
			 Link_Revisionflag_Added  |  Link_Revisionflag_Deleted  | 
			 Link_Revisionflag_Off
		       deriving (Eq,Show)
data Olink = Olink Olink_Attrs [Olink_]
	   deriving (Eq,Show)
data Olink_Attrs = Olink_Attrs
    { olinkTargetdocent :: (Maybe String)
    , olinkLinkmode :: (Maybe String)
    , olinkLocalinfo :: (Maybe String)
    , olinkType :: (Maybe String)
    , olinkTargetdoc :: (Maybe String)
    , olinkTargetptr :: (Maybe String)
    , olinkId :: (Maybe String)
    , olinkLang :: (Maybe String)
    , olinkRemap :: (Maybe String)
    , olinkXreflabel :: (Maybe String)
    , olinkRevisionflag :: (Maybe Olink_Revisionflag)
    , olinkArch :: (Maybe String)
    , olinkCondition :: (Maybe String)
    , olinkConformance :: (Maybe String)
    , olinkOs :: (Maybe String)
    , olinkRevision :: (Maybe String)
    , olinkSecurity :: (Maybe String)
    , olinkUserlevel :: (Maybe String)
    , olinkVendor :: (Maybe String)
    , olinkRole :: (Maybe String)
    } deriving (Eq,Show)
data Olink_ = Olink_Str String
	    | Olink_Footnoteref Footnoteref
	    | Olink_Xref Xref
	    | Olink_Abbrev Abbrev
	    | Olink_Acronym Acronym
	    | Olink_Citation Citation
	    | Olink_Citerefentry Citerefentry
	    | Olink_Citetitle Citetitle
	    | Olink_Emphasis Emphasis
	    | Olink_Firstterm Firstterm
	    | Olink_Foreignphrase Foreignphrase
	    | Olink_Glossterm Glossterm
	    | Olink_Footnote Footnote
	    | Olink_Phrase Phrase
	    | Olink_Quote Quote
	    | Olink_Trademark Trademark
	    | Olink_Wordasword Wordasword
	    | Olink_Personname Personname
	    | Olink_Link Link
	    | Olink_Olink Olink
	    | Olink_Ulink Ulink
	    | Olink_Action Action
	    | Olink_Application Application
	    | Olink_Classname Classname
	    | Olink_Methodname Methodname
	    | Olink_Interfacename Interfacename
	    | Olink_Exceptionname Exceptionname
	    | Olink_Ooclass Ooclass
	    | Olink_Oointerface Oointerface
	    | Olink_Ooexception Ooexception
	    | Olink_Command Command
	    | Olink_Computeroutput Computeroutput
	    | Olink_Database Database
	    | Olink_Email Email
	    | Olink_Envar Envar
	    | Olink_Errorcode Errorcode
	    | Olink_Errorname Errorname
	    | Olink_Errortype Errortype
	    | Olink_Errortext Errortext
	    | Olink_Filename Filename
	    | Olink_Function Function
	    | Olink_Guibutton Guibutton
	    | Olink_Guiicon Guiicon
	    | Olink_Guilabel Guilabel
	    | Olink_Guimenu Guimenu
	    | Olink_Guimenuitem Guimenuitem
	    | Olink_Guisubmenu Guisubmenu
	    | Olink_Hardware Hardware
	    | Olink_Interface Interface
	    | Olink_Keycap Keycap
	    | Olink_Keycode Keycode
	    | Olink_Keycombo Keycombo
	    | Olink_Keysym Keysym
	    | Olink_Literal Literal
	    | Olink_Constant Constant
	    | Olink_Markup Markup
	    | Olink_Medialabel Medialabel
	    | Olink_Menuchoice Menuchoice
	    | Olink_Mousebutton Mousebutton
	    | Olink_Option Option
	    | Olink_Optional Optional
	    | Olink_Parameter Parameter
	    | Olink_Prompt Prompt
	    | Olink_Property Property
	    | Olink_Replaceable Replaceable
	    | Olink_Returnvalue Returnvalue
	    | Olink_Sgmltag Sgmltag
	    | Olink_Structfield Structfield
	    | Olink_Structname Structname
	    | Olink_Symbol Symbol
	    | Olink_Systemitem Systemitem
	    | Olink_Token Token
	    | Olink_Type Type
	    | Olink_Userinput Userinput
	    | Olink_Varname Varname
	    | Olink_Anchor Anchor
	    | Olink_Author Author
	    | Olink_Authorinitials Authorinitials
	    | Olink_Corpauthor Corpauthor
	    | Olink_Modespec Modespec
	    | Olink_Othercredit Othercredit
	    | Olink_Productname Productname
	    | Olink_Productnumber Productnumber
	    | Olink_Revhistory Revhistory
	    | Olink_Remark Remark
	    | Olink_Subscript Subscript
	    | Olink_Superscript Superscript
	    | Olink_Inlinegraphic Inlinegraphic
	    | Olink_Inlinemediaobject Inlinemediaobject
	    | Olink_Inlineequation Inlineequation
	    | Olink_Synopsis Synopsis
	    | Olink_Cmdsynopsis Cmdsynopsis
	    | Olink_Funcsynopsis Funcsynopsis
	    | Olink_Classsynopsis Classsynopsis
	    | Olink_Fieldsynopsis Fieldsynopsis
	    | Olink_Constructorsynopsis Constructorsynopsis
	    | Olink_Destructorsynopsis Destructorsynopsis
	    | Olink_Methodsynopsis Methodsynopsis
	    | Olink_Indexterm Indexterm
	    | Olink_Beginpage Beginpage
	    deriving (Eq,Show)
data Olink_Revisionflag = Olink_Revisionflag_Changed  | 
			  Olink_Revisionflag_Added  |  Olink_Revisionflag_Deleted  | 
			  Olink_Revisionflag_Off
			deriving (Eq,Show)
data Ulink = Ulink Ulink_Attrs [Ulink_]
	   deriving (Eq,Show)
data Ulink_Attrs = Ulink_Attrs
    { ulinkUrl :: String
    , ulinkType :: (Maybe String)
    , ulinkId :: (Maybe String)
    , ulinkLang :: (Maybe String)
    , ulinkRemap :: (Maybe String)
    , ulinkXreflabel :: (Maybe String)
    , ulinkRevisionflag :: (Maybe Ulink_Revisionflag)
    , ulinkArch :: (Maybe String)
    , ulinkCondition :: (Maybe String)
    , ulinkConformance :: (Maybe String)
    , ulinkOs :: (Maybe String)
    , ulinkRevision :: (Maybe String)
    , ulinkSecurity :: (Maybe String)
    , ulinkUserlevel :: (Maybe String)
    , ulinkVendor :: (Maybe String)
    , ulinkRole :: (Maybe String)
    } deriving (Eq,Show)
data Ulink_ = Ulink_Str String
	    | Ulink_Footnoteref Footnoteref
	    | Ulink_Xref Xref
	    | Ulink_Abbrev Abbrev
	    | Ulink_Acronym Acronym
	    | Ulink_Citation Citation
	    | Ulink_Citerefentry Citerefentry
	    | Ulink_Citetitle Citetitle
	    | Ulink_Emphasis Emphasis
	    | Ulink_Firstterm Firstterm
	    | Ulink_Foreignphrase Foreignphrase
	    | Ulink_Glossterm Glossterm
	    | Ulink_Footnote Footnote
	    | Ulink_Phrase Phrase
	    | Ulink_Quote Quote
	    | Ulink_Trademark Trademark
	    | Ulink_Wordasword Wordasword
	    | Ulink_Personname Personname
	    | Ulink_Link Link
	    | Ulink_Olink Olink
	    | Ulink_Ulink Ulink
	    | Ulink_Action Action
	    | Ulink_Application Application
	    | Ulink_Classname Classname
	    | Ulink_Methodname Methodname
	    | Ulink_Interfacename Interfacename
	    | Ulink_Exceptionname Exceptionname
	    | Ulink_Ooclass Ooclass
	    | Ulink_Oointerface Oointerface
	    | Ulink_Ooexception Ooexception
	    | Ulink_Command Command
	    | Ulink_Computeroutput Computeroutput
	    | Ulink_Database Database
	    | Ulink_Email Email
	    | Ulink_Envar Envar
	    | Ulink_Errorcode Errorcode
	    | Ulink_Errorname Errorname
	    | Ulink_Errortype Errortype
	    | Ulink_Errortext Errortext
	    | Ulink_Filename Filename
	    | Ulink_Function Function
	    | Ulink_Guibutton Guibutton
	    | Ulink_Guiicon Guiicon
	    | Ulink_Guilabel Guilabel
	    | Ulink_Guimenu Guimenu
	    | Ulink_Guimenuitem Guimenuitem
	    | Ulink_Guisubmenu Guisubmenu
	    | Ulink_Hardware Hardware
	    | Ulink_Interface Interface
	    | Ulink_Keycap Keycap
	    | Ulink_Keycode Keycode
	    | Ulink_Keycombo Keycombo
	    | Ulink_Keysym Keysym
	    | Ulink_Literal Literal
	    | Ulink_Constant Constant
	    | Ulink_Markup Markup
	    | Ulink_Medialabel Medialabel
	    | Ulink_Menuchoice Menuchoice
	    | Ulink_Mousebutton Mousebutton
	    | Ulink_Option Option
	    | Ulink_Optional Optional
	    | Ulink_Parameter Parameter
	    | Ulink_Prompt Prompt
	    | Ulink_Property Property
	    | Ulink_Replaceable Replaceable
	    | Ulink_Returnvalue Returnvalue
	    | Ulink_Sgmltag Sgmltag
	    | Ulink_Structfield Structfield
	    | Ulink_Structname Structname
	    | Ulink_Symbol Symbol
	    | Ulink_Systemitem Systemitem
	    | Ulink_Token Token
	    | Ulink_Type Type
	    | Ulink_Userinput Userinput
	    | Ulink_Varname Varname
	    | Ulink_Anchor Anchor
	    | Ulink_Author Author
	    | Ulink_Authorinitials Authorinitials
	    | Ulink_Corpauthor Corpauthor
	    | Ulink_Modespec Modespec
	    | Ulink_Othercredit Othercredit
	    | Ulink_Productname Productname
	    | Ulink_Productnumber Productnumber
	    | Ulink_Revhistory Revhistory
	    | Ulink_Remark Remark
	    | Ulink_Subscript Subscript
	    | Ulink_Superscript Superscript
	    | Ulink_Inlinegraphic Inlinegraphic
	    | Ulink_Inlinemediaobject Inlinemediaobject
	    | Ulink_Inlineequation Inlineequation
	    | Ulink_Synopsis Synopsis
	    | Ulink_Cmdsynopsis Cmdsynopsis
	    | Ulink_Funcsynopsis Funcsynopsis
	    | Ulink_Classsynopsis Classsynopsis
	    | Ulink_Fieldsynopsis Fieldsynopsis
	    | Ulink_Constructorsynopsis Constructorsynopsis
	    | Ulink_Destructorsynopsis Destructorsynopsis
	    | Ulink_Methodsynopsis Methodsynopsis
	    | Ulink_Indexterm Indexterm
	    | Ulink_Beginpage Beginpage
	    deriving (Eq,Show)
data Ulink_Revisionflag = Ulink_Revisionflag_Changed  | 
			  Ulink_Revisionflag_Added  |  Ulink_Revisionflag_Deleted  | 
			  Ulink_Revisionflag_Off
			deriving (Eq,Show)
data Footnoteref = Footnoteref
    { footnoterefLinkend :: String
    , footnoterefLabel :: (Maybe String)
    , footnoterefId :: (Maybe String)
    , footnoterefLang :: (Maybe String)
    , footnoterefRemap :: (Maybe String)
    , footnoterefXreflabel :: (Maybe String)
    , footnoterefRevisionflag :: (Maybe Footnoteref_Revisionflag)
    , footnoterefArch :: (Maybe String)
    , footnoterefCondition :: (Maybe String)
    , footnoterefConformance :: (Maybe String)
    , footnoterefOs :: (Maybe String)
    , footnoterefRevision :: (Maybe String)
    , footnoterefSecurity :: (Maybe String)
    , footnoterefUserlevel :: (Maybe String)
    , footnoterefVendor :: (Maybe String)
    , footnoterefRole :: (Maybe String)
    } deriving (Eq,Show)
data Footnoteref_Revisionflag = Footnoteref_Revisionflag_Changed
				 |  Footnoteref_Revisionflag_Added  | 
				Footnoteref_Revisionflag_Deleted  |  Footnoteref_Revisionflag_Off
			      deriving (Eq,Show)
data Xref = Xref
    { xrefEndterm :: (Maybe String)
    , xrefLinkend :: String
    , xrefId :: (Maybe String)
    , xrefLang :: (Maybe String)
    , xrefRemap :: (Maybe String)
    , xrefXreflabel :: (Maybe String)
    , xrefRevisionflag :: (Maybe Xref_Revisionflag)
    , xrefArch :: (Maybe String)
    , xrefCondition :: (Maybe String)
    , xrefConformance :: (Maybe String)
    , xrefOs :: (Maybe String)
    , xrefRevision :: (Maybe String)
    , xrefSecurity :: (Maybe String)
    , xrefUserlevel :: (Maybe String)
    , xrefVendor :: (Maybe String)
    , xrefRole :: (Maybe String)
    } deriving (Eq,Show)
data Xref_Revisionflag = Xref_Revisionflag_Changed  | 
			 Xref_Revisionflag_Added  |  Xref_Revisionflag_Deleted  | 
			 Xref_Revisionflag_Off
		       deriving (Eq,Show)
data Anchor = Anchor
    { anchorId :: String
    , anchorPagenum :: (Maybe String)
    , anchorRemap :: (Maybe String)
    , anchorXreflabel :: (Maybe String)
    , anchorRevisionflag :: (Maybe Anchor_Revisionflag)
    , anchorArch :: (Maybe String)
    , anchorCondition :: (Maybe String)
    , anchorConformance :: (Maybe String)
    , anchorOs :: (Maybe String)
    , anchorRevision :: (Maybe String)
    , anchorSecurity :: (Maybe String)
    , anchorUserlevel :: (Maybe String)
    , anchorVendor :: (Maybe String)
    , anchorRole :: (Maybe String)
    } deriving (Eq,Show)
data Anchor_Revisionflag = Anchor_Revisionflag_Changed  | 
			   Anchor_Revisionflag_Added  |  Anchor_Revisionflag_Deleted  | 
			   Anchor_Revisionflag_Off
			 deriving (Eq,Show)
data Beginpage = Beginpage
    { beginpagePagenum :: (Maybe String)
    , beginpageId :: (Maybe String)
    , beginpageLang :: (Maybe String)
    , beginpageRemap :: (Maybe String)
    , beginpageXreflabel :: (Maybe String)
    , beginpageRevisionflag :: (Maybe Beginpage_Revisionflag)
    , beginpageArch :: (Maybe String)
    , beginpageCondition :: (Maybe String)
    , beginpageConformance :: (Maybe String)
    , beginpageOs :: (Maybe String)
    , beginpageRevision :: (Maybe String)
    , beginpageSecurity :: (Maybe String)
    , beginpageUserlevel :: (Maybe String)
    , beginpageVendor :: (Maybe String)
    , beginpageRole :: (Maybe String)
    } deriving (Eq,Show)
data Beginpage_Revisionflag = Beginpage_Revisionflag_Changed  | 
			      Beginpage_Revisionflag_Added  |  Beginpage_Revisionflag_Deleted  | 
			      Beginpage_Revisionflag_Off
			    deriving (Eq,Show)
data Indexterm = Indexterm Indexterm_Attrs (Maybe Primary)
			   (Maybe (OneOf4 Secondary (Maybe (OneOf4 Tertiary (Maybe (OneOf2 See [Seealso])) See [Seealso])) See [Seealso]))
	       deriving (Eq,Show)
data Indexterm_Attrs = Indexterm_Attrs
    { indextermPagenum :: (Maybe String)
    , indextermScope :: (Maybe Indexterm_Scope)
    , indextermSignificance :: (Defaultable Indexterm_Significance)
    , indextermClass :: (Maybe Indexterm_Class)
    , indextermStartref :: (Maybe String)
    , indextermZone :: (Maybe String)
    , indextermId :: (Maybe String)
    , indextermLang :: (Maybe String)
    , indextermRemap :: (Maybe String)
    , indextermXreflabel :: (Maybe String)
    , indextermRevisionflag :: (Maybe Indexterm_Revisionflag)
    , indextermArch :: (Maybe String)
    , indextermCondition :: (Maybe String)
    , indextermConformance :: (Maybe String)
    , indextermOs :: (Maybe String)
    , indextermRevision :: (Maybe String)
    , indextermSecurity :: (Maybe String)
    , indextermUserlevel :: (Maybe String)
    , indextermVendor :: (Maybe String)
    , indextermRole :: (Maybe String)
    } deriving (Eq,Show)
data Indexterm_Scope = Indexterm_Scope_All  | 
		       Indexterm_Scope_Global  |  Indexterm_Scope_Local
		     deriving (Eq,Show)
data Indexterm_Significance = Indexterm_Significance_Preferred  | 
			      Indexterm_Significance_Normal
			    deriving (Eq,Show)
data Indexterm_Class = Indexterm_Class_Singular  | 
		       Indexterm_Class_Startofrange  |  Indexterm_Class_Endofrange
		     deriving (Eq,Show)
data Indexterm_Revisionflag = Indexterm_Revisionflag_Changed  | 
			      Indexterm_Revisionflag_Added  |  Indexterm_Revisionflag_Deleted  | 
			      Indexterm_Revisionflag_Off
			    deriving (Eq,Show)
data Primary = Primary Primary_Attrs [Primary_]
	     deriving (Eq,Show)
data Primary_Attrs = Primary_Attrs
    { primarySortas :: (Maybe String)
    , primaryId :: (Maybe String)
    , primaryLang :: (Maybe String)
    , primaryRemap :: (Maybe String)
    , primaryXreflabel :: (Maybe String)
    , primaryRevisionflag :: (Maybe Primary_Revisionflag)
    , primaryArch :: (Maybe String)
    , primaryCondition :: (Maybe String)
    , primaryConformance :: (Maybe String)
    , primaryOs :: (Maybe String)
    , primaryRevision :: (Maybe String)
    , primarySecurity :: (Maybe String)
    , primaryUserlevel :: (Maybe String)
    , primaryVendor :: (Maybe String)
    , primaryRole :: (Maybe String)
    } deriving (Eq,Show)
data Primary_ = Primary_Str String
	      | Primary_Footnoteref Footnoteref
	      | Primary_Xref Xref
	      | Primary_Abbrev Abbrev
	      | Primary_Acronym Acronym
	      | Primary_Citation Citation
	      | Primary_Citerefentry Citerefentry
	      | Primary_Citetitle Citetitle
	      | Primary_Emphasis Emphasis
	      | Primary_Firstterm Firstterm
	      | Primary_Foreignphrase Foreignphrase
	      | Primary_Glossterm Glossterm
	      | Primary_Footnote Footnote
	      | Primary_Phrase Phrase
	      | Primary_Quote Quote
	      | Primary_Trademark Trademark
	      | Primary_Wordasword Wordasword
	      | Primary_Personname Personname
	      | Primary_Link Link
	      | Primary_Olink Olink
	      | Primary_Ulink Ulink
	      | Primary_Action Action
	      | Primary_Application Application
	      | Primary_Classname Classname
	      | Primary_Methodname Methodname
	      | Primary_Interfacename Interfacename
	      | Primary_Exceptionname Exceptionname
	      | Primary_Ooclass Ooclass
	      | Primary_Oointerface Oointerface
	      | Primary_Ooexception Ooexception
	      | Primary_Command Command
	      | Primary_Computeroutput Computeroutput
	      | Primary_Database Database
	      | Primary_Email Email
	      | Primary_Envar Envar
	      | Primary_Errorcode Errorcode
	      | Primary_Errorname Errorname
	      | Primary_Errortype Errortype
	      | Primary_Errortext Errortext
	      | Primary_Filename Filename
	      | Primary_Function Function
	      | Primary_Guibutton Guibutton
	      | Primary_Guiicon Guiicon
	      | Primary_Guilabel Guilabel
	      | Primary_Guimenu Guimenu
	      | Primary_Guimenuitem Guimenuitem
	      | Primary_Guisubmenu Guisubmenu
	      | Primary_Hardware Hardware
	      | Primary_Interface Interface
	      | Primary_Keycap Keycap
	      | Primary_Keycode Keycode
	      | Primary_Keycombo Keycombo
	      | Primary_Keysym Keysym
	      | Primary_Literal Literal
	      | Primary_Constant Constant
	      | Primary_Markup Markup
	      | Primary_Medialabel Medialabel
	      | Primary_Menuchoice Menuchoice
	      | Primary_Mousebutton Mousebutton
	      | Primary_Option Option
	      | Primary_Optional Optional
	      | Primary_Parameter Parameter
	      | Primary_Prompt Prompt
	      | Primary_Property Property
	      | Primary_Replaceable Replaceable
	      | Primary_Returnvalue Returnvalue
	      | Primary_Sgmltag Sgmltag
	      | Primary_Structfield Structfield
	      | Primary_Structname Structname
	      | Primary_Symbol Symbol
	      | Primary_Systemitem Systemitem
	      | Primary_Token Token
	      | Primary_Type Type
	      | Primary_Userinput Userinput
	      | Primary_Varname Varname
	      | Primary_Anchor Anchor
	      | Primary_Author Author
	      | Primary_Authorinitials Authorinitials
	      | Primary_Corpauthor Corpauthor
	      | Primary_Modespec Modespec
	      | Primary_Othercredit Othercredit
	      | Primary_Productname Productname
	      | Primary_Productnumber Productnumber
	      | Primary_Revhistory Revhistory
	      | Primary_Remark Remark
	      | Primary_Subscript Subscript
	      | Primary_Superscript Superscript
	      | Primary_Inlinegraphic Inlinegraphic
	      | Primary_Inlinemediaobject Inlinemediaobject
	      deriving (Eq,Show)
data Primary_Revisionflag = Primary_Revisionflag_Changed  | 
			    Primary_Revisionflag_Added  |  Primary_Revisionflag_Deleted  | 
			    Primary_Revisionflag_Off
			  deriving (Eq,Show)
data Secondary = Secondary Secondary_Attrs [Secondary_]
	       deriving (Eq,Show)
data Secondary_Attrs = Secondary_Attrs
    { secondarySortas :: (Maybe String)
    , secondaryId :: (Maybe String)
    , secondaryLang :: (Maybe String)
    , secondaryRemap :: (Maybe String)
    , secondaryXreflabel :: (Maybe String)
    , secondaryRevisionflag :: (Maybe Secondary_Revisionflag)
    , secondaryArch :: (Maybe String)
    , secondaryCondition :: (Maybe String)
    , secondaryConformance :: (Maybe String)
    , secondaryOs :: (Maybe String)
    , secondaryRevision :: (Maybe String)
    , secondarySecurity :: (Maybe String)
    , secondaryUserlevel :: (Maybe String)
    , secondaryVendor :: (Maybe String)
    , secondaryRole :: (Maybe String)
    } deriving (Eq,Show)
data Secondary_ = Secondary_Str String
		| Secondary_Footnoteref Footnoteref
		| Secondary_Xref Xref
		| Secondary_Abbrev Abbrev
		| Secondary_Acronym Acronym
		| Secondary_Citation Citation
		| Secondary_Citerefentry Citerefentry
		| Secondary_Citetitle Citetitle
		| Secondary_Emphasis Emphasis
		| Secondary_Firstterm Firstterm
		| Secondary_Foreignphrase Foreignphrase
		| Secondary_Glossterm Glossterm
		| Secondary_Footnote Footnote
		| Secondary_Phrase Phrase
		| Secondary_Quote Quote
		| Secondary_Trademark Trademark
		| Secondary_Wordasword Wordasword
		| Secondary_Personname Personname
		| Secondary_Link Link
		| Secondary_Olink Olink
		| Secondary_Ulink Ulink
		| Secondary_Action Action
		| Secondary_Application Application
		| Secondary_Classname Classname
		| Secondary_Methodname Methodname
		| Secondary_Interfacename Interfacename
		| Secondary_Exceptionname Exceptionname
		| Secondary_Ooclass Ooclass
		| Secondary_Oointerface Oointerface
		| Secondary_Ooexception Ooexception
		| Secondary_Command Command
		| Secondary_Computeroutput Computeroutput
		| Secondary_Database Database
		| Secondary_Email Email
		| Secondary_Envar Envar
		| Secondary_Errorcode Errorcode
		| Secondary_Errorname Errorname
		| Secondary_Errortype Errortype
		| Secondary_Errortext Errortext
		| Secondary_Filename Filename
		| Secondary_Function Function
		| Secondary_Guibutton Guibutton
		| Secondary_Guiicon Guiicon
		| Secondary_Guilabel Guilabel
		| Secondary_Guimenu Guimenu
		| Secondary_Guimenuitem Guimenuitem
		| Secondary_Guisubmenu Guisubmenu
		| Secondary_Hardware Hardware
		| Secondary_Interface Interface
		| Secondary_Keycap Keycap
		| Secondary_Keycode Keycode
		| Secondary_Keycombo Keycombo
		| Secondary_Keysym Keysym
		| Secondary_Literal Literal
		| Secondary_Constant Constant
		| Secondary_Markup Markup
		| Secondary_Medialabel Medialabel
		| Secondary_Menuchoice Menuchoice
		| Secondary_Mousebutton Mousebutton
		| Secondary_Option Option
		| Secondary_Optional Optional
		| Secondary_Parameter Parameter
		| Secondary_Prompt Prompt
		| Secondary_Property Property
		| Secondary_Replaceable Replaceable
		| Secondary_Returnvalue Returnvalue
		| Secondary_Sgmltag Sgmltag
		| Secondary_Structfield Structfield
		| Secondary_Structname Structname
		| Secondary_Symbol Symbol
		| Secondary_Systemitem Systemitem
		| Secondary_Token Token
		| Secondary_Type Type
		| Secondary_Userinput Userinput
		| Secondary_Varname Varname
		| Secondary_Anchor Anchor
		| Secondary_Author Author
		| Secondary_Authorinitials Authorinitials
		| Secondary_Corpauthor Corpauthor
		| Secondary_Modespec Modespec
		| Secondary_Othercredit Othercredit
		| Secondary_Productname Productname
		| Secondary_Productnumber Productnumber
		| Secondary_Revhistory Revhistory
		| Secondary_Remark Remark
		| Secondary_Subscript Subscript
		| Secondary_Superscript Superscript
		| Secondary_Inlinegraphic Inlinegraphic
		| Secondary_Inlinemediaobject Inlinemediaobject
		deriving (Eq,Show)
data Secondary_Revisionflag = Secondary_Revisionflag_Changed  | 
			      Secondary_Revisionflag_Added  |  Secondary_Revisionflag_Deleted  | 
			      Secondary_Revisionflag_Off
			    deriving (Eq,Show)
data Tertiary = Tertiary Tertiary_Attrs [Tertiary_]
	      deriving (Eq,Show)
data Tertiary_Attrs = Tertiary_Attrs
    { tertiarySortas :: (Maybe String)
    , tertiaryId :: (Maybe String)
    , tertiaryLang :: (Maybe String)
    , tertiaryRemap :: (Maybe String)
    , tertiaryXreflabel :: (Maybe String)
    , tertiaryRevisionflag :: (Maybe Tertiary_Revisionflag)
    , tertiaryArch :: (Maybe String)
    , tertiaryCondition :: (Maybe String)
    , tertiaryConformance :: (Maybe String)
    , tertiaryOs :: (Maybe String)
    , tertiaryRevision :: (Maybe String)
    , tertiarySecurity :: (Maybe String)
    , tertiaryUserlevel :: (Maybe String)
    , tertiaryVendor :: (Maybe String)
    , tertiaryRole :: (Maybe String)
    } deriving (Eq,Show)
data Tertiary_ = Tertiary_Str String
	       | Tertiary_Footnoteref Footnoteref
	       | Tertiary_Xref Xref
	       | Tertiary_Abbrev Abbrev
	       | Tertiary_Acronym Acronym
	       | Tertiary_Citation Citation
	       | Tertiary_Citerefentry Citerefentry
	       | Tertiary_Citetitle Citetitle
	       | Tertiary_Emphasis Emphasis
	       | Tertiary_Firstterm Firstterm
	       | Tertiary_Foreignphrase Foreignphrase
	       | Tertiary_Glossterm Glossterm
	       | Tertiary_Footnote Footnote
	       | Tertiary_Phrase Phrase
	       | Tertiary_Quote Quote
	       | Tertiary_Trademark Trademark
	       | Tertiary_Wordasword Wordasword
	       | Tertiary_Personname Personname
	       | Tertiary_Link Link
	       | Tertiary_Olink Olink
	       | Tertiary_Ulink Ulink
	       | Tertiary_Action Action
	       | Tertiary_Application Application
	       | Tertiary_Classname Classname
	       | Tertiary_Methodname Methodname
	       | Tertiary_Interfacename Interfacename
	       | Tertiary_Exceptionname Exceptionname
	       | Tertiary_Ooclass Ooclass
	       | Tertiary_Oointerface Oointerface
	       | Tertiary_Ooexception Ooexception
	       | Tertiary_Command Command
	       | Tertiary_Computeroutput Computeroutput
	       | Tertiary_Database Database
	       | Tertiary_Email Email
	       | Tertiary_Envar Envar
	       | Tertiary_Errorcode Errorcode
	       | Tertiary_Errorname Errorname
	       | Tertiary_Errortype Errortype
	       | Tertiary_Errortext Errortext
	       | Tertiary_Filename Filename
	       | Tertiary_Function Function
	       | Tertiary_Guibutton Guibutton
	       | Tertiary_Guiicon Guiicon
	       | Tertiary_Guilabel Guilabel
	       | Tertiary_Guimenu Guimenu
	       | Tertiary_Guimenuitem Guimenuitem
	       | Tertiary_Guisubmenu Guisubmenu
	       | Tertiary_Hardware Hardware
	       | Tertiary_Interface Interface
	       | Tertiary_Keycap Keycap
	       | Tertiary_Keycode Keycode
	       | Tertiary_Keycombo Keycombo
	       | Tertiary_Keysym Keysym
	       | Tertiary_Literal Literal
	       | Tertiary_Constant Constant
	       | Tertiary_Markup Markup
	       | Tertiary_Medialabel Medialabel
	       | Tertiary_Menuchoice Menuchoice
	       | Tertiary_Mousebutton Mousebutton
	       | Tertiary_Option Option
	       | Tertiary_Optional Optional
	       | Tertiary_Parameter Parameter
	       | Tertiary_Prompt Prompt
	       | Tertiary_Property Property
	       | Tertiary_Replaceable Replaceable
	       | Tertiary_Returnvalue Returnvalue
	       | Tertiary_Sgmltag Sgmltag
	       | Tertiary_Structfield Structfield
	       | Tertiary_Structname Structname
	       | Tertiary_Symbol Symbol
	       | Tertiary_Systemitem Systemitem
	       | Tertiary_Token Token
	       | Tertiary_Type Type
	       | Tertiary_Userinput Userinput
	       | Tertiary_Varname Varname
	       | Tertiary_Anchor Anchor
	       | Tertiary_Author Author
	       | Tertiary_Authorinitials Authorinitials
	       | Tertiary_Corpauthor Corpauthor
	       | Tertiary_Modespec Modespec
	       | Tertiary_Othercredit Othercredit
	       | Tertiary_Productname Productname
	       | Tertiary_Productnumber Productnumber
	       | Tertiary_Revhistory Revhistory
	       | Tertiary_Remark Remark
	       | Tertiary_Subscript Subscript
	       | Tertiary_Superscript Superscript
	       | Tertiary_Inlinegraphic Inlinegraphic
	       | Tertiary_Inlinemediaobject Inlinemediaobject
	       deriving (Eq,Show)
data Tertiary_Revisionflag = Tertiary_Revisionflag_Changed  | 
			     Tertiary_Revisionflag_Added  |  Tertiary_Revisionflag_Deleted  | 
			     Tertiary_Revisionflag_Off
			   deriving (Eq,Show)
data See = See See_Attrs [See_]
	 deriving (Eq,Show)
data See_Attrs = See_Attrs
    { seeId :: (Maybe String)
    , seeLang :: (Maybe String)
    , seeRemap :: (Maybe String)
    , seeXreflabel :: (Maybe String)
    , seeRevisionflag :: (Maybe See_Revisionflag)
    , seeArch :: (Maybe String)
    , seeCondition :: (Maybe String)
    , seeConformance :: (Maybe String)
    , seeOs :: (Maybe String)
    , seeRevision :: (Maybe String)
    , seeSecurity :: (Maybe String)
    , seeUserlevel :: (Maybe String)
    , seeVendor :: (Maybe String)
    , seeRole :: (Maybe String)
    } deriving (Eq,Show)
data See_ = See_Str String
	  | See_Footnoteref Footnoteref
	  | See_Xref Xref
	  | See_Abbrev Abbrev
	  | See_Acronym Acronym
	  | See_Citation Citation
	  | See_Citerefentry Citerefentry
	  | See_Citetitle Citetitle
	  | See_Emphasis Emphasis
	  | See_Firstterm Firstterm
	  | See_Foreignphrase Foreignphrase
	  | See_Glossterm Glossterm
	  | See_Footnote Footnote
	  | See_Phrase Phrase
	  | See_Quote Quote
	  | See_Trademark Trademark
	  | See_Wordasword Wordasword
	  | See_Personname Personname
	  | See_Link Link
	  | See_Olink Olink
	  | See_Ulink Ulink
	  | See_Action Action
	  | See_Application Application
	  | See_Classname Classname
	  | See_Methodname Methodname
	  | See_Interfacename Interfacename
	  | See_Exceptionname Exceptionname
	  | See_Ooclass Ooclass
	  | See_Oointerface Oointerface
	  | See_Ooexception Ooexception
	  | See_Command Command
	  | See_Computeroutput Computeroutput
	  | See_Database Database
	  | See_Email Email
	  | See_Envar Envar
	  | See_Errorcode Errorcode
	  | See_Errorname Errorname
	  | See_Errortype Errortype
	  | See_Errortext Errortext
	  | See_Filename Filename
	  | See_Function Function
	  | See_Guibutton Guibutton
	  | See_Guiicon Guiicon
	  | See_Guilabel Guilabel
	  | See_Guimenu Guimenu
	  | See_Guimenuitem Guimenuitem
	  | See_Guisubmenu Guisubmenu
	  | See_Hardware Hardware
	  | See_Interface Interface
	  | See_Keycap Keycap
	  | See_Keycode Keycode
	  | See_Keycombo Keycombo
	  | See_Keysym Keysym
	  | See_Literal Literal
	  | See_Constant Constant
	  | See_Markup Markup
	  | See_Medialabel Medialabel
	  | See_Menuchoice Menuchoice
	  | See_Mousebutton Mousebutton
	  | See_Option Option
	  | See_Optional Optional
	  | See_Parameter Parameter
	  | See_Prompt Prompt
	  | See_Property Property
	  | See_Replaceable Replaceable
	  | See_Returnvalue Returnvalue
	  | See_Sgmltag Sgmltag
	  | See_Structfield Structfield
	  | See_Structname Structname
	  | See_Symbol Symbol
	  | See_Systemitem Systemitem
	  | See_Token Token
	  | See_Type Type
	  | See_Userinput Userinput
	  | See_Varname Varname
	  | See_Anchor Anchor
	  | See_Author Author
	  | See_Authorinitials Authorinitials
	  | See_Corpauthor Corpauthor
	  | See_Modespec Modespec
	  | See_Othercredit Othercredit
	  | See_Productname Productname
	  | See_Productnumber Productnumber
	  | See_Revhistory Revhistory
	  | See_Remark Remark
	  | See_Subscript Subscript
	  | See_Superscript Superscript
	  | See_Inlinegraphic Inlinegraphic
	  | See_Inlinemediaobject Inlinemediaobject
	  deriving (Eq,Show)
data See_Revisionflag = See_Revisionflag_Changed  | 
			See_Revisionflag_Added  |  See_Revisionflag_Deleted  | 
			See_Revisionflag_Off
		      deriving (Eq,Show)
data Seealso = Seealso Seealso_Attrs [Seealso_]
	     deriving (Eq,Show)
data Seealso_Attrs = Seealso_Attrs
    { seealsoId :: (Maybe String)
    , seealsoLang :: (Maybe String)
    , seealsoRemap :: (Maybe String)
    , seealsoXreflabel :: (Maybe String)
    , seealsoRevisionflag :: (Maybe Seealso_Revisionflag)
    , seealsoArch :: (Maybe String)
    , seealsoCondition :: (Maybe String)
    , seealsoConformance :: (Maybe String)
    , seealsoOs :: (Maybe String)
    , seealsoRevision :: (Maybe String)
    , seealsoSecurity :: (Maybe String)
    , seealsoUserlevel :: (Maybe String)
    , seealsoVendor :: (Maybe String)
    , seealsoRole :: (Maybe String)
    } deriving (Eq,Show)
data Seealso_ = Seealso_Str String
	      | Seealso_Footnoteref Footnoteref
	      | Seealso_Xref Xref
	      | Seealso_Abbrev Abbrev
	      | Seealso_Acronym Acronym
	      | Seealso_Citation Citation
	      | Seealso_Citerefentry Citerefentry
	      | Seealso_Citetitle Citetitle
	      | Seealso_Emphasis Emphasis
	      | Seealso_Firstterm Firstterm
	      | Seealso_Foreignphrase Foreignphrase
	      | Seealso_Glossterm Glossterm
	      | Seealso_Footnote Footnote
	      | Seealso_Phrase Phrase
	      | Seealso_Quote Quote
	      | Seealso_Trademark Trademark
	      | Seealso_Wordasword Wordasword
	      | Seealso_Personname Personname
	      | Seealso_Link Link
	      | Seealso_Olink Olink
	      | Seealso_Ulink Ulink
	      | Seealso_Action Action
	      | Seealso_Application Application
	      | Seealso_Classname Classname
	      | Seealso_Methodname Methodname
	      | Seealso_Interfacename Interfacename
	      | Seealso_Exceptionname Exceptionname
	      | Seealso_Ooclass Ooclass
	      | Seealso_Oointerface Oointerface
	      | Seealso_Ooexception Ooexception
	      | Seealso_Command Command
	      | Seealso_Computeroutput Computeroutput
	      | Seealso_Database Database
	      | Seealso_Email Email
	      | Seealso_Envar Envar
	      | Seealso_Errorcode Errorcode
	      | Seealso_Errorname Errorname
	      | Seealso_Errortype Errortype
	      | Seealso_Errortext Errortext
	      | Seealso_Filename Filename
	      | Seealso_Function Function
	      | Seealso_Guibutton Guibutton
	      | Seealso_Guiicon Guiicon
	      | Seealso_Guilabel Guilabel
	      | Seealso_Guimenu Guimenu
	      | Seealso_Guimenuitem Guimenuitem
	      | Seealso_Guisubmenu Guisubmenu
	      | Seealso_Hardware Hardware
	      | Seealso_Interface Interface
	      | Seealso_Keycap Keycap
	      | Seealso_Keycode Keycode
	      | Seealso_Keycombo Keycombo
	      | Seealso_Keysym Keysym
	      | Seealso_Literal Literal
	      | Seealso_Constant Constant
	      | Seealso_Markup Markup
	      | Seealso_Medialabel Medialabel
	      | Seealso_Menuchoice Menuchoice
	      | Seealso_Mousebutton Mousebutton
	      | Seealso_Option Option
	      | Seealso_Optional Optional
	      | Seealso_Parameter Parameter
	      | Seealso_Prompt Prompt
	      | Seealso_Property Property
	      | Seealso_Replaceable Replaceable
	      | Seealso_Returnvalue Returnvalue
	      | Seealso_Sgmltag Sgmltag
	      | Seealso_Structfield Structfield
	      | Seealso_Structname Structname
	      | Seealso_Symbol Symbol
	      | Seealso_Systemitem Systemitem
	      | Seealso_Token Token
	      | Seealso_Type Type
	      | Seealso_Userinput Userinput
	      | Seealso_Varname Varname
	      | Seealso_Anchor Anchor
	      | Seealso_Author Author
	      | Seealso_Authorinitials Authorinitials
	      | Seealso_Corpauthor Corpauthor
	      | Seealso_Modespec Modespec
	      | Seealso_Othercredit Othercredit
	      | Seealso_Productname Productname
	      | Seealso_Productnumber Productnumber
	      | Seealso_Revhistory Revhistory
	      | Seealso_Remark Remark
	      | Seealso_Subscript Subscript
	      | Seealso_Superscript Superscript
	      | Seealso_Inlinegraphic Inlinegraphic
	      | Seealso_Inlinemediaobject Inlinemediaobject
	      deriving (Eq,Show)
data Seealso_Revisionflag = Seealso_Revisionflag_Changed  | 
			    Seealso_Revisionflag_Added  |  Seealso_Revisionflag_Deleted  | 
			    Seealso_Revisionflag_Off
			  deriving (Eq,Show)
data Set = Set Set_Attrs
	       (Maybe (Title,(Maybe Subtitle),(Maybe Titleabbrev)))
	       (Maybe Setinfo) (Maybe Toc) [(Book)] (Maybe Setindex)
	 deriving (Eq,Show)
data Set_Attrs = Set_Attrs
    { setFpi :: (Maybe String)
    , setStatus :: (Maybe String)
    , setId :: (Maybe String)
    , setLang :: (Maybe String)
    , setRemap :: (Maybe String)
    , setXreflabel :: (Maybe String)
    , setRevisionflag :: (Maybe Set_Revisionflag)
    , setArch :: (Maybe String)
    , setCondition :: (Maybe String)
    , setConformance :: (Maybe String)
    , setOs :: (Maybe String)
    , setRevision :: (Maybe String)
    , setSecurity :: (Maybe String)
    , setUserlevel :: (Maybe String)
    , setVendor :: (Maybe String)
    , setRole :: (Maybe String)
    } deriving (Eq,Show)
data Set_Revisionflag = Set_Revisionflag_Changed  | 
			Set_Revisionflag_Added  |  Set_Revisionflag_Deleted  | 
			Set_Revisionflag_Off
		      deriving (Eq,Show)
data Setinfo = Setinfo Setinfo_Attrs
		       [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
	     deriving (Eq,Show)
data Setinfo_Attrs = Setinfo_Attrs
    { setinfoContents :: (Maybe String)
    , setinfoId :: (Maybe String)
    , setinfoLang :: (Maybe String)
    , setinfoRemap :: (Maybe String)
    , setinfoXreflabel :: (Maybe String)
    , setinfoRevisionflag :: (Maybe Setinfo_Revisionflag)
    , setinfoArch :: (Maybe String)
    , setinfoCondition :: (Maybe String)
    , setinfoConformance :: (Maybe String)
    , setinfoOs :: (Maybe String)
    , setinfoRevision :: (Maybe String)
    , setinfoSecurity :: (Maybe String)
    , setinfoUserlevel :: (Maybe String)
    , setinfoVendor :: (Maybe String)
    , setinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Setinfo_Revisionflag = Setinfo_Revisionflag_Changed  | 
			    Setinfo_Revisionflag_Added  |  Setinfo_Revisionflag_Deleted  | 
			    Setinfo_Revisionflag_Off
			  deriving (Eq,Show)
data Book = Book Book_Attrs
		 (Maybe (Title,(Maybe Subtitle),(Maybe Titleabbrev)))
		 (Maybe Bookinfo)
		 [(OneOf14 Dedication Toc Lot Glossary Bibliography Preface Chapter Reference Part Article Appendix Index Setindex Colophon)]
	  deriving (Eq,Show)
data Book_Attrs = Book_Attrs
    { bookFpi :: (Maybe String)
    , bookLabel :: (Maybe String)
    , bookStatus :: (Maybe String)
    , bookId :: (Maybe String)
    , bookLang :: (Maybe String)
    , bookRemap :: (Maybe String)
    , bookXreflabel :: (Maybe String)
    , bookRevisionflag :: (Maybe Book_Revisionflag)
    , bookArch :: (Maybe String)
    , bookCondition :: (Maybe String)
    , bookConformance :: (Maybe String)
    , bookOs :: (Maybe String)
    , bookRevision :: (Maybe String)
    , bookSecurity :: (Maybe String)
    , bookUserlevel :: (Maybe String)
    , bookVendor :: (Maybe String)
    , bookRole :: (Maybe String)
    } deriving (Eq,Show)
data Book_Revisionflag = Book_Revisionflag_Changed  | 
			 Book_Revisionflag_Added  |  Book_Revisionflag_Deleted  | 
			 Book_Revisionflag_Off
		       deriving (Eq,Show)
data Bookinfo = Bookinfo Bookinfo_Attrs
			 [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
	      deriving (Eq,Show)
data Bookinfo_Attrs = Bookinfo_Attrs
    { bookinfoContents :: (Maybe String)
    , bookinfoId :: (Maybe String)
    , bookinfoLang :: (Maybe String)
    , bookinfoRemap :: (Maybe String)
    , bookinfoXreflabel :: (Maybe String)
    , bookinfoRevisionflag :: (Maybe Bookinfo_Revisionflag)
    , bookinfoArch :: (Maybe String)
    , bookinfoCondition :: (Maybe String)
    , bookinfoConformance :: (Maybe String)
    , bookinfoOs :: (Maybe String)
    , bookinfoRevision :: (Maybe String)
    , bookinfoSecurity :: (Maybe String)
    , bookinfoUserlevel :: (Maybe String)
    , bookinfoVendor :: (Maybe String)
    , bookinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Bookinfo_Revisionflag = Bookinfo_Revisionflag_Changed  | 
			     Bookinfo_Revisionflag_Added  |  Bookinfo_Revisionflag_Deleted  | 
			     Bookinfo_Revisionflag_Off
			   deriving (Eq,Show)
data Dedication = Dedication Dedication_Attrs
			     (Maybe (Title,(Maybe Subtitle),(Maybe Titleabbrev)))
			     [(OneOf24 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Formalpara Para Simpara Blockquote Indexterm Beginpage)]
		deriving (Eq,Show)
data Dedication_Attrs = Dedication_Attrs
    { dedicationStatus :: (Maybe String)
    , dedicationId :: (Maybe String)
    , dedicationLang :: (Maybe String)
    , dedicationRemap :: (Maybe String)
    , dedicationXreflabel :: (Maybe String)
    , dedicationRevisionflag :: (Maybe Dedication_Revisionflag)
    , dedicationArch :: (Maybe String)
    , dedicationCondition :: (Maybe String)
    , dedicationConformance :: (Maybe String)
    , dedicationOs :: (Maybe String)
    , dedicationRevision :: (Maybe String)
    , dedicationSecurity :: (Maybe String)
    , dedicationUserlevel :: (Maybe String)
    , dedicationVendor :: (Maybe String)
    , dedicationRole :: (Maybe String)
    } deriving (Eq,Show)
data Dedication_Revisionflag = Dedication_Revisionflag_Changed  | 
			       Dedication_Revisionflag_Added  |  Dedication_Revisionflag_Deleted
			        |  Dedication_Revisionflag_Off
			     deriving (Eq,Show)
data Colophon = Colophon Colophon_Attrs
			 (Maybe (Title,(Maybe Subtitle),(Maybe Titleabbrev)))
			 [(OneOf22 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Formalpara Para Simpara Blockquote)]
	      deriving (Eq,Show)
data Colophon_Attrs = Colophon_Attrs
    { colophonStatus :: (Maybe String)
    , colophonId :: (Maybe String)
    , colophonLang :: (Maybe String)
    , colophonRemap :: (Maybe String)
    , colophonXreflabel :: (Maybe String)
    , colophonRevisionflag :: (Maybe Colophon_Revisionflag)
    , colophonArch :: (Maybe String)
    , colophonCondition :: (Maybe String)
    , colophonConformance :: (Maybe String)
    , colophonOs :: (Maybe String)
    , colophonRevision :: (Maybe String)
    , colophonSecurity :: (Maybe String)
    , colophonUserlevel :: (Maybe String)
    , colophonVendor :: (Maybe String)
    , colophonRole :: (Maybe String)
    } deriving (Eq,Show)
data Colophon_Revisionflag = Colophon_Revisionflag_Changed  | 
			     Colophon_Revisionflag_Added  |  Colophon_Revisionflag_Deleted  | 
			     Colophon_Revisionflag_Off
			   deriving (Eq,Show)
data Toc = Toc Toc_Attrs (Maybe Beginpage)
	       (Maybe (Title,(Maybe Subtitle),(Maybe Titleabbrev))) [Tocfront]
	       [(OneOf2 Tocpart Tocchap)] [Tocback]
	 deriving (Eq,Show)
data Toc_Attrs = Toc_Attrs
    { tocPagenum :: (Maybe String)
    , tocId :: (Maybe String)
    , tocLang :: (Maybe String)
    , tocRemap :: (Maybe String)
    , tocXreflabel :: (Maybe String)
    , tocRevisionflag :: (Maybe Toc_Revisionflag)
    , tocArch :: (Maybe String)
    , tocCondition :: (Maybe String)
    , tocConformance :: (Maybe String)
    , tocOs :: (Maybe String)
    , tocRevision :: (Maybe String)
    , tocSecurity :: (Maybe String)
    , tocUserlevel :: (Maybe String)
    , tocVendor :: (Maybe String)
    , tocRole :: (Maybe String)
    } deriving (Eq,Show)
data Toc_Revisionflag = Toc_Revisionflag_Changed  | 
			Toc_Revisionflag_Added  |  Toc_Revisionflag_Deleted  | 
			Toc_Revisionflag_Off
		      deriving (Eq,Show)
data Tocfront = Tocfront Tocfront_Attrs [Tocfront_]
	      deriving (Eq,Show)
data Tocfront_Attrs = Tocfront_Attrs
    { tocfrontLabel :: (Maybe String)
    , tocfrontLinkend :: (Maybe String)
    , tocfrontPagenum :: (Maybe String)
    , tocfrontId :: (Maybe String)
    , tocfrontLang :: (Maybe String)
    , tocfrontRemap :: (Maybe String)
    , tocfrontXreflabel :: (Maybe String)
    , tocfrontRevisionflag :: (Maybe Tocfront_Revisionflag)
    , tocfrontArch :: (Maybe String)
    , tocfrontCondition :: (Maybe String)
    , tocfrontConformance :: (Maybe String)
    , tocfrontOs :: (Maybe String)
    , tocfrontRevision :: (Maybe String)
    , tocfrontSecurity :: (Maybe String)
    , tocfrontUserlevel :: (Maybe String)
    , tocfrontVendor :: (Maybe String)
    , tocfrontRole :: (Maybe String)
    } deriving (Eq,Show)
data Tocfront_ = Tocfront_Str String
	       | Tocfront_Footnoteref Footnoteref
	       | Tocfront_Xref Xref
	       | Tocfront_Abbrev Abbrev
	       | Tocfront_Acronym Acronym
	       | Tocfront_Citation Citation
	       | Tocfront_Citerefentry Citerefentry
	       | Tocfront_Citetitle Citetitle
	       | Tocfront_Emphasis Emphasis
	       | Tocfront_Firstterm Firstterm
	       | Tocfront_Foreignphrase Foreignphrase
	       | Tocfront_Glossterm Glossterm
	       | Tocfront_Footnote Footnote
	       | Tocfront_Phrase Phrase
	       | Tocfront_Quote Quote
	       | Tocfront_Trademark Trademark
	       | Tocfront_Wordasword Wordasword
	       | Tocfront_Personname Personname
	       | Tocfront_Link Link
	       | Tocfront_Olink Olink
	       | Tocfront_Ulink Ulink
	       | Tocfront_Action Action
	       | Tocfront_Application Application
	       | Tocfront_Classname Classname
	       | Tocfront_Methodname Methodname
	       | Tocfront_Interfacename Interfacename
	       | Tocfront_Exceptionname Exceptionname
	       | Tocfront_Ooclass Ooclass
	       | Tocfront_Oointerface Oointerface
	       | Tocfront_Ooexception Ooexception
	       | Tocfront_Command Command
	       | Tocfront_Computeroutput Computeroutput
	       | Tocfront_Database Database
	       | Tocfront_Email Email
	       | Tocfront_Envar Envar
	       | Tocfront_Errorcode Errorcode
	       | Tocfront_Errorname Errorname
	       | Tocfront_Errortype Errortype
	       | Tocfront_Errortext Errortext
	       | Tocfront_Filename Filename
	       | Tocfront_Function Function
	       | Tocfront_Guibutton Guibutton
	       | Tocfront_Guiicon Guiicon
	       | Tocfront_Guilabel Guilabel
	       | Tocfront_Guimenu Guimenu
	       | Tocfront_Guimenuitem Guimenuitem
	       | Tocfront_Guisubmenu Guisubmenu
	       | Tocfront_Hardware Hardware
	       | Tocfront_Interface Interface
	       | Tocfront_Keycap Keycap
	       | Tocfront_Keycode Keycode
	       | Tocfront_Keycombo Keycombo
	       | Tocfront_Keysym Keysym
	       | Tocfront_Literal Literal
	       | Tocfront_Constant Constant
	       | Tocfront_Markup Markup
	       | Tocfront_Medialabel Medialabel
	       | Tocfront_Menuchoice Menuchoice
	       | Tocfront_Mousebutton Mousebutton
	       | Tocfront_Option Option
	       | Tocfront_Optional Optional
	       | Tocfront_Parameter Parameter
	       | Tocfront_Prompt Prompt
	       | Tocfront_Property Property
	       | Tocfront_Replaceable Replaceable
	       | Tocfront_Returnvalue Returnvalue
	       | Tocfront_Sgmltag Sgmltag
	       | Tocfront_Structfield Structfield
	       | Tocfront_Structname Structname
	       | Tocfront_Symbol Symbol
	       | Tocfront_Systemitem Systemitem
	       | Tocfront_Token Token
	       | Tocfront_Type Type
	       | Tocfront_Userinput Userinput
	       | Tocfront_Varname Varname
	       | Tocfront_Anchor Anchor
	       | Tocfront_Author Author
	       | Tocfront_Authorinitials Authorinitials
	       | Tocfront_Corpauthor Corpauthor
	       | Tocfront_Modespec Modespec
	       | Tocfront_Othercredit Othercredit
	       | Tocfront_Productname Productname
	       | Tocfront_Productnumber Productnumber
	       | Tocfront_Revhistory Revhistory
	       | Tocfront_Remark Remark
	       | Tocfront_Subscript Subscript
	       | Tocfront_Superscript Superscript
	       | Tocfront_Inlinegraphic Inlinegraphic
	       | Tocfront_Inlinemediaobject Inlinemediaobject
	       | Tocfront_Inlineequation Inlineequation
	       | Tocfront_Synopsis Synopsis
	       | Tocfront_Cmdsynopsis Cmdsynopsis
	       | Tocfront_Funcsynopsis Funcsynopsis
	       | Tocfront_Classsynopsis Classsynopsis
	       | Tocfront_Fieldsynopsis Fieldsynopsis
	       | Tocfront_Constructorsynopsis Constructorsynopsis
	       | Tocfront_Destructorsynopsis Destructorsynopsis
	       | Tocfront_Methodsynopsis Methodsynopsis
	       | Tocfront_Indexterm Indexterm
	       | Tocfront_Beginpage Beginpage
	       deriving (Eq,Show)
data Tocfront_Revisionflag = Tocfront_Revisionflag_Changed  | 
			     Tocfront_Revisionflag_Added  |  Tocfront_Revisionflag_Deleted  | 
			     Tocfront_Revisionflag_Off
			   deriving (Eq,Show)
data Tocentry = Tocentry Tocentry_Attrs [Tocentry_]
	      deriving (Eq,Show)
data Tocentry_Attrs = Tocentry_Attrs
    { tocentryLinkend :: (Maybe String)
    , tocentryPagenum :: (Maybe String)
    , tocentryId :: (Maybe String)
    , tocentryLang :: (Maybe String)
    , tocentryRemap :: (Maybe String)
    , tocentryXreflabel :: (Maybe String)
    , tocentryRevisionflag :: (Maybe Tocentry_Revisionflag)
    , tocentryArch :: (Maybe String)
    , tocentryCondition :: (Maybe String)
    , tocentryConformance :: (Maybe String)
    , tocentryOs :: (Maybe String)
    , tocentryRevision :: (Maybe String)
    , tocentrySecurity :: (Maybe String)
    , tocentryUserlevel :: (Maybe String)
    , tocentryVendor :: (Maybe String)
    , tocentryRole :: (Maybe String)
    } deriving (Eq,Show)
data Tocentry_ = Tocentry_Str String
	       | Tocentry_Footnoteref Footnoteref
	       | Tocentry_Xref Xref
	       | Tocentry_Abbrev Abbrev
	       | Tocentry_Acronym Acronym
	       | Tocentry_Citation Citation
	       | Tocentry_Citerefentry Citerefentry
	       | Tocentry_Citetitle Citetitle
	       | Tocentry_Emphasis Emphasis
	       | Tocentry_Firstterm Firstterm
	       | Tocentry_Foreignphrase Foreignphrase
	       | Tocentry_Glossterm Glossterm
	       | Tocentry_Footnote Footnote
	       | Tocentry_Phrase Phrase
	       | Tocentry_Quote Quote
	       | Tocentry_Trademark Trademark
	       | Tocentry_Wordasword Wordasword
	       | Tocentry_Personname Personname
	       | Tocentry_Link Link
	       | Tocentry_Olink Olink
	       | Tocentry_Ulink Ulink
	       | Tocentry_Action Action
	       | Tocentry_Application Application
	       | Tocentry_Classname Classname
	       | Tocentry_Methodname Methodname
	       | Tocentry_Interfacename Interfacename
	       | Tocentry_Exceptionname Exceptionname
	       | Tocentry_Ooclass Ooclass
	       | Tocentry_Oointerface Oointerface
	       | Tocentry_Ooexception Ooexception
	       | Tocentry_Command Command
	       | Tocentry_Computeroutput Computeroutput
	       | Tocentry_Database Database
	       | Tocentry_Email Email
	       | Tocentry_Envar Envar
	       | Tocentry_Errorcode Errorcode
	       | Tocentry_Errorname Errorname
	       | Tocentry_Errortype Errortype
	       | Tocentry_Errortext Errortext
	       | Tocentry_Filename Filename
	       | Tocentry_Function Function
	       | Tocentry_Guibutton Guibutton
	       | Tocentry_Guiicon Guiicon
	       | Tocentry_Guilabel Guilabel
	       | Tocentry_Guimenu Guimenu
	       | Tocentry_Guimenuitem Guimenuitem
	       | Tocentry_Guisubmenu Guisubmenu
	       | Tocentry_Hardware Hardware
	       | Tocentry_Interface Interface
	       | Tocentry_Keycap Keycap
	       | Tocentry_Keycode Keycode
	       | Tocentry_Keycombo Keycombo
	       | Tocentry_Keysym Keysym
	       | Tocentry_Literal Literal
	       | Tocentry_Constant Constant
	       | Tocentry_Markup Markup
	       | Tocentry_Medialabel Medialabel
	       | Tocentry_Menuchoice Menuchoice
	       | Tocentry_Mousebutton Mousebutton
	       | Tocentry_Option Option
	       | Tocentry_Optional Optional
	       | Tocentry_Parameter Parameter
	       | Tocentry_Prompt Prompt
	       | Tocentry_Property Property
	       | Tocentry_Replaceable Replaceable
	       | Tocentry_Returnvalue Returnvalue
	       | Tocentry_Sgmltag Sgmltag
	       | Tocentry_Structfield Structfield
	       | Tocentry_Structname Structname
	       | Tocentry_Symbol Symbol
	       | Tocentry_Systemitem Systemitem
	       | Tocentry_Token Token
	       | Tocentry_Type Type
	       | Tocentry_Userinput Userinput
	       | Tocentry_Varname Varname
	       | Tocentry_Anchor Anchor
	       | Tocentry_Author Author
	       | Tocentry_Authorinitials Authorinitials
	       | Tocentry_Corpauthor Corpauthor
	       | Tocentry_Modespec Modespec
	       | Tocentry_Othercredit Othercredit
	       | Tocentry_Productname Productname
	       | Tocentry_Productnumber Productnumber
	       | Tocentry_Revhistory Revhistory
	       | Tocentry_Remark Remark
	       | Tocentry_Subscript Subscript
	       | Tocentry_Superscript Superscript
	       | Tocentry_Inlinegraphic Inlinegraphic
	       | Tocentry_Inlinemediaobject Inlinemediaobject
	       | Tocentry_Inlineequation Inlineequation
	       | Tocentry_Synopsis Synopsis
	       | Tocentry_Cmdsynopsis Cmdsynopsis
	       | Tocentry_Funcsynopsis Funcsynopsis
	       | Tocentry_Classsynopsis Classsynopsis
	       | Tocentry_Fieldsynopsis Fieldsynopsis
	       | Tocentry_Constructorsynopsis Constructorsynopsis
	       | Tocentry_Destructorsynopsis Destructorsynopsis
	       | Tocentry_Methodsynopsis Methodsynopsis
	       | Tocentry_Indexterm Indexterm
	       | Tocentry_Beginpage Beginpage
	       deriving (Eq,Show)
data Tocentry_Revisionflag = Tocentry_Revisionflag_Changed  | 
			     Tocentry_Revisionflag_Added  |  Tocentry_Revisionflag_Deleted  | 
			     Tocentry_Revisionflag_Off
			   deriving (Eq,Show)
data Tocpart = Tocpart Tocpart_Attrs [Tocentry] [Tocchap]
	     deriving (Eq,Show)
data Tocpart_Attrs = Tocpart_Attrs
    { tocpartId :: (Maybe String)
    , tocpartLang :: (Maybe String)
    , tocpartRemap :: (Maybe String)
    , tocpartXreflabel :: (Maybe String)
    , tocpartRevisionflag :: (Maybe Tocpart_Revisionflag)
    , tocpartArch :: (Maybe String)
    , tocpartCondition :: (Maybe String)
    , tocpartConformance :: (Maybe String)
    , tocpartOs :: (Maybe String)
    , tocpartRevision :: (Maybe String)
    , tocpartSecurity :: (Maybe String)
    , tocpartUserlevel :: (Maybe String)
    , tocpartVendor :: (Maybe String)
    , tocpartRole :: (Maybe String)
    } deriving (Eq,Show)
data Tocpart_Revisionflag = Tocpart_Revisionflag_Changed  | 
			    Tocpart_Revisionflag_Added  |  Tocpart_Revisionflag_Deleted  | 
			    Tocpart_Revisionflag_Off
			  deriving (Eq,Show)
data Tocchap = Tocchap Tocchap_Attrs [Tocentry] [Toclevel1]
	     deriving (Eq,Show)
data Tocchap_Attrs = Tocchap_Attrs
    { tocchapLabel :: (Maybe String)
    , tocchapId :: (Maybe String)
    , tocchapLang :: (Maybe String)
    , tocchapRemap :: (Maybe String)
    , tocchapXreflabel :: (Maybe String)
    , tocchapRevisionflag :: (Maybe Tocchap_Revisionflag)
    , tocchapArch :: (Maybe String)
    , tocchapCondition :: (Maybe String)
    , tocchapConformance :: (Maybe String)
    , tocchapOs :: (Maybe String)
    , tocchapRevision :: (Maybe String)
    , tocchapSecurity :: (Maybe String)
    , tocchapUserlevel :: (Maybe String)
    , tocchapVendor :: (Maybe String)
    , tocchapRole :: (Maybe String)
    } deriving (Eq,Show)
data Tocchap_Revisionflag = Tocchap_Revisionflag_Changed  | 
			    Tocchap_Revisionflag_Added  |  Tocchap_Revisionflag_Deleted  | 
			    Tocchap_Revisionflag_Off
			  deriving (Eq,Show)
data Toclevel1 = Toclevel1 Toclevel1_Attrs [Tocentry] [Toclevel2]
	       deriving (Eq,Show)
data Toclevel1_Attrs = Toclevel1_Attrs
    { toclevel1Id :: (Maybe String)
    , toclevel1Lang :: (Maybe String)
    , toclevel1Remap :: (Maybe String)
    , toclevel1Xreflabel :: (Maybe String)
    , toclevel1Revisionflag :: (Maybe Toclevel1_Revisionflag)
    , toclevel1Arch :: (Maybe String)
    , toclevel1Condition :: (Maybe String)
    , toclevel1Conformance :: (Maybe String)
    , toclevel1Os :: (Maybe String)
    , toclevel1Revision :: (Maybe String)
    , toclevel1Security :: (Maybe String)
    , toclevel1Userlevel :: (Maybe String)
    , toclevel1Vendor :: (Maybe String)
    , toclevel1Role :: (Maybe String)
    } deriving (Eq,Show)
data Toclevel1_Revisionflag = Toclevel1_Revisionflag_Changed  | 
			      Toclevel1_Revisionflag_Added  |  Toclevel1_Revisionflag_Deleted  | 
			      Toclevel1_Revisionflag_Off
			    deriving (Eq,Show)
data Toclevel2 = Toclevel2 Toclevel2_Attrs [Tocentry] [Toclevel3]
	       deriving (Eq,Show)
data Toclevel2_Attrs = Toclevel2_Attrs
    { toclevel2Id :: (Maybe String)
    , toclevel2Lang :: (Maybe String)
    , toclevel2Remap :: (Maybe String)
    , toclevel2Xreflabel :: (Maybe String)
    , toclevel2Revisionflag :: (Maybe Toclevel2_Revisionflag)
    , toclevel2Arch :: (Maybe String)
    , toclevel2Condition :: (Maybe String)
    , toclevel2Conformance :: (Maybe String)
    , toclevel2Os :: (Maybe String)
    , toclevel2Revision :: (Maybe String)
    , toclevel2Security :: (Maybe String)
    , toclevel2Userlevel :: (Maybe String)
    , toclevel2Vendor :: (Maybe String)
    , toclevel2Role :: (Maybe String)
    } deriving (Eq,Show)
data Toclevel2_Revisionflag = Toclevel2_Revisionflag_Changed  | 
			      Toclevel2_Revisionflag_Added  |  Toclevel2_Revisionflag_Deleted  | 
			      Toclevel2_Revisionflag_Off
			    deriving (Eq,Show)
data Toclevel3 = Toclevel3 Toclevel3_Attrs [Tocentry] [Toclevel4]
	       deriving (Eq,Show)
data Toclevel3_Attrs = Toclevel3_Attrs
    { toclevel3Id :: (Maybe String)
    , toclevel3Lang :: (Maybe String)
    , toclevel3Remap :: (Maybe String)
    , toclevel3Xreflabel :: (Maybe String)
    , toclevel3Revisionflag :: (Maybe Toclevel3_Revisionflag)
    , toclevel3Arch :: (Maybe String)
    , toclevel3Condition :: (Maybe String)
    , toclevel3Conformance :: (Maybe String)
    , toclevel3Os :: (Maybe String)
    , toclevel3Revision :: (Maybe String)
    , toclevel3Security :: (Maybe String)
    , toclevel3Userlevel :: (Maybe String)
    , toclevel3Vendor :: (Maybe String)
    , toclevel3Role :: (Maybe String)
    } deriving (Eq,Show)
data Toclevel3_Revisionflag = Toclevel3_Revisionflag_Changed  | 
			      Toclevel3_Revisionflag_Added  |  Toclevel3_Revisionflag_Deleted  | 
			      Toclevel3_Revisionflag_Off
			    deriving (Eq,Show)
data Toclevel4 = Toclevel4 Toclevel4_Attrs [Tocentry] [Toclevel5]
	       deriving (Eq,Show)
data Toclevel4_Attrs = Toclevel4_Attrs
    { toclevel4Id :: (Maybe String)
    , toclevel4Lang :: (Maybe String)
    , toclevel4Remap :: (Maybe String)
    , toclevel4Xreflabel :: (Maybe String)
    , toclevel4Revisionflag :: (Maybe Toclevel4_Revisionflag)
    , toclevel4Arch :: (Maybe String)
    , toclevel4Condition :: (Maybe String)
    , toclevel4Conformance :: (Maybe String)
    , toclevel4Os :: (Maybe String)
    , toclevel4Revision :: (Maybe String)
    , toclevel4Security :: (Maybe String)
    , toclevel4Userlevel :: (Maybe String)
    , toclevel4Vendor :: (Maybe String)
    , toclevel4Role :: (Maybe String)
    } deriving (Eq,Show)
data Toclevel4_Revisionflag = Toclevel4_Revisionflag_Changed  | 
			      Toclevel4_Revisionflag_Added  |  Toclevel4_Revisionflag_Deleted  | 
			      Toclevel4_Revisionflag_Off
			    deriving (Eq,Show)
data Toclevel5 = Toclevel5 Toclevel5_Attrs [Tocentry]
	       deriving (Eq,Show)
data Toclevel5_Attrs = Toclevel5_Attrs
    { toclevel5Id :: (Maybe String)
    , toclevel5Lang :: (Maybe String)
    , toclevel5Remap :: (Maybe String)
    , toclevel5Xreflabel :: (Maybe String)
    , toclevel5Revisionflag :: (Maybe Toclevel5_Revisionflag)
    , toclevel5Arch :: (Maybe String)
    , toclevel5Condition :: (Maybe String)
    , toclevel5Conformance :: (Maybe String)
    , toclevel5Os :: (Maybe String)
    , toclevel5Revision :: (Maybe String)
    , toclevel5Security :: (Maybe String)
    , toclevel5Userlevel :: (Maybe String)
    , toclevel5Vendor :: (Maybe String)
    , toclevel5Role :: (Maybe String)
    } deriving (Eq,Show)
data Toclevel5_Revisionflag = Toclevel5_Revisionflag_Changed  | 
			      Toclevel5_Revisionflag_Added  |  Toclevel5_Revisionflag_Deleted  | 
			      Toclevel5_Revisionflag_Off
			    deriving (Eq,Show)
data Tocback = Tocback Tocback_Attrs [Tocback_]
	     deriving (Eq,Show)
data Tocback_Attrs = Tocback_Attrs
    { tocbackLabel :: (Maybe String)
    , tocbackLinkend :: (Maybe String)
    , tocbackPagenum :: (Maybe String)
    , tocbackId :: (Maybe String)
    , tocbackLang :: (Maybe String)
    , tocbackRemap :: (Maybe String)
    , tocbackXreflabel :: (Maybe String)
    , tocbackRevisionflag :: (Maybe Tocback_Revisionflag)
    , tocbackArch :: (Maybe String)
    , tocbackCondition :: (Maybe String)
    , tocbackConformance :: (Maybe String)
    , tocbackOs :: (Maybe String)
    , tocbackRevision :: (Maybe String)
    , tocbackSecurity :: (Maybe String)
    , tocbackUserlevel :: (Maybe String)
    , tocbackVendor :: (Maybe String)
    , tocbackRole :: (Maybe String)
    } deriving (Eq,Show)
data Tocback_ = Tocback_Str String
	      | Tocback_Footnoteref Footnoteref
	      | Tocback_Xref Xref
	      | Tocback_Abbrev Abbrev
	      | Tocback_Acronym Acronym
	      | Tocback_Citation Citation
	      | Tocback_Citerefentry Citerefentry
	      | Tocback_Citetitle Citetitle
	      | Tocback_Emphasis Emphasis
	      | Tocback_Firstterm Firstterm
	      | Tocback_Foreignphrase Foreignphrase
	      | Tocback_Glossterm Glossterm
	      | Tocback_Footnote Footnote
	      | Tocback_Phrase Phrase
	      | Tocback_Quote Quote
	      | Tocback_Trademark Trademark
	      | Tocback_Wordasword Wordasword
	      | Tocback_Personname Personname
	      | Tocback_Link Link
	      | Tocback_Olink Olink
	      | Tocback_Ulink Ulink
	      | Tocback_Action Action
	      | Tocback_Application Application
	      | Tocback_Classname Classname
	      | Tocback_Methodname Methodname
	      | Tocback_Interfacename Interfacename
	      | Tocback_Exceptionname Exceptionname
	      | Tocback_Ooclass Ooclass
	      | Tocback_Oointerface Oointerface
	      | Tocback_Ooexception Ooexception
	      | Tocback_Command Command
	      | Tocback_Computeroutput Computeroutput
	      | Tocback_Database Database
	      | Tocback_Email Email
	      | Tocback_Envar Envar
	      | Tocback_Errorcode Errorcode
	      | Tocback_Errorname Errorname
	      | Tocback_Errortype Errortype
	      | Tocback_Errortext Errortext
	      | Tocback_Filename Filename
	      | Tocback_Function Function
	      | Tocback_Guibutton Guibutton
	      | Tocback_Guiicon Guiicon
	      | Tocback_Guilabel Guilabel
	      | Tocback_Guimenu Guimenu
	      | Tocback_Guimenuitem Guimenuitem
	      | Tocback_Guisubmenu Guisubmenu
	      | Tocback_Hardware Hardware
	      | Tocback_Interface Interface
	      | Tocback_Keycap Keycap
	      | Tocback_Keycode Keycode
	      | Tocback_Keycombo Keycombo
	      | Tocback_Keysym Keysym
	      | Tocback_Literal Literal
	      | Tocback_Constant Constant
	      | Tocback_Markup Markup
	      | Tocback_Medialabel Medialabel
	      | Tocback_Menuchoice Menuchoice
	      | Tocback_Mousebutton Mousebutton
	      | Tocback_Option Option
	      | Tocback_Optional Optional
	      | Tocback_Parameter Parameter
	      | Tocback_Prompt Prompt
	      | Tocback_Property Property
	      | Tocback_Replaceable Replaceable
	      | Tocback_Returnvalue Returnvalue
	      | Tocback_Sgmltag Sgmltag
	      | Tocback_Structfield Structfield
	      | Tocback_Structname Structname
	      | Tocback_Symbol Symbol
	      | Tocback_Systemitem Systemitem
	      | Tocback_Token Token
	      | Tocback_Type Type
	      | Tocback_Userinput Userinput
	      | Tocback_Varname Varname
	      | Tocback_Anchor Anchor
	      | Tocback_Author Author
	      | Tocback_Authorinitials Authorinitials
	      | Tocback_Corpauthor Corpauthor
	      | Tocback_Modespec Modespec
	      | Tocback_Othercredit Othercredit
	      | Tocback_Productname Productname
	      | Tocback_Productnumber Productnumber
	      | Tocback_Revhistory Revhistory
	      | Tocback_Remark Remark
	      | Tocback_Subscript Subscript
	      | Tocback_Superscript Superscript
	      | Tocback_Inlinegraphic Inlinegraphic
	      | Tocback_Inlinemediaobject Inlinemediaobject
	      | Tocback_Inlineequation Inlineequation
	      | Tocback_Synopsis Synopsis
	      | Tocback_Cmdsynopsis Cmdsynopsis
	      | Tocback_Funcsynopsis Funcsynopsis
	      | Tocback_Classsynopsis Classsynopsis
	      | Tocback_Fieldsynopsis Fieldsynopsis
	      | Tocback_Constructorsynopsis Constructorsynopsis
	      | Tocback_Destructorsynopsis Destructorsynopsis
	      | Tocback_Methodsynopsis Methodsynopsis
	      | Tocback_Indexterm Indexterm
	      | Tocback_Beginpage Beginpage
	      deriving (Eq,Show)
data Tocback_Revisionflag = Tocback_Revisionflag_Changed  | 
			    Tocback_Revisionflag_Added  |  Tocback_Revisionflag_Deleted  | 
			    Tocback_Revisionflag_Off
			  deriving (Eq,Show)
data Lot = Lot Lot_Attrs (Maybe Beginpage)
	       (Maybe (Title,(Maybe Subtitle),(Maybe Titleabbrev))) [Lotentry]
	 deriving (Eq,Show)
data Lot_Attrs = Lot_Attrs
    { lotLabel :: (Maybe String)
    , lotId :: (Maybe String)
    , lotLang :: (Maybe String)
    , lotRemap :: (Maybe String)
    , lotXreflabel :: (Maybe String)
    , lotRevisionflag :: (Maybe Lot_Revisionflag)
    , lotArch :: (Maybe String)
    , lotCondition :: (Maybe String)
    , lotConformance :: (Maybe String)
    , lotOs :: (Maybe String)
    , lotRevision :: (Maybe String)
    , lotSecurity :: (Maybe String)
    , lotUserlevel :: (Maybe String)
    , lotVendor :: (Maybe String)
    , lotRole :: (Maybe String)
    } deriving (Eq,Show)
data Lot_Revisionflag = Lot_Revisionflag_Changed  | 
			Lot_Revisionflag_Added  |  Lot_Revisionflag_Deleted  | 
			Lot_Revisionflag_Off
		      deriving (Eq,Show)
data Lotentry = Lotentry Lotentry_Attrs [Lotentry_]
	      deriving (Eq,Show)
data Lotentry_Attrs = Lotentry_Attrs
    { lotentryLinkend :: (Maybe String)
    , lotentryPagenum :: (Maybe String)
    , lotentrySrccredit :: (Maybe String)
    , lotentryId :: (Maybe String)
    , lotentryLang :: (Maybe String)
    , lotentryRemap :: (Maybe String)
    , lotentryXreflabel :: (Maybe String)
    , lotentryRevisionflag :: (Maybe Lotentry_Revisionflag)
    , lotentryArch :: (Maybe String)
    , lotentryCondition :: (Maybe String)
    , lotentryConformance :: (Maybe String)
    , lotentryOs :: (Maybe String)
    , lotentryRevision :: (Maybe String)
    , lotentrySecurity :: (Maybe String)
    , lotentryUserlevel :: (Maybe String)
    , lotentryVendor :: (Maybe String)
    , lotentryRole :: (Maybe String)
    } deriving (Eq,Show)
data Lotentry_ = Lotentry_Str String
	       | Lotentry_Footnoteref Footnoteref
	       | Lotentry_Xref Xref
	       | Lotentry_Abbrev Abbrev
	       | Lotentry_Acronym Acronym
	       | Lotentry_Citation Citation
	       | Lotentry_Citerefentry Citerefentry
	       | Lotentry_Citetitle Citetitle
	       | Lotentry_Emphasis Emphasis
	       | Lotentry_Firstterm Firstterm
	       | Lotentry_Foreignphrase Foreignphrase
	       | Lotentry_Glossterm Glossterm
	       | Lotentry_Footnote Footnote
	       | Lotentry_Phrase Phrase
	       | Lotentry_Quote Quote
	       | Lotentry_Trademark Trademark
	       | Lotentry_Wordasword Wordasword
	       | Lotentry_Personname Personname
	       | Lotentry_Link Link
	       | Lotentry_Olink Olink
	       | Lotentry_Ulink Ulink
	       | Lotentry_Action Action
	       | Lotentry_Application Application
	       | Lotentry_Classname Classname
	       | Lotentry_Methodname Methodname
	       | Lotentry_Interfacename Interfacename
	       | Lotentry_Exceptionname Exceptionname
	       | Lotentry_Ooclass Ooclass
	       | Lotentry_Oointerface Oointerface
	       | Lotentry_Ooexception Ooexception
	       | Lotentry_Command Command
	       | Lotentry_Computeroutput Computeroutput
	       | Lotentry_Database Database
	       | Lotentry_Email Email
	       | Lotentry_Envar Envar
	       | Lotentry_Errorcode Errorcode
	       | Lotentry_Errorname Errorname
	       | Lotentry_Errortype Errortype
	       | Lotentry_Errortext Errortext
	       | Lotentry_Filename Filename
	       | Lotentry_Function Function
	       | Lotentry_Guibutton Guibutton
	       | Lotentry_Guiicon Guiicon
	       | Lotentry_Guilabel Guilabel
	       | Lotentry_Guimenu Guimenu
	       | Lotentry_Guimenuitem Guimenuitem
	       | Lotentry_Guisubmenu Guisubmenu
	       | Lotentry_Hardware Hardware
	       | Lotentry_Interface Interface
	       | Lotentry_Keycap Keycap
	       | Lotentry_Keycode Keycode
	       | Lotentry_Keycombo Keycombo
	       | Lotentry_Keysym Keysym
	       | Lotentry_Literal Literal
	       | Lotentry_Constant Constant
	       | Lotentry_Markup Markup
	       | Lotentry_Medialabel Medialabel
	       | Lotentry_Menuchoice Menuchoice
	       | Lotentry_Mousebutton Mousebutton
	       | Lotentry_Option Option
	       | Lotentry_Optional Optional
	       | Lotentry_Parameter Parameter
	       | Lotentry_Prompt Prompt
	       | Lotentry_Property Property
	       | Lotentry_Replaceable Replaceable
	       | Lotentry_Returnvalue Returnvalue
	       | Lotentry_Sgmltag Sgmltag
	       | Lotentry_Structfield Structfield
	       | Lotentry_Structname Structname
	       | Lotentry_Symbol Symbol
	       | Lotentry_Systemitem Systemitem
	       | Lotentry_Token Token
	       | Lotentry_Type Type
	       | Lotentry_Userinput Userinput
	       | Lotentry_Varname Varname
	       | Lotentry_Anchor Anchor
	       | Lotentry_Author Author
	       | Lotentry_Authorinitials Authorinitials
	       | Lotentry_Corpauthor Corpauthor
	       | Lotentry_Modespec Modespec
	       | Lotentry_Othercredit Othercredit
	       | Lotentry_Productname Productname
	       | Lotentry_Productnumber Productnumber
	       | Lotentry_Revhistory Revhistory
	       | Lotentry_Remark Remark
	       | Lotentry_Subscript Subscript
	       | Lotentry_Superscript Superscript
	       | Lotentry_Inlinegraphic Inlinegraphic
	       | Lotentry_Inlinemediaobject Inlinemediaobject
	       | Lotentry_Inlineequation Inlineequation
	       | Lotentry_Synopsis Synopsis
	       | Lotentry_Cmdsynopsis Cmdsynopsis
	       | Lotentry_Funcsynopsis Funcsynopsis
	       | Lotentry_Classsynopsis Classsynopsis
	       | Lotentry_Fieldsynopsis Fieldsynopsis
	       | Lotentry_Constructorsynopsis Constructorsynopsis
	       | Lotentry_Destructorsynopsis Destructorsynopsis
	       | Lotentry_Methodsynopsis Methodsynopsis
	       | Lotentry_Indexterm Indexterm
	       | Lotentry_Beginpage Beginpage
	       deriving (Eq,Show)
data Lotentry_Revisionflag = Lotentry_Revisionflag_Changed  | 
			     Lotentry_Revisionflag_Added  |  Lotentry_Revisionflag_Deleted  | 
			     Lotentry_Revisionflag_Off
			   deriving (Eq,Show)
data Appendix = Appendix Appendix_Attrs (Maybe Beginpage)
			 (Maybe Appendixinfo) Title (Maybe Subtitle) (Maybe Titleabbrev)
			 [(OneOf5 Toc Lot Index Glossary Bibliography)] (Maybe Tocchap)
			 (OneOf3 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)] (OneOf4 [Sect1] [(Refentry)] [Simplesect] [(Section)]) (OneOf4 [Sect1] [(Refentry)] [Simplesect] [(Section)]))
			 [(OneOf5 Toc Lot Index Glossary Bibliography)]
	      deriving (Eq,Show)
data Appendix_Attrs = Appendix_Attrs
    { appendixLabel :: (Maybe String)
    , appendixStatus :: (Maybe String)
    , appendixId :: (Maybe String)
    , appendixLang :: (Maybe String)
    , appendixRemap :: (Maybe String)
    , appendixXreflabel :: (Maybe String)
    , appendixRevisionflag :: (Maybe Appendix_Revisionflag)
    , appendixArch :: (Maybe String)
    , appendixCondition :: (Maybe String)
    , appendixConformance :: (Maybe String)
    , appendixOs :: (Maybe String)
    , appendixRevision :: (Maybe String)
    , appendixSecurity :: (Maybe String)
    , appendixUserlevel :: (Maybe String)
    , appendixVendor :: (Maybe String)
    , appendixRole :: (Maybe String)
    } deriving (Eq,Show)
data Appendix_Revisionflag = Appendix_Revisionflag_Changed  | 
			     Appendix_Revisionflag_Added  |  Appendix_Revisionflag_Deleted  | 
			     Appendix_Revisionflag_Off
			   deriving (Eq,Show)
data Chapter = Chapter Chapter_Attrs (Maybe Beginpage)
		       (Maybe Chapterinfo) Title (Maybe Subtitle) (Maybe Titleabbrev)
		       [(OneOf5 Toc Lot Index Glossary Bibliography)] (Maybe Tocchap)
		       (OneOf3 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)] (OneOf4 [Sect1] [(Refentry)] [Simplesect] [(Section)]) (OneOf4 [Sect1] [(Refentry)] [Simplesect] [(Section)]))
		       [(OneOf5 Toc Lot Index Glossary Bibliography)]
	     deriving (Eq,Show)
data Chapter_Attrs = Chapter_Attrs
    { chapterLabel :: (Maybe String)
    , chapterStatus :: (Maybe String)
    , chapterId :: (Maybe String)
    , chapterLang :: (Maybe String)
    , chapterRemap :: (Maybe String)
    , chapterXreflabel :: (Maybe String)
    , chapterRevisionflag :: (Maybe Chapter_Revisionflag)
    , chapterArch :: (Maybe String)
    , chapterCondition :: (Maybe String)
    , chapterConformance :: (Maybe String)
    , chapterOs :: (Maybe String)
    , chapterRevision :: (Maybe String)
    , chapterSecurity :: (Maybe String)
    , chapterUserlevel :: (Maybe String)
    , chapterVendor :: (Maybe String)
    , chapterRole :: (Maybe String)
    } deriving (Eq,Show)
data Chapter_Revisionflag = Chapter_Revisionflag_Changed  | 
			    Chapter_Revisionflag_Added  |  Chapter_Revisionflag_Deleted  | 
			    Chapter_Revisionflag_Off
			  deriving (Eq,Show)
data Part = Part Part_Attrs (Maybe Beginpage) (Maybe Partinfo)
		 Title (Maybe Subtitle) (Maybe Titleabbrev) (Maybe Partintro)
		 [(OneOf11 Appendix Chapter Toc Lot Index Glossary Bibliography Article Preface Refentry Reference)]
	  deriving (Eq,Show)
data Part_Attrs = Part_Attrs
    { partLabel :: (Maybe String)
    , partStatus :: (Maybe String)
    , partId :: (Maybe String)
    , partLang :: (Maybe String)
    , partRemap :: (Maybe String)
    , partXreflabel :: (Maybe String)
    , partRevisionflag :: (Maybe Part_Revisionflag)
    , partArch :: (Maybe String)
    , partCondition :: (Maybe String)
    , partConformance :: (Maybe String)
    , partOs :: (Maybe String)
    , partRevision :: (Maybe String)
    , partSecurity :: (Maybe String)
    , partUserlevel :: (Maybe String)
    , partVendor :: (Maybe String)
    , partRole :: (Maybe String)
    } deriving (Eq,Show)
data Part_Revisionflag = Part_Revisionflag_Changed  | 
			 Part_Revisionflag_Added  |  Part_Revisionflag_Deleted  | 
			 Part_Revisionflag_Off
		       deriving (Eq,Show)
data Preface = Preface Preface_Attrs (Maybe Beginpage)
		       (Maybe Prefaceinfo) Title (Maybe Subtitle) (Maybe Titleabbrev)
		       [(OneOf5 Toc Lot Index Glossary Bibliography)] (Maybe Tocchap)
		       (OneOf3 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)] (OneOf4 [Sect1] [(Refentry)] [Simplesect] [(Section)]) (OneOf4 [Sect1] [(Refentry)] [Simplesect] [(Section)]))
		       [(OneOf5 Toc Lot Index Glossary Bibliography)]
	     deriving (Eq,Show)
data Preface_Attrs = Preface_Attrs
    { prefaceStatus :: (Maybe String)
    , prefaceId :: (Maybe String)
    , prefaceLang :: (Maybe String)
    , prefaceRemap :: (Maybe String)
    , prefaceXreflabel :: (Maybe String)
    , prefaceRevisionflag :: (Maybe Preface_Revisionflag)
    , prefaceArch :: (Maybe String)
    , prefaceCondition :: (Maybe String)
    , prefaceConformance :: (Maybe String)
    , prefaceOs :: (Maybe String)
    , prefaceRevision :: (Maybe String)
    , prefaceSecurity :: (Maybe String)
    , prefaceUserlevel :: (Maybe String)
    , prefaceVendor :: (Maybe String)
    , prefaceRole :: (Maybe String)
    } deriving (Eq,Show)
data Preface_Revisionflag = Preface_Revisionflag_Changed  | 
			    Preface_Revisionflag_Added  |  Preface_Revisionflag_Deleted  | 
			    Preface_Revisionflag_Off
			  deriving (Eq,Show)
data Reference = Reference Reference_Attrs (Maybe Beginpage)
			   (Maybe Referenceinfo) Title (Maybe Subtitle) (Maybe Titleabbrev)
			   (Maybe Partintro) [(Refentry)]
	       deriving (Eq,Show)
data Reference_Attrs = Reference_Attrs
    { referenceLabel :: (Maybe String)
    , referenceStatus :: (Maybe String)
    , referenceId :: (Maybe String)
    , referenceLang :: (Maybe String)
    , referenceRemap :: (Maybe String)
    , referenceXreflabel :: (Maybe String)
    , referenceRevisionflag :: (Maybe Reference_Revisionflag)
    , referenceArch :: (Maybe String)
    , referenceCondition :: (Maybe String)
    , referenceConformance :: (Maybe String)
    , referenceOs :: (Maybe String)
    , referenceRevision :: (Maybe String)
    , referenceSecurity :: (Maybe String)
    , referenceUserlevel :: (Maybe String)
    , referenceVendor :: (Maybe String)
    , referenceRole :: (Maybe String)
    } deriving (Eq,Show)
data Reference_Revisionflag = Reference_Revisionflag_Changed  | 
			      Reference_Revisionflag_Added  |  Reference_Revisionflag_Deleted  | 
			      Reference_Revisionflag_Off
			    deriving (Eq,Show)
data Partintro = Partintro Partintro_Attrs
			   (Maybe (Title,(Maybe Subtitle),(Maybe Titleabbrev)))
			   (OneOf3 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)] (OneOf4 [Sect1] [(Refentry)] [Simplesect] [(Section)]) (OneOf4 [Sect1] [(Refentry)] [Simplesect] [(Section)]))
	       deriving (Eq,Show)
data Partintro_Attrs = Partintro_Attrs
    { partintroLabel :: (Maybe String)
    , partintroId :: (Maybe String)
    , partintroLang :: (Maybe String)
    , partintroRemap :: (Maybe String)
    , partintroXreflabel :: (Maybe String)
    , partintroRevisionflag :: (Maybe Partintro_Revisionflag)
    , partintroArch :: (Maybe String)
    , partintroCondition :: (Maybe String)
    , partintroConformance :: (Maybe String)
    , partintroOs :: (Maybe String)
    , partintroRevision :: (Maybe String)
    , partintroSecurity :: (Maybe String)
    , partintroUserlevel :: (Maybe String)
    , partintroVendor :: (Maybe String)
    , partintroRole :: (Maybe String)
    } deriving (Eq,Show)
data Partintro_Revisionflag = Partintro_Revisionflag_Changed  | 
			      Partintro_Revisionflag_Added  |  Partintro_Revisionflag_Deleted  | 
			      Partintro_Revisionflag_Off
			    deriving (Eq,Show)
data Appendixinfo = Appendixinfo Appendixinfo_Attrs
				 [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
		  deriving (Eq,Show)
data Appendixinfo_Attrs = Appendixinfo_Attrs
    { appendixinfoId :: (Maybe String)
    , appendixinfoLang :: (Maybe String)
    , appendixinfoRemap :: (Maybe String)
    , appendixinfoXreflabel :: (Maybe String)
    , appendixinfoRevisionflag :: (Maybe Appendixinfo_Revisionflag)
    , appendixinfoArch :: (Maybe String)
    , appendixinfoCondition :: (Maybe String)
    , appendixinfoConformance :: (Maybe String)
    , appendixinfoOs :: (Maybe String)
    , appendixinfoRevision :: (Maybe String)
    , appendixinfoSecurity :: (Maybe String)
    , appendixinfoUserlevel :: (Maybe String)
    , appendixinfoVendor :: (Maybe String)
    , appendixinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Appendixinfo_Revisionflag = Appendixinfo_Revisionflag_Changed
				  |  Appendixinfo_Revisionflag_Added  | 
				 Appendixinfo_Revisionflag_Deleted  |  Appendixinfo_Revisionflag_Off
			       deriving (Eq,Show)
data Bibliographyinfo = Bibliographyinfo Bibliographyinfo_Attrs
					 [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
		      deriving (Eq,Show)
data Bibliographyinfo_Attrs = Bibliographyinfo_Attrs
    { bibliographyinfoId :: (Maybe String)
    , bibliographyinfoLang :: (Maybe String)
    , bibliographyinfoRemap :: (Maybe String)
    , bibliographyinfoXreflabel :: (Maybe String)
    , bibliographyinfoRevisionflag :: (Maybe Bibliographyinfo_Revisionflag)
    , bibliographyinfoArch :: (Maybe String)
    , bibliographyinfoCondition :: (Maybe String)
    , bibliographyinfoConformance :: (Maybe String)
    , bibliographyinfoOs :: (Maybe String)
    , bibliographyinfoRevision :: (Maybe String)
    , bibliographyinfoSecurity :: (Maybe String)
    , bibliographyinfoUserlevel :: (Maybe String)
    , bibliographyinfoVendor :: (Maybe String)
    , bibliographyinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Bibliographyinfo_Revisionflag = Bibliographyinfo_Revisionflag_Changed
				      |  Bibliographyinfo_Revisionflag_Added  | 
				     Bibliographyinfo_Revisionflag_Deleted  | 
				     Bibliographyinfo_Revisionflag_Off
				   deriving (Eq,Show)
data Chapterinfo = Chapterinfo Chapterinfo_Attrs
			       [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
		 deriving (Eq,Show)
data Chapterinfo_Attrs = Chapterinfo_Attrs
    { chapterinfoId :: (Maybe String)
    , chapterinfoLang :: (Maybe String)
    , chapterinfoRemap :: (Maybe String)
    , chapterinfoXreflabel :: (Maybe String)
    , chapterinfoRevisionflag :: (Maybe Chapterinfo_Revisionflag)
    , chapterinfoArch :: (Maybe String)
    , chapterinfoCondition :: (Maybe String)
    , chapterinfoConformance :: (Maybe String)
    , chapterinfoOs :: (Maybe String)
    , chapterinfoRevision :: (Maybe String)
    , chapterinfoSecurity :: (Maybe String)
    , chapterinfoUserlevel :: (Maybe String)
    , chapterinfoVendor :: (Maybe String)
    , chapterinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Chapterinfo_Revisionflag = Chapterinfo_Revisionflag_Changed
				 |  Chapterinfo_Revisionflag_Added  | 
				Chapterinfo_Revisionflag_Deleted  |  Chapterinfo_Revisionflag_Off
			      deriving (Eq,Show)
data Glossaryinfo = Glossaryinfo Glossaryinfo_Attrs
				 [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
		  deriving (Eq,Show)
data Glossaryinfo_Attrs = Glossaryinfo_Attrs
    { glossaryinfoId :: (Maybe String)
    , glossaryinfoLang :: (Maybe String)
    , glossaryinfoRemap :: (Maybe String)
    , glossaryinfoXreflabel :: (Maybe String)
    , glossaryinfoRevisionflag :: (Maybe Glossaryinfo_Revisionflag)
    , glossaryinfoArch :: (Maybe String)
    , glossaryinfoCondition :: (Maybe String)
    , glossaryinfoConformance :: (Maybe String)
    , glossaryinfoOs :: (Maybe String)
    , glossaryinfoRevision :: (Maybe String)
    , glossaryinfoSecurity :: (Maybe String)
    , glossaryinfoUserlevel :: (Maybe String)
    , glossaryinfoVendor :: (Maybe String)
    , glossaryinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Glossaryinfo_Revisionflag = Glossaryinfo_Revisionflag_Changed
				  |  Glossaryinfo_Revisionflag_Added  | 
				 Glossaryinfo_Revisionflag_Deleted  |  Glossaryinfo_Revisionflag_Off
			       deriving (Eq,Show)
data Indexinfo = Indexinfo Indexinfo_Attrs
			   [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
	       deriving (Eq,Show)
data Indexinfo_Attrs = Indexinfo_Attrs
    { indexinfoId :: (Maybe String)
    , indexinfoLang :: (Maybe String)
    , indexinfoRemap :: (Maybe String)
    , indexinfoXreflabel :: (Maybe String)
    , indexinfoRevisionflag :: (Maybe Indexinfo_Revisionflag)
    , indexinfoArch :: (Maybe String)
    , indexinfoCondition :: (Maybe String)
    , indexinfoConformance :: (Maybe String)
    , indexinfoOs :: (Maybe String)
    , indexinfoRevision :: (Maybe String)
    , indexinfoSecurity :: (Maybe String)
    , indexinfoUserlevel :: (Maybe String)
    , indexinfoVendor :: (Maybe String)
    , indexinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Indexinfo_Revisionflag = Indexinfo_Revisionflag_Changed  | 
			      Indexinfo_Revisionflag_Added  |  Indexinfo_Revisionflag_Deleted  | 
			      Indexinfo_Revisionflag_Off
			    deriving (Eq,Show)
data Setindexinfo = Setindexinfo Setindexinfo_Attrs
				 [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
		  deriving (Eq,Show)
data Setindexinfo_Attrs = Setindexinfo_Attrs
    { setindexinfoId :: (Maybe String)
    , setindexinfoLang :: (Maybe String)
    , setindexinfoRemap :: (Maybe String)
    , setindexinfoXreflabel :: (Maybe String)
    , setindexinfoRevisionflag :: (Maybe Setindexinfo_Revisionflag)
    , setindexinfoArch :: (Maybe String)
    , setindexinfoCondition :: (Maybe String)
    , setindexinfoConformance :: (Maybe String)
    , setindexinfoOs :: (Maybe String)
    , setindexinfoRevision :: (Maybe String)
    , setindexinfoSecurity :: (Maybe String)
    , setindexinfoUserlevel :: (Maybe String)
    , setindexinfoVendor :: (Maybe String)
    , setindexinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Setindexinfo_Revisionflag = Setindexinfo_Revisionflag_Changed
				  |  Setindexinfo_Revisionflag_Added  | 
				 Setindexinfo_Revisionflag_Deleted  |  Setindexinfo_Revisionflag_Off
			       deriving (Eq,Show)
data Partinfo = Partinfo Partinfo_Attrs
			 [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
	      deriving (Eq,Show)
data Partinfo_Attrs = Partinfo_Attrs
    { partinfoId :: (Maybe String)
    , partinfoLang :: (Maybe String)
    , partinfoRemap :: (Maybe String)
    , partinfoXreflabel :: (Maybe String)
    , partinfoRevisionflag :: (Maybe Partinfo_Revisionflag)
    , partinfoArch :: (Maybe String)
    , partinfoCondition :: (Maybe String)
    , partinfoConformance :: (Maybe String)
    , partinfoOs :: (Maybe String)
    , partinfoRevision :: (Maybe String)
    , partinfoSecurity :: (Maybe String)
    , partinfoUserlevel :: (Maybe String)
    , partinfoVendor :: (Maybe String)
    , partinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Partinfo_Revisionflag = Partinfo_Revisionflag_Changed  | 
			     Partinfo_Revisionflag_Added  |  Partinfo_Revisionflag_Deleted  | 
			     Partinfo_Revisionflag_Off
			   deriving (Eq,Show)
data Prefaceinfo = Prefaceinfo Prefaceinfo_Attrs
			       [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
		 deriving (Eq,Show)
data Prefaceinfo_Attrs = Prefaceinfo_Attrs
    { prefaceinfoId :: (Maybe String)
    , prefaceinfoLang :: (Maybe String)
    , prefaceinfoRemap :: (Maybe String)
    , prefaceinfoXreflabel :: (Maybe String)
    , prefaceinfoRevisionflag :: (Maybe Prefaceinfo_Revisionflag)
    , prefaceinfoArch :: (Maybe String)
    , prefaceinfoCondition :: (Maybe String)
    , prefaceinfoConformance :: (Maybe String)
    , prefaceinfoOs :: (Maybe String)
    , prefaceinfoRevision :: (Maybe String)
    , prefaceinfoSecurity :: (Maybe String)
    , prefaceinfoUserlevel :: (Maybe String)
    , prefaceinfoVendor :: (Maybe String)
    , prefaceinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Prefaceinfo_Revisionflag = Prefaceinfo_Revisionflag_Changed
				 |  Prefaceinfo_Revisionflag_Added  | 
				Prefaceinfo_Revisionflag_Deleted  |  Prefaceinfo_Revisionflag_Off
			      deriving (Eq,Show)
data Refentryinfo = Refentryinfo Refentryinfo_Attrs
				 [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
		  deriving (Eq,Show)
data Refentryinfo_Attrs = Refentryinfo_Attrs
    { refentryinfoId :: (Maybe String)
    , refentryinfoLang :: (Maybe String)
    , refentryinfoRemap :: (Maybe String)
    , refentryinfoXreflabel :: (Maybe String)
    , refentryinfoRevisionflag :: (Maybe Refentryinfo_Revisionflag)
    , refentryinfoArch :: (Maybe String)
    , refentryinfoCondition :: (Maybe String)
    , refentryinfoConformance :: (Maybe String)
    , refentryinfoOs :: (Maybe String)
    , refentryinfoRevision :: (Maybe String)
    , refentryinfoSecurity :: (Maybe String)
    , refentryinfoUserlevel :: (Maybe String)
    , refentryinfoVendor :: (Maybe String)
    , refentryinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Refentryinfo_Revisionflag = Refentryinfo_Revisionflag_Changed
				  |  Refentryinfo_Revisionflag_Added  | 
				 Refentryinfo_Revisionflag_Deleted  |  Refentryinfo_Revisionflag_Off
			       deriving (Eq,Show)
data Refsectioninfo = Refsectioninfo Refsectioninfo_Attrs
				     [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
		    deriving (Eq,Show)
data Refsectioninfo_Attrs = Refsectioninfo_Attrs
    { refsectioninfoId :: (Maybe String)
    , refsectioninfoLang :: (Maybe String)
    , refsectioninfoRemap :: (Maybe String)
    , refsectioninfoXreflabel :: (Maybe String)
    , refsectioninfoRevisionflag :: (Maybe Refsectioninfo_Revisionflag)
    , refsectioninfoArch :: (Maybe String)
    , refsectioninfoCondition :: (Maybe String)
    , refsectioninfoConformance :: (Maybe String)
    , refsectioninfoOs :: (Maybe String)
    , refsectioninfoRevision :: (Maybe String)
    , refsectioninfoSecurity :: (Maybe String)
    , refsectioninfoUserlevel :: (Maybe String)
    , refsectioninfoVendor :: (Maybe String)
    , refsectioninfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Refsectioninfo_Revisionflag = Refsectioninfo_Revisionflag_Changed
				    |  Refsectioninfo_Revisionflag_Added  | 
				   Refsectioninfo_Revisionflag_Deleted  | 
				   Refsectioninfo_Revisionflag_Off
				 deriving (Eq,Show)
data Refsect1info = Refsect1info Refsect1info_Attrs
				 [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
		  deriving (Eq,Show)
data Refsect1info_Attrs = Refsect1info_Attrs
    { refsect1infoId :: (Maybe String)
    , refsect1infoLang :: (Maybe String)
    , refsect1infoRemap :: (Maybe String)
    , refsect1infoXreflabel :: (Maybe String)
    , refsect1infoRevisionflag :: (Maybe Refsect1info_Revisionflag)
    , refsect1infoArch :: (Maybe String)
    , refsect1infoCondition :: (Maybe String)
    , refsect1infoConformance :: (Maybe String)
    , refsect1infoOs :: (Maybe String)
    , refsect1infoRevision :: (Maybe String)
    , refsect1infoSecurity :: (Maybe String)
    , refsect1infoUserlevel :: (Maybe String)
    , refsect1infoVendor :: (Maybe String)
    , refsect1infoRole :: (Maybe String)
    } deriving (Eq,Show)
data Refsect1info_Revisionflag = Refsect1info_Revisionflag_Changed
				  |  Refsect1info_Revisionflag_Added  | 
				 Refsect1info_Revisionflag_Deleted  |  Refsect1info_Revisionflag_Off
			       deriving (Eq,Show)
data Refsect2info = Refsect2info Refsect2info_Attrs
				 [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
		  deriving (Eq,Show)
data Refsect2info_Attrs = Refsect2info_Attrs
    { refsect2infoId :: (Maybe String)
    , refsect2infoLang :: (Maybe String)
    , refsect2infoRemap :: (Maybe String)
    , refsect2infoXreflabel :: (Maybe String)
    , refsect2infoRevisionflag :: (Maybe Refsect2info_Revisionflag)
    , refsect2infoArch :: (Maybe String)
    , refsect2infoCondition :: (Maybe String)
    , refsect2infoConformance :: (Maybe String)
    , refsect2infoOs :: (Maybe String)
    , refsect2infoRevision :: (Maybe String)
    , refsect2infoSecurity :: (Maybe String)
    , refsect2infoUserlevel :: (Maybe String)
    , refsect2infoVendor :: (Maybe String)
    , refsect2infoRole :: (Maybe String)
    } deriving (Eq,Show)
data Refsect2info_Revisionflag = Refsect2info_Revisionflag_Changed
				  |  Refsect2info_Revisionflag_Added  | 
				 Refsect2info_Revisionflag_Deleted  |  Refsect2info_Revisionflag_Off
			       deriving (Eq,Show)
data Refsect3info = Refsect3info Refsect3info_Attrs
				 [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
		  deriving (Eq,Show)
data Refsect3info_Attrs = Refsect3info_Attrs
    { refsect3infoId :: (Maybe String)
    , refsect3infoLang :: (Maybe String)
    , refsect3infoRemap :: (Maybe String)
    , refsect3infoXreflabel :: (Maybe String)
    , refsect3infoRevisionflag :: (Maybe Refsect3info_Revisionflag)
    , refsect3infoArch :: (Maybe String)
    , refsect3infoCondition :: (Maybe String)
    , refsect3infoConformance :: (Maybe String)
    , refsect3infoOs :: (Maybe String)
    , refsect3infoRevision :: (Maybe String)
    , refsect3infoSecurity :: (Maybe String)
    , refsect3infoUserlevel :: (Maybe String)
    , refsect3infoVendor :: (Maybe String)
    , refsect3infoRole :: (Maybe String)
    } deriving (Eq,Show)
data Refsect3info_Revisionflag = Refsect3info_Revisionflag_Changed
				  |  Refsect3info_Revisionflag_Added  | 
				 Refsect3info_Revisionflag_Deleted  |  Refsect3info_Revisionflag_Off
			       deriving (Eq,Show)
data Refsynopsisdivinfo = Refsynopsisdivinfo Refsynopsisdivinfo_Attrs
					     [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
			deriving (Eq,Show)
data Refsynopsisdivinfo_Attrs = Refsynopsisdivinfo_Attrs
    { refsynopsisdivinfoId :: (Maybe String)
    , refsynopsisdivinfoLang :: (Maybe String)
    , refsynopsisdivinfoRemap :: (Maybe String)
    , refsynopsisdivinfoXreflabel :: (Maybe String)
    , refsynopsisdivinfoRevisionflag :: (Maybe Refsynopsisdivinfo_Revisionflag)
    , refsynopsisdivinfoArch :: (Maybe String)
    , refsynopsisdivinfoCondition :: (Maybe String)
    , refsynopsisdivinfoConformance :: (Maybe String)
    , refsynopsisdivinfoOs :: (Maybe String)
    , refsynopsisdivinfoRevision :: (Maybe String)
    , refsynopsisdivinfoSecurity :: (Maybe String)
    , refsynopsisdivinfoUserlevel :: (Maybe String)
    , refsynopsisdivinfoVendor :: (Maybe String)
    , refsynopsisdivinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Refsynopsisdivinfo_Revisionflag = Refsynopsisdivinfo_Revisionflag_Changed
				        |  Refsynopsisdivinfo_Revisionflag_Added  | 
				       Refsynopsisdivinfo_Revisionflag_Deleted  | 
				       Refsynopsisdivinfo_Revisionflag_Off
				     deriving (Eq,Show)
data Referenceinfo = Referenceinfo Referenceinfo_Attrs
				   [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
		   deriving (Eq,Show)
data Referenceinfo_Attrs = Referenceinfo_Attrs
    { referenceinfoId :: (Maybe String)
    , referenceinfoLang :: (Maybe String)
    , referenceinfoRemap :: (Maybe String)
    , referenceinfoXreflabel :: (Maybe String)
    , referenceinfoRevisionflag :: (Maybe Referenceinfo_Revisionflag)
    , referenceinfoArch :: (Maybe String)
    , referenceinfoCondition :: (Maybe String)
    , referenceinfoConformance :: (Maybe String)
    , referenceinfoOs :: (Maybe String)
    , referenceinfoRevision :: (Maybe String)
    , referenceinfoSecurity :: (Maybe String)
    , referenceinfoUserlevel :: (Maybe String)
    , referenceinfoVendor :: (Maybe String)
    , referenceinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Referenceinfo_Revisionflag = Referenceinfo_Revisionflag_Changed
				   |  Referenceinfo_Revisionflag_Added  | 
				  Referenceinfo_Revisionflag_Deleted  | 
				  Referenceinfo_Revisionflag_Off
				deriving (Eq,Show)
data Sect1info = Sect1info Sect1info_Attrs
			   [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
	       deriving (Eq,Show)
data Sect1info_Attrs = Sect1info_Attrs
    { sect1infoId :: (Maybe String)
    , sect1infoLang :: (Maybe String)
    , sect1infoRemap :: (Maybe String)
    , sect1infoXreflabel :: (Maybe String)
    , sect1infoRevisionflag :: (Maybe Sect1info_Revisionflag)
    , sect1infoArch :: (Maybe String)
    , sect1infoCondition :: (Maybe String)
    , sect1infoConformance :: (Maybe String)
    , sect1infoOs :: (Maybe String)
    , sect1infoRevision :: (Maybe String)
    , sect1infoSecurity :: (Maybe String)
    , sect1infoUserlevel :: (Maybe String)
    , sect1infoVendor :: (Maybe String)
    , sect1infoRole :: (Maybe String)
    } deriving (Eq,Show)
data Sect1info_Revisionflag = Sect1info_Revisionflag_Changed  | 
			      Sect1info_Revisionflag_Added  |  Sect1info_Revisionflag_Deleted  | 
			      Sect1info_Revisionflag_Off
			    deriving (Eq,Show)
data Sect2info = Sect2info Sect2info_Attrs
			   [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
	       deriving (Eq,Show)
data Sect2info_Attrs = Sect2info_Attrs
    { sect2infoId :: (Maybe String)
    , sect2infoLang :: (Maybe String)
    , sect2infoRemap :: (Maybe String)
    , sect2infoXreflabel :: (Maybe String)
    , sect2infoRevisionflag :: (Maybe Sect2info_Revisionflag)
    , sect2infoArch :: (Maybe String)
    , sect2infoCondition :: (Maybe String)
    , sect2infoConformance :: (Maybe String)
    , sect2infoOs :: (Maybe String)
    , sect2infoRevision :: (Maybe String)
    , sect2infoSecurity :: (Maybe String)
    , sect2infoUserlevel :: (Maybe String)
    , sect2infoVendor :: (Maybe String)
    , sect2infoRole :: (Maybe String)
    } deriving (Eq,Show)
data Sect2info_Revisionflag = Sect2info_Revisionflag_Changed  | 
			      Sect2info_Revisionflag_Added  |  Sect2info_Revisionflag_Deleted  | 
			      Sect2info_Revisionflag_Off
			    deriving (Eq,Show)
data Sect3info = Sect3info Sect3info_Attrs
			   [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
	       deriving (Eq,Show)
data Sect3info_Attrs = Sect3info_Attrs
    { sect3infoId :: (Maybe String)
    , sect3infoLang :: (Maybe String)
    , sect3infoRemap :: (Maybe String)
    , sect3infoXreflabel :: (Maybe String)
    , sect3infoRevisionflag :: (Maybe Sect3info_Revisionflag)
    , sect3infoArch :: (Maybe String)
    , sect3infoCondition :: (Maybe String)
    , sect3infoConformance :: (Maybe String)
    , sect3infoOs :: (Maybe String)
    , sect3infoRevision :: (Maybe String)
    , sect3infoSecurity :: (Maybe String)
    , sect3infoUserlevel :: (Maybe String)
    , sect3infoVendor :: (Maybe String)
    , sect3infoRole :: (Maybe String)
    } deriving (Eq,Show)
data Sect3info_Revisionflag = Sect3info_Revisionflag_Changed  | 
			      Sect3info_Revisionflag_Added  |  Sect3info_Revisionflag_Deleted  | 
			      Sect3info_Revisionflag_Off
			    deriving (Eq,Show)
data Sect4info = Sect4info Sect4info_Attrs
			   [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
	       deriving (Eq,Show)
data Sect4info_Attrs = Sect4info_Attrs
    { sect4infoId :: (Maybe String)
    , sect4infoLang :: (Maybe String)
    , sect4infoRemap :: (Maybe String)
    , sect4infoXreflabel :: (Maybe String)
    , sect4infoRevisionflag :: (Maybe Sect4info_Revisionflag)
    , sect4infoArch :: (Maybe String)
    , sect4infoCondition :: (Maybe String)
    , sect4infoConformance :: (Maybe String)
    , sect4infoOs :: (Maybe String)
    , sect4infoRevision :: (Maybe String)
    , sect4infoSecurity :: (Maybe String)
    , sect4infoUserlevel :: (Maybe String)
    , sect4infoVendor :: (Maybe String)
    , sect4infoRole :: (Maybe String)
    } deriving (Eq,Show)
data Sect4info_Revisionflag = Sect4info_Revisionflag_Changed  | 
			      Sect4info_Revisionflag_Added  |  Sect4info_Revisionflag_Deleted  | 
			      Sect4info_Revisionflag_Off
			    deriving (Eq,Show)
data Sect5info = Sect5info Sect5info_Attrs
			   [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
	       deriving (Eq,Show)
data Sect5info_Attrs = Sect5info_Attrs
    { sect5infoId :: (Maybe String)
    , sect5infoLang :: (Maybe String)
    , sect5infoRemap :: (Maybe String)
    , sect5infoXreflabel :: (Maybe String)
    , sect5infoRevisionflag :: (Maybe Sect5info_Revisionflag)
    , sect5infoArch :: (Maybe String)
    , sect5infoCondition :: (Maybe String)
    , sect5infoConformance :: (Maybe String)
    , sect5infoOs :: (Maybe String)
    , sect5infoRevision :: (Maybe String)
    , sect5infoSecurity :: (Maybe String)
    , sect5infoUserlevel :: (Maybe String)
    , sect5infoVendor :: (Maybe String)
    , sect5infoRole :: (Maybe String)
    } deriving (Eq,Show)
data Sect5info_Revisionflag = Sect5info_Revisionflag_Changed  | 
			      Sect5info_Revisionflag_Added  |  Sect5info_Revisionflag_Deleted  | 
			      Sect5info_Revisionflag_Off
			    deriving (Eq,Show)
data Section = Section Section_Attrs (Maybe Sectioninfo) Title
		       (Maybe Subtitle) (Maybe Titleabbrev)
		       [(OneOf5 Toc Lot Index Glossary Bibliography)]
		       (OneOf5 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)] (OneOf3 [(Refentry)] [(Section)] [Simplesect]) [(Refentry)] [(Section)] [Simplesect])
		       [(OneOf5 Toc Lot Index Glossary Bibliography)]
	     deriving (Eq,Show)
data Section_Attrs = Section_Attrs
    { sectionLabel :: (Maybe String)
    , sectionStatus :: (Maybe String)
    , sectionId :: (Maybe String)
    , sectionLang :: (Maybe String)
    , sectionRemap :: (Maybe String)
    , sectionXreflabel :: (Maybe String)
    , sectionRevisionflag :: (Maybe Section_Revisionflag)
    , sectionArch :: (Maybe String)
    , sectionCondition :: (Maybe String)
    , sectionConformance :: (Maybe String)
    , sectionOs :: (Maybe String)
    , sectionRevision :: (Maybe String)
    , sectionSecurity :: (Maybe String)
    , sectionUserlevel :: (Maybe String)
    , sectionVendor :: (Maybe String)
    , sectionRole :: (Maybe String)
    } deriving (Eq,Show)
data Section_Revisionflag = Section_Revisionflag_Changed  | 
			    Section_Revisionflag_Added  |  Section_Revisionflag_Deleted  | 
			    Section_Revisionflag_Off
			  deriving (Eq,Show)
data Sectioninfo = Sectioninfo Sectioninfo_Attrs
			       [(OneOf63 Graphic Mediaobject Legalnotice Modespec Subjectset Keywordset Itermset Abbrev Abstract Address Artpagenums Author Authorgroup Authorinitials Bibliomisc Biblioset Collab Confgroup Contractnum Contractsponsor Copyright Corpauthor Corpname Date Edition Editor Invpartnumber Isbn Issn Issuenum Orgname Biblioid Citebiblioid Bibliosource Bibliorelation Bibliocoverage Othercredit Pagenums Printhistory Productname Productnumber Pubdate Publisher Publishername Pubsnumber Releaseinfo Revhistory Seriesvolnums Subtitle Title Titleabbrev Volumenum Citetitle Personname Honorific Firstname Surname Lineage Othername Affiliation Authorblurb Contrib Indexterm)]
		 deriving (Eq,Show)
data Sectioninfo_Attrs = Sectioninfo_Attrs
    { sectioninfoId :: (Maybe String)
    , sectioninfoLang :: (Maybe String)
    , sectioninfoRemap :: (Maybe String)
    , sectioninfoXreflabel :: (Maybe String)
    , sectioninfoRevisionflag :: (Maybe Sectioninfo_Revisionflag)
    , sectioninfoArch :: (Maybe String)
    , sectioninfoCondition :: (Maybe String)
    , sectioninfoConformance :: (Maybe String)
    , sectioninfoOs :: (Maybe String)
    , sectioninfoRevision :: (Maybe String)
    , sectioninfoSecurity :: (Maybe String)
    , sectioninfoUserlevel :: (Maybe String)
    , sectioninfoVendor :: (Maybe String)
    , sectioninfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Sectioninfo_Revisionflag = Sectioninfo_Revisionflag_Changed
				 |  Sectioninfo_Revisionflag_Added  | 
				Sectioninfo_Revisionflag_Deleted  |  Sectioninfo_Revisionflag_Off
			      deriving (Eq,Show)
data Sect1 = Sect1 Sect1_Attrs (Maybe Sect1info) Title
		   (Maybe Subtitle) (Maybe Titleabbrev)
		   [(OneOf5 Toc Lot Index Glossary Bibliography)]
		   (OneOf5 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)] (OneOf3 [(Refentry)] [Sect2] [Simplesect]) [(Refentry)] [Sect2] [Simplesect])
		   [(OneOf5 Toc Lot Index Glossary Bibliography)]
	   deriving (Eq,Show)
data Sect1_Attrs = Sect1_Attrs
    { sect1Renderas :: (Maybe Sect1_Renderas)
    , sect1Label :: (Maybe String)
    , sect1Status :: (Maybe String)
    , sect1Id :: (Maybe String)
    , sect1Lang :: (Maybe String)
    , sect1Remap :: (Maybe String)
    , sect1Xreflabel :: (Maybe String)
    , sect1Revisionflag :: (Maybe Sect1_Revisionflag)
    , sect1Arch :: (Maybe String)
    , sect1Condition :: (Maybe String)
    , sect1Conformance :: (Maybe String)
    , sect1Os :: (Maybe String)
    , sect1Revision :: (Maybe String)
    , sect1Security :: (Maybe String)
    , sect1Userlevel :: (Maybe String)
    , sect1Vendor :: (Maybe String)
    , sect1Role :: (Maybe String)
    } deriving (Eq,Show)
data Sect1_Renderas = Sect1_Renderas_Sect2  |  Sect1_Renderas_Sect3
		       |  Sect1_Renderas_Sect4  |  Sect1_Renderas_Sect5
		    deriving (Eq,Show)
data Sect1_Revisionflag = Sect1_Revisionflag_Changed  | 
			  Sect1_Revisionflag_Added  |  Sect1_Revisionflag_Deleted  | 
			  Sect1_Revisionflag_Off
			deriving (Eq,Show)
data Sect2 = Sect2 Sect2_Attrs (Maybe Sect2info) Title
		   (Maybe Subtitle) (Maybe Titleabbrev)
		   [(OneOf5 Toc Lot Index Glossary Bibliography)]
		   (OneOf5 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)] (OneOf3 [(Refentry)] [Sect3] [Simplesect]) [(Refentry)] [Sect3] [Simplesect])
		   [(OneOf5 Toc Lot Index Glossary Bibliography)]
	   deriving (Eq,Show)
data Sect2_Attrs = Sect2_Attrs
    { sect2Renderas :: (Maybe Sect2_Renderas)
    , sect2Label :: (Maybe String)
    , sect2Status :: (Maybe String)
    , sect2Id :: (Maybe String)
    , sect2Lang :: (Maybe String)
    , sect2Remap :: (Maybe String)
    , sect2Xreflabel :: (Maybe String)
    , sect2Revisionflag :: (Maybe Sect2_Revisionflag)
    , sect2Arch :: (Maybe String)
    , sect2Condition :: (Maybe String)
    , sect2Conformance :: (Maybe String)
    , sect2Os :: (Maybe String)
    , sect2Revision :: (Maybe String)
    , sect2Security :: (Maybe String)
    , sect2Userlevel :: (Maybe String)
    , sect2Vendor :: (Maybe String)
    , sect2Role :: (Maybe String)
    } deriving (Eq,Show)
data Sect2_Renderas = Sect2_Renderas_Sect1  |  Sect2_Renderas_Sect3
		       |  Sect2_Renderas_Sect4  |  Sect2_Renderas_Sect5
		    deriving (Eq,Show)
data Sect2_Revisionflag = Sect2_Revisionflag_Changed  | 
			  Sect2_Revisionflag_Added  |  Sect2_Revisionflag_Deleted  | 
			  Sect2_Revisionflag_Off
			deriving (Eq,Show)
data Sect3 = Sect3 Sect3_Attrs (Maybe Sect3info) Title
		   (Maybe Subtitle) (Maybe Titleabbrev)
		   [(OneOf5 Toc Lot Index Glossary Bibliography)]
		   (OneOf5 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)] (OneOf3 [(Refentry)] [Sect4] [Simplesect]) [(Refentry)] [Sect4] [Simplesect])
		   [(OneOf5 Toc Lot Index Glossary Bibliography)]
	   deriving (Eq,Show)
data Sect3_Attrs = Sect3_Attrs
    { sect3Renderas :: (Maybe Sect3_Renderas)
    , sect3Label :: (Maybe String)
    , sect3Status :: (Maybe String)
    , sect3Id :: (Maybe String)
    , sect3Lang :: (Maybe String)
    , sect3Remap :: (Maybe String)
    , sect3Xreflabel :: (Maybe String)
    , sect3Revisionflag :: (Maybe Sect3_Revisionflag)
    , sect3Arch :: (Maybe String)
    , sect3Condition :: (Maybe String)
    , sect3Conformance :: (Maybe String)
    , sect3Os :: (Maybe String)
    , sect3Revision :: (Maybe String)
    , sect3Security :: (Maybe String)
    , sect3Userlevel :: (Maybe String)
    , sect3Vendor :: (Maybe String)
    , sect3Role :: (Maybe String)
    } deriving (Eq,Show)
data Sect3_Renderas = Sect3_Renderas_Sect1  |  Sect3_Renderas_Sect2
		       |  Sect3_Renderas_Sect4  |  Sect3_Renderas_Sect5
		    deriving (Eq,Show)
data Sect3_Revisionflag = Sect3_Revisionflag_Changed  | 
			  Sect3_Revisionflag_Added  |  Sect3_Revisionflag_Deleted  | 
			  Sect3_Revisionflag_Off
			deriving (Eq,Show)
data Sect4 = Sect4 Sect4_Attrs (Maybe Sect4info) Title
		   (Maybe Subtitle) (Maybe Titleabbrev)
		   [(OneOf5 Toc Lot Index Glossary Bibliography)]
		   (OneOf5 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)] (OneOf3 [(Refentry)] [Sect5] [Simplesect]) [(Refentry)] [Sect5] [Simplesect])
		   [(OneOf5 Toc Lot Index Glossary Bibliography)]
	   deriving (Eq,Show)
data Sect4_Attrs = Sect4_Attrs
    { sect4Renderas :: (Maybe Sect4_Renderas)
    , sect4Label :: (Maybe String)
    , sect4Status :: (Maybe String)
    , sect4Id :: (Maybe String)
    , sect4Lang :: (Maybe String)
    , sect4Remap :: (Maybe String)
    , sect4Xreflabel :: (Maybe String)
    , sect4Revisionflag :: (Maybe Sect4_Revisionflag)
    , sect4Arch :: (Maybe String)
    , sect4Condition :: (Maybe String)
    , sect4Conformance :: (Maybe String)
    , sect4Os :: (Maybe String)
    , sect4Revision :: (Maybe String)
    , sect4Security :: (Maybe String)
    , sect4Userlevel :: (Maybe String)
    , sect4Vendor :: (Maybe String)
    , sect4Role :: (Maybe String)
    } deriving (Eq,Show)
data Sect4_Renderas = Sect4_Renderas_Sect1  |  Sect4_Renderas_Sect2
		       |  Sect4_Renderas_Sect3  |  Sect4_Renderas_Sect5
		    deriving (Eq,Show)
data Sect4_Revisionflag = Sect4_Revisionflag_Changed  | 
			  Sect4_Revisionflag_Added  |  Sect4_Revisionflag_Deleted  | 
			  Sect4_Revisionflag_Off
			deriving (Eq,Show)
data Sect5 = Sect5 Sect5_Attrs (Maybe Sect5info) Title
		   (Maybe Subtitle) (Maybe Titleabbrev)
		   [(OneOf5 Toc Lot Index Glossary Bibliography)]
		   (OneOf4 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)] (OneOf2 [(Refentry)] [Simplesect]) [(Refentry)] [Simplesect])
		   [(OneOf5 Toc Lot Index Glossary Bibliography)]
	   deriving (Eq,Show)
data Sect5_Attrs = Sect5_Attrs
    { sect5Renderas :: (Maybe Sect5_Renderas)
    , sect5Label :: (Maybe String)
    , sect5Status :: (Maybe String)
    , sect5Id :: (Maybe String)
    , sect5Lang :: (Maybe String)
    , sect5Remap :: (Maybe String)
    , sect5Xreflabel :: (Maybe String)
    , sect5Revisionflag :: (Maybe Sect5_Revisionflag)
    , sect5Arch :: (Maybe String)
    , sect5Condition :: (Maybe String)
    , sect5Conformance :: (Maybe String)
    , sect5Os :: (Maybe String)
    , sect5Revision :: (Maybe String)
    , sect5Security :: (Maybe String)
    , sect5Userlevel :: (Maybe String)
    , sect5Vendor :: (Maybe String)
    , sect5Role :: (Maybe String)
    } deriving (Eq,Show)
data Sect5_Renderas = Sect5_Renderas_Sect1  |  Sect5_Renderas_Sect2
		       |  Sect5_Renderas_Sect3  |  Sect5_Renderas_Sect4
		    deriving (Eq,Show)
data Sect5_Revisionflag = Sect5_Revisionflag_Changed  | 
			  Sect5_Revisionflag_Added  |  Sect5_Revisionflag_Deleted  | 
			  Sect5_Revisionflag_Off
			deriving (Eq,Show)
data Simplesect = Simplesect Simplesect_Attrs Title
			     (Maybe Subtitle) (Maybe Titleabbrev)
			     [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)]
		deriving (Eq,Show)
data Simplesect_Attrs = Simplesect_Attrs
    { simplesectId :: (Maybe String)
    , simplesectLang :: (Maybe String)
    , simplesectRemap :: (Maybe String)
    , simplesectXreflabel :: (Maybe String)
    , simplesectRevisionflag :: (Maybe Simplesect_Revisionflag)
    , simplesectArch :: (Maybe String)
    , simplesectCondition :: (Maybe String)
    , simplesectConformance :: (Maybe String)
    , simplesectOs :: (Maybe String)
    , simplesectRevision :: (Maybe String)
    , simplesectSecurity :: (Maybe String)
    , simplesectUserlevel :: (Maybe String)
    , simplesectVendor :: (Maybe String)
    , simplesectRole :: (Maybe String)
    } deriving (Eq,Show)
data Simplesect_Revisionflag = Simplesect_Revisionflag_Changed  | 
			       Simplesect_Revisionflag_Added  |  Simplesect_Revisionflag_Deleted
			        |  Simplesect_Revisionflag_Off
			     deriving (Eq,Show)
data Bibliography = Bibliography Bibliography_Attrs
				 (Maybe Bibliographyinfo)
				 (Maybe (Title,(Maybe Subtitle),(Maybe Titleabbrev)))
				 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)]
				 (OneOf2 [Bibliodiv] [(OneOf2 Biblioentry Bibliomixed)])
		  deriving (Eq,Show)
data Bibliography_Attrs = Bibliography_Attrs
    { bibliographyStatus :: (Maybe String)
    , bibliographyId :: (Maybe String)
    , bibliographyLang :: (Maybe String)
    , bibliographyRemap :: (Maybe String)
    , bibliographyXreflabel :: (Maybe String)
    , bibliographyRevisionflag :: (Maybe Bibliography_Revisionflag)
    , bibliographyArch :: (Maybe String)
    , bibliographyCondition :: (Maybe String)
    , bibliographyConformance :: (Maybe String)
    , bibliographyOs :: (Maybe String)
    , bibliographyRevision :: (Maybe String)
    , bibliographySecurity :: (Maybe String)
    , bibliographyUserlevel :: (Maybe String)
    , bibliographyVendor :: (Maybe String)
    , bibliographyRole :: (Maybe String)
    } deriving (Eq,Show)
data Bibliography_Revisionflag = Bibliography_Revisionflag_Changed
				  |  Bibliography_Revisionflag_Added  | 
				 Bibliography_Revisionflag_Deleted  |  Bibliography_Revisionflag_Off
			       deriving (Eq,Show)
data Bibliodiv = Bibliodiv Bibliodiv_Attrs
			   (Maybe (Title,(Maybe Subtitle),(Maybe Titleabbrev)))
			   [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)]
			   [(OneOf2 Biblioentry Bibliomixed)]
	       deriving (Eq,Show)
data Bibliodiv_Attrs = Bibliodiv_Attrs
    { bibliodivStatus :: (Maybe String)
    , bibliodivId :: (Maybe String)
    , bibliodivLang :: (Maybe String)
    , bibliodivRemap :: (Maybe String)
    , bibliodivXreflabel :: (Maybe String)
    , bibliodivRevisionflag :: (Maybe Bibliodiv_Revisionflag)
    , bibliodivArch :: (Maybe String)
    , bibliodivCondition :: (Maybe String)
    , bibliodivConformance :: (Maybe String)
    , bibliodivOs :: (Maybe String)
    , bibliodivRevision :: (Maybe String)
    , bibliodivSecurity :: (Maybe String)
    , bibliodivUserlevel :: (Maybe String)
    , bibliodivVendor :: (Maybe String)
    , bibliodivRole :: (Maybe String)
    } deriving (Eq,Show)
data Bibliodiv_Revisionflag = Bibliodiv_Revisionflag_Changed  | 
			      Bibliodiv_Revisionflag_Added  |  Bibliodiv_Revisionflag_Deleted  | 
			      Bibliodiv_Revisionflag_Off
			    deriving (Eq,Show)
data Glossary = Glossary Glossary_Attrs (Maybe Glossaryinfo)
			 (Maybe (Title,(Maybe Subtitle),(Maybe Titleabbrev)))
			 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)]
			 (OneOf2 [Glossdiv] [Glossentry]) (Maybe Bibliography)
	      deriving (Eq,Show)
data Glossary_Attrs = Glossary_Attrs
    { glossaryStatus :: (Maybe String)
    , glossaryId :: (Maybe String)
    , glossaryLang :: (Maybe String)
    , glossaryRemap :: (Maybe String)
    , glossaryXreflabel :: (Maybe String)
    , glossaryRevisionflag :: (Maybe Glossary_Revisionflag)
    , glossaryArch :: (Maybe String)
    , glossaryCondition :: (Maybe String)
    , glossaryConformance :: (Maybe String)
    , glossaryOs :: (Maybe String)
    , glossaryRevision :: (Maybe String)
    , glossarySecurity :: (Maybe String)
    , glossaryUserlevel :: (Maybe String)
    , glossaryVendor :: (Maybe String)
    , glossaryRole :: (Maybe String)
    } deriving (Eq,Show)
data Glossary_Revisionflag = Glossary_Revisionflag_Changed  | 
			     Glossary_Revisionflag_Added  |  Glossary_Revisionflag_Deleted  | 
			     Glossary_Revisionflag_Off
			   deriving (Eq,Show)
data Glossdiv = Glossdiv Glossdiv_Attrs Title (Maybe Subtitle)
			 (Maybe Titleabbrev)
			 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)]
			 [Glossentry]
	      deriving (Eq,Show)
data Glossdiv_Attrs = Glossdiv_Attrs
    { glossdivStatus :: (Maybe String)
    , glossdivId :: (Maybe String)
    , glossdivLang :: (Maybe String)
    , glossdivRemap :: (Maybe String)
    , glossdivXreflabel :: (Maybe String)
    , glossdivRevisionflag :: (Maybe Glossdiv_Revisionflag)
    , glossdivArch :: (Maybe String)
    , glossdivCondition :: (Maybe String)
    , glossdivConformance :: (Maybe String)
    , glossdivOs :: (Maybe String)
    , glossdivRevision :: (Maybe String)
    , glossdivSecurity :: (Maybe String)
    , glossdivUserlevel :: (Maybe String)
    , glossdivVendor :: (Maybe String)
    , glossdivRole :: (Maybe String)
    } deriving (Eq,Show)
data Glossdiv_Revisionflag = Glossdiv_Revisionflag_Changed  | 
			     Glossdiv_Revisionflag_Added  |  Glossdiv_Revisionflag_Deleted  | 
			     Glossdiv_Revisionflag_Off
			   deriving (Eq,Show)
data Index = Index Index_Attrs (Maybe Indexinfo)
		   (Maybe (Title,(Maybe Subtitle),(Maybe Titleabbrev)))
		   [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)]
		   (OneOf2 [Indexdiv] [Indexentry])
	   deriving (Eq,Show)
data Index_Attrs = Index_Attrs
    { indexId :: (Maybe String)
    , indexLang :: (Maybe String)
    , indexRemap :: (Maybe String)
    , indexXreflabel :: (Maybe String)
    , indexRevisionflag :: (Maybe Index_Revisionflag)
    , indexArch :: (Maybe String)
    , indexCondition :: (Maybe String)
    , indexConformance :: (Maybe String)
    , indexOs :: (Maybe String)
    , indexRevision :: (Maybe String)
    , indexSecurity :: (Maybe String)
    , indexUserlevel :: (Maybe String)
    , indexVendor :: (Maybe String)
    , indexRole :: (Maybe String)
    } deriving (Eq,Show)
data Index_Revisionflag = Index_Revisionflag_Changed  | 
			  Index_Revisionflag_Added  |  Index_Revisionflag_Deleted  | 
			  Index_Revisionflag_Off
			deriving (Eq,Show)
data Setindex = Setindex Setindex_Attrs (Maybe Setindexinfo)
			 (Maybe (Title,(Maybe Subtitle),(Maybe Titleabbrev)))
			 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)]
			 (OneOf2 [Indexdiv] [Indexentry])
	      deriving (Eq,Show)
data Setindex_Attrs = Setindex_Attrs
    { setindexId :: (Maybe String)
    , setindexLang :: (Maybe String)
    , setindexRemap :: (Maybe String)
    , setindexXreflabel :: (Maybe String)
    , setindexRevisionflag :: (Maybe Setindex_Revisionflag)
    , setindexArch :: (Maybe String)
    , setindexCondition :: (Maybe String)
    , setindexConformance :: (Maybe String)
    , setindexOs :: (Maybe String)
    , setindexRevision :: (Maybe String)
    , setindexSecurity :: (Maybe String)
    , setindexUserlevel :: (Maybe String)
    , setindexVendor :: (Maybe String)
    , setindexRole :: (Maybe String)
    } deriving (Eq,Show)
data Setindex_Revisionflag = Setindex_Revisionflag_Changed  | 
			     Setindex_Revisionflag_Added  |  Setindex_Revisionflag_Deleted  | 
			     Setindex_Revisionflag_Off
			   deriving (Eq,Show)
data Indexdiv = Indexdiv Indexdiv_Attrs
			 (Maybe (Title,(Maybe Subtitle),(Maybe Titleabbrev)))
			 [(OneOf37 Itemizedlist Orderedlist Variablelist Simplelist Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Anchor Remark Link Olink Ulink Beginpage)]
			 (OneOf2 [Indexentry] Segmentedlist)
	      deriving (Eq,Show)
data Indexdiv_Attrs = Indexdiv_Attrs
    { indexdivId :: (Maybe String)
    , indexdivLang :: (Maybe String)
    , indexdivRemap :: (Maybe String)
    , indexdivXreflabel :: (Maybe String)
    , indexdivRevisionflag :: (Maybe Indexdiv_Revisionflag)
    , indexdivArch :: (Maybe String)
    , indexdivCondition :: (Maybe String)
    , indexdivConformance :: (Maybe String)
    , indexdivOs :: (Maybe String)
    , indexdivRevision :: (Maybe String)
    , indexdivSecurity :: (Maybe String)
    , indexdivUserlevel :: (Maybe String)
    , indexdivVendor :: (Maybe String)
    , indexdivRole :: (Maybe String)
    } deriving (Eq,Show)
data Indexdiv_Revisionflag = Indexdiv_Revisionflag_Changed  | 
			     Indexdiv_Revisionflag_Added  |  Indexdiv_Revisionflag_Deleted  | 
			     Indexdiv_Revisionflag_Off
			   deriving (Eq,Show)
data Indexentry = Indexentry Indexentry_Attrs Primaryie
			     [(OneOf2 Seeie Seealsoie)]
			     [(Secondaryie,[(OneOf3 Seeie Seealsoie Tertiaryie)])]
		deriving (Eq,Show)
data Indexentry_Attrs = Indexentry_Attrs
    { indexentryId :: (Maybe String)
    , indexentryLang :: (Maybe String)
    , indexentryRemap :: (Maybe String)
    , indexentryXreflabel :: (Maybe String)
    , indexentryRevisionflag :: (Maybe Indexentry_Revisionflag)
    , indexentryArch :: (Maybe String)
    , indexentryCondition :: (Maybe String)
    , indexentryConformance :: (Maybe String)
    , indexentryOs :: (Maybe String)
    , indexentryRevision :: (Maybe String)
    , indexentrySecurity :: (Maybe String)
    , indexentryUserlevel :: (Maybe String)
    , indexentryVendor :: (Maybe String)
    , indexentryRole :: (Maybe String)
    } deriving (Eq,Show)
data Indexentry_Revisionflag = Indexentry_Revisionflag_Changed  | 
			       Indexentry_Revisionflag_Added  |  Indexentry_Revisionflag_Deleted
			        |  Indexentry_Revisionflag_Off
			     deriving (Eq,Show)
data Primaryie = Primaryie Primaryie_Attrs [Primaryie_]
	       deriving (Eq,Show)
data Primaryie_Attrs = Primaryie_Attrs
    { primaryieLinkends :: (Maybe String)
    , primaryieId :: (Maybe String)
    , primaryieLang :: (Maybe String)
    , primaryieRemap :: (Maybe String)
    , primaryieXreflabel :: (Maybe String)
    , primaryieRevisionflag :: (Maybe Primaryie_Revisionflag)
    , primaryieArch :: (Maybe String)
    , primaryieCondition :: (Maybe String)
    , primaryieConformance :: (Maybe String)
    , primaryieOs :: (Maybe String)
    , primaryieRevision :: (Maybe String)
    , primaryieSecurity :: (Maybe String)
    , primaryieUserlevel :: (Maybe String)
    , primaryieVendor :: (Maybe String)
    , primaryieRole :: (Maybe String)
    } deriving (Eq,Show)
data Primaryie_ = Primaryie_Str String
		| Primaryie_Footnoteref Footnoteref
		| Primaryie_Xref Xref
		| Primaryie_Abbrev Abbrev
		| Primaryie_Acronym Acronym
		| Primaryie_Citation Citation
		| Primaryie_Citerefentry Citerefentry
		| Primaryie_Citetitle Citetitle
		| Primaryie_Emphasis Emphasis
		| Primaryie_Firstterm Firstterm
		| Primaryie_Foreignphrase Foreignphrase
		| Primaryie_Glossterm Glossterm
		| Primaryie_Footnote Footnote
		| Primaryie_Phrase Phrase
		| Primaryie_Quote Quote
		| Primaryie_Trademark Trademark
		| Primaryie_Wordasword Wordasword
		| Primaryie_Personname Personname
		| Primaryie_Link Link
		| Primaryie_Olink Olink
		| Primaryie_Ulink Ulink
		| Primaryie_Action Action
		| Primaryie_Application Application
		| Primaryie_Classname Classname
		| Primaryie_Methodname Methodname
		| Primaryie_Interfacename Interfacename
		| Primaryie_Exceptionname Exceptionname
		| Primaryie_Ooclass Ooclass
		| Primaryie_Oointerface Oointerface
		| Primaryie_Ooexception Ooexception
		| Primaryie_Command Command
		| Primaryie_Computeroutput Computeroutput
		| Primaryie_Database Database
		| Primaryie_Email Email
		| Primaryie_Envar Envar
		| Primaryie_Errorcode Errorcode
		| Primaryie_Errorname Errorname
		| Primaryie_Errortype Errortype
		| Primaryie_Errortext Errortext
		| Primaryie_Filename Filename
		| Primaryie_Function Function
		| Primaryie_Guibutton Guibutton
		| Primaryie_Guiicon Guiicon
		| Primaryie_Guilabel Guilabel
		| Primaryie_Guimenu Guimenu
		| Primaryie_Guimenuitem Guimenuitem
		| Primaryie_Guisubmenu Guisubmenu
		| Primaryie_Hardware Hardware
		| Primaryie_Interface Interface
		| Primaryie_Keycap Keycap
		| Primaryie_Keycode Keycode
		| Primaryie_Keycombo Keycombo
		| Primaryie_Keysym Keysym
		| Primaryie_Literal Literal
		| Primaryie_Constant Constant
		| Primaryie_Markup Markup
		| Primaryie_Medialabel Medialabel
		| Primaryie_Menuchoice Menuchoice
		| Primaryie_Mousebutton Mousebutton
		| Primaryie_Option Option
		| Primaryie_Optional Optional
		| Primaryie_Parameter Parameter
		| Primaryie_Prompt Prompt
		| Primaryie_Property Property
		| Primaryie_Replaceable Replaceable
		| Primaryie_Returnvalue Returnvalue
		| Primaryie_Sgmltag Sgmltag
		| Primaryie_Structfield Structfield
		| Primaryie_Structname Structname
		| Primaryie_Symbol Symbol
		| Primaryie_Systemitem Systemitem
		| Primaryie_Token Token
		| Primaryie_Type Type
		| Primaryie_Userinput Userinput
		| Primaryie_Varname Varname
		| Primaryie_Anchor Anchor
		| Primaryie_Author Author
		| Primaryie_Authorinitials Authorinitials
		| Primaryie_Corpauthor Corpauthor
		| Primaryie_Modespec Modespec
		| Primaryie_Othercredit Othercredit
		| Primaryie_Productname Productname
		| Primaryie_Productnumber Productnumber
		| Primaryie_Revhistory Revhistory
		| Primaryie_Remark Remark
		| Primaryie_Subscript Subscript
		| Primaryie_Superscript Superscript
		| Primaryie_Inlinegraphic Inlinegraphic
		| Primaryie_Inlinemediaobject Inlinemediaobject
		deriving (Eq,Show)
data Primaryie_Revisionflag = Primaryie_Revisionflag_Changed  | 
			      Primaryie_Revisionflag_Added  |  Primaryie_Revisionflag_Deleted  | 
			      Primaryie_Revisionflag_Off
			    deriving (Eq,Show)
data Secondaryie = Secondaryie Secondaryie_Attrs [Secondaryie_]
		 deriving (Eq,Show)
data Secondaryie_Attrs = Secondaryie_Attrs
    { secondaryieLinkends :: (Maybe String)
    , secondaryieId :: (Maybe String)
    , secondaryieLang :: (Maybe String)
    , secondaryieRemap :: (Maybe String)
    , secondaryieXreflabel :: (Maybe String)
    , secondaryieRevisionflag :: (Maybe Secondaryie_Revisionflag)
    , secondaryieArch :: (Maybe String)
    , secondaryieCondition :: (Maybe String)
    , secondaryieConformance :: (Maybe String)
    , secondaryieOs :: (Maybe String)
    , secondaryieRevision :: (Maybe String)
    , secondaryieSecurity :: (Maybe String)
    , secondaryieUserlevel :: (Maybe String)
    , secondaryieVendor :: (Maybe String)
    , secondaryieRole :: (Maybe String)
    } deriving (Eq,Show)
data Secondaryie_ = Secondaryie_Str String
		  | Secondaryie_Footnoteref Footnoteref
		  | Secondaryie_Xref Xref
		  | Secondaryie_Abbrev Abbrev
		  | Secondaryie_Acronym Acronym
		  | Secondaryie_Citation Citation
		  | Secondaryie_Citerefentry Citerefentry
		  | Secondaryie_Citetitle Citetitle
		  | Secondaryie_Emphasis Emphasis
		  | Secondaryie_Firstterm Firstterm
		  | Secondaryie_Foreignphrase Foreignphrase
		  | Secondaryie_Glossterm Glossterm
		  | Secondaryie_Footnote Footnote
		  | Secondaryie_Phrase Phrase
		  | Secondaryie_Quote Quote
		  | Secondaryie_Trademark Trademark
		  | Secondaryie_Wordasword Wordasword
		  | Secondaryie_Personname Personname
		  | Secondaryie_Link Link
		  | Secondaryie_Olink Olink
		  | Secondaryie_Ulink Ulink
		  | Secondaryie_Action Action
		  | Secondaryie_Application Application
		  | Secondaryie_Classname Classname
		  | Secondaryie_Methodname Methodname
		  | Secondaryie_Interfacename Interfacename
		  | Secondaryie_Exceptionname Exceptionname
		  | Secondaryie_Ooclass Ooclass
		  | Secondaryie_Oointerface Oointerface
		  | Secondaryie_Ooexception Ooexception
		  | Secondaryie_Command Command
		  | Secondaryie_Computeroutput Computeroutput
		  | Secondaryie_Database Database
		  | Secondaryie_Email Email
		  | Secondaryie_Envar Envar
		  | Secondaryie_Errorcode Errorcode
		  | Secondaryie_Errorname Errorname
		  | Secondaryie_Errortype Errortype
		  | Secondaryie_Errortext Errortext
		  | Secondaryie_Filename Filename
		  | Secondaryie_Function Function
		  | Secondaryie_Guibutton Guibutton
		  | Secondaryie_Guiicon Guiicon
		  | Secondaryie_Guilabel Guilabel
		  | Secondaryie_Guimenu Guimenu
		  | Secondaryie_Guimenuitem Guimenuitem
		  | Secondaryie_Guisubmenu Guisubmenu
		  | Secondaryie_Hardware Hardware
		  | Secondaryie_Interface Interface
		  | Secondaryie_Keycap Keycap
		  | Secondaryie_Keycode Keycode
		  | Secondaryie_Keycombo Keycombo
		  | Secondaryie_Keysym Keysym
		  | Secondaryie_Literal Literal
		  | Secondaryie_Constant Constant
		  | Secondaryie_Markup Markup
		  | Secondaryie_Medialabel Medialabel
		  | Secondaryie_Menuchoice Menuchoice
		  | Secondaryie_Mousebutton Mousebutton
		  | Secondaryie_Option Option
		  | Secondaryie_Optional Optional
		  | Secondaryie_Parameter Parameter
		  | Secondaryie_Prompt Prompt
		  | Secondaryie_Property Property
		  | Secondaryie_Replaceable Replaceable
		  | Secondaryie_Returnvalue Returnvalue
		  | Secondaryie_Sgmltag Sgmltag
		  | Secondaryie_Structfield Structfield
		  | Secondaryie_Structname Structname
		  | Secondaryie_Symbol Symbol
		  | Secondaryie_Systemitem Systemitem
		  | Secondaryie_Token Token
		  | Secondaryie_Type Type
		  | Secondaryie_Userinput Userinput
		  | Secondaryie_Varname Varname
		  | Secondaryie_Anchor Anchor
		  | Secondaryie_Author Author
		  | Secondaryie_Authorinitials Authorinitials
		  | Secondaryie_Corpauthor Corpauthor
		  | Secondaryie_Modespec Modespec
		  | Secondaryie_Othercredit Othercredit
		  | Secondaryie_Productname Productname
		  | Secondaryie_Productnumber Productnumber
		  | Secondaryie_Revhistory Revhistory
		  | Secondaryie_Remark Remark
		  | Secondaryie_Subscript Subscript
		  | Secondaryie_Superscript Superscript
		  | Secondaryie_Inlinegraphic Inlinegraphic
		  | Secondaryie_Inlinemediaobject Inlinemediaobject
		  deriving (Eq,Show)
data Secondaryie_Revisionflag = Secondaryie_Revisionflag_Changed
				 |  Secondaryie_Revisionflag_Added  | 
				Secondaryie_Revisionflag_Deleted  |  Secondaryie_Revisionflag_Off
			      deriving (Eq,Show)
data Tertiaryie = Tertiaryie Tertiaryie_Attrs [Tertiaryie_]
		deriving (Eq,Show)
data Tertiaryie_Attrs = Tertiaryie_Attrs
    { tertiaryieLinkends :: (Maybe String)
    , tertiaryieId :: (Maybe String)
    , tertiaryieLang :: (Maybe String)
    , tertiaryieRemap :: (Maybe String)
    , tertiaryieXreflabel :: (Maybe String)
    , tertiaryieRevisionflag :: (Maybe Tertiaryie_Revisionflag)
    , tertiaryieArch :: (Maybe String)
    , tertiaryieCondition :: (Maybe String)
    , tertiaryieConformance :: (Maybe String)
    , tertiaryieOs :: (Maybe String)
    , tertiaryieRevision :: (Maybe String)
    , tertiaryieSecurity :: (Maybe String)
    , tertiaryieUserlevel :: (Maybe String)
    , tertiaryieVendor :: (Maybe String)
    , tertiaryieRole :: (Maybe String)
    } deriving (Eq,Show)
data Tertiaryie_ = Tertiaryie_Str String
		 | Tertiaryie_Footnoteref Footnoteref
		 | Tertiaryie_Xref Xref
		 | Tertiaryie_Abbrev Abbrev
		 | Tertiaryie_Acronym Acronym
		 | Tertiaryie_Citation Citation
		 | Tertiaryie_Citerefentry Citerefentry
		 | Tertiaryie_Citetitle Citetitle
		 | Tertiaryie_Emphasis Emphasis
		 | Tertiaryie_Firstterm Firstterm
		 | Tertiaryie_Foreignphrase Foreignphrase
		 | Tertiaryie_Glossterm Glossterm
		 | Tertiaryie_Footnote Footnote
		 | Tertiaryie_Phrase Phrase
		 | Tertiaryie_Quote Quote
		 | Tertiaryie_Trademark Trademark
		 | Tertiaryie_Wordasword Wordasword
		 | Tertiaryie_Personname Personname
		 | Tertiaryie_Link Link
		 | Tertiaryie_Olink Olink
		 | Tertiaryie_Ulink Ulink
		 | Tertiaryie_Action Action
		 | Tertiaryie_Application Application
		 | Tertiaryie_Classname Classname
		 | Tertiaryie_Methodname Methodname
		 | Tertiaryie_Interfacename Interfacename
		 | Tertiaryie_Exceptionname Exceptionname
		 | Tertiaryie_Ooclass Ooclass
		 | Tertiaryie_Oointerface Oointerface
		 | Tertiaryie_Ooexception Ooexception
		 | Tertiaryie_Command Command
		 | Tertiaryie_Computeroutput Computeroutput
		 | Tertiaryie_Database Database
		 | Tertiaryie_Email Email
		 | Tertiaryie_Envar Envar
		 | Tertiaryie_Errorcode Errorcode
		 | Tertiaryie_Errorname Errorname
		 | Tertiaryie_Errortype Errortype
		 | Tertiaryie_Errortext Errortext
		 | Tertiaryie_Filename Filename
		 | Tertiaryie_Function Function
		 | Tertiaryie_Guibutton Guibutton
		 | Tertiaryie_Guiicon Guiicon
		 | Tertiaryie_Guilabel Guilabel
		 | Tertiaryie_Guimenu Guimenu
		 | Tertiaryie_Guimenuitem Guimenuitem
		 | Tertiaryie_Guisubmenu Guisubmenu
		 | Tertiaryie_Hardware Hardware
		 | Tertiaryie_Interface Interface
		 | Tertiaryie_Keycap Keycap
		 | Tertiaryie_Keycode Keycode
		 | Tertiaryie_Keycombo Keycombo
		 | Tertiaryie_Keysym Keysym
		 | Tertiaryie_Literal Literal
		 | Tertiaryie_Constant Constant
		 | Tertiaryie_Markup Markup
		 | Tertiaryie_Medialabel Medialabel
		 | Tertiaryie_Menuchoice Menuchoice
		 | Tertiaryie_Mousebutton Mousebutton
		 | Tertiaryie_Option Option
		 | Tertiaryie_Optional Optional
		 | Tertiaryie_Parameter Parameter
		 | Tertiaryie_Prompt Prompt
		 | Tertiaryie_Property Property
		 | Tertiaryie_Replaceable Replaceable
		 | Tertiaryie_Returnvalue Returnvalue
		 | Tertiaryie_Sgmltag Sgmltag
		 | Tertiaryie_Structfield Structfield
		 | Tertiaryie_Structname Structname
		 | Tertiaryie_Symbol Symbol
		 | Tertiaryie_Systemitem Systemitem
		 | Tertiaryie_Token Token
		 | Tertiaryie_Type Type
		 | Tertiaryie_Userinput Userinput
		 | Tertiaryie_Varname Varname
		 | Tertiaryie_Anchor Anchor
		 | Tertiaryie_Author Author
		 | Tertiaryie_Authorinitials Authorinitials
		 | Tertiaryie_Corpauthor Corpauthor
		 | Tertiaryie_Modespec Modespec
		 | Tertiaryie_Othercredit Othercredit
		 | Tertiaryie_Productname Productname
		 | Tertiaryie_Productnumber Productnumber
		 | Tertiaryie_Revhistory Revhistory
		 | Tertiaryie_Remark Remark
		 | Tertiaryie_Subscript Subscript
		 | Tertiaryie_Superscript Superscript
		 | Tertiaryie_Inlinegraphic Inlinegraphic
		 | Tertiaryie_Inlinemediaobject Inlinemediaobject
		 deriving (Eq,Show)
data Tertiaryie_Revisionflag = Tertiaryie_Revisionflag_Changed  | 
			       Tertiaryie_Revisionflag_Added  |  Tertiaryie_Revisionflag_Deleted
			        |  Tertiaryie_Revisionflag_Off
			     deriving (Eq,Show)
data Seeie = Seeie Seeie_Attrs [Seeie_]
	   deriving (Eq,Show)
data Seeie_Attrs = Seeie_Attrs
    { seeieLinkend :: (Maybe String)
    , seeieId :: (Maybe String)
    , seeieLang :: (Maybe String)
    , seeieRemap :: (Maybe String)
    , seeieXreflabel :: (Maybe String)
    , seeieRevisionflag :: (Maybe Seeie_Revisionflag)
    , seeieArch :: (Maybe String)
    , seeieCondition :: (Maybe String)
    , seeieConformance :: (Maybe String)
    , seeieOs :: (Maybe String)
    , seeieRevision :: (Maybe String)
    , seeieSecurity :: (Maybe String)
    , seeieUserlevel :: (Maybe String)
    , seeieVendor :: (Maybe String)
    , seeieRole :: (Maybe String)
    } deriving (Eq,Show)
data Seeie_ = Seeie_Str String
	    | Seeie_Footnoteref Footnoteref
	    | Seeie_Xref Xref
	    | Seeie_Abbrev Abbrev
	    | Seeie_Acronym Acronym
	    | Seeie_Citation Citation
	    | Seeie_Citerefentry Citerefentry
	    | Seeie_Citetitle Citetitle
	    | Seeie_Emphasis Emphasis
	    | Seeie_Firstterm Firstterm
	    | Seeie_Foreignphrase Foreignphrase
	    | Seeie_Glossterm Glossterm
	    | Seeie_Footnote Footnote
	    | Seeie_Phrase Phrase
	    | Seeie_Quote Quote
	    | Seeie_Trademark Trademark
	    | Seeie_Wordasword Wordasword
	    | Seeie_Personname Personname
	    | Seeie_Link Link
	    | Seeie_Olink Olink
	    | Seeie_Ulink Ulink
	    | Seeie_Action Action
	    | Seeie_Application Application
	    | Seeie_Classname Classname
	    | Seeie_Methodname Methodname
	    | Seeie_Interfacename Interfacename
	    | Seeie_Exceptionname Exceptionname
	    | Seeie_Ooclass Ooclass
	    | Seeie_Oointerface Oointerface
	    | Seeie_Ooexception Ooexception
	    | Seeie_Command Command
	    | Seeie_Computeroutput Computeroutput
	    | Seeie_Database Database
	    | Seeie_Email Email
	    | Seeie_Envar Envar
	    | Seeie_Errorcode Errorcode
	    | Seeie_Errorname Errorname
	    | Seeie_Errortype Errortype
	    | Seeie_Errortext Errortext
	    | Seeie_Filename Filename
	    | Seeie_Function Function
	    | Seeie_Guibutton Guibutton
	    | Seeie_Guiicon Guiicon
	    | Seeie_Guilabel Guilabel
	    | Seeie_Guimenu Guimenu
	    | Seeie_Guimenuitem Guimenuitem
	    | Seeie_Guisubmenu Guisubmenu
	    | Seeie_Hardware Hardware
	    | Seeie_Interface Interface
	    | Seeie_Keycap Keycap
	    | Seeie_Keycode Keycode
	    | Seeie_Keycombo Keycombo
	    | Seeie_Keysym Keysym
	    | Seeie_Literal Literal
	    | Seeie_Constant Constant
	    | Seeie_Markup Markup
	    | Seeie_Medialabel Medialabel
	    | Seeie_Menuchoice Menuchoice
	    | Seeie_Mousebutton Mousebutton
	    | Seeie_Option Option
	    | Seeie_Optional Optional
	    | Seeie_Parameter Parameter
	    | Seeie_Prompt Prompt
	    | Seeie_Property Property
	    | Seeie_Replaceable Replaceable
	    | Seeie_Returnvalue Returnvalue
	    | Seeie_Sgmltag Sgmltag
	    | Seeie_Structfield Structfield
	    | Seeie_Structname Structname
	    | Seeie_Symbol Symbol
	    | Seeie_Systemitem Systemitem
	    | Seeie_Token Token
	    | Seeie_Type Type
	    | Seeie_Userinput Userinput
	    | Seeie_Varname Varname
	    | Seeie_Anchor Anchor
	    | Seeie_Author Author
	    | Seeie_Authorinitials Authorinitials
	    | Seeie_Corpauthor Corpauthor
	    | Seeie_Modespec Modespec
	    | Seeie_Othercredit Othercredit
	    | Seeie_Productname Productname
	    | Seeie_Productnumber Productnumber
	    | Seeie_Revhistory Revhistory
	    | Seeie_Remark Remark
	    | Seeie_Subscript Subscript
	    | Seeie_Superscript Superscript
	    | Seeie_Inlinegraphic Inlinegraphic
	    | Seeie_Inlinemediaobject Inlinemediaobject
	    deriving (Eq,Show)
data Seeie_Revisionflag = Seeie_Revisionflag_Changed  | 
			  Seeie_Revisionflag_Added  |  Seeie_Revisionflag_Deleted  | 
			  Seeie_Revisionflag_Off
			deriving (Eq,Show)
data Seealsoie = Seealsoie Seealsoie_Attrs [Seealsoie_]
	       deriving (Eq,Show)
data Seealsoie_Attrs = Seealsoie_Attrs
    { seealsoieLinkends :: (Maybe String)
    , seealsoieId :: (Maybe String)
    , seealsoieLang :: (Maybe String)
    , seealsoieRemap :: (Maybe String)
    , seealsoieXreflabel :: (Maybe String)
    , seealsoieRevisionflag :: (Maybe Seealsoie_Revisionflag)
    , seealsoieArch :: (Maybe String)
    , seealsoieCondition :: (Maybe String)
    , seealsoieConformance :: (Maybe String)
    , seealsoieOs :: (Maybe String)
    , seealsoieRevision :: (Maybe String)
    , seealsoieSecurity :: (Maybe String)
    , seealsoieUserlevel :: (Maybe String)
    , seealsoieVendor :: (Maybe String)
    , seealsoieRole :: (Maybe String)
    } deriving (Eq,Show)
data Seealsoie_ = Seealsoie_Str String
		| Seealsoie_Footnoteref Footnoteref
		| Seealsoie_Xref Xref
		| Seealsoie_Abbrev Abbrev
		| Seealsoie_Acronym Acronym
		| Seealsoie_Citation Citation
		| Seealsoie_Citerefentry Citerefentry
		| Seealsoie_Citetitle Citetitle
		| Seealsoie_Emphasis Emphasis
		| Seealsoie_Firstterm Firstterm
		| Seealsoie_Foreignphrase Foreignphrase
		| Seealsoie_Glossterm Glossterm
		| Seealsoie_Footnote Footnote
		| Seealsoie_Phrase Phrase
		| Seealsoie_Quote Quote
		| Seealsoie_Trademark Trademark
		| Seealsoie_Wordasword Wordasword
		| Seealsoie_Personname Personname
		| Seealsoie_Link Link
		| Seealsoie_Olink Olink
		| Seealsoie_Ulink Ulink
		| Seealsoie_Action Action
		| Seealsoie_Application Application
		| Seealsoie_Classname Classname
		| Seealsoie_Methodname Methodname
		| Seealsoie_Interfacename Interfacename
		| Seealsoie_Exceptionname Exceptionname
		| Seealsoie_Ooclass Ooclass
		| Seealsoie_Oointerface Oointerface
		| Seealsoie_Ooexception Ooexception
		| Seealsoie_Command Command
		| Seealsoie_Computeroutput Computeroutput
		| Seealsoie_Database Database
		| Seealsoie_Email Email
		| Seealsoie_Envar Envar
		| Seealsoie_Errorcode Errorcode
		| Seealsoie_Errorname Errorname
		| Seealsoie_Errortype Errortype
		| Seealsoie_Errortext Errortext
		| Seealsoie_Filename Filename
		| Seealsoie_Function Function
		| Seealsoie_Guibutton Guibutton
		| Seealsoie_Guiicon Guiicon
		| Seealsoie_Guilabel Guilabel
		| Seealsoie_Guimenu Guimenu
		| Seealsoie_Guimenuitem Guimenuitem
		| Seealsoie_Guisubmenu Guisubmenu
		| Seealsoie_Hardware Hardware
		| Seealsoie_Interface Interface
		| Seealsoie_Keycap Keycap
		| Seealsoie_Keycode Keycode
		| Seealsoie_Keycombo Keycombo
		| Seealsoie_Keysym Keysym
		| Seealsoie_Literal Literal
		| Seealsoie_Constant Constant
		| Seealsoie_Markup Markup
		| Seealsoie_Medialabel Medialabel
		| Seealsoie_Menuchoice Menuchoice
		| Seealsoie_Mousebutton Mousebutton
		| Seealsoie_Option Option
		| Seealsoie_Optional Optional
		| Seealsoie_Parameter Parameter
		| Seealsoie_Prompt Prompt
		| Seealsoie_Property Property
		| Seealsoie_Replaceable Replaceable
		| Seealsoie_Returnvalue Returnvalue
		| Seealsoie_Sgmltag Sgmltag
		| Seealsoie_Structfield Structfield
		| Seealsoie_Structname Structname
		| Seealsoie_Symbol Symbol
		| Seealsoie_Systemitem Systemitem
		| Seealsoie_Token Token
		| Seealsoie_Type Type
		| Seealsoie_Userinput Userinput
		| Seealsoie_Varname Varname
		| Seealsoie_Anchor Anchor
		| Seealsoie_Author Author
		| Seealsoie_Authorinitials Authorinitials
		| Seealsoie_Corpauthor Corpauthor
		| Seealsoie_Modespec Modespec
		| Seealsoie_Othercredit Othercredit
		| Seealsoie_Productname Productname
		| Seealsoie_Productnumber Productnumber
		| Seealsoie_Revhistory Revhistory
		| Seealsoie_Remark Remark
		| Seealsoie_Subscript Subscript
		| Seealsoie_Superscript Superscript
		| Seealsoie_Inlinegraphic Inlinegraphic
		| Seealsoie_Inlinemediaobject Inlinemediaobject
		deriving (Eq,Show)
data Seealsoie_Revisionflag = Seealsoie_Revisionflag_Changed  | 
			      Seealsoie_Revisionflag_Added  |  Seealsoie_Revisionflag_Deleted  | 
			      Seealsoie_Revisionflag_Off
			    deriving (Eq,Show)
data Refentry = Refentry Refentry_Attrs (Maybe Beginpage)
			 [(Indexterm)] (Maybe Refentryinfo) (Maybe Refmeta)
			 [(OneOf4 Remark Link Olink Ulink)] Refnamediv
			 (Maybe Refsynopsisdiv) (OneOf2 [Refsect1] [Refsection])
	      deriving (Eq,Show)
data Refentry_Attrs = Refentry_Attrs
    { refentryStatus :: (Maybe String)
    , refentryId :: (Maybe String)
    , refentryLang :: (Maybe String)
    , refentryRemap :: (Maybe String)
    , refentryXreflabel :: (Maybe String)
    , refentryRevisionflag :: (Maybe Refentry_Revisionflag)
    , refentryArch :: (Maybe String)
    , refentryCondition :: (Maybe String)
    , refentryConformance :: (Maybe String)
    , refentryOs :: (Maybe String)
    , refentryRevision :: (Maybe String)
    , refentrySecurity :: (Maybe String)
    , refentryUserlevel :: (Maybe String)
    , refentryVendor :: (Maybe String)
    , refentryRole :: (Maybe String)
    } deriving (Eq,Show)
data Refentry_Revisionflag = Refentry_Revisionflag_Changed  | 
			     Refentry_Revisionflag_Added  |  Refentry_Revisionflag_Deleted  | 
			     Refentry_Revisionflag_Off
			   deriving (Eq,Show)
data Refmeta = Refmeta Refmeta_Attrs [(Indexterm)] Refentrytitle
		       (Maybe Manvolnum) [Refmiscinfo] [(Indexterm)]
	     deriving (Eq,Show)
data Refmeta_Attrs = Refmeta_Attrs
    { refmetaId :: (Maybe String)
    , refmetaLang :: (Maybe String)
    , refmetaRemap :: (Maybe String)
    , refmetaXreflabel :: (Maybe String)
    , refmetaRevisionflag :: (Maybe Refmeta_Revisionflag)
    , refmetaArch :: (Maybe String)
    , refmetaCondition :: (Maybe String)
    , refmetaConformance :: (Maybe String)
    , refmetaOs :: (Maybe String)
    , refmetaRevision :: (Maybe String)
    , refmetaSecurity :: (Maybe String)
    , refmetaUserlevel :: (Maybe String)
    , refmetaVendor :: (Maybe String)
    , refmetaRole :: (Maybe String)
    } deriving (Eq,Show)
data Refmeta_Revisionflag = Refmeta_Revisionflag_Changed  | 
			    Refmeta_Revisionflag_Added  |  Refmeta_Revisionflag_Deleted  | 
			    Refmeta_Revisionflag_Off
			  deriving (Eq,Show)
data Refmiscinfo = Refmiscinfo Refmiscinfo_Attrs [Refmiscinfo_]
		 deriving (Eq,Show)
data Refmiscinfo_Attrs = Refmiscinfo_Attrs
    { refmiscinfoClass :: (Maybe String)
    , refmiscinfoId :: (Maybe String)
    , refmiscinfoLang :: (Maybe String)
    , refmiscinfoRemap :: (Maybe String)
    , refmiscinfoXreflabel :: (Maybe String)
    , refmiscinfoRevisionflag :: (Maybe Refmiscinfo_Revisionflag)
    , refmiscinfoArch :: (Maybe String)
    , refmiscinfoCondition :: (Maybe String)
    , refmiscinfoConformance :: (Maybe String)
    , refmiscinfoOs :: (Maybe String)
    , refmiscinfoRevision :: (Maybe String)
    , refmiscinfoSecurity :: (Maybe String)
    , refmiscinfoUserlevel :: (Maybe String)
    , refmiscinfoVendor :: (Maybe String)
    , refmiscinfoRole :: (Maybe String)
    } deriving (Eq,Show)
data Refmiscinfo_ = Refmiscinfo_Str String
		  | Refmiscinfo_Link Link
		  | Refmiscinfo_Olink Olink
		  | Refmiscinfo_Ulink Ulink
		  | Refmiscinfo_Emphasis Emphasis
		  | Refmiscinfo_Trademark Trademark
		  | Refmiscinfo_Replaceable Replaceable
		  | Refmiscinfo_Remark Remark
		  | Refmiscinfo_Subscript Subscript
		  | Refmiscinfo_Superscript Superscript
		  | Refmiscinfo_Inlinegraphic Inlinegraphic
		  | Refmiscinfo_Inlinemediaobject Inlinemediaobject
		  | Refmiscinfo_Indexterm Indexterm
		  deriving (Eq,Show)
data Refmiscinfo_Revisionflag = Refmiscinfo_Revisionflag_Changed
				 |  Refmiscinfo_Revisionflag_Added  | 
				Refmiscinfo_Revisionflag_Deleted  |  Refmiscinfo_Revisionflag_Off
			      deriving (Eq,Show)
data Refnamediv = Refnamediv Refnamediv_Attrs (Maybe Refdescriptor)
			     [Refname] Refpurpose [Refclass] [(OneOf4 Remark Link Olink Ulink)]
		deriving (Eq,Show)
data Refnamediv_Attrs = Refnamediv_Attrs
    { refnamedivId :: (Maybe String)
    , refnamedivLang :: (Maybe String)
    , refnamedivRemap :: (Maybe String)
    , refnamedivXreflabel :: (Maybe String)
    , refnamedivRevisionflag :: (Maybe Refnamediv_Revisionflag)
    , refnamedivArch :: (Maybe String)
    , refnamedivCondition :: (Maybe String)
    , refnamedivConformance :: (Maybe String)
    , refnamedivOs :: (Maybe String)
    , refnamedivRevision :: (Maybe String)
    , refnamedivSecurity :: (Maybe String)
    , refnamedivUserlevel :: (Maybe String)
    , refnamedivVendor :: (Maybe String)
    , refnamedivRole :: (Maybe String)
    } deriving (Eq,Show)
data Refnamediv_Revisionflag = Refnamediv_Revisionflag_Changed  | 
			       Refnamediv_Revisionflag_Added  |  Refnamediv_Revisionflag_Deleted
			        |  Refnamediv_Revisionflag_Off
			     deriving (Eq,Show)
data Refdescriptor = Refdescriptor Refdescriptor_Attrs
				   [Refdescriptor_]
		   deriving (Eq,Show)
data Refdescriptor_Attrs = Refdescriptor_Attrs
    { refdescriptorId :: (Maybe String)
    , refdescriptorLang :: (Maybe String)
    , refdescriptorRemap :: (Maybe String)
    , refdescriptorXreflabel :: (Maybe String)
    , refdescriptorRevisionflag :: (Maybe Refdescriptor_Revisionflag)
    , refdescriptorArch :: (Maybe String)
    , refdescriptorCondition :: (Maybe String)
    , refdescriptorConformance :: (Maybe String)
    , refdescriptorOs :: (Maybe String)
    , refdescriptorRevision :: (Maybe String)
    , refdescriptorSecurity :: (Maybe String)
    , refdescriptorUserlevel :: (Maybe String)
    , refdescriptorVendor :: (Maybe String)
    , refdescriptorRole :: (Maybe String)
    } deriving (Eq,Show)
data Refdescriptor_ = Refdescriptor_Str String
		    | Refdescriptor_Action Action
		    | Refdescriptor_Application Application
		    | Refdescriptor_Classname Classname
		    | Refdescriptor_Methodname Methodname
		    | Refdescriptor_Interfacename Interfacename
		    | Refdescriptor_Exceptionname Exceptionname
		    | Refdescriptor_Ooclass Ooclass
		    | Refdescriptor_Oointerface Oointerface
		    | Refdescriptor_Ooexception Ooexception
		    | Refdescriptor_Command Command
		    | Refdescriptor_Computeroutput Computeroutput
		    | Refdescriptor_Database Database
		    | Refdescriptor_Email Email
		    | Refdescriptor_Envar Envar
		    | Refdescriptor_Errorcode Errorcode
		    | Refdescriptor_Errorname Errorname
		    | Refdescriptor_Errortype Errortype
		    | Refdescriptor_Errortext Errortext
		    | Refdescriptor_Filename Filename
		    | Refdescriptor_Function Function
		    | Refdescriptor_Guibutton Guibutton
		    | Refdescriptor_Guiicon Guiicon
		    | Refdescriptor_Guilabel Guilabel
		    | Refdescriptor_Guimenu Guimenu
		    | Refdescriptor_Guimenuitem Guimenuitem
		    | Refdescriptor_Guisubmenu Guisubmenu
		    | Refdescriptor_Hardware Hardware
		    | Refdescriptor_Interface Interface
		    | Refdescriptor_Keycap Keycap
		    | Refdescriptor_Keycode Keycode
		    | Refdescriptor_Keycombo Keycombo
		    | Refdescriptor_Keysym Keysym
		    | Refdescriptor_Literal Literal
		    | Refdescriptor_Constant Constant
		    | Refdescriptor_Markup Markup
		    | Refdescriptor_Medialabel Medialabel
		    | Refdescriptor_Menuchoice Menuchoice
		    | Refdescriptor_Mousebutton Mousebutton
		    | Refdescriptor_Option Option
		    | Refdescriptor_Optional Optional
		    | Refdescriptor_Parameter Parameter
		    | Refdescriptor_Prompt Prompt
		    | Refdescriptor_Property Property
		    | Refdescriptor_Replaceable Replaceable
		    | Refdescriptor_Returnvalue Returnvalue
		    | Refdescriptor_Sgmltag Sgmltag
		    | Refdescriptor_Structfield Structfield
		    | Refdescriptor_Structname Structname
		    | Refdescriptor_Symbol Symbol
		    | Refdescriptor_Systemitem Systemitem
		    | Refdescriptor_Token Token
		    | Refdescriptor_Type Type
		    | Refdescriptor_Userinput Userinput
		    | Refdescriptor_Varname Varname
		    deriving (Eq,Show)
data Refdescriptor_Revisionflag = Refdescriptor_Revisionflag_Changed
				   |  Refdescriptor_Revisionflag_Added  | 
				  Refdescriptor_Revisionflag_Deleted  | 
				  Refdescriptor_Revisionflag_Off
				deriving (Eq,Show)
data Refname = Refname Refname_Attrs [Refname_]
	     deriving (Eq,Show)
data Refname_Attrs = Refname_Attrs
    { refnameId :: (Maybe String)
    , refnameLang :: (Maybe String)
    , refnameRemap :: (Maybe String)
    , refnameXreflabel :: (Maybe String)
    , refnameRevisionflag :: (Maybe Refname_Revisionflag)
    , refnameArch :: (Maybe String)
    , refnameCondition :: (Maybe String)
    , refnameConformance :: (Maybe String)
    , refnameOs :: (Maybe String)
    , refnameRevision :: (Maybe String)
    , refnameSecurity :: (Maybe String)
    , refnameUserlevel :: (Maybe String)
    , refnameVendor :: (Maybe String)
    , refnameRole :: (Maybe String)
    } deriving (Eq,Show)
data Refname_ = Refname_Str String
	      | Refname_Action Action
	      | Refname_Application Application
	      | Refname_Classname Classname
	      | Refname_Methodname Methodname
	      | Refname_Interfacename Interfacename
	      | Refname_Exceptionname Exceptionname
	      | Refname_Ooclass Ooclass
	      | Refname_Oointerface Oointerface
	      | Refname_Ooexception Ooexception
	      | Refname_Command Command
	      | Refname_Computeroutput Computeroutput
	      | Refname_Database Database
	      | Refname_Email Email
	      | Refname_Envar Envar
	      | Refname_Errorcode Errorcode
	      | Refname_Errorname Errorname
	      | Refname_Errortype Errortype
	      | Refname_Errortext Errortext
	      | Refname_Filename Filename
	      | Refname_Function Function
	      | Refname_Guibutton Guibutton
	      | Refname_Guiicon Guiicon
	      | Refname_Guilabel Guilabel
	      | Refname_Guimenu Guimenu
	      | Refname_Guimenuitem Guimenuitem
	      | Refname_Guisubmenu Guisubmenu
	      | Refname_Hardware Hardware
	      | Refname_Interface Interface
	      | Refname_Keycap Keycap
	      | Refname_Keycode Keycode
	      | Refname_Keycombo Keycombo
	      | Refname_Keysym Keysym
	      | Refname_Literal Literal
	      | Refname_Constant Constant
	      | Refname_Markup Markup
	      | Refname_Medialabel Medialabel
	      | Refname_Menuchoice Menuchoice
	      | Refname_Mousebutton Mousebutton
	      | Refname_Option Option
	      | Refname_Optional Optional
	      | Refname_Parameter Parameter
	      | Refname_Prompt Prompt
	      | Refname_Property Property
	      | Refname_Replaceable Replaceable
	      | Refname_Returnvalue Returnvalue
	      | Refname_Sgmltag Sgmltag
	      | Refname_Structfield Structfield
	      | Refname_Structname Structname
	      | Refname_Symbol Symbol
	      | Refname_Systemitem Systemitem
	      | Refname_Token Token
	      | Refname_Type Type
	      | Refname_Userinput Userinput
	      | Refname_Varname Varname
	      deriving (Eq,Show)
data Refname_Revisionflag = Refname_Revisionflag_Changed  | 
			    Refname_Revisionflag_Added  |  Refname_Revisionflag_Deleted  | 
			    Refname_Revisionflag_Off
			  deriving (Eq,Show)
data Refpurpose = Refpurpose Refpurpose_Attrs [Refpurpose_]
		deriving (Eq,Show)
data Refpurpose_Attrs = Refpurpose_Attrs
    { refpurposeId :: (Maybe String)
    , refpurposeLang :: (Maybe String)
    , refpurposeRemap :: (Maybe String)
    , refpurposeXreflabel :: (Maybe String)
    , refpurposeRevisionflag :: (Maybe Refpurpose_Revisionflag)
    , refpurposeArch :: (Maybe String)
    , refpurposeCondition :: (Maybe String)
    , refpurposeConformance :: (Maybe String)
    , refpurposeOs :: (Maybe String)
    , refpurposeRevision :: (Maybe String)
    , refpurposeSecurity :: (Maybe String)
    , refpurposeUserlevel :: (Maybe String)
    , refpurposeVendor :: (Maybe String)
    , refpurposeRole :: (Maybe String)
    } deriving (Eq,Show)
data Refpurpose_ = Refpurpose_Str String
		 | Refpurpose_Footnoteref Footnoteref
		 | Refpurpose_Xref Xref
		 | Refpurpose_Abbrev Abbrev
		 | Refpurpose_Acronym Acronym
		 | Refpurpose_Citation Citation
		 | Refpurpose_Citerefentry Citerefentry
		 | Refpurpose_Citetitle Citetitle
		 | Refpurpose_Emphasis Emphasis
		 | Refpurpose_Firstterm Firstterm
		 | Refpurpose_Foreignphrase Foreignphrase
		 | Refpurpose_Glossterm Glossterm
		 | Refpurpose_Footnote Footnote
		 | Refpurpose_Phrase Phrase
		 | Refpurpose_Quote Quote
		 | Refpurpose_Trademark Trademark
		 | Refpurpose_Wordasword Wordasword
		 | Refpurpose_Personname Personname
		 | Refpurpose_Link Link
		 | Refpurpose_Olink Olink
		 | Refpurpose_Ulink Ulink
		 | Refpurpose_Action Action
		 | Refpurpose_Application Application
		 | Refpurpose_Classname Classname
		 | Refpurpose_Methodname Methodname
		 | Refpurpose_Interfacename Interfacename
		 | Refpurpose_Exceptionname Exceptionname
		 | Refpurpose_Ooclass Ooclass
		 | Refpurpose_Oointerface Oointerface
		 | Refpurpose_Ooexception Ooexception
		 | Refpurpose_Command Command
		 | Refpurpose_Computeroutput Computeroutput
		 | Refpurpose_Database Database
		 | Refpurpose_Email Email
		 | Refpurpose_Envar Envar
		 | Refpurpose_Errorcode Errorcode
		 | Refpurpose_Errorname Errorname
		 | Refpurpose_Errortype Errortype
		 | Refpurpose_Errortext Errortext
		 | Refpurpose_Filename Filename
		 | Refpurpose_Function Function
		 | Refpurpose_Guibutton Guibutton
		 | Refpurpose_Guiicon Guiicon
		 | Refpurpose_Guilabel Guilabel
		 | Refpurpose_Guimenu Guimenu
		 | Refpurpose_Guimenuitem Guimenuitem
		 | Refpurpose_Guisubmenu Guisubmenu
		 | Refpurpose_Hardware Hardware
		 | Refpurpose_Interface Interface
		 | Refpurpose_Keycap Keycap
		 | Refpurpose_Keycode Keycode
		 | Refpurpose_Keycombo Keycombo
		 | Refpurpose_Keysym Keysym
		 | Refpurpose_Literal Literal
		 | Refpurpose_Constant Constant
		 | Refpurpose_Markup Markup
		 | Refpurpose_Medialabel Medialabel
		 | Refpurpose_Menuchoice Menuchoice
		 | Refpurpose_Mousebutton Mousebutton
		 | Refpurpose_Option Option
		 | Refpurpose_Optional Optional
		 | Refpurpose_Parameter Parameter
		 | Refpurpose_Prompt Prompt
		 | Refpurpose_Property Property
		 | Refpurpose_Replaceable Replaceable
		 | Refpurpose_Returnvalue Returnvalue
		 | Refpurpose_Sgmltag Sgmltag
		 | Refpurpose_Structfield Structfield
		 | Refpurpose_Structname Structname
		 | Refpurpose_Symbol Symbol
		 | Refpurpose_Systemitem Systemitem
		 | Refpurpose_Token Token
		 | Refpurpose_Type Type
		 | Refpurpose_Userinput Userinput
		 | Refpurpose_Varname Varname
		 | Refpurpose_Anchor Anchor
		 | Refpurpose_Author Author
		 | Refpurpose_Authorinitials Authorinitials
		 | Refpurpose_Corpauthor Corpauthor
		 | Refpurpose_Modespec Modespec
		 | Refpurpose_Othercredit Othercredit
		 | Refpurpose_Productname Productname
		 | Refpurpose_Productnumber Productnumber
		 | Refpurpose_Revhistory Revhistory
		 | Refpurpose_Remark Remark
		 | Refpurpose_Subscript Subscript
		 | Refpurpose_Superscript Superscript
		 | Refpurpose_Indexterm Indexterm
		 | Refpurpose_Beginpage Beginpage
		 deriving (Eq,Show)
data Refpurpose_Revisionflag = Refpurpose_Revisionflag_Changed  | 
			       Refpurpose_Revisionflag_Added  |  Refpurpose_Revisionflag_Deleted
			        |  Refpurpose_Revisionflag_Off
			     deriving (Eq,Show)
data Refclass = Refclass Refclass_Attrs [Refclass_]
	      deriving (Eq,Show)
data Refclass_Attrs = Refclass_Attrs
    { refclassId :: (Maybe String)
    , refclassLang :: (Maybe String)
    , refclassRemap :: (Maybe String)
    , refclassXreflabel :: (Maybe String)
    , refclassRevisionflag :: (Maybe Refclass_Revisionflag)
    , refclassArch :: (Maybe String)
    , refclassCondition :: (Maybe String)
    , refclassConformance :: (Maybe String)
    , refclassOs :: (Maybe String)
    , refclassRevision :: (Maybe String)
    , refclassSecurity :: (Maybe String)
    , refclassUserlevel :: (Maybe String)
    , refclassVendor :: (Maybe String)
    , refclassRole :: (Maybe String)
    } deriving (Eq,Show)
data Refclass_ = Refclass_Str String
	       | Refclass_Application Application
	       deriving (Eq,Show)
data Refclass_Revisionflag = Refclass_Revisionflag_Changed  | 
			     Refclass_Revisionflag_Added  |  Refclass_Revisionflag_Deleted  | 
			     Refclass_Revisionflag_Off
			   deriving (Eq,Show)
data Refsynopsisdiv = Refsynopsisdiv Refsynopsisdiv_Attrs
				     (Maybe Refsynopsisdivinfo)
				     (Maybe (Title,(Maybe Subtitle),(Maybe Titleabbrev)))
				     (OneOf3 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)] [Refsect2] [Refsect2])
		    deriving (Eq,Show)
data Refsynopsisdiv_Attrs = Refsynopsisdiv_Attrs
    { refsynopsisdivId :: (Maybe String)
    , refsynopsisdivLang :: (Maybe String)
    , refsynopsisdivRemap :: (Maybe String)
    , refsynopsisdivXreflabel :: (Maybe String)
    , refsynopsisdivRevisionflag :: (Maybe Refsynopsisdiv_Revisionflag)
    , refsynopsisdivArch :: (Maybe String)
    , refsynopsisdivCondition :: (Maybe String)
    , refsynopsisdivConformance :: (Maybe String)
    , refsynopsisdivOs :: (Maybe String)
    , refsynopsisdivRevision :: (Maybe String)
    , refsynopsisdivSecurity :: (Maybe String)
    , refsynopsisdivUserlevel :: (Maybe String)
    , refsynopsisdivVendor :: (Maybe String)
    , refsynopsisdivRole :: (Maybe String)
    } deriving (Eq,Show)
data Refsynopsisdiv_Revisionflag = Refsynopsisdiv_Revisionflag_Changed
				    |  Refsynopsisdiv_Revisionflag_Added  | 
				   Refsynopsisdiv_Revisionflag_Deleted  | 
				   Refsynopsisdiv_Revisionflag_Off
				 deriving (Eq,Show)
data Refsection = Refsection Refsection_Attrs
			     (Maybe Refsectioninfo) Title (Maybe Subtitle) (Maybe Titleabbrev)
			     (OneOf3 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)] [Refsection] [Refsection])
		deriving (Eq,Show)
data Refsection_Attrs = Refsection_Attrs
    { refsectionStatus :: (Maybe String)
    , refsectionId :: (Maybe String)
    , refsectionLang :: (Maybe String)
    , refsectionRemap :: (Maybe String)
    , refsectionXreflabel :: (Maybe String)
    , refsectionRevisionflag :: (Maybe Refsection_Revisionflag)
    , refsectionArch :: (Maybe String)
    , refsectionCondition :: (Maybe String)
    , refsectionConformance :: (Maybe String)
    , refsectionOs :: (Maybe String)
    , refsectionRevision :: (Maybe String)
    , refsectionSecurity :: (Maybe String)
    , refsectionUserlevel :: (Maybe String)
    , refsectionVendor :: (Maybe String)
    , refsectionRole :: (Maybe String)
    } deriving (Eq,Show)
data Refsection_Revisionflag = Refsection_Revisionflag_Changed  | 
			       Refsection_Revisionflag_Added  |  Refsection_Revisionflag_Deleted
			        |  Refsection_Revisionflag_Off
			     deriving (Eq,Show)
data Refsect1 = Refsect1 Refsect1_Attrs (Maybe Refsect1info) Title
			 (Maybe Subtitle) (Maybe Titleabbrev)
			 (OneOf3 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)] [Refsect2] [Refsect2])
	      deriving (Eq,Show)
data Refsect1_Attrs = Refsect1_Attrs
    { refsect1Status :: (Maybe String)
    , refsect1Id :: (Maybe String)
    , refsect1Lang :: (Maybe String)
    , refsect1Remap :: (Maybe String)
    , refsect1Xreflabel :: (Maybe String)
    , refsect1Revisionflag :: (Maybe Refsect1_Revisionflag)
    , refsect1Arch :: (Maybe String)
    , refsect1Condition :: (Maybe String)
    , refsect1Conformance :: (Maybe String)
    , refsect1Os :: (Maybe String)
    , refsect1Revision :: (Maybe String)
    , refsect1Security :: (Maybe String)
    , refsect1Userlevel :: (Maybe String)
    , refsect1Vendor :: (Maybe String)
    , refsect1Role :: (Maybe String)
    } deriving (Eq,Show)
data Refsect1_Revisionflag = Refsect1_Revisionflag_Changed  | 
			     Refsect1_Revisionflag_Added  |  Refsect1_Revisionflag_Deleted  | 
			     Refsect1_Revisionflag_Off
			   deriving (Eq,Show)
data Refsect2 = Refsect2 Refsect2_Attrs (Maybe Refsect2info) Title
			 (Maybe Subtitle) (Maybe Titleabbrev)
			 (OneOf3 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)] [Refsect3] [Refsect3])
	      deriving (Eq,Show)
data Refsect2_Attrs = Refsect2_Attrs
    { refsect2Status :: (Maybe String)
    , refsect2Id :: (Maybe String)
    , refsect2Lang :: (Maybe String)
    , refsect2Remap :: (Maybe String)
    , refsect2Xreflabel :: (Maybe String)
    , refsect2Revisionflag :: (Maybe Refsect2_Revisionflag)
    , refsect2Arch :: (Maybe String)
    , refsect2Condition :: (Maybe String)
    , refsect2Conformance :: (Maybe String)
    , refsect2Os :: (Maybe String)
    , refsect2Revision :: (Maybe String)
    , refsect2Security :: (Maybe String)
    , refsect2Userlevel :: (Maybe String)
    , refsect2Vendor :: (Maybe String)
    , refsect2Role :: (Maybe String)
    } deriving (Eq,Show)
data Refsect2_Revisionflag = Refsect2_Revisionflag_Changed  | 
			     Refsect2_Revisionflag_Added  |  Refsect2_Revisionflag_Deleted  | 
			     Refsect2_Revisionflag_Off
			   deriving (Eq,Show)
data Refsect3 = Refsect3 Refsect3_Attrs (Maybe Refsect3info) Title
			 (Maybe Subtitle) (Maybe Titleabbrev)
			 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)]
	      deriving (Eq,Show)
data Refsect3_Attrs = Refsect3_Attrs
    { refsect3Status :: (Maybe String)
    , refsect3Id :: (Maybe String)
    , refsect3Lang :: (Maybe String)
    , refsect3Remap :: (Maybe String)
    , refsect3Xreflabel :: (Maybe String)
    , refsect3Revisionflag :: (Maybe Refsect3_Revisionflag)
    , refsect3Arch :: (Maybe String)
    , refsect3Condition :: (Maybe String)
    , refsect3Conformance :: (Maybe String)
    , refsect3Os :: (Maybe String)
    , refsect3Revision :: (Maybe String)
    , refsect3Security :: (Maybe String)
    , refsect3Userlevel :: (Maybe String)
    , refsect3Vendor :: (Maybe String)
    , refsect3Role :: (Maybe String)
    } deriving (Eq,Show)
data Refsect3_Revisionflag = Refsect3_Revisionflag_Changed  | 
			     Refsect3_Revisionflag_Added  |  Refsect3_Revisionflag_Deleted  | 
			     Refsect3_Revisionflag_Off
			   deriving (Eq,Show)
data Article = Article Article_Attrs
		       (Maybe (Title,(Maybe Subtitle),(Maybe Titleabbrev)))
		       (Maybe Articleinfo) (Maybe Tocchap) [Lot]
		       (OneOf3 [(OneOf56 Calloutlist Glosslist Itemizedlist Orderedlist Segmentedlist Simplelist Variablelist Caution Important Note Tip Warning Literallayout Programlisting Programlistingco Screen Screenco Screenshot Synopsis Cmdsynopsis Funcsynopsis Classsynopsis Fieldsynopsis Constructorsynopsis Destructorsynopsis Methodsynopsis Formalpara Para Simpara Address Blockquote Graphic Graphicco Mediaobject Mediaobjectco Informalequation Informalexample Informalfigure Informaltable Equation Example Figure Table Msgset Procedure Sidebar Qandaset Anchor Bridgehead Remark Highlights Abstract Authorblurb Epigraph Indexterm Beginpage)] (OneOf4 [Sect1] [(Refentry)] [Simplesect] [(Section)]) (OneOf4 [Sect1] [(Refentry)] [Simplesect] [(Section)]))
		       [(OneOf3 (OneOf5 Toc Lot Index Glossary Bibliography) Appendix Ackno)]
	     deriving (Eq,Show)
data Article_Attrs = Article_Attrs
    { articleClass :: (Maybe Article_Class)
    , articleParentbook :: (Maybe String)
    , articleStatus :: (Maybe String)
    , articleId :: (Maybe String)
    , articleLang :: (Maybe String)
    , articleRemap :: (Maybe String)
    , articleXreflabel :: (Maybe String)
    , articleRevisionflag :: (Maybe Article_Revisionflag)
    , articleArch :: (Maybe String)
    , articleCondition :: (Maybe String)
    , articleConformance :: (Maybe String)
    , articleOs :: (Maybe String)
    , articleRevision :: (Maybe String)
    , articleSecurity :: (Maybe String)
    , articleUserlevel :: (Maybe String)
    , articleVendor :: (Maybe String)
    , articleRole :: (Maybe String)
    } deriving (Eq,Show)
data Article_Class = Article_Class_Journalarticle  | 
		     Article_Class_Productsheet  |  Article_Class_Whitepaper  | 
		     Article_Class_Techreport  |  Article_Class_Specification  | 
		     Article_Class_Faq
		   deriving (Eq,Show)
data Article_Revisionflag = Article_Revisionflag_Changed  | 
			    Article_Revisionflag_Added  |  Article_Revisionflag_Deleted  | 
			    Article_Revisionflag_Off
			  deriving (Eq,Show)


{-Instance decls-}

instance XmlContent Title where
    fromElem (CElem (Elem "title" as c0):rest) =
	(\(a,ca)->
	   (Just (Title (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Title as a) =
	[CElem (Elem "title" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Title_Attrs where
    fromAttrs as =
	Title_Attrs
	  { titlePagenum = possibleA fromAttrToStr "pagenum" as
	  , titleId = possibleA fromAttrToStr "id" as
	  , titleLang = possibleA fromAttrToStr "lang" as
	  , titleRemap = possibleA fromAttrToStr "remap" as
	  , titleXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , titleRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , titleArch = possibleA fromAttrToStr "arch" as
	  , titleCondition = possibleA fromAttrToStr "condition" as
	  , titleConformance = possibleA fromAttrToStr "conformance" as
	  , titleOs = possibleA fromAttrToStr "os" as
	  , titleRevision = possibleA fromAttrToStr "revision" as
	  , titleSecurity = possibleA fromAttrToStr "security" as
	  , titleUserlevel = possibleA fromAttrToStr "userlevel" as
	  , titleVendor = possibleA fromAttrToStr "vendor" as
	  , titleRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "pagenum" (titlePagenum v)
	, maybeToAttr toAttrFrStr "id" (titleId v)
	, maybeToAttr toAttrFrStr "lang" (titleLang v)
	, maybeToAttr toAttrFrStr "remap" (titleRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (titleXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (titleRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (titleArch v)
	, maybeToAttr toAttrFrStr "condition" (titleCondition v)
	, maybeToAttr toAttrFrStr "conformance" (titleConformance v)
	, maybeToAttr toAttrFrStr "os" (titleOs v)
	, maybeToAttr toAttrFrStr "revision" (titleRevision v)
	, maybeToAttr toAttrFrStr "security" (titleSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (titleUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (titleVendor v)
	, maybeToAttr toAttrFrStr "role" (titleRole v)
	]
instance XmlContent Title_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Title_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Title_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Title_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Title_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Title_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Title_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Title_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Title_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Title_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Title_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Title_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Title_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Title_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Title_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Title_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Title_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Title_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Title_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Title_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Title_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Title_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Title_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Title_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Title_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Title_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Title_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Title_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Title_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Title_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Title_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Title_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Title_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Title_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Title_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Title_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Title_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Title_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Title_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Title_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Title_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Title_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Title_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Title_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Title_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Title_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Title_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Title_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Title_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Title_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Title_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Title_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Title_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Title_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Title_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Title_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Title_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Title_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Title_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Title_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Title_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Title_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Title_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Title_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Title_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Title_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Title_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Title_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Title_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Title_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Title_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Title_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Title_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Title_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Title_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Title_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Title_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Title_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Title_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Title_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Title_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Title_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Title_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Title_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Title_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Title_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Title_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Title_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Title_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Title_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Title_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Title_Indexterm a), rest)
																																																																																											(_,_) ->
																																																																																											    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Title_Str a) = toText a
    toElem (Title_Footnoteref a) = toElem a
    toElem (Title_Xref a) = toElem a
    toElem (Title_Abbrev a) = toElem a
    toElem (Title_Acronym a) = toElem a
    toElem (Title_Citation a) = toElem a
    toElem (Title_Citerefentry a) = toElem a
    toElem (Title_Citetitle a) = toElem a
    toElem (Title_Emphasis a) = toElem a
    toElem (Title_Firstterm a) = toElem a
    toElem (Title_Foreignphrase a) = toElem a
    toElem (Title_Glossterm a) = toElem a
    toElem (Title_Footnote a) = toElem a
    toElem (Title_Phrase a) = toElem a
    toElem (Title_Quote a) = toElem a
    toElem (Title_Trademark a) = toElem a
    toElem (Title_Wordasword a) = toElem a
    toElem (Title_Personname a) = toElem a
    toElem (Title_Link a) = toElem a
    toElem (Title_Olink a) = toElem a
    toElem (Title_Ulink a) = toElem a
    toElem (Title_Action a) = toElem a
    toElem (Title_Application a) = toElem a
    toElem (Title_Classname a) = toElem a
    toElem (Title_Methodname a) = toElem a
    toElem (Title_Interfacename a) = toElem a
    toElem (Title_Exceptionname a) = toElem a
    toElem (Title_Ooclass a) = toElem a
    toElem (Title_Oointerface a) = toElem a
    toElem (Title_Ooexception a) = toElem a
    toElem (Title_Command a) = toElem a
    toElem (Title_Computeroutput a) = toElem a
    toElem (Title_Database a) = toElem a
    toElem (Title_Email a) = toElem a
    toElem (Title_Envar a) = toElem a
    toElem (Title_Errorcode a) = toElem a
    toElem (Title_Errorname a) = toElem a
    toElem (Title_Errortype a) = toElem a
    toElem (Title_Errortext a) = toElem a
    toElem (Title_Filename a) = toElem a
    toElem (Title_Function a) = toElem a
    toElem (Title_Guibutton a) = toElem a
    toElem (Title_Guiicon a) = toElem a
    toElem (Title_Guilabel a) = toElem a
    toElem (Title_Guimenu a) = toElem a
    toElem (Title_Guimenuitem a) = toElem a
    toElem (Title_Guisubmenu a) = toElem a
    toElem (Title_Hardware a) = toElem a
    toElem (Title_Interface a) = toElem a
    toElem (Title_Keycap a) = toElem a
    toElem (Title_Keycode a) = toElem a
    toElem (Title_Keycombo a) = toElem a
    toElem (Title_Keysym a) = toElem a
    toElem (Title_Literal a) = toElem a
    toElem (Title_Constant a) = toElem a
    toElem (Title_Markup a) = toElem a
    toElem (Title_Medialabel a) = toElem a
    toElem (Title_Menuchoice a) = toElem a
    toElem (Title_Mousebutton a) = toElem a
    toElem (Title_Option a) = toElem a
    toElem (Title_Optional a) = toElem a
    toElem (Title_Parameter a) = toElem a
    toElem (Title_Prompt a) = toElem a
    toElem (Title_Property a) = toElem a
    toElem (Title_Replaceable a) = toElem a
    toElem (Title_Returnvalue a) = toElem a
    toElem (Title_Sgmltag a) = toElem a
    toElem (Title_Structfield a) = toElem a
    toElem (Title_Structname a) = toElem a
    toElem (Title_Symbol a) = toElem a
    toElem (Title_Systemitem a) = toElem a
    toElem (Title_Token a) = toElem a
    toElem (Title_Type a) = toElem a
    toElem (Title_Userinput a) = toElem a
    toElem (Title_Varname a) = toElem a
    toElem (Title_Anchor a) = toElem a
    toElem (Title_Author a) = toElem a
    toElem (Title_Authorinitials a) = toElem a
    toElem (Title_Corpauthor a) = toElem a
    toElem (Title_Modespec a) = toElem a
    toElem (Title_Othercredit a) = toElem a
    toElem (Title_Productname a) = toElem a
    toElem (Title_Productnumber a) = toElem a
    toElem (Title_Revhistory a) = toElem a
    toElem (Title_Remark a) = toElem a
    toElem (Title_Subscript a) = toElem a
    toElem (Title_Superscript a) = toElem a
    toElem (Title_Inlinegraphic a) = toElem a
    toElem (Title_Inlinemediaobject a) = toElem a
    toElem (Title_Inlineequation a) = toElem a
    toElem (Title_Indexterm a) = toElem a
instance XmlAttrType Title_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Title_Revisionflag_Changed
	    translate "added" = Just Title_Revisionflag_Added
	    translate "deleted" = Just Title_Revisionflag_Deleted
	    translate "off" = Just Title_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Title_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Title_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Title_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Title_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Titleabbrev where
    fromElem (CElem (Elem "titleabbrev" as c0):rest) =
	(\(a,ca)->
	   (Just (Titleabbrev (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Titleabbrev as a) =
	[CElem (Elem "titleabbrev" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Titleabbrev_Attrs where
    fromAttrs as =
	Titleabbrev_Attrs
	  { titleabbrevId = possibleA fromAttrToStr "id" as
	  , titleabbrevLang = possibleA fromAttrToStr "lang" as
	  , titleabbrevRemap = possibleA fromAttrToStr "remap" as
	  , titleabbrevXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , titleabbrevRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , titleabbrevArch = possibleA fromAttrToStr "arch" as
	  , titleabbrevCondition = possibleA fromAttrToStr "condition" as
	  , titleabbrevConformance = possibleA fromAttrToStr "conformance" as
	  , titleabbrevOs = possibleA fromAttrToStr "os" as
	  , titleabbrevRevision = possibleA fromAttrToStr "revision" as
	  , titleabbrevSecurity = possibleA fromAttrToStr "security" as
	  , titleabbrevUserlevel = possibleA fromAttrToStr "userlevel" as
	  , titleabbrevVendor = possibleA fromAttrToStr "vendor" as
	  , titleabbrevRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (titleabbrevId v)
	, maybeToAttr toAttrFrStr "lang" (titleabbrevLang v)
	, maybeToAttr toAttrFrStr "remap" (titleabbrevRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (titleabbrevXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (titleabbrevRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (titleabbrevArch v)
	, maybeToAttr toAttrFrStr "condition" (titleabbrevCondition v)
	, maybeToAttr toAttrFrStr "conformance" (titleabbrevConformance v)
	, maybeToAttr toAttrFrStr "os" (titleabbrevOs v)
	, maybeToAttr toAttrFrStr "revision" (titleabbrevRevision v)
	, maybeToAttr toAttrFrStr "security" (titleabbrevSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (titleabbrevUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (titleabbrevVendor v)
	, maybeToAttr toAttrFrStr "role" (titleabbrevRole v)
	]
instance XmlContent Titleabbrev_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Titleabbrev_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Titleabbrev_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Titleabbrev_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Titleabbrev_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Titleabbrev_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Titleabbrev_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Titleabbrev_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Titleabbrev_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Titleabbrev_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Titleabbrev_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Titleabbrev_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Titleabbrev_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Titleabbrev_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Titleabbrev_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Titleabbrev_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Titleabbrev_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Titleabbrev_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Titleabbrev_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Titleabbrev_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Titleabbrev_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Titleabbrev_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Titleabbrev_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Titleabbrev_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Titleabbrev_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Titleabbrev_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Titleabbrev_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Titleabbrev_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Titleabbrev_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Titleabbrev_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Titleabbrev_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Titleabbrev_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Titleabbrev_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Titleabbrev_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Titleabbrev_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Titleabbrev_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Titleabbrev_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Titleabbrev_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Titleabbrev_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Titleabbrev_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Titleabbrev_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Titleabbrev_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Titleabbrev_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Titleabbrev_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Titleabbrev_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Titleabbrev_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Titleabbrev_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Titleabbrev_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Titleabbrev_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Titleabbrev_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Titleabbrev_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Titleabbrev_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Titleabbrev_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Titleabbrev_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Titleabbrev_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Titleabbrev_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Titleabbrev_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Titleabbrev_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Titleabbrev_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Titleabbrev_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Titleabbrev_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Titleabbrev_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Titleabbrev_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Titleabbrev_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Titleabbrev_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Titleabbrev_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Titleabbrev_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Titleabbrev_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Titleabbrev_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Titleabbrev_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Titleabbrev_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Titleabbrev_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Titleabbrev_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Titleabbrev_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Titleabbrev_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Titleabbrev_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Titleabbrev_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Titleabbrev_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Titleabbrev_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Titleabbrev_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Titleabbrev_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Titleabbrev_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Titleabbrev_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Titleabbrev_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Titleabbrev_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Titleabbrev_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Titleabbrev_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Titleabbrev_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Titleabbrev_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Titleabbrev_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Titleabbrev_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Titleabbrev_Indexterm a), rest)
																																																																																											(_,_) ->
																																																																																											    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Titleabbrev_Str a) = toText a
    toElem (Titleabbrev_Footnoteref a) = toElem a
    toElem (Titleabbrev_Xref a) = toElem a
    toElem (Titleabbrev_Abbrev a) = toElem a
    toElem (Titleabbrev_Acronym a) = toElem a
    toElem (Titleabbrev_Citation a) = toElem a
    toElem (Titleabbrev_Citerefentry a) = toElem a
    toElem (Titleabbrev_Citetitle a) = toElem a
    toElem (Titleabbrev_Emphasis a) = toElem a
    toElem (Titleabbrev_Firstterm a) = toElem a
    toElem (Titleabbrev_Foreignphrase a) = toElem a
    toElem (Titleabbrev_Glossterm a) = toElem a
    toElem (Titleabbrev_Footnote a) = toElem a
    toElem (Titleabbrev_Phrase a) = toElem a
    toElem (Titleabbrev_Quote a) = toElem a
    toElem (Titleabbrev_Trademark a) = toElem a
    toElem (Titleabbrev_Wordasword a) = toElem a
    toElem (Titleabbrev_Personname a) = toElem a
    toElem (Titleabbrev_Link a) = toElem a
    toElem (Titleabbrev_Olink a) = toElem a
    toElem (Titleabbrev_Ulink a) = toElem a
    toElem (Titleabbrev_Action a) = toElem a
    toElem (Titleabbrev_Application a) = toElem a
    toElem (Titleabbrev_Classname a) = toElem a
    toElem (Titleabbrev_Methodname a) = toElem a
    toElem (Titleabbrev_Interfacename a) = toElem a
    toElem (Titleabbrev_Exceptionname a) = toElem a
    toElem (Titleabbrev_Ooclass a) = toElem a
    toElem (Titleabbrev_Oointerface a) = toElem a
    toElem (Titleabbrev_Ooexception a) = toElem a
    toElem (Titleabbrev_Command a) = toElem a
    toElem (Titleabbrev_Computeroutput a) = toElem a
    toElem (Titleabbrev_Database a) = toElem a
    toElem (Titleabbrev_Email a) = toElem a
    toElem (Titleabbrev_Envar a) = toElem a
    toElem (Titleabbrev_Errorcode a) = toElem a
    toElem (Titleabbrev_Errorname a) = toElem a
    toElem (Titleabbrev_Errortype a) = toElem a
    toElem (Titleabbrev_Errortext a) = toElem a
    toElem (Titleabbrev_Filename a) = toElem a
    toElem (Titleabbrev_Function a) = toElem a
    toElem (Titleabbrev_Guibutton a) = toElem a
    toElem (Titleabbrev_Guiicon a) = toElem a
    toElem (Titleabbrev_Guilabel a) = toElem a
    toElem (Titleabbrev_Guimenu a) = toElem a
    toElem (Titleabbrev_Guimenuitem a) = toElem a
    toElem (Titleabbrev_Guisubmenu a) = toElem a
    toElem (Titleabbrev_Hardware a) = toElem a
    toElem (Titleabbrev_Interface a) = toElem a
    toElem (Titleabbrev_Keycap a) = toElem a
    toElem (Titleabbrev_Keycode a) = toElem a
    toElem (Titleabbrev_Keycombo a) = toElem a
    toElem (Titleabbrev_Keysym a) = toElem a
    toElem (Titleabbrev_Literal a) = toElem a
    toElem (Titleabbrev_Constant a) = toElem a
    toElem (Titleabbrev_Markup a) = toElem a
    toElem (Titleabbrev_Medialabel a) = toElem a
    toElem (Titleabbrev_Menuchoice a) = toElem a
    toElem (Titleabbrev_Mousebutton a) = toElem a
    toElem (Titleabbrev_Option a) = toElem a
    toElem (Titleabbrev_Optional a) = toElem a
    toElem (Titleabbrev_Parameter a) = toElem a
    toElem (Titleabbrev_Prompt a) = toElem a
    toElem (Titleabbrev_Property a) = toElem a
    toElem (Titleabbrev_Replaceable a) = toElem a
    toElem (Titleabbrev_Returnvalue a) = toElem a
    toElem (Titleabbrev_Sgmltag a) = toElem a
    toElem (Titleabbrev_Structfield a) = toElem a
    toElem (Titleabbrev_Structname a) = toElem a
    toElem (Titleabbrev_Symbol a) = toElem a
    toElem (Titleabbrev_Systemitem a) = toElem a
    toElem (Titleabbrev_Token a) = toElem a
    toElem (Titleabbrev_Type a) = toElem a
    toElem (Titleabbrev_Userinput a) = toElem a
    toElem (Titleabbrev_Varname a) = toElem a
    toElem (Titleabbrev_Anchor a) = toElem a
    toElem (Titleabbrev_Author a) = toElem a
    toElem (Titleabbrev_Authorinitials a) = toElem a
    toElem (Titleabbrev_Corpauthor a) = toElem a
    toElem (Titleabbrev_Modespec a) = toElem a
    toElem (Titleabbrev_Othercredit a) = toElem a
    toElem (Titleabbrev_Productname a) = toElem a
    toElem (Titleabbrev_Productnumber a) = toElem a
    toElem (Titleabbrev_Revhistory a) = toElem a
    toElem (Titleabbrev_Remark a) = toElem a
    toElem (Titleabbrev_Subscript a) = toElem a
    toElem (Titleabbrev_Superscript a) = toElem a
    toElem (Titleabbrev_Inlinegraphic a) = toElem a
    toElem (Titleabbrev_Inlinemediaobject a) = toElem a
    toElem (Titleabbrev_Inlineequation a) = toElem a
    toElem (Titleabbrev_Indexterm a) = toElem a
instance XmlAttrType Titleabbrev_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Titleabbrev_Revisionflag_Changed
	    translate "added" = Just Titleabbrev_Revisionflag_Added
	    translate "deleted" = Just Titleabbrev_Revisionflag_Deleted
	    translate "off" = Just Titleabbrev_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Titleabbrev_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Titleabbrev_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Titleabbrev_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Titleabbrev_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Subtitle where
    fromElem (CElem (Elem "subtitle" as c0):rest) =
	(\(a,ca)->
	   (Just (Subtitle (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Subtitle as a) =
	[CElem (Elem "subtitle" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Subtitle_Attrs where
    fromAttrs as =
	Subtitle_Attrs
	  { subtitleId = possibleA fromAttrToStr "id" as
	  , subtitleLang = possibleA fromAttrToStr "lang" as
	  , subtitleRemap = possibleA fromAttrToStr "remap" as
	  , subtitleXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , subtitleRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , subtitleArch = possibleA fromAttrToStr "arch" as
	  , subtitleCondition = possibleA fromAttrToStr "condition" as
	  , subtitleConformance = possibleA fromAttrToStr "conformance" as
	  , subtitleOs = possibleA fromAttrToStr "os" as
	  , subtitleRevision = possibleA fromAttrToStr "revision" as
	  , subtitleSecurity = possibleA fromAttrToStr "security" as
	  , subtitleUserlevel = possibleA fromAttrToStr "userlevel" as
	  , subtitleVendor = possibleA fromAttrToStr "vendor" as
	  , subtitleRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (subtitleId v)
	, maybeToAttr toAttrFrStr "lang" (subtitleLang v)
	, maybeToAttr toAttrFrStr "remap" (subtitleRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (subtitleXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (subtitleRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (subtitleArch v)
	, maybeToAttr toAttrFrStr "condition" (subtitleCondition v)
	, maybeToAttr toAttrFrStr "conformance" (subtitleConformance v)
	, maybeToAttr toAttrFrStr "os" (subtitleOs v)
	, maybeToAttr toAttrFrStr "revision" (subtitleRevision v)
	, maybeToAttr toAttrFrStr "security" (subtitleSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (subtitleUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (subtitleVendor v)
	, maybeToAttr toAttrFrStr "role" (subtitleRole v)
	]
instance XmlContent Subtitle_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Subtitle_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Subtitle_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Subtitle_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Subtitle_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Subtitle_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Subtitle_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Subtitle_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Subtitle_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Subtitle_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Subtitle_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Subtitle_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Subtitle_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Subtitle_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Subtitle_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Subtitle_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Subtitle_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Subtitle_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Subtitle_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Subtitle_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Subtitle_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Subtitle_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Subtitle_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Subtitle_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Subtitle_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Subtitle_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Subtitle_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Subtitle_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Subtitle_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Subtitle_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Subtitle_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Subtitle_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Subtitle_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Subtitle_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Subtitle_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Subtitle_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Subtitle_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Subtitle_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Subtitle_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Subtitle_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Subtitle_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Subtitle_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Subtitle_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Subtitle_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Subtitle_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Subtitle_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Subtitle_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Subtitle_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Subtitle_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Subtitle_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Subtitle_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Subtitle_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Subtitle_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Subtitle_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Subtitle_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Subtitle_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Subtitle_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Subtitle_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Subtitle_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Subtitle_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Subtitle_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Subtitle_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Subtitle_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Subtitle_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Subtitle_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Subtitle_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Subtitle_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Subtitle_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Subtitle_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Subtitle_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Subtitle_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Subtitle_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Subtitle_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Subtitle_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Subtitle_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Subtitle_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Subtitle_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Subtitle_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Subtitle_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Subtitle_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Subtitle_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Subtitle_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Subtitle_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Subtitle_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Subtitle_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Subtitle_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Subtitle_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Subtitle_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Subtitle_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Subtitle_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Subtitle_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Subtitle_Indexterm a), rest)
																																																																																											(_,_) ->
																																																																																											    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Subtitle_Str a) = toText a
    toElem (Subtitle_Footnoteref a) = toElem a
    toElem (Subtitle_Xref a) = toElem a
    toElem (Subtitle_Abbrev a) = toElem a
    toElem (Subtitle_Acronym a) = toElem a
    toElem (Subtitle_Citation a) = toElem a
    toElem (Subtitle_Citerefentry a) = toElem a
    toElem (Subtitle_Citetitle a) = toElem a
    toElem (Subtitle_Emphasis a) = toElem a
    toElem (Subtitle_Firstterm a) = toElem a
    toElem (Subtitle_Foreignphrase a) = toElem a
    toElem (Subtitle_Glossterm a) = toElem a
    toElem (Subtitle_Footnote a) = toElem a
    toElem (Subtitle_Phrase a) = toElem a
    toElem (Subtitle_Quote a) = toElem a
    toElem (Subtitle_Trademark a) = toElem a
    toElem (Subtitle_Wordasword a) = toElem a
    toElem (Subtitle_Personname a) = toElem a
    toElem (Subtitle_Link a) = toElem a
    toElem (Subtitle_Olink a) = toElem a
    toElem (Subtitle_Ulink a) = toElem a
    toElem (Subtitle_Action a) = toElem a
    toElem (Subtitle_Application a) = toElem a
    toElem (Subtitle_Classname a) = toElem a
    toElem (Subtitle_Methodname a) = toElem a
    toElem (Subtitle_Interfacename a) = toElem a
    toElem (Subtitle_Exceptionname a) = toElem a
    toElem (Subtitle_Ooclass a) = toElem a
    toElem (Subtitle_Oointerface a) = toElem a
    toElem (Subtitle_Ooexception a) = toElem a
    toElem (Subtitle_Command a) = toElem a
    toElem (Subtitle_Computeroutput a) = toElem a
    toElem (Subtitle_Database a) = toElem a
    toElem (Subtitle_Email a) = toElem a
    toElem (Subtitle_Envar a) = toElem a
    toElem (Subtitle_Errorcode a) = toElem a
    toElem (Subtitle_Errorname a) = toElem a
    toElem (Subtitle_Errortype a) = toElem a
    toElem (Subtitle_Errortext a) = toElem a
    toElem (Subtitle_Filename a) = toElem a
    toElem (Subtitle_Function a) = toElem a
    toElem (Subtitle_Guibutton a) = toElem a
    toElem (Subtitle_Guiicon a) = toElem a
    toElem (Subtitle_Guilabel a) = toElem a
    toElem (Subtitle_Guimenu a) = toElem a
    toElem (Subtitle_Guimenuitem a) = toElem a
    toElem (Subtitle_Guisubmenu a) = toElem a
    toElem (Subtitle_Hardware a) = toElem a
    toElem (Subtitle_Interface a) = toElem a
    toElem (Subtitle_Keycap a) = toElem a
    toElem (Subtitle_Keycode a) = toElem a
    toElem (Subtitle_Keycombo a) = toElem a
    toElem (Subtitle_Keysym a) = toElem a
    toElem (Subtitle_Literal a) = toElem a
    toElem (Subtitle_Constant a) = toElem a
    toElem (Subtitle_Markup a) = toElem a
    toElem (Subtitle_Medialabel a) = toElem a
    toElem (Subtitle_Menuchoice a) = toElem a
    toElem (Subtitle_Mousebutton a) = toElem a
    toElem (Subtitle_Option a) = toElem a
    toElem (Subtitle_Optional a) = toElem a
    toElem (Subtitle_Parameter a) = toElem a
    toElem (Subtitle_Prompt a) = toElem a
    toElem (Subtitle_Property a) = toElem a
    toElem (Subtitle_Replaceable a) = toElem a
    toElem (Subtitle_Returnvalue a) = toElem a
    toElem (Subtitle_Sgmltag a) = toElem a
    toElem (Subtitle_Structfield a) = toElem a
    toElem (Subtitle_Structname a) = toElem a
    toElem (Subtitle_Symbol a) = toElem a
    toElem (Subtitle_Systemitem a) = toElem a
    toElem (Subtitle_Token a) = toElem a
    toElem (Subtitle_Type a) = toElem a
    toElem (Subtitle_Userinput a) = toElem a
    toElem (Subtitle_Varname a) = toElem a
    toElem (Subtitle_Anchor a) = toElem a
    toElem (Subtitle_Author a) = toElem a
    toElem (Subtitle_Authorinitials a) = toElem a
    toElem (Subtitle_Corpauthor a) = toElem a
    toElem (Subtitle_Modespec a) = toElem a
    toElem (Subtitle_Othercredit a) = toElem a
    toElem (Subtitle_Productname a) = toElem a
    toElem (Subtitle_Productnumber a) = toElem a
    toElem (Subtitle_Revhistory a) = toElem a
    toElem (Subtitle_Remark a) = toElem a
    toElem (Subtitle_Subscript a) = toElem a
    toElem (Subtitle_Superscript a) = toElem a
    toElem (Subtitle_Inlinegraphic a) = toElem a
    toElem (Subtitle_Inlinemediaobject a) = toElem a
    toElem (Subtitle_Inlineequation a) = toElem a
    toElem (Subtitle_Indexterm a) = toElem a
instance XmlAttrType Subtitle_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Subtitle_Revisionflag_Changed
	    translate "added" = Just Subtitle_Revisionflag_Added
	    translate "deleted" = Just Subtitle_Revisionflag_Deleted
	    translate "off" = Just Subtitle_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Subtitle_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Subtitle_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Subtitle_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Subtitle_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Biblioentry where
    fromElem (CElem (Elem "biblioentry" as c0):rest) =
	(\(a,ca)->
	   (Just (Biblioentry (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Biblioentry as a) =
	[CElem (Elem "biblioentry" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Biblioentry_Attrs where
    fromAttrs as =
	Biblioentry_Attrs
	  { biblioentryId = possibleA fromAttrToStr "id" as
	  , biblioentryLang = possibleA fromAttrToStr "lang" as
	  , biblioentryRemap = possibleA fromAttrToStr "remap" as
	  , biblioentryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , biblioentryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , biblioentryArch = possibleA fromAttrToStr "arch" as
	  , biblioentryCondition = possibleA fromAttrToStr "condition" as
	  , biblioentryConformance = possibleA fromAttrToStr "conformance" as
	  , biblioentryOs = possibleA fromAttrToStr "os" as
	  , biblioentryRevision = possibleA fromAttrToStr "revision" as
	  , biblioentrySecurity = possibleA fromAttrToStr "security" as
	  , biblioentryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , biblioentryVendor = possibleA fromAttrToStr "vendor" as
	  , biblioentryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (biblioentryId v)
	, maybeToAttr toAttrFrStr "lang" (biblioentryLang v)
	, maybeToAttr toAttrFrStr "remap" (biblioentryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (biblioentryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (biblioentryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (biblioentryArch v)
	, maybeToAttr toAttrFrStr "condition" (biblioentryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (biblioentryConformance v)
	, maybeToAttr toAttrFrStr "os" (biblioentryOs v)
	, maybeToAttr toAttrFrStr "revision" (biblioentryRevision v)
	, maybeToAttr toAttrFrStr "security" (biblioentrySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (biblioentryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (biblioentryVendor v)
	, maybeToAttr toAttrFrStr "role" (biblioentryRole v)
	]
instance XmlAttrType Biblioentry_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Biblioentry_Revisionflag_Changed
	    translate "added" = Just Biblioentry_Revisionflag_Added
	    translate "deleted" = Just Biblioentry_Revisionflag_Deleted
	    translate "off" = Just Biblioentry_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Biblioentry_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Biblioentry_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Biblioentry_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Biblioentry_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Bibliomixed where
    fromElem (CElem (Elem "bibliomixed" as c0):rest) =
	(\(a,ca)->
	   (Just (Bibliomixed (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bibliomixed as a) =
	[CElem (Elem "bibliomixed" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Bibliomixed_Attrs where
    fromAttrs as =
	Bibliomixed_Attrs
	  { bibliomixedId = possibleA fromAttrToStr "id" as
	  , bibliomixedLang = possibleA fromAttrToStr "lang" as
	  , bibliomixedRemap = possibleA fromAttrToStr "remap" as
	  , bibliomixedXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , bibliomixedRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , bibliomixedArch = possibleA fromAttrToStr "arch" as
	  , bibliomixedCondition = possibleA fromAttrToStr "condition" as
	  , bibliomixedConformance = possibleA fromAttrToStr "conformance" as
	  , bibliomixedOs = possibleA fromAttrToStr "os" as
	  , bibliomixedRevision = possibleA fromAttrToStr "revision" as
	  , bibliomixedSecurity = possibleA fromAttrToStr "security" as
	  , bibliomixedUserlevel = possibleA fromAttrToStr "userlevel" as
	  , bibliomixedVendor = possibleA fromAttrToStr "vendor" as
	  , bibliomixedRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (bibliomixedId v)
	, maybeToAttr toAttrFrStr "lang" (bibliomixedLang v)
	, maybeToAttr toAttrFrStr "remap" (bibliomixedRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (bibliomixedXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (bibliomixedRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (bibliomixedArch v)
	, maybeToAttr toAttrFrStr "condition" (bibliomixedCondition v)
	, maybeToAttr toAttrFrStr "conformance" (bibliomixedConformance v)
	, maybeToAttr toAttrFrStr "os" (bibliomixedOs v)
	, maybeToAttr toAttrFrStr "revision" (bibliomixedRevision v)
	, maybeToAttr toAttrFrStr "security" (bibliomixedSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (bibliomixedUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (bibliomixedVendor v)
	, maybeToAttr toAttrFrStr "role" (bibliomixedRole v)
	]
instance XmlContent Bibliomixed_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Bibliomixed_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Bibliomixed_Abbrev a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Bibliomixed_Abstract a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Bibliomixed_Address a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Bibliomixed_Artpagenums a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Bibliomixed_Author a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Bibliomixed_Authorgroup a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Bibliomixed_Authorinitials a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Bibliomixed_Bibliomisc a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Bibliomixed_Biblioset a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Bibliomixed_Collab a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Bibliomixed_Confgroup a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Bibliomixed_Contractnum a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Bibliomixed_Contractsponsor a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Bibliomixed_Copyright a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Bibliomixed_Corpauthor a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Bibliomixed_Corpname a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Bibliomixed_Date a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Bibliomixed_Edition a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Bibliomixed_Editor a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Bibliomixed_Invpartnumber a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Bibliomixed_Isbn a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Bibliomixed_Issn a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Bibliomixed_Issuenum a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Bibliomixed_Orgname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Bibliomixed_Biblioid a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Bibliomixed_Citebiblioid a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Bibliomixed_Bibliosource a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Bibliomixed_Bibliorelation a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Bibliomixed_Bibliocoverage a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Bibliomixed_Othercredit a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Bibliomixed_Pagenums a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Bibliomixed_Printhistory a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Bibliomixed_Productname a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Bibliomixed_Productnumber a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Bibliomixed_Pubdate a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Bibliomixed_Publisher a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Bibliomixed_Publishername a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Bibliomixed_Pubsnumber a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Bibliomixed_Releaseinfo a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Bibliomixed_Revhistory a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Bibliomixed_Seriesvolnums a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Bibliomixed_Subtitle a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Bibliomixed_Title a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Bibliomixed_Titleabbrev a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Bibliomixed_Volumenum a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Bibliomixed_Citetitle a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Bibliomixed_Personname a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Bibliomixed_Honorific a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Bibliomixed_Firstname a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Bibliomixed_Surname a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Bibliomixed_Lineage a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Bibliomixed_Othername a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Bibliomixed_Affiliation a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Bibliomixed_Authorblurb a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Bibliomixed_Contrib a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Bibliomixed_Indexterm a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Bibliomixed_Bibliomset a), rest)
																																																										(_,_) ->
																																																										    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bibliomixed_Str a) = toText a
    toElem (Bibliomixed_Abbrev a) = toElem a
    toElem (Bibliomixed_Abstract a) = toElem a
    toElem (Bibliomixed_Address a) = toElem a
    toElem (Bibliomixed_Artpagenums a) = toElem a
    toElem (Bibliomixed_Author a) = toElem a
    toElem (Bibliomixed_Authorgroup a) = toElem a
    toElem (Bibliomixed_Authorinitials a) = toElem a
    toElem (Bibliomixed_Bibliomisc a) = toElem a
    toElem (Bibliomixed_Biblioset a) = toElem a
    toElem (Bibliomixed_Collab a) = toElem a
    toElem (Bibliomixed_Confgroup a) = toElem a
    toElem (Bibliomixed_Contractnum a) = toElem a
    toElem (Bibliomixed_Contractsponsor a) = toElem a
    toElem (Bibliomixed_Copyright a) = toElem a
    toElem (Bibliomixed_Corpauthor a) = toElem a
    toElem (Bibliomixed_Corpname a) = toElem a
    toElem (Bibliomixed_Date a) = toElem a
    toElem (Bibliomixed_Edition a) = toElem a
    toElem (Bibliomixed_Editor a) = toElem a
    toElem (Bibliomixed_Invpartnumber a) = toElem a
    toElem (Bibliomixed_Isbn a) = toElem a
    toElem (Bibliomixed_Issn a) = toElem a
    toElem (Bibliomixed_Issuenum a) = toElem a
    toElem (Bibliomixed_Orgname a) = toElem a
    toElem (Bibliomixed_Biblioid a) = toElem a
    toElem (Bibliomixed_Citebiblioid a) = toElem a
    toElem (Bibliomixed_Bibliosource a) = toElem a
    toElem (Bibliomixed_Bibliorelation a) = toElem a
    toElem (Bibliomixed_Bibliocoverage a) = toElem a
    toElem (Bibliomixed_Othercredit a) = toElem a
    toElem (Bibliomixed_Pagenums a) = toElem a
    toElem (Bibliomixed_Printhistory a) = toElem a
    toElem (Bibliomixed_Productname a) = toElem a
    toElem (Bibliomixed_Productnumber a) = toElem a
    toElem (Bibliomixed_Pubdate a) = toElem a
    toElem (Bibliomixed_Publisher a) = toElem a
    toElem (Bibliomixed_Publishername a) = toElem a
    toElem (Bibliomixed_Pubsnumber a) = toElem a
    toElem (Bibliomixed_Releaseinfo a) = toElem a
    toElem (Bibliomixed_Revhistory a) = toElem a
    toElem (Bibliomixed_Seriesvolnums a) = toElem a
    toElem (Bibliomixed_Subtitle a) = toElem a
    toElem (Bibliomixed_Title a) = toElem a
    toElem (Bibliomixed_Titleabbrev a) = toElem a
    toElem (Bibliomixed_Volumenum a) = toElem a
    toElem (Bibliomixed_Citetitle a) = toElem a
    toElem (Bibliomixed_Personname a) = toElem a
    toElem (Bibliomixed_Honorific a) = toElem a
    toElem (Bibliomixed_Firstname a) = toElem a
    toElem (Bibliomixed_Surname a) = toElem a
    toElem (Bibliomixed_Lineage a) = toElem a
    toElem (Bibliomixed_Othername a) = toElem a
    toElem (Bibliomixed_Affiliation a) = toElem a
    toElem (Bibliomixed_Authorblurb a) = toElem a
    toElem (Bibliomixed_Contrib a) = toElem a
    toElem (Bibliomixed_Indexterm a) = toElem a
    toElem (Bibliomixed_Bibliomset a) = toElem a
instance XmlAttrType Bibliomixed_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Bibliomixed_Revisionflag_Changed
	    translate "added" = Just Bibliomixed_Revisionflag_Added
	    translate "deleted" = Just Bibliomixed_Revisionflag_Deleted
	    translate "off" = Just Bibliomixed_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Bibliomixed_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Bibliomixed_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Bibliomixed_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Bibliomixed_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Articleinfo where
    fromElem (CElem (Elem "articleinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Articleinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Articleinfo as a) =
	[CElem (Elem "articleinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Articleinfo_Attrs where
    fromAttrs as =
	Articleinfo_Attrs
	  { articleinfoId = possibleA fromAttrToStr "id" as
	  , articleinfoLang = possibleA fromAttrToStr "lang" as
	  , articleinfoRemap = possibleA fromAttrToStr "remap" as
	  , articleinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , articleinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , articleinfoArch = possibleA fromAttrToStr "arch" as
	  , articleinfoCondition = possibleA fromAttrToStr "condition" as
	  , articleinfoConformance = possibleA fromAttrToStr "conformance" as
	  , articleinfoOs = possibleA fromAttrToStr "os" as
	  , articleinfoRevision = possibleA fromAttrToStr "revision" as
	  , articleinfoSecurity = possibleA fromAttrToStr "security" as
	  , articleinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , articleinfoVendor = possibleA fromAttrToStr "vendor" as
	  , articleinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (articleinfoId v)
	, maybeToAttr toAttrFrStr "lang" (articleinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (articleinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (articleinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (articleinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (articleinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (articleinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (articleinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (articleinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (articleinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (articleinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (articleinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (articleinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (articleinfoRole v)
	]
instance XmlAttrType Articleinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Articleinfo_Revisionflag_Changed
	    translate "added" = Just Articleinfo_Revisionflag_Added
	    translate "deleted" = Just Articleinfo_Revisionflag_Deleted
	    translate "off" = Just Articleinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Articleinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Articleinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Articleinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Articleinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Biblioset where
    fromElem (CElem (Elem "biblioset" as c0):rest) =
	(\(a,ca)->
	   (Just (Biblioset (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Biblioset as a) =
	[CElem (Elem "biblioset" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Biblioset_Attrs where
    fromAttrs as =
	Biblioset_Attrs
	  { bibliosetRelation = possibleA fromAttrToStr "relation" as
	  , bibliosetId = possibleA fromAttrToStr "id" as
	  , bibliosetLang = possibleA fromAttrToStr "lang" as
	  , bibliosetRemap = possibleA fromAttrToStr "remap" as
	  , bibliosetXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , bibliosetRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , bibliosetArch = possibleA fromAttrToStr "arch" as
	  , bibliosetCondition = possibleA fromAttrToStr "condition" as
	  , bibliosetConformance = possibleA fromAttrToStr "conformance" as
	  , bibliosetOs = possibleA fromAttrToStr "os" as
	  , bibliosetRevision = possibleA fromAttrToStr "revision" as
	  , bibliosetSecurity = possibleA fromAttrToStr "security" as
	  , bibliosetUserlevel = possibleA fromAttrToStr "userlevel" as
	  , bibliosetVendor = possibleA fromAttrToStr "vendor" as
	  , bibliosetRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "relation" (bibliosetRelation v)
	, maybeToAttr toAttrFrStr "id" (bibliosetId v)
	, maybeToAttr toAttrFrStr "lang" (bibliosetLang v)
	, maybeToAttr toAttrFrStr "remap" (bibliosetRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (bibliosetXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (bibliosetRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (bibliosetArch v)
	, maybeToAttr toAttrFrStr "condition" (bibliosetCondition v)
	, maybeToAttr toAttrFrStr "conformance" (bibliosetConformance v)
	, maybeToAttr toAttrFrStr "os" (bibliosetOs v)
	, maybeToAttr toAttrFrStr "revision" (bibliosetRevision v)
	, maybeToAttr toAttrFrStr "security" (bibliosetSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (bibliosetUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (bibliosetVendor v)
	, maybeToAttr toAttrFrStr "role" (bibliosetRole v)
	]
instance XmlAttrType Biblioset_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Biblioset_Revisionflag_Changed
	    translate "added" = Just Biblioset_Revisionflag_Added
	    translate "deleted" = Just Biblioset_Revisionflag_Deleted
	    translate "off" = Just Biblioset_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Biblioset_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Biblioset_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Biblioset_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Biblioset_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Bibliomset where
    fromElem (CElem (Elem "bibliomset" as c0):rest) =
	(\(a,ca)->
	   (Just (Bibliomset (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bibliomset as a) =
	[CElem (Elem "bibliomset" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Bibliomset_Attrs where
    fromAttrs as =
	Bibliomset_Attrs
	  { bibliomsetRelation = possibleA fromAttrToStr "relation" as
	  , bibliomsetId = possibleA fromAttrToStr "id" as
	  , bibliomsetLang = possibleA fromAttrToStr "lang" as
	  , bibliomsetRemap = possibleA fromAttrToStr "remap" as
	  , bibliomsetXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , bibliomsetRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , bibliomsetArch = possibleA fromAttrToStr "arch" as
	  , bibliomsetCondition = possibleA fromAttrToStr "condition" as
	  , bibliomsetConformance = possibleA fromAttrToStr "conformance" as
	  , bibliomsetOs = possibleA fromAttrToStr "os" as
	  , bibliomsetRevision = possibleA fromAttrToStr "revision" as
	  , bibliomsetSecurity = possibleA fromAttrToStr "security" as
	  , bibliomsetUserlevel = possibleA fromAttrToStr "userlevel" as
	  , bibliomsetVendor = possibleA fromAttrToStr "vendor" as
	  , bibliomsetRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "relation" (bibliomsetRelation v)
	, maybeToAttr toAttrFrStr "id" (bibliomsetId v)
	, maybeToAttr toAttrFrStr "lang" (bibliomsetLang v)
	, maybeToAttr toAttrFrStr "remap" (bibliomsetRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (bibliomsetXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (bibliomsetRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (bibliomsetArch v)
	, maybeToAttr toAttrFrStr "condition" (bibliomsetCondition v)
	, maybeToAttr toAttrFrStr "conformance" (bibliomsetConformance v)
	, maybeToAttr toAttrFrStr "os" (bibliomsetOs v)
	, maybeToAttr toAttrFrStr "revision" (bibliomsetRevision v)
	, maybeToAttr toAttrFrStr "security" (bibliomsetSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (bibliomsetUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (bibliomsetVendor v)
	, maybeToAttr toAttrFrStr "role" (bibliomsetRole v)
	]
instance XmlContent Bibliomset_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Bibliomset_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Bibliomset_Abbrev a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Bibliomset_Abstract a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Bibliomset_Address a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Bibliomset_Artpagenums a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Bibliomset_Author a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Bibliomset_Authorgroup a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Bibliomset_Authorinitials a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Bibliomset_Bibliomisc a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Bibliomset_Biblioset a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Bibliomset_Collab a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Bibliomset_Confgroup a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Bibliomset_Contractnum a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Bibliomset_Contractsponsor a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Bibliomset_Copyright a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Bibliomset_Corpauthor a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Bibliomset_Corpname a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Bibliomset_Date a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Bibliomset_Edition a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Bibliomset_Editor a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Bibliomset_Invpartnumber a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Bibliomset_Isbn a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Bibliomset_Issn a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Bibliomset_Issuenum a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Bibliomset_Orgname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Bibliomset_Biblioid a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Bibliomset_Citebiblioid a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Bibliomset_Bibliosource a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Bibliomset_Bibliorelation a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Bibliomset_Bibliocoverage a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Bibliomset_Othercredit a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Bibliomset_Pagenums a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Bibliomset_Printhistory a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Bibliomset_Productname a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Bibliomset_Productnumber a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Bibliomset_Pubdate a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Bibliomset_Publisher a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Bibliomset_Publishername a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Bibliomset_Pubsnumber a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Bibliomset_Releaseinfo a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Bibliomset_Revhistory a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Bibliomset_Seriesvolnums a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Bibliomset_Subtitle a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Bibliomset_Title a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Bibliomset_Titleabbrev a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Bibliomset_Volumenum a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Bibliomset_Citetitle a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Bibliomset_Personname a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Bibliomset_Honorific a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Bibliomset_Firstname a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Bibliomset_Surname a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Bibliomset_Lineage a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Bibliomset_Othername a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Bibliomset_Affiliation a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Bibliomset_Authorblurb a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Bibliomset_Contrib a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Bibliomset_Indexterm a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Bibliomset_Bibliomset a), rest)
																																																										(_,_) ->
																																																										    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bibliomset_Str a) = toText a
    toElem (Bibliomset_Abbrev a) = toElem a
    toElem (Bibliomset_Abstract a) = toElem a
    toElem (Bibliomset_Address a) = toElem a
    toElem (Bibliomset_Artpagenums a) = toElem a
    toElem (Bibliomset_Author a) = toElem a
    toElem (Bibliomset_Authorgroup a) = toElem a
    toElem (Bibliomset_Authorinitials a) = toElem a
    toElem (Bibliomset_Bibliomisc a) = toElem a
    toElem (Bibliomset_Biblioset a) = toElem a
    toElem (Bibliomset_Collab a) = toElem a
    toElem (Bibliomset_Confgroup a) = toElem a
    toElem (Bibliomset_Contractnum a) = toElem a
    toElem (Bibliomset_Contractsponsor a) = toElem a
    toElem (Bibliomset_Copyright a) = toElem a
    toElem (Bibliomset_Corpauthor a) = toElem a
    toElem (Bibliomset_Corpname a) = toElem a
    toElem (Bibliomset_Date a) = toElem a
    toElem (Bibliomset_Edition a) = toElem a
    toElem (Bibliomset_Editor a) = toElem a
    toElem (Bibliomset_Invpartnumber a) = toElem a
    toElem (Bibliomset_Isbn a) = toElem a
    toElem (Bibliomset_Issn a) = toElem a
    toElem (Bibliomset_Issuenum a) = toElem a
    toElem (Bibliomset_Orgname a) = toElem a
    toElem (Bibliomset_Biblioid a) = toElem a
    toElem (Bibliomset_Citebiblioid a) = toElem a
    toElem (Bibliomset_Bibliosource a) = toElem a
    toElem (Bibliomset_Bibliorelation a) = toElem a
    toElem (Bibliomset_Bibliocoverage a) = toElem a
    toElem (Bibliomset_Othercredit a) = toElem a
    toElem (Bibliomset_Pagenums a) = toElem a
    toElem (Bibliomset_Printhistory a) = toElem a
    toElem (Bibliomset_Productname a) = toElem a
    toElem (Bibliomset_Productnumber a) = toElem a
    toElem (Bibliomset_Pubdate a) = toElem a
    toElem (Bibliomset_Publisher a) = toElem a
    toElem (Bibliomset_Publishername a) = toElem a
    toElem (Bibliomset_Pubsnumber a) = toElem a
    toElem (Bibliomset_Releaseinfo a) = toElem a
    toElem (Bibliomset_Revhistory a) = toElem a
    toElem (Bibliomset_Seriesvolnums a) = toElem a
    toElem (Bibliomset_Subtitle a) = toElem a
    toElem (Bibliomset_Title a) = toElem a
    toElem (Bibliomset_Titleabbrev a) = toElem a
    toElem (Bibliomset_Volumenum a) = toElem a
    toElem (Bibliomset_Citetitle a) = toElem a
    toElem (Bibliomset_Personname a) = toElem a
    toElem (Bibliomset_Honorific a) = toElem a
    toElem (Bibliomset_Firstname a) = toElem a
    toElem (Bibliomset_Surname a) = toElem a
    toElem (Bibliomset_Lineage a) = toElem a
    toElem (Bibliomset_Othername a) = toElem a
    toElem (Bibliomset_Affiliation a) = toElem a
    toElem (Bibliomset_Authorblurb a) = toElem a
    toElem (Bibliomset_Contrib a) = toElem a
    toElem (Bibliomset_Indexterm a) = toElem a
    toElem (Bibliomset_Bibliomset a) = toElem a
instance XmlAttrType Bibliomset_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Bibliomset_Revisionflag_Changed
	    translate "added" = Just Bibliomset_Revisionflag_Added
	    translate "deleted" = Just Bibliomset_Revisionflag_Deleted
	    translate "off" = Just Bibliomset_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Bibliomset_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Bibliomset_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Bibliomset_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Bibliomset_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Bibliomisc where
    fromElem (CElem (Elem "bibliomisc" as c0):rest) =
	(\(a,ca)->
	   (Just (Bibliomisc (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bibliomisc as a) =
	[CElem (Elem "bibliomisc" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Bibliomisc_Attrs where
    fromAttrs as =
	Bibliomisc_Attrs
	  { bibliomiscId = possibleA fromAttrToStr "id" as
	  , bibliomiscLang = possibleA fromAttrToStr "lang" as
	  , bibliomiscRemap = possibleA fromAttrToStr "remap" as
	  , bibliomiscXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , bibliomiscRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , bibliomiscArch = possibleA fromAttrToStr "arch" as
	  , bibliomiscCondition = possibleA fromAttrToStr "condition" as
	  , bibliomiscConformance = possibleA fromAttrToStr "conformance" as
	  , bibliomiscOs = possibleA fromAttrToStr "os" as
	  , bibliomiscRevision = possibleA fromAttrToStr "revision" as
	  , bibliomiscSecurity = possibleA fromAttrToStr "security" as
	  , bibliomiscUserlevel = possibleA fromAttrToStr "userlevel" as
	  , bibliomiscVendor = possibleA fromAttrToStr "vendor" as
	  , bibliomiscRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (bibliomiscId v)
	, maybeToAttr toAttrFrStr "lang" (bibliomiscLang v)
	, maybeToAttr toAttrFrStr "remap" (bibliomiscRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (bibliomiscXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (bibliomiscRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (bibliomiscArch v)
	, maybeToAttr toAttrFrStr "condition" (bibliomiscCondition v)
	, maybeToAttr toAttrFrStr "conformance" (bibliomiscConformance v)
	, maybeToAttr toAttrFrStr "os" (bibliomiscOs v)
	, maybeToAttr toAttrFrStr "revision" (bibliomiscRevision v)
	, maybeToAttr toAttrFrStr "security" (bibliomiscSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (bibliomiscUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (bibliomiscVendor v)
	, maybeToAttr toAttrFrStr "role" (bibliomiscRole v)
	]
instance XmlContent Bibliomisc_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Bibliomisc_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Bibliomisc_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Bibliomisc_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Bibliomisc_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Bibliomisc_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Bibliomisc_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Bibliomisc_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Bibliomisc_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Bibliomisc_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Bibliomisc_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Bibliomisc_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Bibliomisc_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Bibliomisc_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Bibliomisc_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Bibliomisc_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Bibliomisc_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Bibliomisc_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Bibliomisc_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Bibliomisc_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Bibliomisc_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Bibliomisc_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Bibliomisc_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Bibliomisc_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Bibliomisc_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Bibliomisc_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Bibliomisc_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Bibliomisc_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Bibliomisc_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Bibliomisc_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Bibliomisc_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Bibliomisc_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Bibliomisc_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Bibliomisc_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Bibliomisc_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Bibliomisc_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Bibliomisc_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Bibliomisc_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Bibliomisc_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Bibliomisc_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Bibliomisc_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Bibliomisc_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Bibliomisc_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Bibliomisc_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Bibliomisc_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Bibliomisc_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Bibliomisc_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Bibliomisc_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Bibliomisc_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Bibliomisc_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Bibliomisc_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Bibliomisc_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Bibliomisc_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Bibliomisc_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Bibliomisc_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Bibliomisc_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Bibliomisc_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Bibliomisc_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Bibliomisc_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Bibliomisc_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Bibliomisc_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Bibliomisc_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Bibliomisc_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Bibliomisc_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Bibliomisc_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Bibliomisc_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Bibliomisc_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Bibliomisc_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Bibliomisc_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Bibliomisc_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Bibliomisc_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Bibliomisc_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Bibliomisc_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Bibliomisc_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Bibliomisc_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Bibliomisc_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Bibliomisc_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Bibliomisc_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Bibliomisc_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Bibliomisc_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Bibliomisc_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Bibliomisc_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Bibliomisc_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Bibliomisc_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Bibliomisc_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Bibliomisc_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Bibliomisc_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Bibliomisc_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Bibliomisc_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Bibliomisc_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Bibliomisc_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Bibliomisc_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Bibliomisc_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Bibliomisc_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Bibliomisc_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Bibliomisc_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Bibliomisc_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Bibliomisc_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Bibliomisc_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Bibliomisc_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Bibliomisc_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bibliomisc_Str a) = toText a
    toElem (Bibliomisc_Footnoteref a) = toElem a
    toElem (Bibliomisc_Xref a) = toElem a
    toElem (Bibliomisc_Abbrev a) = toElem a
    toElem (Bibliomisc_Acronym a) = toElem a
    toElem (Bibliomisc_Citation a) = toElem a
    toElem (Bibliomisc_Citerefentry a) = toElem a
    toElem (Bibliomisc_Citetitle a) = toElem a
    toElem (Bibliomisc_Emphasis a) = toElem a
    toElem (Bibliomisc_Firstterm a) = toElem a
    toElem (Bibliomisc_Foreignphrase a) = toElem a
    toElem (Bibliomisc_Glossterm a) = toElem a
    toElem (Bibliomisc_Footnote a) = toElem a
    toElem (Bibliomisc_Phrase a) = toElem a
    toElem (Bibliomisc_Quote a) = toElem a
    toElem (Bibliomisc_Trademark a) = toElem a
    toElem (Bibliomisc_Wordasword a) = toElem a
    toElem (Bibliomisc_Personname a) = toElem a
    toElem (Bibliomisc_Link a) = toElem a
    toElem (Bibliomisc_Olink a) = toElem a
    toElem (Bibliomisc_Ulink a) = toElem a
    toElem (Bibliomisc_Action a) = toElem a
    toElem (Bibliomisc_Application a) = toElem a
    toElem (Bibliomisc_Classname a) = toElem a
    toElem (Bibliomisc_Methodname a) = toElem a
    toElem (Bibliomisc_Interfacename a) = toElem a
    toElem (Bibliomisc_Exceptionname a) = toElem a
    toElem (Bibliomisc_Ooclass a) = toElem a
    toElem (Bibliomisc_Oointerface a) = toElem a
    toElem (Bibliomisc_Ooexception a) = toElem a
    toElem (Bibliomisc_Command a) = toElem a
    toElem (Bibliomisc_Computeroutput a) = toElem a
    toElem (Bibliomisc_Database a) = toElem a
    toElem (Bibliomisc_Email a) = toElem a
    toElem (Bibliomisc_Envar a) = toElem a
    toElem (Bibliomisc_Errorcode a) = toElem a
    toElem (Bibliomisc_Errorname a) = toElem a
    toElem (Bibliomisc_Errortype a) = toElem a
    toElem (Bibliomisc_Errortext a) = toElem a
    toElem (Bibliomisc_Filename a) = toElem a
    toElem (Bibliomisc_Function a) = toElem a
    toElem (Bibliomisc_Guibutton a) = toElem a
    toElem (Bibliomisc_Guiicon a) = toElem a
    toElem (Bibliomisc_Guilabel a) = toElem a
    toElem (Bibliomisc_Guimenu a) = toElem a
    toElem (Bibliomisc_Guimenuitem a) = toElem a
    toElem (Bibliomisc_Guisubmenu a) = toElem a
    toElem (Bibliomisc_Hardware a) = toElem a
    toElem (Bibliomisc_Interface a) = toElem a
    toElem (Bibliomisc_Keycap a) = toElem a
    toElem (Bibliomisc_Keycode a) = toElem a
    toElem (Bibliomisc_Keycombo a) = toElem a
    toElem (Bibliomisc_Keysym a) = toElem a
    toElem (Bibliomisc_Literal a) = toElem a
    toElem (Bibliomisc_Constant a) = toElem a
    toElem (Bibliomisc_Markup a) = toElem a
    toElem (Bibliomisc_Medialabel a) = toElem a
    toElem (Bibliomisc_Menuchoice a) = toElem a
    toElem (Bibliomisc_Mousebutton a) = toElem a
    toElem (Bibliomisc_Option a) = toElem a
    toElem (Bibliomisc_Optional a) = toElem a
    toElem (Bibliomisc_Parameter a) = toElem a
    toElem (Bibliomisc_Prompt a) = toElem a
    toElem (Bibliomisc_Property a) = toElem a
    toElem (Bibliomisc_Replaceable a) = toElem a
    toElem (Bibliomisc_Returnvalue a) = toElem a
    toElem (Bibliomisc_Sgmltag a) = toElem a
    toElem (Bibliomisc_Structfield a) = toElem a
    toElem (Bibliomisc_Structname a) = toElem a
    toElem (Bibliomisc_Symbol a) = toElem a
    toElem (Bibliomisc_Systemitem a) = toElem a
    toElem (Bibliomisc_Token a) = toElem a
    toElem (Bibliomisc_Type a) = toElem a
    toElem (Bibliomisc_Userinput a) = toElem a
    toElem (Bibliomisc_Varname a) = toElem a
    toElem (Bibliomisc_Anchor a) = toElem a
    toElem (Bibliomisc_Author a) = toElem a
    toElem (Bibliomisc_Authorinitials a) = toElem a
    toElem (Bibliomisc_Corpauthor a) = toElem a
    toElem (Bibliomisc_Modespec a) = toElem a
    toElem (Bibliomisc_Othercredit a) = toElem a
    toElem (Bibliomisc_Productname a) = toElem a
    toElem (Bibliomisc_Productnumber a) = toElem a
    toElem (Bibliomisc_Revhistory a) = toElem a
    toElem (Bibliomisc_Remark a) = toElem a
    toElem (Bibliomisc_Subscript a) = toElem a
    toElem (Bibliomisc_Superscript a) = toElem a
    toElem (Bibliomisc_Inlinegraphic a) = toElem a
    toElem (Bibliomisc_Inlinemediaobject a) = toElem a
    toElem (Bibliomisc_Inlineequation a) = toElem a
    toElem (Bibliomisc_Synopsis a) = toElem a
    toElem (Bibliomisc_Cmdsynopsis a) = toElem a
    toElem (Bibliomisc_Funcsynopsis a) = toElem a
    toElem (Bibliomisc_Classsynopsis a) = toElem a
    toElem (Bibliomisc_Fieldsynopsis a) = toElem a
    toElem (Bibliomisc_Constructorsynopsis a) = toElem a
    toElem (Bibliomisc_Destructorsynopsis a) = toElem a
    toElem (Bibliomisc_Methodsynopsis a) = toElem a
    toElem (Bibliomisc_Indexterm a) = toElem a
    toElem (Bibliomisc_Beginpage a) = toElem a
instance XmlAttrType Bibliomisc_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Bibliomisc_Revisionflag_Changed
	    translate "added" = Just Bibliomisc_Revisionflag_Added
	    translate "deleted" = Just Bibliomisc_Revisionflag_Deleted
	    translate "off" = Just Bibliomisc_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Bibliomisc_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Bibliomisc_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Bibliomisc_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Bibliomisc_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Subjectset where
    fromElem (CElem (Elem "subjectset" as c0):rest) =
	(\(a,ca)->
	   (Just (Subjectset (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Subjectset as a) =
	[CElem (Elem "subjectset" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Subjectset_Attrs where
    fromAttrs as =
	Subjectset_Attrs
	  { subjectsetScheme = possibleA fromAttrToStr "scheme" as
	  , subjectsetId = possibleA fromAttrToStr "id" as
	  , subjectsetLang = possibleA fromAttrToStr "lang" as
	  , subjectsetRemap = possibleA fromAttrToStr "remap" as
	  , subjectsetXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , subjectsetRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , subjectsetArch = possibleA fromAttrToStr "arch" as
	  , subjectsetCondition = possibleA fromAttrToStr "condition" as
	  , subjectsetConformance = possibleA fromAttrToStr "conformance" as
	  , subjectsetOs = possibleA fromAttrToStr "os" as
	  , subjectsetRevision = possibleA fromAttrToStr "revision" as
	  , subjectsetSecurity = possibleA fromAttrToStr "security" as
	  , subjectsetUserlevel = possibleA fromAttrToStr "userlevel" as
	  , subjectsetVendor = possibleA fromAttrToStr "vendor" as
	  , subjectsetRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "scheme" (subjectsetScheme v)
	, maybeToAttr toAttrFrStr "id" (subjectsetId v)
	, maybeToAttr toAttrFrStr "lang" (subjectsetLang v)
	, maybeToAttr toAttrFrStr "remap" (subjectsetRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (subjectsetXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (subjectsetRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (subjectsetArch v)
	, maybeToAttr toAttrFrStr "condition" (subjectsetCondition v)
	, maybeToAttr toAttrFrStr "conformance" (subjectsetConformance v)
	, maybeToAttr toAttrFrStr "os" (subjectsetOs v)
	, maybeToAttr toAttrFrStr "revision" (subjectsetRevision v)
	, maybeToAttr toAttrFrStr "security" (subjectsetSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (subjectsetUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (subjectsetVendor v)
	, maybeToAttr toAttrFrStr "role" (subjectsetRole v)
	]
instance XmlAttrType Subjectset_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Subjectset_Revisionflag_Changed
	    translate "added" = Just Subjectset_Revisionflag_Added
	    translate "deleted" = Just Subjectset_Revisionflag_Deleted
	    translate "off" = Just Subjectset_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Subjectset_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Subjectset_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Subjectset_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Subjectset_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Subject where
    fromElem (CElem (Elem "subject" as c0):rest) =
	(\(a,ca)->
	   (Just (Subject (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Subject as a) =
	[CElem (Elem "subject" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Subject_Attrs where
    fromAttrs as =
	Subject_Attrs
	  { subjectWeight = possibleA fromAttrToStr "weight" as
	  , subjectId = possibleA fromAttrToStr "id" as
	  , subjectLang = possibleA fromAttrToStr "lang" as
	  , subjectRemap = possibleA fromAttrToStr "remap" as
	  , subjectXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , subjectRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , subjectArch = possibleA fromAttrToStr "arch" as
	  , subjectCondition = possibleA fromAttrToStr "condition" as
	  , subjectConformance = possibleA fromAttrToStr "conformance" as
	  , subjectOs = possibleA fromAttrToStr "os" as
	  , subjectRevision = possibleA fromAttrToStr "revision" as
	  , subjectSecurity = possibleA fromAttrToStr "security" as
	  , subjectUserlevel = possibleA fromAttrToStr "userlevel" as
	  , subjectVendor = possibleA fromAttrToStr "vendor" as
	  , subjectRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "weight" (subjectWeight v)
	, maybeToAttr toAttrFrStr "id" (subjectId v)
	, maybeToAttr toAttrFrStr "lang" (subjectLang v)
	, maybeToAttr toAttrFrStr "remap" (subjectRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (subjectXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (subjectRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (subjectArch v)
	, maybeToAttr toAttrFrStr "condition" (subjectCondition v)
	, maybeToAttr toAttrFrStr "conformance" (subjectConformance v)
	, maybeToAttr toAttrFrStr "os" (subjectOs v)
	, maybeToAttr toAttrFrStr "revision" (subjectRevision v)
	, maybeToAttr toAttrFrStr "security" (subjectSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (subjectUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (subjectVendor v)
	, maybeToAttr toAttrFrStr "role" (subjectRole v)
	]
instance XmlAttrType Subject_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Subject_Revisionflag_Changed
	    translate "added" = Just Subject_Revisionflag_Added
	    translate "deleted" = Just Subject_Revisionflag_Deleted
	    translate "off" = Just Subject_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Subject_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Subject_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Subject_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Subject_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Subjectterm where
    fromElem (CElem (Elem "subjectterm" as c0):rest) =
	(\(a,ca)->
	   (Just (Subjectterm (fromAttrs as) a), rest))
	(definite fromText "text" "subjectterm" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Subjectterm as a) =
	[CElem (Elem "subjectterm" (toAttrs as) (toText a))]
instance XmlAttributes Subjectterm_Attrs where
    fromAttrs as =
	Subjectterm_Attrs
	  { subjecttermId = possibleA fromAttrToStr "id" as
	  , subjecttermLang = possibleA fromAttrToStr "lang" as
	  , subjecttermRemap = possibleA fromAttrToStr "remap" as
	  , subjecttermXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , subjecttermRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , subjecttermArch = possibleA fromAttrToStr "arch" as
	  , subjecttermCondition = possibleA fromAttrToStr "condition" as
	  , subjecttermConformance = possibleA fromAttrToStr "conformance" as
	  , subjecttermOs = possibleA fromAttrToStr "os" as
	  , subjecttermRevision = possibleA fromAttrToStr "revision" as
	  , subjecttermSecurity = possibleA fromAttrToStr "security" as
	  , subjecttermUserlevel = possibleA fromAttrToStr "userlevel" as
	  , subjecttermVendor = possibleA fromAttrToStr "vendor" as
	  , subjecttermRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (subjecttermId v)
	, maybeToAttr toAttrFrStr "lang" (subjecttermLang v)
	, maybeToAttr toAttrFrStr "remap" (subjecttermRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (subjecttermXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (subjecttermRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (subjecttermArch v)
	, maybeToAttr toAttrFrStr "condition" (subjecttermCondition v)
	, maybeToAttr toAttrFrStr "conformance" (subjecttermConformance v)
	, maybeToAttr toAttrFrStr "os" (subjecttermOs v)
	, maybeToAttr toAttrFrStr "revision" (subjecttermRevision v)
	, maybeToAttr toAttrFrStr "security" (subjecttermSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (subjecttermUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (subjecttermVendor v)
	, maybeToAttr toAttrFrStr "role" (subjecttermRole v)
	]
instance XmlAttrType Subjectterm_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Subjectterm_Revisionflag_Changed
	    translate "added" = Just Subjectterm_Revisionflag_Added
	    translate "deleted" = Just Subjectterm_Revisionflag_Deleted
	    translate "off" = Just Subjectterm_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Subjectterm_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Subjectterm_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Subjectterm_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Subjectterm_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Keywordset where
    fromElem (CElem (Elem "keywordset" as c0):rest) =
	(\(a,ca)->
	   (Just (Keywordset (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Keywordset as a) =
	[CElem (Elem "keywordset" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Keywordset_Attrs where
    fromAttrs as =
	Keywordset_Attrs
	  { keywordsetId = possibleA fromAttrToStr "id" as
	  , keywordsetLang = possibleA fromAttrToStr "lang" as
	  , keywordsetRemap = possibleA fromAttrToStr "remap" as
	  , keywordsetXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , keywordsetRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , keywordsetArch = possibleA fromAttrToStr "arch" as
	  , keywordsetCondition = possibleA fromAttrToStr "condition" as
	  , keywordsetConformance = possibleA fromAttrToStr "conformance" as
	  , keywordsetOs = possibleA fromAttrToStr "os" as
	  , keywordsetRevision = possibleA fromAttrToStr "revision" as
	  , keywordsetSecurity = possibleA fromAttrToStr "security" as
	  , keywordsetUserlevel = possibleA fromAttrToStr "userlevel" as
	  , keywordsetVendor = possibleA fromAttrToStr "vendor" as
	  , keywordsetRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (keywordsetId v)
	, maybeToAttr toAttrFrStr "lang" (keywordsetLang v)
	, maybeToAttr toAttrFrStr "remap" (keywordsetRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (keywordsetXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (keywordsetRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (keywordsetArch v)
	, maybeToAttr toAttrFrStr "condition" (keywordsetCondition v)
	, maybeToAttr toAttrFrStr "conformance" (keywordsetConformance v)
	, maybeToAttr toAttrFrStr "os" (keywordsetOs v)
	, maybeToAttr toAttrFrStr "revision" (keywordsetRevision v)
	, maybeToAttr toAttrFrStr "security" (keywordsetSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (keywordsetUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (keywordsetVendor v)
	, maybeToAttr toAttrFrStr "role" (keywordsetRole v)
	]
instance XmlAttrType Keywordset_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Keywordset_Revisionflag_Changed
	    translate "added" = Just Keywordset_Revisionflag_Added
	    translate "deleted" = Just Keywordset_Revisionflag_Deleted
	    translate "off" = Just Keywordset_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Keywordset_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Keywordset_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Keywordset_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Keywordset_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Keyword where
    fromElem (CElem (Elem "keyword" as c0):rest) =
	(\(a,ca)->
	   (Just (Keyword (fromAttrs as) a), rest))
	(definite fromText "text" "keyword" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Keyword as a) =
	[CElem (Elem "keyword" (toAttrs as) (toText a))]
instance XmlAttributes Keyword_Attrs where
    fromAttrs as =
	Keyword_Attrs
	  { keywordId = possibleA fromAttrToStr "id" as
	  , keywordLang = possibleA fromAttrToStr "lang" as
	  , keywordRemap = possibleA fromAttrToStr "remap" as
	  , keywordXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , keywordRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , keywordArch = possibleA fromAttrToStr "arch" as
	  , keywordCondition = possibleA fromAttrToStr "condition" as
	  , keywordConformance = possibleA fromAttrToStr "conformance" as
	  , keywordOs = possibleA fromAttrToStr "os" as
	  , keywordRevision = possibleA fromAttrToStr "revision" as
	  , keywordSecurity = possibleA fromAttrToStr "security" as
	  , keywordUserlevel = possibleA fromAttrToStr "userlevel" as
	  , keywordVendor = possibleA fromAttrToStr "vendor" as
	  , keywordRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (keywordId v)
	, maybeToAttr toAttrFrStr "lang" (keywordLang v)
	, maybeToAttr toAttrFrStr "remap" (keywordRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (keywordXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (keywordRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (keywordArch v)
	, maybeToAttr toAttrFrStr "condition" (keywordCondition v)
	, maybeToAttr toAttrFrStr "conformance" (keywordConformance v)
	, maybeToAttr toAttrFrStr "os" (keywordOs v)
	, maybeToAttr toAttrFrStr "revision" (keywordRevision v)
	, maybeToAttr toAttrFrStr "security" (keywordSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (keywordUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (keywordVendor v)
	, maybeToAttr toAttrFrStr "role" (keywordRole v)
	]
instance XmlAttrType Keyword_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Keyword_Revisionflag_Changed
	    translate "added" = Just Keyword_Revisionflag_Added
	    translate "deleted" = Just Keyword_Revisionflag_Deleted
	    translate "off" = Just Keyword_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Keyword_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Keyword_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Keyword_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Keyword_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Itermset where
    fromElem (CElem (Elem "itermset" as c0):rest) =
	(\(a,ca)->
	   (Just (Itermset (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Itermset as a) =
	[CElem (Elem "itermset" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Itermset_Attrs where
    fromAttrs as =
	Itermset_Attrs
	  { itermsetId = possibleA fromAttrToStr "id" as
	  , itermsetLang = possibleA fromAttrToStr "lang" as
	  , itermsetRemap = possibleA fromAttrToStr "remap" as
	  , itermsetXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , itermsetRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , itermsetArch = possibleA fromAttrToStr "arch" as
	  , itermsetCondition = possibleA fromAttrToStr "condition" as
	  , itermsetConformance = possibleA fromAttrToStr "conformance" as
	  , itermsetOs = possibleA fromAttrToStr "os" as
	  , itermsetRevision = possibleA fromAttrToStr "revision" as
	  , itermsetSecurity = possibleA fromAttrToStr "security" as
	  , itermsetUserlevel = possibleA fromAttrToStr "userlevel" as
	  , itermsetVendor = possibleA fromAttrToStr "vendor" as
	  , itermsetRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (itermsetId v)
	, maybeToAttr toAttrFrStr "lang" (itermsetLang v)
	, maybeToAttr toAttrFrStr "remap" (itermsetRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (itermsetXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (itermsetRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (itermsetArch v)
	, maybeToAttr toAttrFrStr "condition" (itermsetCondition v)
	, maybeToAttr toAttrFrStr "conformance" (itermsetConformance v)
	, maybeToAttr toAttrFrStr "os" (itermsetOs v)
	, maybeToAttr toAttrFrStr "revision" (itermsetRevision v)
	, maybeToAttr toAttrFrStr "security" (itermsetSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (itermsetUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (itermsetVendor v)
	, maybeToAttr toAttrFrStr "role" (itermsetRole v)
	]
instance XmlAttrType Itermset_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Itermset_Revisionflag_Changed
	    translate "added" = Just Itermset_Revisionflag_Added
	    translate "deleted" = Just Itermset_Revisionflag_Deleted
	    translate "off" = Just Itermset_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Itermset_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Itermset_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Itermset_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Itermset_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Blockinfo where
    fromElem (CElem (Elem "blockinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Blockinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Blockinfo as a) =
	[CElem (Elem "blockinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Blockinfo_Attrs where
    fromAttrs as =
	Blockinfo_Attrs
	  { blockinfoId = possibleA fromAttrToStr "id" as
	  , blockinfoLang = possibleA fromAttrToStr "lang" as
	  , blockinfoRemap = possibleA fromAttrToStr "remap" as
	  , blockinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , blockinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , blockinfoArch = possibleA fromAttrToStr "arch" as
	  , blockinfoCondition = possibleA fromAttrToStr "condition" as
	  , blockinfoConformance = possibleA fromAttrToStr "conformance" as
	  , blockinfoOs = possibleA fromAttrToStr "os" as
	  , blockinfoRevision = possibleA fromAttrToStr "revision" as
	  , blockinfoSecurity = possibleA fromAttrToStr "security" as
	  , blockinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , blockinfoVendor = possibleA fromAttrToStr "vendor" as
	  , blockinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (blockinfoId v)
	, maybeToAttr toAttrFrStr "lang" (blockinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (blockinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (blockinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (blockinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (blockinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (blockinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (blockinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (blockinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (blockinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (blockinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (blockinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (blockinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (blockinfoRole v)
	]
instance XmlAttrType Blockinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Blockinfo_Revisionflag_Changed
	    translate "added" = Just Blockinfo_Revisionflag_Added
	    translate "deleted" = Just Blockinfo_Revisionflag_Deleted
	    translate "off" = Just Blockinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Blockinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Blockinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Blockinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Blockinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Msgset where
    fromElem (CElem (Elem "msgset" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Msgset (fromAttrs as) a b c), rest))
	      (definite fromElem "OneOf" "msgset" cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Msgset as a b c) =
	[CElem (Elem "msgset" (toAttrs as) (maybe [] toElem a ++
					    maybe [] toElem b ++ toElem c))]
instance XmlAttributes Msgset_Attrs where
    fromAttrs as =
	Msgset_Attrs
	  { msgsetId = possibleA fromAttrToStr "id" as
	  , msgsetLang = possibleA fromAttrToStr "lang" as
	  , msgsetRemap = possibleA fromAttrToStr "remap" as
	  , msgsetXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , msgsetRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , msgsetArch = possibleA fromAttrToStr "arch" as
	  , msgsetCondition = possibleA fromAttrToStr "condition" as
	  , msgsetConformance = possibleA fromAttrToStr "conformance" as
	  , msgsetOs = possibleA fromAttrToStr "os" as
	  , msgsetRevision = possibleA fromAttrToStr "revision" as
	  , msgsetSecurity = possibleA fromAttrToStr "security" as
	  , msgsetUserlevel = possibleA fromAttrToStr "userlevel" as
	  , msgsetVendor = possibleA fromAttrToStr "vendor" as
	  , msgsetRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (msgsetId v)
	, maybeToAttr toAttrFrStr "lang" (msgsetLang v)
	, maybeToAttr toAttrFrStr "remap" (msgsetRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (msgsetXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (msgsetRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (msgsetArch v)
	, maybeToAttr toAttrFrStr "condition" (msgsetCondition v)
	, maybeToAttr toAttrFrStr "conformance" (msgsetConformance v)
	, maybeToAttr toAttrFrStr "os" (msgsetOs v)
	, maybeToAttr toAttrFrStr "revision" (msgsetRevision v)
	, maybeToAttr toAttrFrStr "security" (msgsetSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (msgsetUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (msgsetVendor v)
	, maybeToAttr toAttrFrStr "role" (msgsetRole v)
	]
instance XmlAttrType Msgset_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Msgset_Revisionflag_Changed
	    translate "added" = Just Msgset_Revisionflag_Added
	    translate "deleted" = Just Msgset_Revisionflag_Deleted
	    translate "off" = Just Msgset_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Msgset_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Msgset_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Msgset_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Msgset_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Msgentry where
    fromElem (CElem (Elem "msgentry" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Msgentry (fromAttrs as) a b c), rest))
	      (many fromElem cb))
	   (fromElem ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Msgentry as a b c) =
	[CElem (Elem "msgentry" (toAttrs as) (concatMap toElem a ++
					      maybe [] toElem b ++ concatMap toElem c))]
instance XmlAttributes Msgentry_Attrs where
    fromAttrs as =
	Msgentry_Attrs
	  { msgentryId = possibleA fromAttrToStr "id" as
	  , msgentryLang = possibleA fromAttrToStr "lang" as
	  , msgentryRemap = possibleA fromAttrToStr "remap" as
	  , msgentryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , msgentryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , msgentryArch = possibleA fromAttrToStr "arch" as
	  , msgentryCondition = possibleA fromAttrToStr "condition" as
	  , msgentryConformance = possibleA fromAttrToStr "conformance" as
	  , msgentryOs = possibleA fromAttrToStr "os" as
	  , msgentryRevision = possibleA fromAttrToStr "revision" as
	  , msgentrySecurity = possibleA fromAttrToStr "security" as
	  , msgentryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , msgentryVendor = possibleA fromAttrToStr "vendor" as
	  , msgentryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (msgentryId v)
	, maybeToAttr toAttrFrStr "lang" (msgentryLang v)
	, maybeToAttr toAttrFrStr "remap" (msgentryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (msgentryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (msgentryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (msgentryArch v)
	, maybeToAttr toAttrFrStr "condition" (msgentryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (msgentryConformance v)
	, maybeToAttr toAttrFrStr "os" (msgentryOs v)
	, maybeToAttr toAttrFrStr "revision" (msgentryRevision v)
	, maybeToAttr toAttrFrStr "security" (msgentrySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (msgentryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (msgentryVendor v)
	, maybeToAttr toAttrFrStr "role" (msgentryRole v)
	]
instance XmlAttrType Msgentry_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Msgentry_Revisionflag_Changed
	    translate "added" = Just Msgentry_Revisionflag_Added
	    translate "deleted" = Just Msgentry_Revisionflag_Deleted
	    translate "off" = Just Msgentry_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Msgentry_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Msgentry_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Msgentry_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Msgentry_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Simplemsgentry where
    fromElem (CElem (Elem "simplemsgentry" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Simplemsgentry (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(definite fromElem "<msgtext>" "simplemsgentry" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Simplemsgentry as a b) =
	[CElem (Elem "simplemsgentry" (toAttrs as) (toElem a ++
						    concatMap toElem b))]
instance XmlAttributes Simplemsgentry_Attrs where
    fromAttrs as =
	Simplemsgentry_Attrs
	  { simplemsgentryAudience = possibleA fromAttrToStr "audience" as
	  , simplemsgentryLevel = possibleA fromAttrToStr "level" as
	  , simplemsgentryOrigin = possibleA fromAttrToStr "origin" as
	  , simplemsgentryId = possibleA fromAttrToStr "id" as
	  , simplemsgentryLang = possibleA fromAttrToStr "lang" as
	  , simplemsgentryRemap = possibleA fromAttrToStr "remap" as
	  , simplemsgentryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , simplemsgentryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , simplemsgentryArch = possibleA fromAttrToStr "arch" as
	  , simplemsgentryCondition = possibleA fromAttrToStr "condition" as
	  , simplemsgentryConformance = possibleA fromAttrToStr "conformance" as
	  , simplemsgentryOs = possibleA fromAttrToStr "os" as
	  , simplemsgentryRevision = possibleA fromAttrToStr "revision" as
	  , simplemsgentrySecurity = possibleA fromAttrToStr "security" as
	  , simplemsgentryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , simplemsgentryVendor = possibleA fromAttrToStr "vendor" as
	  , simplemsgentryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "audience" (simplemsgentryAudience v)
	, maybeToAttr toAttrFrStr "level" (simplemsgentryLevel v)
	, maybeToAttr toAttrFrStr "origin" (simplemsgentryOrigin v)
	, maybeToAttr toAttrFrStr "id" (simplemsgentryId v)
	, maybeToAttr toAttrFrStr "lang" (simplemsgentryLang v)
	, maybeToAttr toAttrFrStr "remap" (simplemsgentryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (simplemsgentryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (simplemsgentryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (simplemsgentryArch v)
	, maybeToAttr toAttrFrStr "condition" (simplemsgentryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (simplemsgentryConformance v)
	, maybeToAttr toAttrFrStr "os" (simplemsgentryOs v)
	, maybeToAttr toAttrFrStr "revision" (simplemsgentryRevision v)
	, maybeToAttr toAttrFrStr "security" (simplemsgentrySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (simplemsgentryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (simplemsgentryVendor v)
	, maybeToAttr toAttrFrStr "role" (simplemsgentryRole v)
	]
instance XmlAttrType Simplemsgentry_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Simplemsgentry_Revisionflag_Changed
	    translate "added" = Just Simplemsgentry_Revisionflag_Added
	    translate "deleted" = Just Simplemsgentry_Revisionflag_Deleted
	    translate "off" = Just Simplemsgentry_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Simplemsgentry_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Simplemsgentry_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Simplemsgentry_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Simplemsgentry_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Msg where
    fromElem (CElem (Elem "msg" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Msg (fromAttrs as) a b c), rest))
	      (many fromElem cb))
	   (definite fromElem "<msgmain>" "msg" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Msg as a b c) =
	[CElem (Elem "msg" (toAttrs as) (maybe [] toElem a ++ toElem b ++
					 concatMap toElem c))]
instance XmlAttributes Msg_Attrs where
    fromAttrs as =
	Msg_Attrs
	  { msgId = possibleA fromAttrToStr "id" as
	  , msgLang = possibleA fromAttrToStr "lang" as
	  , msgRemap = possibleA fromAttrToStr "remap" as
	  , msgXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , msgRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , msgArch = possibleA fromAttrToStr "arch" as
	  , msgCondition = possibleA fromAttrToStr "condition" as
	  , msgConformance = possibleA fromAttrToStr "conformance" as
	  , msgOs = possibleA fromAttrToStr "os" as
	  , msgRevision = possibleA fromAttrToStr "revision" as
	  , msgSecurity = possibleA fromAttrToStr "security" as
	  , msgUserlevel = possibleA fromAttrToStr "userlevel" as
	  , msgVendor = possibleA fromAttrToStr "vendor" as
	  , msgRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (msgId v)
	, maybeToAttr toAttrFrStr "lang" (msgLang v)
	, maybeToAttr toAttrFrStr "remap" (msgRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (msgXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (msgRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (msgArch v)
	, maybeToAttr toAttrFrStr "condition" (msgCondition v)
	, maybeToAttr toAttrFrStr "conformance" (msgConformance v)
	, maybeToAttr toAttrFrStr "os" (msgOs v)
	, maybeToAttr toAttrFrStr "revision" (msgRevision v)
	, maybeToAttr toAttrFrStr "security" (msgSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (msgUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (msgVendor v)
	, maybeToAttr toAttrFrStr "role" (msgRole v)
	]
instance XmlAttrType Msg_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Msg_Revisionflag_Changed
	    translate "added" = Just Msg_Revisionflag_Added
	    translate "deleted" = Just Msg_Revisionflag_Deleted
	    translate "off" = Just Msg_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Msg_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Msg_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Msg_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Msg_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Msgmain where
    fromElem (CElem (Elem "msgmain" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Msgmain (fromAttrs as) a b), rest))
	   (definite fromElem "<msgtext>" "msgmain" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Msgmain as a b) =
	[CElem (Elem "msgmain" (toAttrs as) (maybe [] toElem a ++
					     toElem b))]
instance XmlAttributes Msgmain_Attrs where
    fromAttrs as =
	Msgmain_Attrs
	  { msgmainId = possibleA fromAttrToStr "id" as
	  , msgmainLang = possibleA fromAttrToStr "lang" as
	  , msgmainRemap = possibleA fromAttrToStr "remap" as
	  , msgmainXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , msgmainRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , msgmainArch = possibleA fromAttrToStr "arch" as
	  , msgmainCondition = possibleA fromAttrToStr "condition" as
	  , msgmainConformance = possibleA fromAttrToStr "conformance" as
	  , msgmainOs = possibleA fromAttrToStr "os" as
	  , msgmainRevision = possibleA fromAttrToStr "revision" as
	  , msgmainSecurity = possibleA fromAttrToStr "security" as
	  , msgmainUserlevel = possibleA fromAttrToStr "userlevel" as
	  , msgmainVendor = possibleA fromAttrToStr "vendor" as
	  , msgmainRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (msgmainId v)
	, maybeToAttr toAttrFrStr "lang" (msgmainLang v)
	, maybeToAttr toAttrFrStr "remap" (msgmainRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (msgmainXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (msgmainRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (msgmainArch v)
	, maybeToAttr toAttrFrStr "condition" (msgmainCondition v)
	, maybeToAttr toAttrFrStr "conformance" (msgmainConformance v)
	, maybeToAttr toAttrFrStr "os" (msgmainOs v)
	, maybeToAttr toAttrFrStr "revision" (msgmainRevision v)
	, maybeToAttr toAttrFrStr "security" (msgmainSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (msgmainUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (msgmainVendor v)
	, maybeToAttr toAttrFrStr "role" (msgmainRole v)
	]
instance XmlAttrType Msgmain_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Msgmain_Revisionflag_Changed
	    translate "added" = Just Msgmain_Revisionflag_Added
	    translate "deleted" = Just Msgmain_Revisionflag_Deleted
	    translate "off" = Just Msgmain_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Msgmain_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Msgmain_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Msgmain_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Msgmain_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Msgsub where
    fromElem (CElem (Elem "msgsub" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Msgsub (fromAttrs as) a b), rest))
	   (definite fromElem "<msgtext>" "msgsub" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Msgsub as a b) =
	[CElem (Elem "msgsub" (toAttrs as) (maybe [] toElem a ++
					    toElem b))]
instance XmlAttributes Msgsub_Attrs where
    fromAttrs as =
	Msgsub_Attrs
	  { msgsubId = possibleA fromAttrToStr "id" as
	  , msgsubLang = possibleA fromAttrToStr "lang" as
	  , msgsubRemap = possibleA fromAttrToStr "remap" as
	  , msgsubXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , msgsubRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , msgsubArch = possibleA fromAttrToStr "arch" as
	  , msgsubCondition = possibleA fromAttrToStr "condition" as
	  , msgsubConformance = possibleA fromAttrToStr "conformance" as
	  , msgsubOs = possibleA fromAttrToStr "os" as
	  , msgsubRevision = possibleA fromAttrToStr "revision" as
	  , msgsubSecurity = possibleA fromAttrToStr "security" as
	  , msgsubUserlevel = possibleA fromAttrToStr "userlevel" as
	  , msgsubVendor = possibleA fromAttrToStr "vendor" as
	  , msgsubRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (msgsubId v)
	, maybeToAttr toAttrFrStr "lang" (msgsubLang v)
	, maybeToAttr toAttrFrStr "remap" (msgsubRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (msgsubXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (msgsubRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (msgsubArch v)
	, maybeToAttr toAttrFrStr "condition" (msgsubCondition v)
	, maybeToAttr toAttrFrStr "conformance" (msgsubConformance v)
	, maybeToAttr toAttrFrStr "os" (msgsubOs v)
	, maybeToAttr toAttrFrStr "revision" (msgsubRevision v)
	, maybeToAttr toAttrFrStr "security" (msgsubSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (msgsubUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (msgsubVendor v)
	, maybeToAttr toAttrFrStr "role" (msgsubRole v)
	]
instance XmlAttrType Msgsub_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Msgsub_Revisionflag_Changed
	    translate "added" = Just Msgsub_Revisionflag_Added
	    translate "deleted" = Just Msgsub_Revisionflag_Deleted
	    translate "off" = Just Msgsub_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Msgsub_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Msgsub_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Msgsub_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Msgsub_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Msgrel where
    fromElem (CElem (Elem "msgrel" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Msgrel (fromAttrs as) a b), rest))
	   (definite fromElem "<msgtext>" "msgrel" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Msgrel as a b) =
	[CElem (Elem "msgrel" (toAttrs as) (maybe [] toElem a ++
					    toElem b))]
instance XmlAttributes Msgrel_Attrs where
    fromAttrs as =
	Msgrel_Attrs
	  { msgrelId = possibleA fromAttrToStr "id" as
	  , msgrelLang = possibleA fromAttrToStr "lang" as
	  , msgrelRemap = possibleA fromAttrToStr "remap" as
	  , msgrelXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , msgrelRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , msgrelArch = possibleA fromAttrToStr "arch" as
	  , msgrelCondition = possibleA fromAttrToStr "condition" as
	  , msgrelConformance = possibleA fromAttrToStr "conformance" as
	  , msgrelOs = possibleA fromAttrToStr "os" as
	  , msgrelRevision = possibleA fromAttrToStr "revision" as
	  , msgrelSecurity = possibleA fromAttrToStr "security" as
	  , msgrelUserlevel = possibleA fromAttrToStr "userlevel" as
	  , msgrelVendor = possibleA fromAttrToStr "vendor" as
	  , msgrelRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (msgrelId v)
	, maybeToAttr toAttrFrStr "lang" (msgrelLang v)
	, maybeToAttr toAttrFrStr "remap" (msgrelRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (msgrelXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (msgrelRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (msgrelArch v)
	, maybeToAttr toAttrFrStr "condition" (msgrelCondition v)
	, maybeToAttr toAttrFrStr "conformance" (msgrelConformance v)
	, maybeToAttr toAttrFrStr "os" (msgrelOs v)
	, maybeToAttr toAttrFrStr "revision" (msgrelRevision v)
	, maybeToAttr toAttrFrStr "security" (msgrelSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (msgrelUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (msgrelVendor v)
	, maybeToAttr toAttrFrStr "role" (msgrelRole v)
	]
instance XmlAttrType Msgrel_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Msgrel_Revisionflag_Changed
	    translate "added" = Just Msgrel_Revisionflag_Added
	    translate "deleted" = Just Msgrel_Revisionflag_Deleted
	    translate "off" = Just Msgrel_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Msgrel_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Msgrel_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Msgrel_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Msgrel_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Msginfo where
    fromElem (CElem (Elem "msginfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Msginfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Msginfo as a) =
	[CElem (Elem "msginfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Msginfo_Attrs where
    fromAttrs as =
	Msginfo_Attrs
	  { msginfoId = possibleA fromAttrToStr "id" as
	  , msginfoLang = possibleA fromAttrToStr "lang" as
	  , msginfoRemap = possibleA fromAttrToStr "remap" as
	  , msginfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , msginfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , msginfoArch = possibleA fromAttrToStr "arch" as
	  , msginfoCondition = possibleA fromAttrToStr "condition" as
	  , msginfoConformance = possibleA fromAttrToStr "conformance" as
	  , msginfoOs = possibleA fromAttrToStr "os" as
	  , msginfoRevision = possibleA fromAttrToStr "revision" as
	  , msginfoSecurity = possibleA fromAttrToStr "security" as
	  , msginfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , msginfoVendor = possibleA fromAttrToStr "vendor" as
	  , msginfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (msginfoId v)
	, maybeToAttr toAttrFrStr "lang" (msginfoLang v)
	, maybeToAttr toAttrFrStr "remap" (msginfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (msginfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (msginfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (msginfoArch v)
	, maybeToAttr toAttrFrStr "condition" (msginfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (msginfoConformance v)
	, maybeToAttr toAttrFrStr "os" (msginfoOs v)
	, maybeToAttr toAttrFrStr "revision" (msginfoRevision v)
	, maybeToAttr toAttrFrStr "security" (msginfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (msginfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (msginfoVendor v)
	, maybeToAttr toAttrFrStr "role" (msginfoRole v)
	]
instance XmlAttrType Msginfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Msginfo_Revisionflag_Changed
	    translate "added" = Just Msginfo_Revisionflag_Added
	    translate "deleted" = Just Msginfo_Revisionflag_Deleted
	    translate "off" = Just Msginfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Msginfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Msginfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Msginfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Msginfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Msglevel where
    fromElem (CElem (Elem "msglevel" as c0):rest) =
	(\(a,ca)->
	   (Just (Msglevel (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Msglevel as a) =
	[CElem (Elem "msglevel" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Msglevel_Attrs where
    fromAttrs as =
	Msglevel_Attrs
	  { msglevelId = possibleA fromAttrToStr "id" as
	  , msglevelLang = possibleA fromAttrToStr "lang" as
	  , msglevelRemap = possibleA fromAttrToStr "remap" as
	  , msglevelXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , msglevelRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , msglevelArch = possibleA fromAttrToStr "arch" as
	  , msglevelCondition = possibleA fromAttrToStr "condition" as
	  , msglevelConformance = possibleA fromAttrToStr "conformance" as
	  , msglevelOs = possibleA fromAttrToStr "os" as
	  , msglevelRevision = possibleA fromAttrToStr "revision" as
	  , msglevelSecurity = possibleA fromAttrToStr "security" as
	  , msglevelUserlevel = possibleA fromAttrToStr "userlevel" as
	  , msglevelVendor = possibleA fromAttrToStr "vendor" as
	  , msglevelRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (msglevelId v)
	, maybeToAttr toAttrFrStr "lang" (msglevelLang v)
	, maybeToAttr toAttrFrStr "remap" (msglevelRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (msglevelXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (msglevelRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (msglevelArch v)
	, maybeToAttr toAttrFrStr "condition" (msglevelCondition v)
	, maybeToAttr toAttrFrStr "conformance" (msglevelConformance v)
	, maybeToAttr toAttrFrStr "os" (msglevelOs v)
	, maybeToAttr toAttrFrStr "revision" (msglevelRevision v)
	, maybeToAttr toAttrFrStr "security" (msglevelSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (msglevelUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (msglevelVendor v)
	, maybeToAttr toAttrFrStr "role" (msglevelRole v)
	]
instance XmlContent Msglevel_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Msglevel_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Msglevel_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Msglevel_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Msglevel_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Msglevel_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Msglevel_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Msglevel_Str a) = toText a
    toElem (Msglevel_Replaceable a) = toElem a
    toElem (Msglevel_Inlinegraphic a) = toElem a
    toElem (Msglevel_Inlinemediaobject a) = toElem a
    toElem (Msglevel_Indexterm a) = toElem a
    toElem (Msglevel_Beginpage a) = toElem a
instance XmlAttrType Msglevel_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Msglevel_Revisionflag_Changed
	    translate "added" = Just Msglevel_Revisionflag_Added
	    translate "deleted" = Just Msglevel_Revisionflag_Deleted
	    translate "off" = Just Msglevel_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Msglevel_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Msglevel_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Msglevel_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Msglevel_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Msgorig where
    fromElem (CElem (Elem "msgorig" as c0):rest) =
	(\(a,ca)->
	   (Just (Msgorig (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Msgorig as a) =
	[CElem (Elem "msgorig" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Msgorig_Attrs where
    fromAttrs as =
	Msgorig_Attrs
	  { msgorigId = possibleA fromAttrToStr "id" as
	  , msgorigLang = possibleA fromAttrToStr "lang" as
	  , msgorigRemap = possibleA fromAttrToStr "remap" as
	  , msgorigXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , msgorigRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , msgorigArch = possibleA fromAttrToStr "arch" as
	  , msgorigCondition = possibleA fromAttrToStr "condition" as
	  , msgorigConformance = possibleA fromAttrToStr "conformance" as
	  , msgorigOs = possibleA fromAttrToStr "os" as
	  , msgorigRevision = possibleA fromAttrToStr "revision" as
	  , msgorigSecurity = possibleA fromAttrToStr "security" as
	  , msgorigUserlevel = possibleA fromAttrToStr "userlevel" as
	  , msgorigVendor = possibleA fromAttrToStr "vendor" as
	  , msgorigRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (msgorigId v)
	, maybeToAttr toAttrFrStr "lang" (msgorigLang v)
	, maybeToAttr toAttrFrStr "remap" (msgorigRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (msgorigXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (msgorigRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (msgorigArch v)
	, maybeToAttr toAttrFrStr "condition" (msgorigCondition v)
	, maybeToAttr toAttrFrStr "conformance" (msgorigConformance v)
	, maybeToAttr toAttrFrStr "os" (msgorigOs v)
	, maybeToAttr toAttrFrStr "revision" (msgorigRevision v)
	, maybeToAttr toAttrFrStr "security" (msgorigSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (msgorigUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (msgorigVendor v)
	, maybeToAttr toAttrFrStr "role" (msgorigRole v)
	]
instance XmlContent Msgorig_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Msgorig_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Msgorig_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Msgorig_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Msgorig_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Msgorig_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Msgorig_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Msgorig_Str a) = toText a
    toElem (Msgorig_Replaceable a) = toElem a
    toElem (Msgorig_Inlinegraphic a) = toElem a
    toElem (Msgorig_Inlinemediaobject a) = toElem a
    toElem (Msgorig_Indexterm a) = toElem a
    toElem (Msgorig_Beginpage a) = toElem a
instance XmlAttrType Msgorig_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Msgorig_Revisionflag_Changed
	    translate "added" = Just Msgorig_Revisionflag_Added
	    translate "deleted" = Just Msgorig_Revisionflag_Deleted
	    translate "off" = Just Msgorig_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Msgorig_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Msgorig_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Msgorig_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Msgorig_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Msgaud where
    fromElem (CElem (Elem "msgaud" as c0):rest) =
	(\(a,ca)->
	   (Just (Msgaud (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Msgaud as a) =
	[CElem (Elem "msgaud" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Msgaud_Attrs where
    fromAttrs as =
	Msgaud_Attrs
	  { msgaudId = possibleA fromAttrToStr "id" as
	  , msgaudLang = possibleA fromAttrToStr "lang" as
	  , msgaudRemap = possibleA fromAttrToStr "remap" as
	  , msgaudXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , msgaudRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , msgaudArch = possibleA fromAttrToStr "arch" as
	  , msgaudCondition = possibleA fromAttrToStr "condition" as
	  , msgaudConformance = possibleA fromAttrToStr "conformance" as
	  , msgaudOs = possibleA fromAttrToStr "os" as
	  , msgaudRevision = possibleA fromAttrToStr "revision" as
	  , msgaudSecurity = possibleA fromAttrToStr "security" as
	  , msgaudUserlevel = possibleA fromAttrToStr "userlevel" as
	  , msgaudVendor = possibleA fromAttrToStr "vendor" as
	  , msgaudRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (msgaudId v)
	, maybeToAttr toAttrFrStr "lang" (msgaudLang v)
	, maybeToAttr toAttrFrStr "remap" (msgaudRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (msgaudXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (msgaudRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (msgaudArch v)
	, maybeToAttr toAttrFrStr "condition" (msgaudCondition v)
	, maybeToAttr toAttrFrStr "conformance" (msgaudConformance v)
	, maybeToAttr toAttrFrStr "os" (msgaudOs v)
	, maybeToAttr toAttrFrStr "revision" (msgaudRevision v)
	, maybeToAttr toAttrFrStr "security" (msgaudSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (msgaudUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (msgaudVendor v)
	, maybeToAttr toAttrFrStr "role" (msgaudRole v)
	]
instance XmlContent Msgaud_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Msgaud_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Msgaud_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Msgaud_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Msgaud_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Msgaud_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Msgaud_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Msgaud_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Msgaud_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Msgaud_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Msgaud_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Msgaud_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Msgaud_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Msgaud_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Msgaud_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Msgaud_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Msgaud_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Msgaud_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Msgaud_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Msgaud_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Msgaud_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Msgaud_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Msgaud_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Msgaud_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Msgaud_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Msgaud_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Msgaud_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Msgaud_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Msgaud_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Msgaud_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Msgaud_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Msgaud_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Msgaud_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Msgaud_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Msgaud_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Msgaud_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Msgaud_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Msgaud_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Msgaud_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Msgaud_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Msgaud_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Msgaud_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Msgaud_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Msgaud_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Msgaud_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Msgaud_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Msgaud_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Msgaud_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Msgaud_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Msgaud_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Msgaud_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Msgaud_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Msgaud_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Msgaud_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Msgaud_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Msgaud_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Msgaud_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Msgaud_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Msgaud_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Msgaud_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Msgaud_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Msgaud_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Msgaud_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Msgaud_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Msgaud_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Msgaud_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Msgaud_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Msgaud_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Msgaud_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Msgaud_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Msgaud_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Msgaud_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Msgaud_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Msgaud_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Msgaud_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Msgaud_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Msgaud_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Msgaud_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Msgaud_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Msgaud_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Msgaud_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Msgaud_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Msgaud_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Msgaud_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Msgaud_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Msgaud_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Msgaud_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Msgaud_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Msgaud_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Msgaud_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Msgaud_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Msgaud_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Msgaud_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Msgaud_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Msgaud_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Msgaud_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Msgaud_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Msgaud_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Msgaud_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Msgaud_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Msgaud_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Msgaud_Str a) = toText a
    toElem (Msgaud_Footnoteref a) = toElem a
    toElem (Msgaud_Xref a) = toElem a
    toElem (Msgaud_Abbrev a) = toElem a
    toElem (Msgaud_Acronym a) = toElem a
    toElem (Msgaud_Citation a) = toElem a
    toElem (Msgaud_Citerefentry a) = toElem a
    toElem (Msgaud_Citetitle a) = toElem a
    toElem (Msgaud_Emphasis a) = toElem a
    toElem (Msgaud_Firstterm a) = toElem a
    toElem (Msgaud_Foreignphrase a) = toElem a
    toElem (Msgaud_Glossterm a) = toElem a
    toElem (Msgaud_Footnote a) = toElem a
    toElem (Msgaud_Phrase a) = toElem a
    toElem (Msgaud_Quote a) = toElem a
    toElem (Msgaud_Trademark a) = toElem a
    toElem (Msgaud_Wordasword a) = toElem a
    toElem (Msgaud_Personname a) = toElem a
    toElem (Msgaud_Link a) = toElem a
    toElem (Msgaud_Olink a) = toElem a
    toElem (Msgaud_Ulink a) = toElem a
    toElem (Msgaud_Action a) = toElem a
    toElem (Msgaud_Application a) = toElem a
    toElem (Msgaud_Classname a) = toElem a
    toElem (Msgaud_Methodname a) = toElem a
    toElem (Msgaud_Interfacename a) = toElem a
    toElem (Msgaud_Exceptionname a) = toElem a
    toElem (Msgaud_Ooclass a) = toElem a
    toElem (Msgaud_Oointerface a) = toElem a
    toElem (Msgaud_Ooexception a) = toElem a
    toElem (Msgaud_Command a) = toElem a
    toElem (Msgaud_Computeroutput a) = toElem a
    toElem (Msgaud_Database a) = toElem a
    toElem (Msgaud_Email a) = toElem a
    toElem (Msgaud_Envar a) = toElem a
    toElem (Msgaud_Errorcode a) = toElem a
    toElem (Msgaud_Errorname a) = toElem a
    toElem (Msgaud_Errortype a) = toElem a
    toElem (Msgaud_Errortext a) = toElem a
    toElem (Msgaud_Filename a) = toElem a
    toElem (Msgaud_Function a) = toElem a
    toElem (Msgaud_Guibutton a) = toElem a
    toElem (Msgaud_Guiicon a) = toElem a
    toElem (Msgaud_Guilabel a) = toElem a
    toElem (Msgaud_Guimenu a) = toElem a
    toElem (Msgaud_Guimenuitem a) = toElem a
    toElem (Msgaud_Guisubmenu a) = toElem a
    toElem (Msgaud_Hardware a) = toElem a
    toElem (Msgaud_Interface a) = toElem a
    toElem (Msgaud_Keycap a) = toElem a
    toElem (Msgaud_Keycode a) = toElem a
    toElem (Msgaud_Keycombo a) = toElem a
    toElem (Msgaud_Keysym a) = toElem a
    toElem (Msgaud_Literal a) = toElem a
    toElem (Msgaud_Constant a) = toElem a
    toElem (Msgaud_Markup a) = toElem a
    toElem (Msgaud_Medialabel a) = toElem a
    toElem (Msgaud_Menuchoice a) = toElem a
    toElem (Msgaud_Mousebutton a) = toElem a
    toElem (Msgaud_Option a) = toElem a
    toElem (Msgaud_Optional a) = toElem a
    toElem (Msgaud_Parameter a) = toElem a
    toElem (Msgaud_Prompt a) = toElem a
    toElem (Msgaud_Property a) = toElem a
    toElem (Msgaud_Replaceable a) = toElem a
    toElem (Msgaud_Returnvalue a) = toElem a
    toElem (Msgaud_Sgmltag a) = toElem a
    toElem (Msgaud_Structfield a) = toElem a
    toElem (Msgaud_Structname a) = toElem a
    toElem (Msgaud_Symbol a) = toElem a
    toElem (Msgaud_Systemitem a) = toElem a
    toElem (Msgaud_Token a) = toElem a
    toElem (Msgaud_Type a) = toElem a
    toElem (Msgaud_Userinput a) = toElem a
    toElem (Msgaud_Varname a) = toElem a
    toElem (Msgaud_Anchor a) = toElem a
    toElem (Msgaud_Author a) = toElem a
    toElem (Msgaud_Authorinitials a) = toElem a
    toElem (Msgaud_Corpauthor a) = toElem a
    toElem (Msgaud_Modespec a) = toElem a
    toElem (Msgaud_Othercredit a) = toElem a
    toElem (Msgaud_Productname a) = toElem a
    toElem (Msgaud_Productnumber a) = toElem a
    toElem (Msgaud_Revhistory a) = toElem a
    toElem (Msgaud_Remark a) = toElem a
    toElem (Msgaud_Subscript a) = toElem a
    toElem (Msgaud_Superscript a) = toElem a
    toElem (Msgaud_Inlinegraphic a) = toElem a
    toElem (Msgaud_Inlinemediaobject a) = toElem a
    toElem (Msgaud_Inlineequation a) = toElem a
    toElem (Msgaud_Synopsis a) = toElem a
    toElem (Msgaud_Cmdsynopsis a) = toElem a
    toElem (Msgaud_Funcsynopsis a) = toElem a
    toElem (Msgaud_Classsynopsis a) = toElem a
    toElem (Msgaud_Fieldsynopsis a) = toElem a
    toElem (Msgaud_Constructorsynopsis a) = toElem a
    toElem (Msgaud_Destructorsynopsis a) = toElem a
    toElem (Msgaud_Methodsynopsis a) = toElem a
    toElem (Msgaud_Indexterm a) = toElem a
    toElem (Msgaud_Beginpage a) = toElem a
instance XmlAttrType Msgaud_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Msgaud_Revisionflag_Changed
	    translate "added" = Just Msgaud_Revisionflag_Added
	    translate "deleted" = Just Msgaud_Revisionflag_Deleted
	    translate "off" = Just Msgaud_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Msgaud_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Msgaud_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Msgaud_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Msgaud_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Msgexplan where
    fromElem (CElem (Elem "msgexplan" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Msgexplan (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Msgexplan as a b) =
	[CElem (Elem "msgexplan" (toAttrs as) (maybe [] toElem a ++
					       concatMap toElem b))]
instance XmlAttributes Msgexplan_Attrs where
    fromAttrs as =
	Msgexplan_Attrs
	  { msgexplanId = possibleA fromAttrToStr "id" as
	  , msgexplanLang = possibleA fromAttrToStr "lang" as
	  , msgexplanRemap = possibleA fromAttrToStr "remap" as
	  , msgexplanXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , msgexplanRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , msgexplanArch = possibleA fromAttrToStr "arch" as
	  , msgexplanCondition = possibleA fromAttrToStr "condition" as
	  , msgexplanConformance = possibleA fromAttrToStr "conformance" as
	  , msgexplanOs = possibleA fromAttrToStr "os" as
	  , msgexplanRevision = possibleA fromAttrToStr "revision" as
	  , msgexplanSecurity = possibleA fromAttrToStr "security" as
	  , msgexplanUserlevel = possibleA fromAttrToStr "userlevel" as
	  , msgexplanVendor = possibleA fromAttrToStr "vendor" as
	  , msgexplanRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (msgexplanId v)
	, maybeToAttr toAttrFrStr "lang" (msgexplanLang v)
	, maybeToAttr toAttrFrStr "remap" (msgexplanRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (msgexplanXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (msgexplanRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (msgexplanArch v)
	, maybeToAttr toAttrFrStr "condition" (msgexplanCondition v)
	, maybeToAttr toAttrFrStr "conformance" (msgexplanConformance v)
	, maybeToAttr toAttrFrStr "os" (msgexplanOs v)
	, maybeToAttr toAttrFrStr "revision" (msgexplanRevision v)
	, maybeToAttr toAttrFrStr "security" (msgexplanSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (msgexplanUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (msgexplanVendor v)
	, maybeToAttr toAttrFrStr "role" (msgexplanRole v)
	]
instance XmlAttrType Msgexplan_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Msgexplan_Revisionflag_Changed
	    translate "added" = Just Msgexplan_Revisionflag_Added
	    translate "deleted" = Just Msgexplan_Revisionflag_Deleted
	    translate "off" = Just Msgexplan_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Msgexplan_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Msgexplan_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Msgexplan_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Msgexplan_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Qandaset where
    fromElem (CElem (Elem "qandaset" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Qandaset (fromAttrs as) a b c d), rest))
		 (definite fromElem "OneOf" "qandaset" cc))
	      (many fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Qandaset as a b c d) =
	[CElem (Elem "qandaset" (toAttrs as) (maybe [] toElem a ++
					      maybe [] toElem b ++ concatMap toElem c ++ toElem d))]
instance XmlAttributes Qandaset_Attrs where
    fromAttrs as =
	Qandaset_Attrs
	  { qandasetDefaultlabel = possibleA fromAttrToTyp "defaultlabel" as
	  , qandasetId = possibleA fromAttrToStr "id" as
	  , qandasetLang = possibleA fromAttrToStr "lang" as
	  , qandasetRemap = possibleA fromAttrToStr "remap" as
	  , qandasetXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , qandasetRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , qandasetArch = possibleA fromAttrToStr "arch" as
	  , qandasetCondition = possibleA fromAttrToStr "condition" as
	  , qandasetConformance = possibleA fromAttrToStr "conformance" as
	  , qandasetOs = possibleA fromAttrToStr "os" as
	  , qandasetRevision = possibleA fromAttrToStr "revision" as
	  , qandasetSecurity = possibleA fromAttrToStr "security" as
	  , qandasetUserlevel = possibleA fromAttrToStr "userlevel" as
	  , qandasetVendor = possibleA fromAttrToStr "vendor" as
	  , qandasetRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "defaultlabel" (qandasetDefaultlabel v)
	, maybeToAttr toAttrFrStr "id" (qandasetId v)
	, maybeToAttr toAttrFrStr "lang" (qandasetLang v)
	, maybeToAttr toAttrFrStr "remap" (qandasetRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (qandasetXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (qandasetRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (qandasetArch v)
	, maybeToAttr toAttrFrStr "condition" (qandasetCondition v)
	, maybeToAttr toAttrFrStr "conformance" (qandasetConformance v)
	, maybeToAttr toAttrFrStr "os" (qandasetOs v)
	, maybeToAttr toAttrFrStr "revision" (qandasetRevision v)
	, maybeToAttr toAttrFrStr "security" (qandasetSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (qandasetUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (qandasetVendor v)
	, maybeToAttr toAttrFrStr "role" (qandasetRole v)
	]
instance XmlAttrType Qandaset_Defaultlabel where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "qanda" = Just Qandaset_Defaultlabel_Qanda
	    translate "number" = Just Qandaset_Defaultlabel_Number
	    translate "none" = Just Qandaset_Defaultlabel_None
	    translate _ = Nothing
    toAttrFrTyp n Qandaset_Defaultlabel_Qanda = Just (n, str2attr "qanda")
    toAttrFrTyp n Qandaset_Defaultlabel_Number = Just (n, str2attr "number")
    toAttrFrTyp n Qandaset_Defaultlabel_None = Just (n, str2attr "none")
instance XmlAttrType Qandaset_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Qandaset_Revisionflag_Changed
	    translate "added" = Just Qandaset_Revisionflag_Added
	    translate "deleted" = Just Qandaset_Revisionflag_Deleted
	    translate "off" = Just Qandaset_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Qandaset_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Qandaset_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Qandaset_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Qandaset_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Qandadiv where
    fromElem (CElem (Elem "qandadiv" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Qandadiv (fromAttrs as) a b c d), rest))
		 (definite fromElem "OneOf" "qandadiv" cc))
	      (many fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Qandadiv as a b c d) =
	[CElem (Elem "qandadiv" (toAttrs as) (maybe [] toElem a ++
					      maybe [] toElem b ++ concatMap toElem c ++ toElem d))]
instance XmlAttributes Qandadiv_Attrs where
    fromAttrs as =
	Qandadiv_Attrs
	  { qandadivId = possibleA fromAttrToStr "id" as
	  , qandadivLang = possibleA fromAttrToStr "lang" as
	  , qandadivRemap = possibleA fromAttrToStr "remap" as
	  , qandadivXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , qandadivRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , qandadivArch = possibleA fromAttrToStr "arch" as
	  , qandadivCondition = possibleA fromAttrToStr "condition" as
	  , qandadivConformance = possibleA fromAttrToStr "conformance" as
	  , qandadivOs = possibleA fromAttrToStr "os" as
	  , qandadivRevision = possibleA fromAttrToStr "revision" as
	  , qandadivSecurity = possibleA fromAttrToStr "security" as
	  , qandadivUserlevel = possibleA fromAttrToStr "userlevel" as
	  , qandadivVendor = possibleA fromAttrToStr "vendor" as
	  , qandadivRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (qandadivId v)
	, maybeToAttr toAttrFrStr "lang" (qandadivLang v)
	, maybeToAttr toAttrFrStr "remap" (qandadivRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (qandadivXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (qandadivRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (qandadivArch v)
	, maybeToAttr toAttrFrStr "condition" (qandadivCondition v)
	, maybeToAttr toAttrFrStr "conformance" (qandadivConformance v)
	, maybeToAttr toAttrFrStr "os" (qandadivOs v)
	, maybeToAttr toAttrFrStr "revision" (qandadivRevision v)
	, maybeToAttr toAttrFrStr "security" (qandadivSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (qandadivUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (qandadivVendor v)
	, maybeToAttr toAttrFrStr "role" (qandadivRole v)
	]
instance XmlAttrType Qandadiv_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Qandadiv_Revisionflag_Changed
	    translate "added" = Just Qandadiv_Revisionflag_Added
	    translate "deleted" = Just Qandadiv_Revisionflag_Deleted
	    translate "off" = Just Qandadiv_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Qandadiv_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Qandadiv_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Qandadiv_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Qandadiv_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Qandaentry where
    fromElem (CElem (Elem "qandaentry" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Qandaentry (fromAttrs as) a b c d), rest))
		 (many fromElem cc))
	      (definite fromElem "<question>" "qandaentry" cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Qandaentry as a b c d) =
	[CElem (Elem "qandaentry" (toAttrs as) (maybe [] toElem a ++
						maybe [] toElem b ++ toElem c ++
						concatMap toElem d))]
instance XmlAttributes Qandaentry_Attrs where
    fromAttrs as =
	Qandaentry_Attrs
	  { qandaentryId = possibleA fromAttrToStr "id" as
	  , qandaentryLang = possibleA fromAttrToStr "lang" as
	  , qandaentryRemap = possibleA fromAttrToStr "remap" as
	  , qandaentryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , qandaentryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , qandaentryArch = possibleA fromAttrToStr "arch" as
	  , qandaentryCondition = possibleA fromAttrToStr "condition" as
	  , qandaentryConformance = possibleA fromAttrToStr "conformance" as
	  , qandaentryOs = possibleA fromAttrToStr "os" as
	  , qandaentryRevision = possibleA fromAttrToStr "revision" as
	  , qandaentrySecurity = possibleA fromAttrToStr "security" as
	  , qandaentryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , qandaentryVendor = possibleA fromAttrToStr "vendor" as
	  , qandaentryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (qandaentryId v)
	, maybeToAttr toAttrFrStr "lang" (qandaentryLang v)
	, maybeToAttr toAttrFrStr "remap" (qandaentryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (qandaentryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (qandaentryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (qandaentryArch v)
	, maybeToAttr toAttrFrStr "condition" (qandaentryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (qandaentryConformance v)
	, maybeToAttr toAttrFrStr "os" (qandaentryOs v)
	, maybeToAttr toAttrFrStr "revision" (qandaentryRevision v)
	, maybeToAttr toAttrFrStr "security" (qandaentrySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (qandaentryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (qandaentryVendor v)
	, maybeToAttr toAttrFrStr "role" (qandaentryRole v)
	]
instance XmlAttrType Qandaentry_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Qandaentry_Revisionflag_Changed
	    translate "added" = Just Qandaentry_Revisionflag_Added
	    translate "deleted" = Just Qandaentry_Revisionflag_Deleted
	    translate "off" = Just Qandaentry_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Qandaentry_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Qandaentry_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Qandaentry_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Qandaentry_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Question where
    fromElem (CElem (Elem "question" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Question (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Question as a b) =
	[CElem (Elem "question" (toAttrs as) (maybe [] toElem a ++
					      concatMap toElem b))]
instance XmlAttributes Question_Attrs where
    fromAttrs as =
	Question_Attrs
	  { questionId = possibleA fromAttrToStr "id" as
	  , questionLang = possibleA fromAttrToStr "lang" as
	  , questionRemap = possibleA fromAttrToStr "remap" as
	  , questionXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , questionRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , questionArch = possibleA fromAttrToStr "arch" as
	  , questionCondition = possibleA fromAttrToStr "condition" as
	  , questionConformance = possibleA fromAttrToStr "conformance" as
	  , questionOs = possibleA fromAttrToStr "os" as
	  , questionRevision = possibleA fromAttrToStr "revision" as
	  , questionSecurity = possibleA fromAttrToStr "security" as
	  , questionUserlevel = possibleA fromAttrToStr "userlevel" as
	  , questionVendor = possibleA fromAttrToStr "vendor" as
	  , questionRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (questionId v)
	, maybeToAttr toAttrFrStr "lang" (questionLang v)
	, maybeToAttr toAttrFrStr "remap" (questionRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (questionXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (questionRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (questionArch v)
	, maybeToAttr toAttrFrStr "condition" (questionCondition v)
	, maybeToAttr toAttrFrStr "conformance" (questionConformance v)
	, maybeToAttr toAttrFrStr "os" (questionOs v)
	, maybeToAttr toAttrFrStr "revision" (questionRevision v)
	, maybeToAttr toAttrFrStr "security" (questionSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (questionUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (questionVendor v)
	, maybeToAttr toAttrFrStr "role" (questionRole v)
	]
instance XmlAttrType Question_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Question_Revisionflag_Changed
	    translate "added" = Just Question_Revisionflag_Added
	    translate "deleted" = Just Question_Revisionflag_Deleted
	    translate "off" = Just Question_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Question_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Question_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Question_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Question_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Answer where
    fromElem (CElem (Elem "answer" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Answer (fromAttrs as) a b c), rest))
	      (many fromElem cb))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Answer as a b c) =
	[CElem (Elem "answer" (toAttrs as) (maybe [] toElem a ++
					    concatMap toElem b ++ concatMap toElem c))]
instance XmlAttributes Answer_Attrs where
    fromAttrs as =
	Answer_Attrs
	  { answerId = possibleA fromAttrToStr "id" as
	  , answerLang = possibleA fromAttrToStr "lang" as
	  , answerRemap = possibleA fromAttrToStr "remap" as
	  , answerXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , answerRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , answerArch = possibleA fromAttrToStr "arch" as
	  , answerCondition = possibleA fromAttrToStr "condition" as
	  , answerConformance = possibleA fromAttrToStr "conformance" as
	  , answerOs = possibleA fromAttrToStr "os" as
	  , answerRevision = possibleA fromAttrToStr "revision" as
	  , answerSecurity = possibleA fromAttrToStr "security" as
	  , answerUserlevel = possibleA fromAttrToStr "userlevel" as
	  , answerVendor = possibleA fromAttrToStr "vendor" as
	  , answerRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (answerId v)
	, maybeToAttr toAttrFrStr "lang" (answerLang v)
	, maybeToAttr toAttrFrStr "remap" (answerRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (answerXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (answerRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (answerArch v)
	, maybeToAttr toAttrFrStr "condition" (answerCondition v)
	, maybeToAttr toAttrFrStr "conformance" (answerConformance v)
	, maybeToAttr toAttrFrStr "os" (answerOs v)
	, maybeToAttr toAttrFrStr "revision" (answerRevision v)
	, maybeToAttr toAttrFrStr "security" (answerSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (answerUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (answerVendor v)
	, maybeToAttr toAttrFrStr "role" (answerRole v)
	]
instance XmlAttrType Answer_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Answer_Revisionflag_Changed
	    translate "added" = Just Answer_Revisionflag_Added
	    translate "deleted" = Just Answer_Revisionflag_Deleted
	    translate "off" = Just Answer_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Answer_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Answer_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Answer_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Answer_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Label where
    fromElem (CElem (Elem "label" as c0):rest) =
	(\(a,ca)->
	   (Just (Label (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Label as a) =
	[CElem (Elem "label" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Label_Attrs where
    fromAttrs as =
	Label_Attrs
	  { labelId = possibleA fromAttrToStr "id" as
	  , labelLang = possibleA fromAttrToStr "lang" as
	  , labelRemap = possibleA fromAttrToStr "remap" as
	  , labelXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , labelRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , labelArch = possibleA fromAttrToStr "arch" as
	  , labelCondition = possibleA fromAttrToStr "condition" as
	  , labelConformance = possibleA fromAttrToStr "conformance" as
	  , labelOs = possibleA fromAttrToStr "os" as
	  , labelRevision = possibleA fromAttrToStr "revision" as
	  , labelSecurity = possibleA fromAttrToStr "security" as
	  , labelUserlevel = possibleA fromAttrToStr "userlevel" as
	  , labelVendor = possibleA fromAttrToStr "vendor" as
	  , labelRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (labelId v)
	, maybeToAttr toAttrFrStr "lang" (labelLang v)
	, maybeToAttr toAttrFrStr "remap" (labelRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (labelXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (labelRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (labelArch v)
	, maybeToAttr toAttrFrStr "condition" (labelCondition v)
	, maybeToAttr toAttrFrStr "conformance" (labelConformance v)
	, maybeToAttr toAttrFrStr "os" (labelOs v)
	, maybeToAttr toAttrFrStr "revision" (labelRevision v)
	, maybeToAttr toAttrFrStr "security" (labelSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (labelUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (labelVendor v)
	, maybeToAttr toAttrFrStr "role" (labelRole v)
	]
instance XmlContent Label_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Label_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Label_Acronym a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Label_Emphasis a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Label_Trademark a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Label_Link a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Label_Olink a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Label_Ulink a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Label_Anchor a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Label_Remark a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Label_Subscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Label_Superscript a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Label_Inlinegraphic a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Label_Inlinemediaobject a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Label_Indexterm a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Label_Beginpage a), rest)
															(_,_) ->
															    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Label_Str a) = toText a
    toElem (Label_Acronym a) = toElem a
    toElem (Label_Emphasis a) = toElem a
    toElem (Label_Trademark a) = toElem a
    toElem (Label_Link a) = toElem a
    toElem (Label_Olink a) = toElem a
    toElem (Label_Ulink a) = toElem a
    toElem (Label_Anchor a) = toElem a
    toElem (Label_Remark a) = toElem a
    toElem (Label_Subscript a) = toElem a
    toElem (Label_Superscript a) = toElem a
    toElem (Label_Inlinegraphic a) = toElem a
    toElem (Label_Inlinemediaobject a) = toElem a
    toElem (Label_Indexterm a) = toElem a
    toElem (Label_Beginpage a) = toElem a
instance XmlAttrType Label_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Label_Revisionflag_Changed
	    translate "added" = Just Label_Revisionflag_Added
	    translate "deleted" = Just Label_Revisionflag_Deleted
	    translate "off" = Just Label_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Label_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Label_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Label_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Label_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Procedure where
    fromElem (CElem (Elem "procedure" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Procedure (fromAttrs as) a b c d), rest))
		 (many fromElem cc))
	      (many fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Procedure as a b c d) =
	[CElem (Elem "procedure" (toAttrs as) (maybe [] toElem a ++
					       maybe [] toElem b ++ concatMap toElem c ++
					       concatMap toElem d))]
instance XmlAttributes Procedure_Attrs where
    fromAttrs as =
	Procedure_Attrs
	  { procedureId = possibleA fromAttrToStr "id" as
	  , procedureLang = possibleA fromAttrToStr "lang" as
	  , procedureRemap = possibleA fromAttrToStr "remap" as
	  , procedureXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , procedureRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , procedureArch = possibleA fromAttrToStr "arch" as
	  , procedureCondition = possibleA fromAttrToStr "condition" as
	  , procedureConformance = possibleA fromAttrToStr "conformance" as
	  , procedureOs = possibleA fromAttrToStr "os" as
	  , procedureRevision = possibleA fromAttrToStr "revision" as
	  , procedureSecurity = possibleA fromAttrToStr "security" as
	  , procedureUserlevel = possibleA fromAttrToStr "userlevel" as
	  , procedureVendor = possibleA fromAttrToStr "vendor" as
	  , procedureRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (procedureId v)
	, maybeToAttr toAttrFrStr "lang" (procedureLang v)
	, maybeToAttr toAttrFrStr "remap" (procedureRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (procedureXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (procedureRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (procedureArch v)
	, maybeToAttr toAttrFrStr "condition" (procedureCondition v)
	, maybeToAttr toAttrFrStr "conformance" (procedureConformance v)
	, maybeToAttr toAttrFrStr "os" (procedureOs v)
	, maybeToAttr toAttrFrStr "revision" (procedureRevision v)
	, maybeToAttr toAttrFrStr "security" (procedureSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (procedureUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (procedureVendor v)
	, maybeToAttr toAttrFrStr "role" (procedureRole v)
	]
instance XmlAttrType Procedure_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Procedure_Revisionflag_Changed
	    translate "added" = Just Procedure_Revisionflag_Added
	    translate "deleted" = Just Procedure_Revisionflag_Deleted
	    translate "off" = Just Procedure_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Procedure_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Procedure_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Procedure_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Procedure_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Step where
    fromElem (CElem (Elem "step" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Step (fromAttrs as) a b), rest))
	   (definite fromElem "OneOf" "step" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Step as a b) =
	[CElem (Elem "step" (toAttrs as) (maybe [] toElem a ++ toElem b))]
instance XmlAttributes Step_Attrs where
    fromAttrs as =
	Step_Attrs
	  { stepPerformance = defaultA fromAttrToTyp Step_Performance_Required "performance" as
	  , stepId = possibleA fromAttrToStr "id" as
	  , stepLang = possibleA fromAttrToStr "lang" as
	  , stepRemap = possibleA fromAttrToStr "remap" as
	  , stepXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , stepRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , stepArch = possibleA fromAttrToStr "arch" as
	  , stepCondition = possibleA fromAttrToStr "condition" as
	  , stepConformance = possibleA fromAttrToStr "conformance" as
	  , stepOs = possibleA fromAttrToStr "os" as
	  , stepRevision = possibleA fromAttrToStr "revision" as
	  , stepSecurity = possibleA fromAttrToStr "security" as
	  , stepUserlevel = possibleA fromAttrToStr "userlevel" as
	  , stepVendor = possibleA fromAttrToStr "vendor" as
	  , stepRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "performance" (stepPerformance v)
	, maybeToAttr toAttrFrStr "id" (stepId v)
	, maybeToAttr toAttrFrStr "lang" (stepLang v)
	, maybeToAttr toAttrFrStr "remap" (stepRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (stepXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (stepRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (stepArch v)
	, maybeToAttr toAttrFrStr "condition" (stepCondition v)
	, maybeToAttr toAttrFrStr "conformance" (stepConformance v)
	, maybeToAttr toAttrFrStr "os" (stepOs v)
	, maybeToAttr toAttrFrStr "revision" (stepRevision v)
	, maybeToAttr toAttrFrStr "security" (stepSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (stepUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (stepVendor v)
	, maybeToAttr toAttrFrStr "role" (stepRole v)
	]
instance XmlAttrType Step_Performance where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "optional" = Just Step_Performance_Optional
	    translate "required" = Just Step_Performance_Required
	    translate _ = Nothing
    toAttrFrTyp n Step_Performance_Optional = Just (n, str2attr "optional")
    toAttrFrTyp n Step_Performance_Required = Just (n, str2attr "required")
instance XmlAttrType Step_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Step_Revisionflag_Changed
	    translate "added" = Just Step_Revisionflag_Added
	    translate "deleted" = Just Step_Revisionflag_Deleted
	    translate "off" = Just Step_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Step_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Step_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Step_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Step_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Substeps where
    fromElem (CElem (Elem "substeps" as c0):rest) =
	(\(a,ca)->
	   (Just (Substeps (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Substeps as a) =
	[CElem (Elem "substeps" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Substeps_Attrs where
    fromAttrs as =
	Substeps_Attrs
	  { substepsPerformance = defaultA fromAttrToTyp Substeps_Performance_Required "performance" as
	  , substepsId = possibleA fromAttrToStr "id" as
	  , substepsLang = possibleA fromAttrToStr "lang" as
	  , substepsRemap = possibleA fromAttrToStr "remap" as
	  , substepsXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , substepsRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , substepsArch = possibleA fromAttrToStr "arch" as
	  , substepsCondition = possibleA fromAttrToStr "condition" as
	  , substepsConformance = possibleA fromAttrToStr "conformance" as
	  , substepsOs = possibleA fromAttrToStr "os" as
	  , substepsRevision = possibleA fromAttrToStr "revision" as
	  , substepsSecurity = possibleA fromAttrToStr "security" as
	  , substepsUserlevel = possibleA fromAttrToStr "userlevel" as
	  , substepsVendor = possibleA fromAttrToStr "vendor" as
	  , substepsRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "performance" (substepsPerformance v)
	, maybeToAttr toAttrFrStr "id" (substepsId v)
	, maybeToAttr toAttrFrStr "lang" (substepsLang v)
	, maybeToAttr toAttrFrStr "remap" (substepsRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (substepsXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (substepsRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (substepsArch v)
	, maybeToAttr toAttrFrStr "condition" (substepsCondition v)
	, maybeToAttr toAttrFrStr "conformance" (substepsConformance v)
	, maybeToAttr toAttrFrStr "os" (substepsOs v)
	, maybeToAttr toAttrFrStr "revision" (substepsRevision v)
	, maybeToAttr toAttrFrStr "security" (substepsSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (substepsUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (substepsVendor v)
	, maybeToAttr toAttrFrStr "role" (substepsRole v)
	]
instance XmlAttrType Substeps_Performance where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "optional" = Just Substeps_Performance_Optional
	    translate "required" = Just Substeps_Performance_Required
	    translate _ = Nothing
    toAttrFrTyp n Substeps_Performance_Optional = Just (n, str2attr "optional")
    toAttrFrTyp n Substeps_Performance_Required = Just (n, str2attr "required")
instance XmlAttrType Substeps_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Substeps_Revisionflag_Changed
	    translate "added" = Just Substeps_Revisionflag_Added
	    translate "deleted" = Just Substeps_Revisionflag_Deleted
	    translate "off" = Just Substeps_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Substeps_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Substeps_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Substeps_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Substeps_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Sidebarinfo where
    fromElem (CElem (Elem "sidebarinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Sidebarinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Sidebarinfo as a) =
	[CElem (Elem "sidebarinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Sidebarinfo_Attrs where
    fromAttrs as =
	Sidebarinfo_Attrs
	  { sidebarinfoId = possibleA fromAttrToStr "id" as
	  , sidebarinfoLang = possibleA fromAttrToStr "lang" as
	  , sidebarinfoRemap = possibleA fromAttrToStr "remap" as
	  , sidebarinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , sidebarinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , sidebarinfoArch = possibleA fromAttrToStr "arch" as
	  , sidebarinfoCondition = possibleA fromAttrToStr "condition" as
	  , sidebarinfoConformance = possibleA fromAttrToStr "conformance" as
	  , sidebarinfoOs = possibleA fromAttrToStr "os" as
	  , sidebarinfoRevision = possibleA fromAttrToStr "revision" as
	  , sidebarinfoSecurity = possibleA fromAttrToStr "security" as
	  , sidebarinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , sidebarinfoVendor = possibleA fromAttrToStr "vendor" as
	  , sidebarinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (sidebarinfoId v)
	, maybeToAttr toAttrFrStr "lang" (sidebarinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (sidebarinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (sidebarinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (sidebarinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (sidebarinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (sidebarinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (sidebarinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (sidebarinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (sidebarinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (sidebarinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (sidebarinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (sidebarinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (sidebarinfoRole v)
	]
instance XmlAttrType Sidebarinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Sidebarinfo_Revisionflag_Changed
	    translate "added" = Just Sidebarinfo_Revisionflag_Added
	    translate "deleted" = Just Sidebarinfo_Revisionflag_Deleted
	    translate "off" = Just Sidebarinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Sidebarinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Sidebarinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Sidebarinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Sidebarinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Sidebar where
    fromElem (CElem (Elem "sidebar" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Sidebar (fromAttrs as) a b c), rest))
	      (many fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Sidebar as a b c) =
	[CElem (Elem "sidebar" (toAttrs as) (maybe [] toElem a ++
					     maybe [] toElem b ++ concatMap toElem c))]
instance XmlAttributes Sidebar_Attrs where
    fromAttrs as =
	Sidebar_Attrs
	  { sidebarId = possibleA fromAttrToStr "id" as
	  , sidebarLang = possibleA fromAttrToStr "lang" as
	  , sidebarRemap = possibleA fromAttrToStr "remap" as
	  , sidebarXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , sidebarRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , sidebarArch = possibleA fromAttrToStr "arch" as
	  , sidebarCondition = possibleA fromAttrToStr "condition" as
	  , sidebarConformance = possibleA fromAttrToStr "conformance" as
	  , sidebarOs = possibleA fromAttrToStr "os" as
	  , sidebarRevision = possibleA fromAttrToStr "revision" as
	  , sidebarSecurity = possibleA fromAttrToStr "security" as
	  , sidebarUserlevel = possibleA fromAttrToStr "userlevel" as
	  , sidebarVendor = possibleA fromAttrToStr "vendor" as
	  , sidebarRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (sidebarId v)
	, maybeToAttr toAttrFrStr "lang" (sidebarLang v)
	, maybeToAttr toAttrFrStr "remap" (sidebarRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (sidebarXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (sidebarRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (sidebarArch v)
	, maybeToAttr toAttrFrStr "condition" (sidebarCondition v)
	, maybeToAttr toAttrFrStr "conformance" (sidebarConformance v)
	, maybeToAttr toAttrFrStr "os" (sidebarOs v)
	, maybeToAttr toAttrFrStr "revision" (sidebarRevision v)
	, maybeToAttr toAttrFrStr "security" (sidebarSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (sidebarUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (sidebarVendor v)
	, maybeToAttr toAttrFrStr "role" (sidebarRole v)
	]
instance XmlAttrType Sidebar_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Sidebar_Revisionflag_Changed
	    translate "added" = Just Sidebar_Revisionflag_Added
	    translate "deleted" = Just Sidebar_Revisionflag_Deleted
	    translate "off" = Just Sidebar_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Sidebar_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Sidebar_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Sidebar_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Sidebar_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Abstract where
    fromElem (CElem (Elem "abstract" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Abstract (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Abstract as a b) =
	[CElem (Elem "abstract" (toAttrs as) (maybe [] toElem a ++
					      concatMap toElem b))]
instance XmlAttributes Abstract_Attrs where
    fromAttrs as =
	Abstract_Attrs
	  { abstractId = possibleA fromAttrToStr "id" as
	  , abstractLang = possibleA fromAttrToStr "lang" as
	  , abstractRemap = possibleA fromAttrToStr "remap" as
	  , abstractXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , abstractRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , abstractArch = possibleA fromAttrToStr "arch" as
	  , abstractCondition = possibleA fromAttrToStr "condition" as
	  , abstractConformance = possibleA fromAttrToStr "conformance" as
	  , abstractOs = possibleA fromAttrToStr "os" as
	  , abstractRevision = possibleA fromAttrToStr "revision" as
	  , abstractSecurity = possibleA fromAttrToStr "security" as
	  , abstractUserlevel = possibleA fromAttrToStr "userlevel" as
	  , abstractVendor = possibleA fromAttrToStr "vendor" as
	  , abstractRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (abstractId v)
	, maybeToAttr toAttrFrStr "lang" (abstractLang v)
	, maybeToAttr toAttrFrStr "remap" (abstractRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (abstractXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (abstractRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (abstractArch v)
	, maybeToAttr toAttrFrStr "condition" (abstractCondition v)
	, maybeToAttr toAttrFrStr "conformance" (abstractConformance v)
	, maybeToAttr toAttrFrStr "os" (abstractOs v)
	, maybeToAttr toAttrFrStr "revision" (abstractRevision v)
	, maybeToAttr toAttrFrStr "security" (abstractSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (abstractUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (abstractVendor v)
	, maybeToAttr toAttrFrStr "role" (abstractRole v)
	]
instance XmlAttrType Abstract_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Abstract_Revisionflag_Changed
	    translate "added" = Just Abstract_Revisionflag_Added
	    translate "deleted" = Just Abstract_Revisionflag_Deleted
	    translate "off" = Just Abstract_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Abstract_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Abstract_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Abstract_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Abstract_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Authorblurb where
    fromElem (CElem (Elem "authorblurb" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Authorblurb (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Authorblurb as a b) =
	[CElem (Elem "authorblurb" (toAttrs as) (maybe [] toElem a ++
						 concatMap toElem b))]
instance XmlAttributes Authorblurb_Attrs where
    fromAttrs as =
	Authorblurb_Attrs
	  { authorblurbId = possibleA fromAttrToStr "id" as
	  , authorblurbLang = possibleA fromAttrToStr "lang" as
	  , authorblurbRemap = possibleA fromAttrToStr "remap" as
	  , authorblurbXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , authorblurbRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , authorblurbArch = possibleA fromAttrToStr "arch" as
	  , authorblurbCondition = possibleA fromAttrToStr "condition" as
	  , authorblurbConformance = possibleA fromAttrToStr "conformance" as
	  , authorblurbOs = possibleA fromAttrToStr "os" as
	  , authorblurbRevision = possibleA fromAttrToStr "revision" as
	  , authorblurbSecurity = possibleA fromAttrToStr "security" as
	  , authorblurbUserlevel = possibleA fromAttrToStr "userlevel" as
	  , authorblurbVendor = possibleA fromAttrToStr "vendor" as
	  , authorblurbRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (authorblurbId v)
	, maybeToAttr toAttrFrStr "lang" (authorblurbLang v)
	, maybeToAttr toAttrFrStr "remap" (authorblurbRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (authorblurbXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (authorblurbRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (authorblurbArch v)
	, maybeToAttr toAttrFrStr "condition" (authorblurbCondition v)
	, maybeToAttr toAttrFrStr "conformance" (authorblurbConformance v)
	, maybeToAttr toAttrFrStr "os" (authorblurbOs v)
	, maybeToAttr toAttrFrStr "revision" (authorblurbRevision v)
	, maybeToAttr toAttrFrStr "security" (authorblurbSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (authorblurbUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (authorblurbVendor v)
	, maybeToAttr toAttrFrStr "role" (authorblurbRole v)
	]
instance XmlAttrType Authorblurb_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Authorblurb_Revisionflag_Changed
	    translate "added" = Just Authorblurb_Revisionflag_Added
	    translate "deleted" = Just Authorblurb_Revisionflag_Deleted
	    translate "off" = Just Authorblurb_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Authorblurb_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Authorblurb_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Authorblurb_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Authorblurb_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Personblurb where
    fromElem (CElem (Elem "personblurb" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Personblurb (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Personblurb as a b) =
	[CElem (Elem "personblurb" (toAttrs as) (maybe [] toElem a ++
						 concatMap toElem b))]
instance XmlAttributes Personblurb_Attrs where
    fromAttrs as =
	Personblurb_Attrs
	  { personblurbId = possibleA fromAttrToStr "id" as
	  , personblurbLang = possibleA fromAttrToStr "lang" as
	  , personblurbRemap = possibleA fromAttrToStr "remap" as
	  , personblurbXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , personblurbRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , personblurbArch = possibleA fromAttrToStr "arch" as
	  , personblurbCondition = possibleA fromAttrToStr "condition" as
	  , personblurbConformance = possibleA fromAttrToStr "conformance" as
	  , personblurbOs = possibleA fromAttrToStr "os" as
	  , personblurbRevision = possibleA fromAttrToStr "revision" as
	  , personblurbSecurity = possibleA fromAttrToStr "security" as
	  , personblurbUserlevel = possibleA fromAttrToStr "userlevel" as
	  , personblurbVendor = possibleA fromAttrToStr "vendor" as
	  , personblurbRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (personblurbId v)
	, maybeToAttr toAttrFrStr "lang" (personblurbLang v)
	, maybeToAttr toAttrFrStr "remap" (personblurbRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (personblurbXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (personblurbRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (personblurbArch v)
	, maybeToAttr toAttrFrStr "condition" (personblurbCondition v)
	, maybeToAttr toAttrFrStr "conformance" (personblurbConformance v)
	, maybeToAttr toAttrFrStr "os" (personblurbOs v)
	, maybeToAttr toAttrFrStr "revision" (personblurbRevision v)
	, maybeToAttr toAttrFrStr "security" (personblurbSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (personblurbUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (personblurbVendor v)
	, maybeToAttr toAttrFrStr "role" (personblurbRole v)
	]
instance XmlAttrType Personblurb_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Personblurb_Revisionflag_Changed
	    translate "added" = Just Personblurb_Revisionflag_Added
	    translate "deleted" = Just Personblurb_Revisionflag_Deleted
	    translate "off" = Just Personblurb_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Personblurb_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Personblurb_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Personblurb_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Personblurb_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Blockquote where
    fromElem (CElem (Elem "blockquote" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Blockquote (fromAttrs as) a b c), rest))
	      (many fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Blockquote as a b c) =
	[CElem (Elem "blockquote" (toAttrs as) (maybe [] toElem a ++
						maybe [] toElem b ++ concatMap toElem c))]
instance XmlAttributes Blockquote_Attrs where
    fromAttrs as =
	Blockquote_Attrs
	  { blockquoteId = possibleA fromAttrToStr "id" as
	  , blockquoteLang = possibleA fromAttrToStr "lang" as
	  , blockquoteRemap = possibleA fromAttrToStr "remap" as
	  , blockquoteXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , blockquoteRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , blockquoteArch = possibleA fromAttrToStr "arch" as
	  , blockquoteCondition = possibleA fromAttrToStr "condition" as
	  , blockquoteConformance = possibleA fromAttrToStr "conformance" as
	  , blockquoteOs = possibleA fromAttrToStr "os" as
	  , blockquoteRevision = possibleA fromAttrToStr "revision" as
	  , blockquoteSecurity = possibleA fromAttrToStr "security" as
	  , blockquoteUserlevel = possibleA fromAttrToStr "userlevel" as
	  , blockquoteVendor = possibleA fromAttrToStr "vendor" as
	  , blockquoteRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (blockquoteId v)
	, maybeToAttr toAttrFrStr "lang" (blockquoteLang v)
	, maybeToAttr toAttrFrStr "remap" (blockquoteRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (blockquoteXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (blockquoteRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (blockquoteArch v)
	, maybeToAttr toAttrFrStr "condition" (blockquoteCondition v)
	, maybeToAttr toAttrFrStr "conformance" (blockquoteConformance v)
	, maybeToAttr toAttrFrStr "os" (blockquoteOs v)
	, maybeToAttr toAttrFrStr "revision" (blockquoteRevision v)
	, maybeToAttr toAttrFrStr "security" (blockquoteSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (blockquoteUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (blockquoteVendor v)
	, maybeToAttr toAttrFrStr "role" (blockquoteRole v)
	]
instance XmlAttrType Blockquote_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Blockquote_Revisionflag_Changed
	    translate "added" = Just Blockquote_Revisionflag_Added
	    translate "deleted" = Just Blockquote_Revisionflag_Deleted
	    translate "off" = Just Blockquote_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Blockquote_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Blockquote_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Blockquote_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Blockquote_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Attribution where
    fromElem (CElem (Elem "attribution" as c0):rest) =
	(\(a,ca)->
	   (Just (Attribution (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Attribution as a) =
	[CElem (Elem "attribution" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Attribution_Attrs where
    fromAttrs as =
	Attribution_Attrs
	  { attributionId = possibleA fromAttrToStr "id" as
	  , attributionLang = possibleA fromAttrToStr "lang" as
	  , attributionRemap = possibleA fromAttrToStr "remap" as
	  , attributionXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , attributionRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , attributionArch = possibleA fromAttrToStr "arch" as
	  , attributionCondition = possibleA fromAttrToStr "condition" as
	  , attributionConformance = possibleA fromAttrToStr "conformance" as
	  , attributionOs = possibleA fromAttrToStr "os" as
	  , attributionRevision = possibleA fromAttrToStr "revision" as
	  , attributionSecurity = possibleA fromAttrToStr "security" as
	  , attributionUserlevel = possibleA fromAttrToStr "userlevel" as
	  , attributionVendor = possibleA fromAttrToStr "vendor" as
	  , attributionRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (attributionId v)
	, maybeToAttr toAttrFrStr "lang" (attributionLang v)
	, maybeToAttr toAttrFrStr "remap" (attributionRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (attributionXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (attributionRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (attributionArch v)
	, maybeToAttr toAttrFrStr "condition" (attributionCondition v)
	, maybeToAttr toAttrFrStr "conformance" (attributionConformance v)
	, maybeToAttr toAttrFrStr "os" (attributionOs v)
	, maybeToAttr toAttrFrStr "revision" (attributionRevision v)
	, maybeToAttr toAttrFrStr "security" (attributionSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (attributionUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (attributionVendor v)
	, maybeToAttr toAttrFrStr "role" (attributionRole v)
	]
instance XmlContent Attribution_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Attribution_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Attribution_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Attribution_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Attribution_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Attribution_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Attribution_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Attribution_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Attribution_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Attribution_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Attribution_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Attribution_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Attribution_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Attribution_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Attribution_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Attribution_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Attribution_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Attribution_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Attribution_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Attribution_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Attribution_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Attribution_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Attribution_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Attribution_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Attribution_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Attribution_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Attribution_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Attribution_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Attribution_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Attribution_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Attribution_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Attribution_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Attribution_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Attribution_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Attribution_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Attribution_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Attribution_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Attribution_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Attribution_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Attribution_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Attribution_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Attribution_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Attribution_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Attribution_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Attribution_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Attribution_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Attribution_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Attribution_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Attribution_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Attribution_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Attribution_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Attribution_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Attribution_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Attribution_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Attribution_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Attribution_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Attribution_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Attribution_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Attribution_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Attribution_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Attribution_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Attribution_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Attribution_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Attribution_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Attribution_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Attribution_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Attribution_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Attribution_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Attribution_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Attribution_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Attribution_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Attribution_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Attribution_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Attribution_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Attribution_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Attribution_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Attribution_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Attribution_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Attribution_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Attribution_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Attribution_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Attribution_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Attribution_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Attribution_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Attribution_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Attribution_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Attribution_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Attribution_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Attribution_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Attribution_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Attribution_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Attribution_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Attribution_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Attribution_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Attribution_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Attribution_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Attribution_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Attribution_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Attribution_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Attribution_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Attribution_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Attribution_Str a) = toText a
    toElem (Attribution_Footnoteref a) = toElem a
    toElem (Attribution_Xref a) = toElem a
    toElem (Attribution_Abbrev a) = toElem a
    toElem (Attribution_Acronym a) = toElem a
    toElem (Attribution_Citation a) = toElem a
    toElem (Attribution_Citerefentry a) = toElem a
    toElem (Attribution_Citetitle a) = toElem a
    toElem (Attribution_Emphasis a) = toElem a
    toElem (Attribution_Firstterm a) = toElem a
    toElem (Attribution_Foreignphrase a) = toElem a
    toElem (Attribution_Glossterm a) = toElem a
    toElem (Attribution_Footnote a) = toElem a
    toElem (Attribution_Phrase a) = toElem a
    toElem (Attribution_Quote a) = toElem a
    toElem (Attribution_Trademark a) = toElem a
    toElem (Attribution_Wordasword a) = toElem a
    toElem (Attribution_Personname a) = toElem a
    toElem (Attribution_Link a) = toElem a
    toElem (Attribution_Olink a) = toElem a
    toElem (Attribution_Ulink a) = toElem a
    toElem (Attribution_Action a) = toElem a
    toElem (Attribution_Application a) = toElem a
    toElem (Attribution_Classname a) = toElem a
    toElem (Attribution_Methodname a) = toElem a
    toElem (Attribution_Interfacename a) = toElem a
    toElem (Attribution_Exceptionname a) = toElem a
    toElem (Attribution_Ooclass a) = toElem a
    toElem (Attribution_Oointerface a) = toElem a
    toElem (Attribution_Ooexception a) = toElem a
    toElem (Attribution_Command a) = toElem a
    toElem (Attribution_Computeroutput a) = toElem a
    toElem (Attribution_Database a) = toElem a
    toElem (Attribution_Email a) = toElem a
    toElem (Attribution_Envar a) = toElem a
    toElem (Attribution_Errorcode a) = toElem a
    toElem (Attribution_Errorname a) = toElem a
    toElem (Attribution_Errortype a) = toElem a
    toElem (Attribution_Errortext a) = toElem a
    toElem (Attribution_Filename a) = toElem a
    toElem (Attribution_Function a) = toElem a
    toElem (Attribution_Guibutton a) = toElem a
    toElem (Attribution_Guiicon a) = toElem a
    toElem (Attribution_Guilabel a) = toElem a
    toElem (Attribution_Guimenu a) = toElem a
    toElem (Attribution_Guimenuitem a) = toElem a
    toElem (Attribution_Guisubmenu a) = toElem a
    toElem (Attribution_Hardware a) = toElem a
    toElem (Attribution_Interface a) = toElem a
    toElem (Attribution_Keycap a) = toElem a
    toElem (Attribution_Keycode a) = toElem a
    toElem (Attribution_Keycombo a) = toElem a
    toElem (Attribution_Keysym a) = toElem a
    toElem (Attribution_Literal a) = toElem a
    toElem (Attribution_Constant a) = toElem a
    toElem (Attribution_Markup a) = toElem a
    toElem (Attribution_Medialabel a) = toElem a
    toElem (Attribution_Menuchoice a) = toElem a
    toElem (Attribution_Mousebutton a) = toElem a
    toElem (Attribution_Option a) = toElem a
    toElem (Attribution_Optional a) = toElem a
    toElem (Attribution_Parameter a) = toElem a
    toElem (Attribution_Prompt a) = toElem a
    toElem (Attribution_Property a) = toElem a
    toElem (Attribution_Replaceable a) = toElem a
    toElem (Attribution_Returnvalue a) = toElem a
    toElem (Attribution_Sgmltag a) = toElem a
    toElem (Attribution_Structfield a) = toElem a
    toElem (Attribution_Structname a) = toElem a
    toElem (Attribution_Symbol a) = toElem a
    toElem (Attribution_Systemitem a) = toElem a
    toElem (Attribution_Token a) = toElem a
    toElem (Attribution_Type a) = toElem a
    toElem (Attribution_Userinput a) = toElem a
    toElem (Attribution_Varname a) = toElem a
    toElem (Attribution_Anchor a) = toElem a
    toElem (Attribution_Author a) = toElem a
    toElem (Attribution_Authorinitials a) = toElem a
    toElem (Attribution_Corpauthor a) = toElem a
    toElem (Attribution_Modespec a) = toElem a
    toElem (Attribution_Othercredit a) = toElem a
    toElem (Attribution_Productname a) = toElem a
    toElem (Attribution_Productnumber a) = toElem a
    toElem (Attribution_Revhistory a) = toElem a
    toElem (Attribution_Remark a) = toElem a
    toElem (Attribution_Subscript a) = toElem a
    toElem (Attribution_Superscript a) = toElem a
    toElem (Attribution_Inlinegraphic a) = toElem a
    toElem (Attribution_Inlinemediaobject a) = toElem a
    toElem (Attribution_Inlineequation a) = toElem a
    toElem (Attribution_Synopsis a) = toElem a
    toElem (Attribution_Cmdsynopsis a) = toElem a
    toElem (Attribution_Funcsynopsis a) = toElem a
    toElem (Attribution_Classsynopsis a) = toElem a
    toElem (Attribution_Fieldsynopsis a) = toElem a
    toElem (Attribution_Constructorsynopsis a) = toElem a
    toElem (Attribution_Destructorsynopsis a) = toElem a
    toElem (Attribution_Methodsynopsis a) = toElem a
    toElem (Attribution_Indexterm a) = toElem a
    toElem (Attribution_Beginpage a) = toElem a
instance XmlAttrType Attribution_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Attribution_Revisionflag_Changed
	    translate "added" = Just Attribution_Revisionflag_Added
	    translate "deleted" = Just Attribution_Revisionflag_Deleted
	    translate "off" = Just Attribution_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Attribution_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Attribution_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Attribution_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Attribution_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Bridgehead where
    fromElem (CElem (Elem "bridgehead" as c0):rest) =
	(\(a,ca)->
	   (Just (Bridgehead (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bridgehead as a) =
	[CElem (Elem "bridgehead" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Bridgehead_Attrs where
    fromAttrs as =
	Bridgehead_Attrs
	  { bridgeheadRenderas = possibleA fromAttrToTyp "renderas" as
	  , bridgeheadId = possibleA fromAttrToStr "id" as
	  , bridgeheadLang = possibleA fromAttrToStr "lang" as
	  , bridgeheadRemap = possibleA fromAttrToStr "remap" as
	  , bridgeheadXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , bridgeheadRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , bridgeheadArch = possibleA fromAttrToStr "arch" as
	  , bridgeheadCondition = possibleA fromAttrToStr "condition" as
	  , bridgeheadConformance = possibleA fromAttrToStr "conformance" as
	  , bridgeheadOs = possibleA fromAttrToStr "os" as
	  , bridgeheadRevision = possibleA fromAttrToStr "revision" as
	  , bridgeheadSecurity = possibleA fromAttrToStr "security" as
	  , bridgeheadUserlevel = possibleA fromAttrToStr "userlevel" as
	  , bridgeheadVendor = possibleA fromAttrToStr "vendor" as
	  , bridgeheadRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "renderas" (bridgeheadRenderas v)
	, maybeToAttr toAttrFrStr "id" (bridgeheadId v)
	, maybeToAttr toAttrFrStr "lang" (bridgeheadLang v)
	, maybeToAttr toAttrFrStr "remap" (bridgeheadRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (bridgeheadXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (bridgeheadRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (bridgeheadArch v)
	, maybeToAttr toAttrFrStr "condition" (bridgeheadCondition v)
	, maybeToAttr toAttrFrStr "conformance" (bridgeheadConformance v)
	, maybeToAttr toAttrFrStr "os" (bridgeheadOs v)
	, maybeToAttr toAttrFrStr "revision" (bridgeheadRevision v)
	, maybeToAttr toAttrFrStr "security" (bridgeheadSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (bridgeheadUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (bridgeheadVendor v)
	, maybeToAttr toAttrFrStr "role" (bridgeheadRole v)
	]
instance XmlContent Bridgehead_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Bridgehead_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Bridgehead_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Bridgehead_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Bridgehead_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Bridgehead_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Bridgehead_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Bridgehead_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Bridgehead_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Bridgehead_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Bridgehead_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Bridgehead_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Bridgehead_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Bridgehead_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Bridgehead_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Bridgehead_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Bridgehead_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Bridgehead_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Bridgehead_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Bridgehead_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Bridgehead_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Bridgehead_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Bridgehead_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Bridgehead_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Bridgehead_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Bridgehead_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Bridgehead_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Bridgehead_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Bridgehead_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Bridgehead_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Bridgehead_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Bridgehead_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Bridgehead_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Bridgehead_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Bridgehead_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Bridgehead_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Bridgehead_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Bridgehead_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Bridgehead_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Bridgehead_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Bridgehead_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Bridgehead_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Bridgehead_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Bridgehead_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Bridgehead_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Bridgehead_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Bridgehead_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Bridgehead_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Bridgehead_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Bridgehead_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Bridgehead_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Bridgehead_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Bridgehead_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Bridgehead_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Bridgehead_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Bridgehead_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Bridgehead_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Bridgehead_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Bridgehead_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Bridgehead_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Bridgehead_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Bridgehead_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Bridgehead_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Bridgehead_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Bridgehead_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Bridgehead_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Bridgehead_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Bridgehead_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Bridgehead_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Bridgehead_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Bridgehead_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Bridgehead_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Bridgehead_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Bridgehead_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Bridgehead_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Bridgehead_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Bridgehead_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Bridgehead_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Bridgehead_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Bridgehead_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Bridgehead_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Bridgehead_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Bridgehead_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Bridgehead_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Bridgehead_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Bridgehead_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Bridgehead_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Bridgehead_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Bridgehead_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Bridgehead_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Bridgehead_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Bridgehead_Indexterm a), rest)
																																																																																											(_,_) ->
																																																																																											    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bridgehead_Str a) = toText a
    toElem (Bridgehead_Footnoteref a) = toElem a
    toElem (Bridgehead_Xref a) = toElem a
    toElem (Bridgehead_Abbrev a) = toElem a
    toElem (Bridgehead_Acronym a) = toElem a
    toElem (Bridgehead_Citation a) = toElem a
    toElem (Bridgehead_Citerefentry a) = toElem a
    toElem (Bridgehead_Citetitle a) = toElem a
    toElem (Bridgehead_Emphasis a) = toElem a
    toElem (Bridgehead_Firstterm a) = toElem a
    toElem (Bridgehead_Foreignphrase a) = toElem a
    toElem (Bridgehead_Glossterm a) = toElem a
    toElem (Bridgehead_Footnote a) = toElem a
    toElem (Bridgehead_Phrase a) = toElem a
    toElem (Bridgehead_Quote a) = toElem a
    toElem (Bridgehead_Trademark a) = toElem a
    toElem (Bridgehead_Wordasword a) = toElem a
    toElem (Bridgehead_Personname a) = toElem a
    toElem (Bridgehead_Link a) = toElem a
    toElem (Bridgehead_Olink a) = toElem a
    toElem (Bridgehead_Ulink a) = toElem a
    toElem (Bridgehead_Action a) = toElem a
    toElem (Bridgehead_Application a) = toElem a
    toElem (Bridgehead_Classname a) = toElem a
    toElem (Bridgehead_Methodname a) = toElem a
    toElem (Bridgehead_Interfacename a) = toElem a
    toElem (Bridgehead_Exceptionname a) = toElem a
    toElem (Bridgehead_Ooclass a) = toElem a
    toElem (Bridgehead_Oointerface a) = toElem a
    toElem (Bridgehead_Ooexception a) = toElem a
    toElem (Bridgehead_Command a) = toElem a
    toElem (Bridgehead_Computeroutput a) = toElem a
    toElem (Bridgehead_Database a) = toElem a
    toElem (Bridgehead_Email a) = toElem a
    toElem (Bridgehead_Envar a) = toElem a
    toElem (Bridgehead_Errorcode a) = toElem a
    toElem (Bridgehead_Errorname a) = toElem a
    toElem (Bridgehead_Errortype a) = toElem a
    toElem (Bridgehead_Errortext a) = toElem a
    toElem (Bridgehead_Filename a) = toElem a
    toElem (Bridgehead_Function a) = toElem a
    toElem (Bridgehead_Guibutton a) = toElem a
    toElem (Bridgehead_Guiicon a) = toElem a
    toElem (Bridgehead_Guilabel a) = toElem a
    toElem (Bridgehead_Guimenu a) = toElem a
    toElem (Bridgehead_Guimenuitem a) = toElem a
    toElem (Bridgehead_Guisubmenu a) = toElem a
    toElem (Bridgehead_Hardware a) = toElem a
    toElem (Bridgehead_Interface a) = toElem a
    toElem (Bridgehead_Keycap a) = toElem a
    toElem (Bridgehead_Keycode a) = toElem a
    toElem (Bridgehead_Keycombo a) = toElem a
    toElem (Bridgehead_Keysym a) = toElem a
    toElem (Bridgehead_Literal a) = toElem a
    toElem (Bridgehead_Constant a) = toElem a
    toElem (Bridgehead_Markup a) = toElem a
    toElem (Bridgehead_Medialabel a) = toElem a
    toElem (Bridgehead_Menuchoice a) = toElem a
    toElem (Bridgehead_Mousebutton a) = toElem a
    toElem (Bridgehead_Option a) = toElem a
    toElem (Bridgehead_Optional a) = toElem a
    toElem (Bridgehead_Parameter a) = toElem a
    toElem (Bridgehead_Prompt a) = toElem a
    toElem (Bridgehead_Property a) = toElem a
    toElem (Bridgehead_Replaceable a) = toElem a
    toElem (Bridgehead_Returnvalue a) = toElem a
    toElem (Bridgehead_Sgmltag a) = toElem a
    toElem (Bridgehead_Structfield a) = toElem a
    toElem (Bridgehead_Structname a) = toElem a
    toElem (Bridgehead_Symbol a) = toElem a
    toElem (Bridgehead_Systemitem a) = toElem a
    toElem (Bridgehead_Token a) = toElem a
    toElem (Bridgehead_Type a) = toElem a
    toElem (Bridgehead_Userinput a) = toElem a
    toElem (Bridgehead_Varname a) = toElem a
    toElem (Bridgehead_Anchor a) = toElem a
    toElem (Bridgehead_Author a) = toElem a
    toElem (Bridgehead_Authorinitials a) = toElem a
    toElem (Bridgehead_Corpauthor a) = toElem a
    toElem (Bridgehead_Modespec a) = toElem a
    toElem (Bridgehead_Othercredit a) = toElem a
    toElem (Bridgehead_Productname a) = toElem a
    toElem (Bridgehead_Productnumber a) = toElem a
    toElem (Bridgehead_Revhistory a) = toElem a
    toElem (Bridgehead_Remark a) = toElem a
    toElem (Bridgehead_Subscript a) = toElem a
    toElem (Bridgehead_Superscript a) = toElem a
    toElem (Bridgehead_Inlinegraphic a) = toElem a
    toElem (Bridgehead_Inlinemediaobject a) = toElem a
    toElem (Bridgehead_Inlineequation a) = toElem a
    toElem (Bridgehead_Indexterm a) = toElem a
instance XmlAttrType Bridgehead_Renderas where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "other" = Just Bridgehead_Renderas_Other
	    translate "sect1" = Just Bridgehead_Renderas_Sect1
	    translate "sect2" = Just Bridgehead_Renderas_Sect2
	    translate "sect3" = Just Bridgehead_Renderas_Sect3
	    translate "sect4" = Just Bridgehead_Renderas_Sect4
	    translate "sect5" = Just Bridgehead_Renderas_Sect5
	    translate _ = Nothing
    toAttrFrTyp n Bridgehead_Renderas_Other = Just (n, str2attr "other")
    toAttrFrTyp n Bridgehead_Renderas_Sect1 = Just (n, str2attr "sect1")
    toAttrFrTyp n Bridgehead_Renderas_Sect2 = Just (n, str2attr "sect2")
    toAttrFrTyp n Bridgehead_Renderas_Sect3 = Just (n, str2attr "sect3")
    toAttrFrTyp n Bridgehead_Renderas_Sect4 = Just (n, str2attr "sect4")
    toAttrFrTyp n Bridgehead_Renderas_Sect5 = Just (n, str2attr "sect5")
instance XmlAttrType Bridgehead_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Bridgehead_Revisionflag_Changed
	    translate "added" = Just Bridgehead_Revisionflag_Added
	    translate "deleted" = Just Bridgehead_Revisionflag_Deleted
	    translate "off" = Just Bridgehead_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Bridgehead_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Bridgehead_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Bridgehead_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Bridgehead_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Remark where
    fromElem (CElem (Elem "remark" as c0):rest) =
	(\(a,ca)->
	   (Just (Remark (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Remark as a) =
	[CElem (Elem "remark" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Remark_Attrs where
    fromAttrs as =
	Remark_Attrs
	  { remarkId = possibleA fromAttrToStr "id" as
	  , remarkLang = possibleA fromAttrToStr "lang" as
	  , remarkRemap = possibleA fromAttrToStr "remap" as
	  , remarkXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , remarkRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , remarkArch = possibleA fromAttrToStr "arch" as
	  , remarkCondition = possibleA fromAttrToStr "condition" as
	  , remarkConformance = possibleA fromAttrToStr "conformance" as
	  , remarkOs = possibleA fromAttrToStr "os" as
	  , remarkRevision = possibleA fromAttrToStr "revision" as
	  , remarkSecurity = possibleA fromAttrToStr "security" as
	  , remarkUserlevel = possibleA fromAttrToStr "userlevel" as
	  , remarkVendor = possibleA fromAttrToStr "vendor" as
	  , remarkRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (remarkId v)
	, maybeToAttr toAttrFrStr "lang" (remarkLang v)
	, maybeToAttr toAttrFrStr "remap" (remarkRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (remarkXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (remarkRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (remarkArch v)
	, maybeToAttr toAttrFrStr "condition" (remarkCondition v)
	, maybeToAttr toAttrFrStr "conformance" (remarkConformance v)
	, maybeToAttr toAttrFrStr "os" (remarkOs v)
	, maybeToAttr toAttrFrStr "revision" (remarkRevision v)
	, maybeToAttr toAttrFrStr "security" (remarkSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (remarkUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (remarkVendor v)
	, maybeToAttr toAttrFrStr "role" (remarkRole v)
	]
instance XmlContent Remark_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Remark_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Remark_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Remark_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Remark_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Remark_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Remark_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Remark_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Remark_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Remark_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Remark_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Remark_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Remark_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Remark_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Remark_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Remark_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Remark_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Remark_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Remark_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Remark_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Remark_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Remark_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Remark_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Remark_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Remark_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Remark_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Remark_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Remark_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Remark_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Remark_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Remark_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Remark_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Remark_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Remark_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Remark_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Remark_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Remark_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Remark_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Remark_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Remark_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Remark_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Remark_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Remark_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Remark_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Remark_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Remark_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Remark_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Remark_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Remark_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Remark_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Remark_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Remark_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Remark_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Remark_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Remark_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Remark_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Remark_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Remark_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Remark_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Remark_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Remark_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Remark_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Remark_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Remark_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Remark_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Remark_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Remark_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Remark_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Remark_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Remark_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Remark_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Remark_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Remark_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Remark_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Remark_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Remark_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Remark_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Remark_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Remark_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Remark_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Remark_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Remark_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Remark_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Remark_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Remark_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Remark_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Remark_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Remark_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Remark_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Remark_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Remark_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Remark_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Remark_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Remark_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Remark_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Remark_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Remark_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Remark_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Remark_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Remark_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Remark_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Remark_Str a) = toText a
    toElem (Remark_Footnoteref a) = toElem a
    toElem (Remark_Xref a) = toElem a
    toElem (Remark_Abbrev a) = toElem a
    toElem (Remark_Acronym a) = toElem a
    toElem (Remark_Citation a) = toElem a
    toElem (Remark_Citerefentry a) = toElem a
    toElem (Remark_Citetitle a) = toElem a
    toElem (Remark_Emphasis a) = toElem a
    toElem (Remark_Firstterm a) = toElem a
    toElem (Remark_Foreignphrase a) = toElem a
    toElem (Remark_Glossterm a) = toElem a
    toElem (Remark_Footnote a) = toElem a
    toElem (Remark_Phrase a) = toElem a
    toElem (Remark_Quote a) = toElem a
    toElem (Remark_Trademark a) = toElem a
    toElem (Remark_Wordasword a) = toElem a
    toElem (Remark_Personname a) = toElem a
    toElem (Remark_Link a) = toElem a
    toElem (Remark_Olink a) = toElem a
    toElem (Remark_Ulink a) = toElem a
    toElem (Remark_Action a) = toElem a
    toElem (Remark_Application a) = toElem a
    toElem (Remark_Classname a) = toElem a
    toElem (Remark_Methodname a) = toElem a
    toElem (Remark_Interfacename a) = toElem a
    toElem (Remark_Exceptionname a) = toElem a
    toElem (Remark_Ooclass a) = toElem a
    toElem (Remark_Oointerface a) = toElem a
    toElem (Remark_Ooexception a) = toElem a
    toElem (Remark_Command a) = toElem a
    toElem (Remark_Computeroutput a) = toElem a
    toElem (Remark_Database a) = toElem a
    toElem (Remark_Email a) = toElem a
    toElem (Remark_Envar a) = toElem a
    toElem (Remark_Errorcode a) = toElem a
    toElem (Remark_Errorname a) = toElem a
    toElem (Remark_Errortype a) = toElem a
    toElem (Remark_Errortext a) = toElem a
    toElem (Remark_Filename a) = toElem a
    toElem (Remark_Function a) = toElem a
    toElem (Remark_Guibutton a) = toElem a
    toElem (Remark_Guiicon a) = toElem a
    toElem (Remark_Guilabel a) = toElem a
    toElem (Remark_Guimenu a) = toElem a
    toElem (Remark_Guimenuitem a) = toElem a
    toElem (Remark_Guisubmenu a) = toElem a
    toElem (Remark_Hardware a) = toElem a
    toElem (Remark_Interface a) = toElem a
    toElem (Remark_Keycap a) = toElem a
    toElem (Remark_Keycode a) = toElem a
    toElem (Remark_Keycombo a) = toElem a
    toElem (Remark_Keysym a) = toElem a
    toElem (Remark_Literal a) = toElem a
    toElem (Remark_Constant a) = toElem a
    toElem (Remark_Markup a) = toElem a
    toElem (Remark_Medialabel a) = toElem a
    toElem (Remark_Menuchoice a) = toElem a
    toElem (Remark_Mousebutton a) = toElem a
    toElem (Remark_Option a) = toElem a
    toElem (Remark_Optional a) = toElem a
    toElem (Remark_Parameter a) = toElem a
    toElem (Remark_Prompt a) = toElem a
    toElem (Remark_Property a) = toElem a
    toElem (Remark_Replaceable a) = toElem a
    toElem (Remark_Returnvalue a) = toElem a
    toElem (Remark_Sgmltag a) = toElem a
    toElem (Remark_Structfield a) = toElem a
    toElem (Remark_Structname a) = toElem a
    toElem (Remark_Symbol a) = toElem a
    toElem (Remark_Systemitem a) = toElem a
    toElem (Remark_Token a) = toElem a
    toElem (Remark_Type a) = toElem a
    toElem (Remark_Userinput a) = toElem a
    toElem (Remark_Varname a) = toElem a
    toElem (Remark_Anchor a) = toElem a
    toElem (Remark_Author a) = toElem a
    toElem (Remark_Authorinitials a) = toElem a
    toElem (Remark_Corpauthor a) = toElem a
    toElem (Remark_Modespec a) = toElem a
    toElem (Remark_Othercredit a) = toElem a
    toElem (Remark_Productname a) = toElem a
    toElem (Remark_Productnumber a) = toElem a
    toElem (Remark_Revhistory a) = toElem a
    toElem (Remark_Remark a) = toElem a
    toElem (Remark_Subscript a) = toElem a
    toElem (Remark_Superscript a) = toElem a
    toElem (Remark_Inlinegraphic a) = toElem a
    toElem (Remark_Inlinemediaobject a) = toElem a
    toElem (Remark_Inlineequation a) = toElem a
    toElem (Remark_Synopsis a) = toElem a
    toElem (Remark_Cmdsynopsis a) = toElem a
    toElem (Remark_Funcsynopsis a) = toElem a
    toElem (Remark_Classsynopsis a) = toElem a
    toElem (Remark_Fieldsynopsis a) = toElem a
    toElem (Remark_Constructorsynopsis a) = toElem a
    toElem (Remark_Destructorsynopsis a) = toElem a
    toElem (Remark_Methodsynopsis a) = toElem a
    toElem (Remark_Indexterm a) = toElem a
    toElem (Remark_Beginpage a) = toElem a
instance XmlAttrType Remark_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Remark_Revisionflag_Changed
	    translate "added" = Just Remark_Revisionflag_Added
	    translate "deleted" = Just Remark_Revisionflag_Deleted
	    translate "off" = Just Remark_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Remark_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Remark_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Remark_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Remark_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Epigraph where
    fromElem (CElem (Elem "epigraph" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Epigraph (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Epigraph as a b) =
	[CElem (Elem "epigraph" (toAttrs as) (maybe [] toElem a ++
					      concatMap toElem b))]
instance XmlAttributes Epigraph_Attrs where
    fromAttrs as =
	Epigraph_Attrs
	  { epigraphId = possibleA fromAttrToStr "id" as
	  , epigraphLang = possibleA fromAttrToStr "lang" as
	  , epigraphRemap = possibleA fromAttrToStr "remap" as
	  , epigraphXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , epigraphRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , epigraphArch = possibleA fromAttrToStr "arch" as
	  , epigraphCondition = possibleA fromAttrToStr "condition" as
	  , epigraphConformance = possibleA fromAttrToStr "conformance" as
	  , epigraphOs = possibleA fromAttrToStr "os" as
	  , epigraphRevision = possibleA fromAttrToStr "revision" as
	  , epigraphSecurity = possibleA fromAttrToStr "security" as
	  , epigraphUserlevel = possibleA fromAttrToStr "userlevel" as
	  , epigraphVendor = possibleA fromAttrToStr "vendor" as
	  , epigraphRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (epigraphId v)
	, maybeToAttr toAttrFrStr "lang" (epigraphLang v)
	, maybeToAttr toAttrFrStr "remap" (epigraphRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (epigraphXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (epigraphRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (epigraphArch v)
	, maybeToAttr toAttrFrStr "condition" (epigraphCondition v)
	, maybeToAttr toAttrFrStr "conformance" (epigraphConformance v)
	, maybeToAttr toAttrFrStr "os" (epigraphOs v)
	, maybeToAttr toAttrFrStr "revision" (epigraphRevision v)
	, maybeToAttr toAttrFrStr "security" (epigraphSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (epigraphUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (epigraphVendor v)
	, maybeToAttr toAttrFrStr "role" (epigraphRole v)
	]
instance XmlAttrType Epigraph_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Epigraph_Revisionflag_Changed
	    translate "added" = Just Epigraph_Revisionflag_Added
	    translate "deleted" = Just Epigraph_Revisionflag_Deleted
	    translate "off" = Just Epigraph_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Epigraph_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Epigraph_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Epigraph_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Epigraph_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Footnote where
    fromElem (CElem (Elem "footnote" as c0):rest) =
	(\(a,ca)->
	   (Just (Footnote (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Footnote as a) =
	[CElem (Elem "footnote" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Footnote_Attrs where
    fromAttrs as =
	Footnote_Attrs
	  { footnoteLabel = possibleA fromAttrToStr "label" as
	  , footnoteId = possibleA fromAttrToStr "id" as
	  , footnoteLang = possibleA fromAttrToStr "lang" as
	  , footnoteRemap = possibleA fromAttrToStr "remap" as
	  , footnoteXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , footnoteRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , footnoteArch = possibleA fromAttrToStr "arch" as
	  , footnoteCondition = possibleA fromAttrToStr "condition" as
	  , footnoteConformance = possibleA fromAttrToStr "conformance" as
	  , footnoteOs = possibleA fromAttrToStr "os" as
	  , footnoteRevision = possibleA fromAttrToStr "revision" as
	  , footnoteSecurity = possibleA fromAttrToStr "security" as
	  , footnoteUserlevel = possibleA fromAttrToStr "userlevel" as
	  , footnoteVendor = possibleA fromAttrToStr "vendor" as
	  , footnoteRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (footnoteLabel v)
	, maybeToAttr toAttrFrStr "id" (footnoteId v)
	, maybeToAttr toAttrFrStr "lang" (footnoteLang v)
	, maybeToAttr toAttrFrStr "remap" (footnoteRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (footnoteXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (footnoteRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (footnoteArch v)
	, maybeToAttr toAttrFrStr "condition" (footnoteCondition v)
	, maybeToAttr toAttrFrStr "conformance" (footnoteConformance v)
	, maybeToAttr toAttrFrStr "os" (footnoteOs v)
	, maybeToAttr toAttrFrStr "revision" (footnoteRevision v)
	, maybeToAttr toAttrFrStr "security" (footnoteSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (footnoteUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (footnoteVendor v)
	, maybeToAttr toAttrFrStr "role" (footnoteRole v)
	]
instance XmlAttrType Footnote_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Footnote_Revisionflag_Changed
	    translate "added" = Just Footnote_Revisionflag_Added
	    translate "deleted" = Just Footnote_Revisionflag_Deleted
	    translate "off" = Just Footnote_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Footnote_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Footnote_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Footnote_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Footnote_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Highlights where
    fromElem (CElem (Elem "highlights" as c0):rest) =
	(\(a,ca)->
	   (Just (Highlights (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Highlights as a) =
	[CElem (Elem "highlights" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Highlights_Attrs where
    fromAttrs as =
	Highlights_Attrs
	  { highlightsId = possibleA fromAttrToStr "id" as
	  , highlightsLang = possibleA fromAttrToStr "lang" as
	  , highlightsRemap = possibleA fromAttrToStr "remap" as
	  , highlightsXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , highlightsRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , highlightsArch = possibleA fromAttrToStr "arch" as
	  , highlightsCondition = possibleA fromAttrToStr "condition" as
	  , highlightsConformance = possibleA fromAttrToStr "conformance" as
	  , highlightsOs = possibleA fromAttrToStr "os" as
	  , highlightsRevision = possibleA fromAttrToStr "revision" as
	  , highlightsSecurity = possibleA fromAttrToStr "security" as
	  , highlightsUserlevel = possibleA fromAttrToStr "userlevel" as
	  , highlightsVendor = possibleA fromAttrToStr "vendor" as
	  , highlightsRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (highlightsId v)
	, maybeToAttr toAttrFrStr "lang" (highlightsLang v)
	, maybeToAttr toAttrFrStr "remap" (highlightsRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (highlightsXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (highlightsRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (highlightsArch v)
	, maybeToAttr toAttrFrStr "condition" (highlightsCondition v)
	, maybeToAttr toAttrFrStr "conformance" (highlightsConformance v)
	, maybeToAttr toAttrFrStr "os" (highlightsOs v)
	, maybeToAttr toAttrFrStr "revision" (highlightsRevision v)
	, maybeToAttr toAttrFrStr "security" (highlightsSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (highlightsUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (highlightsVendor v)
	, maybeToAttr toAttrFrStr "role" (highlightsRole v)
	]
instance XmlAttrType Highlights_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Highlights_Revisionflag_Changed
	    translate "added" = Just Highlights_Revisionflag_Added
	    translate "deleted" = Just Highlights_Revisionflag_Deleted
	    translate "off" = Just Highlights_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Highlights_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Highlights_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Highlights_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Highlights_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Formalpara where
    fromElem (CElem (Elem "formalpara" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Formalpara (fromAttrs as) a b c), rest))
	      (definite fromElem "<para>" "formalpara" cb))
	   (many fromElem ca))
	(definite fromElem "<title>" "formalpara" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Formalpara as a b c) =
	[CElem (Elem "formalpara" (toAttrs as) (toElem a ++
						concatMap toElem b ++ toElem c))]
instance XmlAttributes Formalpara_Attrs where
    fromAttrs as =
	Formalpara_Attrs
	  { formalparaId = possibleA fromAttrToStr "id" as
	  , formalparaLang = possibleA fromAttrToStr "lang" as
	  , formalparaRemap = possibleA fromAttrToStr "remap" as
	  , formalparaXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , formalparaRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , formalparaArch = possibleA fromAttrToStr "arch" as
	  , formalparaCondition = possibleA fromAttrToStr "condition" as
	  , formalparaConformance = possibleA fromAttrToStr "conformance" as
	  , formalparaOs = possibleA fromAttrToStr "os" as
	  , formalparaRevision = possibleA fromAttrToStr "revision" as
	  , formalparaSecurity = possibleA fromAttrToStr "security" as
	  , formalparaUserlevel = possibleA fromAttrToStr "userlevel" as
	  , formalparaVendor = possibleA fromAttrToStr "vendor" as
	  , formalparaRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (formalparaId v)
	, maybeToAttr toAttrFrStr "lang" (formalparaLang v)
	, maybeToAttr toAttrFrStr "remap" (formalparaRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (formalparaXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (formalparaRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (formalparaArch v)
	, maybeToAttr toAttrFrStr "condition" (formalparaCondition v)
	, maybeToAttr toAttrFrStr "conformance" (formalparaConformance v)
	, maybeToAttr toAttrFrStr "os" (formalparaOs v)
	, maybeToAttr toAttrFrStr "revision" (formalparaRevision v)
	, maybeToAttr toAttrFrStr "security" (formalparaSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (formalparaUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (formalparaVendor v)
	, maybeToAttr toAttrFrStr "role" (formalparaRole v)
	]
instance XmlAttrType Formalpara_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Formalpara_Revisionflag_Changed
	    translate "added" = Just Formalpara_Revisionflag_Added
	    translate "deleted" = Just Formalpara_Revisionflag_Deleted
	    translate "off" = Just Formalpara_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Formalpara_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Formalpara_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Formalpara_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Formalpara_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Para where
    fromElem (CElem (Elem "para" as c0):rest) =
	(\(a,ca)->
	   (Just (Para (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Para as a) =
	[CElem (Elem "para" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Para_Attrs where
    fromAttrs as =
	Para_Attrs
	  { paraId = possibleA fromAttrToStr "id" as
	  , paraLang = possibleA fromAttrToStr "lang" as
	  , paraRemap = possibleA fromAttrToStr "remap" as
	  , paraXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , paraRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , paraArch = possibleA fromAttrToStr "arch" as
	  , paraCondition = possibleA fromAttrToStr "condition" as
	  , paraConformance = possibleA fromAttrToStr "conformance" as
	  , paraOs = possibleA fromAttrToStr "os" as
	  , paraRevision = possibleA fromAttrToStr "revision" as
	  , paraSecurity = possibleA fromAttrToStr "security" as
	  , paraUserlevel = possibleA fromAttrToStr "userlevel" as
	  , paraVendor = possibleA fromAttrToStr "vendor" as
	  , paraRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (paraId v)
	, maybeToAttr toAttrFrStr "lang" (paraLang v)
	, maybeToAttr toAttrFrStr "remap" (paraRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (paraXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (paraRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (paraArch v)
	, maybeToAttr toAttrFrStr "condition" (paraCondition v)
	, maybeToAttr toAttrFrStr "conformance" (paraConformance v)
	, maybeToAttr toAttrFrStr "os" (paraOs v)
	, maybeToAttr toAttrFrStr "revision" (paraRevision v)
	, maybeToAttr toAttrFrStr "security" (paraSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (paraUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (paraVendor v)
	, maybeToAttr toAttrFrStr "role" (paraRole v)
	]
instance XmlContent Para_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Para_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Para_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Para_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Para_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Para_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Para_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Para_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Para_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Para_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Para_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Para_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Para_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Para_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Para_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Para_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Para_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Para_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Para_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Para_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Para_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Para_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Para_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Para_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Para_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Para_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Para_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Para_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Para_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Para_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Para_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Para_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Para_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Para_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Para_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Para_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Para_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Para_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Para_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Para_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Para_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Para_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Para_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Para_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Para_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Para_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Para_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Para_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Para_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Para_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Para_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Para_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Para_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Para_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Para_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Para_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Para_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Para_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Para_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Para_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Para_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Para_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Para_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Para_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Para_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Para_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Para_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Para_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Para_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Para_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Para_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Para_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Para_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Para_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Para_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Para_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Para_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Para_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Para_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Para_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Para_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Para_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Para_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Para_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Para_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Para_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Para_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Para_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Para_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Para_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Para_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Para_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Para_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Para_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Para_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Para_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Para_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Para_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Para_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Para_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Para_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																					case (fromElem c0) of
																																																																																																					(Just a,rest) -> (Just (Para_Calloutlist a), rest)
																																																																																																					(_,_) ->
																																																																																																						case (fromElem c0) of
																																																																																																						(Just a,rest) -> (Just (Para_Glosslist a), rest)
																																																																																																						(_,_) ->
																																																																																																							case (fromElem c0) of
																																																																																																							(Just a,rest) -> (Just (Para_Itemizedlist a), rest)
																																																																																																							(_,_) ->
																																																																																																								case (fromElem c0) of
																																																																																																								(Just a,rest) -> (Just (Para_Orderedlist a), rest)
																																																																																																								(_,_) ->
																																																																																																									case (fromElem c0) of
																																																																																																									(Just a,rest) -> (Just (Para_Segmentedlist a), rest)
																																																																																																									(_,_) ->
																																																																																																										case (fromElem c0) of
																																																																																																										(Just a,rest) -> (Just (Para_Simplelist a), rest)
																																																																																																										(_,_) ->
																																																																																																											case (fromElem c0) of
																																																																																																											(Just a,rest) -> (Just (Para_Variablelist a), rest)
																																																																																																											(_,_) ->
																																																																																																												case (fromElem c0) of
																																																																																																												(Just a,rest) -> (Just (Para_Caution a), rest)
																																																																																																												(_,_) ->
																																																																																																													case (fromElem c0) of
																																																																																																													(Just a,rest) -> (Just (Para_Important a), rest)
																																																																																																													(_,_) ->
																																																																																																														case (fromElem c0) of
																																																																																																														(Just a,rest) -> (Just (Para_Note a), rest)
																																																																																																														(_,_) ->
																																																																																																															case (fromElem c0) of
																																																																																																															(Just a,rest) -> (Just (Para_Tip a), rest)
																																																																																																															(_,_) ->
																																																																																																																case (fromElem c0) of
																																																																																																																(Just a,rest) -> (Just (Para_Warning a), rest)
																																																																																																																(_,_) ->
																																																																																																																	case (fromElem c0) of
																																																																																																																	(Just a,rest) -> (Just (Para_Literallayout a), rest)
																																																																																																																	(_,_) ->
																																																																																																																		case (fromElem c0) of
																																																																																																																		(Just a,rest) -> (Just (Para_Programlisting a), rest)
																																																																																																																		(_,_) ->
																																																																																																																			case (fromElem c0) of
																																																																																																																			(Just a,rest) -> (Just (Para_Programlistingco a), rest)
																																																																																																																			(_,_) ->
																																																																																																																				case (fromElem c0) of
																																																																																																																				(Just a,rest) -> (Just (Para_Screen a), rest)
																																																																																																																				(_,_) ->
																																																																																																																					case (fromElem c0) of
																																																																																																																					(Just a,rest) -> (Just (Para_Screenco a), rest)
																																																																																																																					(_,_) ->
																																																																																																																						case (fromElem c0) of
																																																																																																																						(Just a,rest) -> (Just (Para_Screenshot a), rest)
																																																																																																																						(_,_) ->
																																																																																																																							case (fromElem c0) of
																																																																																																																							(Just a,rest) -> (Just (Para_Address a), rest)
																																																																																																																							(_,_) ->
																																																																																																																								case (fromElem c0) of
																																																																																																																								(Just a,rest) -> (Just (Para_Blockquote a), rest)
																																																																																																																								(_,_) ->
																																																																																																																									case (fromElem c0) of
																																																																																																																									(Just a,rest) -> (Just (Para_Graphic a), rest)
																																																																																																																									(_,_) ->
																																																																																																																										case (fromElem c0) of
																																																																																																																										(Just a,rest) -> (Just (Para_Graphicco a), rest)
																																																																																																																										(_,_) ->
																																																																																																																											case (fromElem c0) of
																																																																																																																											(Just a,rest) -> (Just (Para_Mediaobject a), rest)
																																																																																																																											(_,_) ->
																																																																																																																												case (fromElem c0) of
																																																																																																																												(Just a,rest) -> (Just (Para_Mediaobjectco a), rest)
																																																																																																																												(_,_) ->
																																																																																																																													case (fromElem c0) of
																																																																																																																													(Just a,rest) -> (Just (Para_Informalequation a), rest)
																																																																																																																													(_,_) ->
																																																																																																																														case (fromElem c0) of
																																																																																																																														(Just a,rest) -> (Just (Para_Informalexample a), rest)
																																																																																																																														(_,_) ->
																																																																																																																															case (fromElem c0) of
																																																																																																																															(Just a,rest) -> (Just (Para_Informalfigure a), rest)
																																																																																																																															(_,_) ->
																																																																																																																																case (fromElem c0) of
																																																																																																																																(Just a,rest) -> (Just (Para_Informaltable a), rest)
																																																																																																																																(_,_) ->
																																																																																																																																	case (fromElem c0) of
																																																																																																																																	(Just a,rest) -> (Just (Para_Equation a), rest)
																																																																																																																																	(_,_) ->
																																																																																																																																		case (fromElem c0) of
																																																																																																																																		(Just a,rest) -> (Just (Para_Example a), rest)
																																																																																																																																		(_,_) ->
																																																																																																																																			case (fromElem c0) of
																																																																																																																																			(Just a,rest) -> (Just (Para_Figure a), rest)
																																																																																																																																			(_,_) ->
																																																																																																																																				case (fromElem c0) of
																																																																																																																																				(Just a,rest) -> (Just (Para_Table a), rest)
																																																																																																																																				(_,_) ->
																																																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Para_Str a) = toText a
    toElem (Para_Footnoteref a) = toElem a
    toElem (Para_Xref a) = toElem a
    toElem (Para_Abbrev a) = toElem a
    toElem (Para_Acronym a) = toElem a
    toElem (Para_Citation a) = toElem a
    toElem (Para_Citerefentry a) = toElem a
    toElem (Para_Citetitle a) = toElem a
    toElem (Para_Emphasis a) = toElem a
    toElem (Para_Firstterm a) = toElem a
    toElem (Para_Foreignphrase a) = toElem a
    toElem (Para_Glossterm a) = toElem a
    toElem (Para_Footnote a) = toElem a
    toElem (Para_Phrase a) = toElem a
    toElem (Para_Quote a) = toElem a
    toElem (Para_Trademark a) = toElem a
    toElem (Para_Wordasword a) = toElem a
    toElem (Para_Personname a) = toElem a
    toElem (Para_Link a) = toElem a
    toElem (Para_Olink a) = toElem a
    toElem (Para_Ulink a) = toElem a
    toElem (Para_Action a) = toElem a
    toElem (Para_Application a) = toElem a
    toElem (Para_Classname a) = toElem a
    toElem (Para_Methodname a) = toElem a
    toElem (Para_Interfacename a) = toElem a
    toElem (Para_Exceptionname a) = toElem a
    toElem (Para_Ooclass a) = toElem a
    toElem (Para_Oointerface a) = toElem a
    toElem (Para_Ooexception a) = toElem a
    toElem (Para_Command a) = toElem a
    toElem (Para_Computeroutput a) = toElem a
    toElem (Para_Database a) = toElem a
    toElem (Para_Email a) = toElem a
    toElem (Para_Envar a) = toElem a
    toElem (Para_Errorcode a) = toElem a
    toElem (Para_Errorname a) = toElem a
    toElem (Para_Errortype a) = toElem a
    toElem (Para_Errortext a) = toElem a
    toElem (Para_Filename a) = toElem a
    toElem (Para_Function a) = toElem a
    toElem (Para_Guibutton a) = toElem a
    toElem (Para_Guiicon a) = toElem a
    toElem (Para_Guilabel a) = toElem a
    toElem (Para_Guimenu a) = toElem a
    toElem (Para_Guimenuitem a) = toElem a
    toElem (Para_Guisubmenu a) = toElem a
    toElem (Para_Hardware a) = toElem a
    toElem (Para_Interface a) = toElem a
    toElem (Para_Keycap a) = toElem a
    toElem (Para_Keycode a) = toElem a
    toElem (Para_Keycombo a) = toElem a
    toElem (Para_Keysym a) = toElem a
    toElem (Para_Literal a) = toElem a
    toElem (Para_Constant a) = toElem a
    toElem (Para_Markup a) = toElem a
    toElem (Para_Medialabel a) = toElem a
    toElem (Para_Menuchoice a) = toElem a
    toElem (Para_Mousebutton a) = toElem a
    toElem (Para_Option a) = toElem a
    toElem (Para_Optional a) = toElem a
    toElem (Para_Parameter a) = toElem a
    toElem (Para_Prompt a) = toElem a
    toElem (Para_Property a) = toElem a
    toElem (Para_Replaceable a) = toElem a
    toElem (Para_Returnvalue a) = toElem a
    toElem (Para_Sgmltag a) = toElem a
    toElem (Para_Structfield a) = toElem a
    toElem (Para_Structname a) = toElem a
    toElem (Para_Symbol a) = toElem a
    toElem (Para_Systemitem a) = toElem a
    toElem (Para_Token a) = toElem a
    toElem (Para_Type a) = toElem a
    toElem (Para_Userinput a) = toElem a
    toElem (Para_Varname a) = toElem a
    toElem (Para_Anchor a) = toElem a
    toElem (Para_Author a) = toElem a
    toElem (Para_Authorinitials a) = toElem a
    toElem (Para_Corpauthor a) = toElem a
    toElem (Para_Modespec a) = toElem a
    toElem (Para_Othercredit a) = toElem a
    toElem (Para_Productname a) = toElem a
    toElem (Para_Productnumber a) = toElem a
    toElem (Para_Revhistory a) = toElem a
    toElem (Para_Remark a) = toElem a
    toElem (Para_Subscript a) = toElem a
    toElem (Para_Superscript a) = toElem a
    toElem (Para_Inlinegraphic a) = toElem a
    toElem (Para_Inlinemediaobject a) = toElem a
    toElem (Para_Inlineequation a) = toElem a
    toElem (Para_Synopsis a) = toElem a
    toElem (Para_Cmdsynopsis a) = toElem a
    toElem (Para_Funcsynopsis a) = toElem a
    toElem (Para_Classsynopsis a) = toElem a
    toElem (Para_Fieldsynopsis a) = toElem a
    toElem (Para_Constructorsynopsis a) = toElem a
    toElem (Para_Destructorsynopsis a) = toElem a
    toElem (Para_Methodsynopsis a) = toElem a
    toElem (Para_Indexterm a) = toElem a
    toElem (Para_Beginpage a) = toElem a
    toElem (Para_Calloutlist a) = toElem a
    toElem (Para_Glosslist a) = toElem a
    toElem (Para_Itemizedlist a) = toElem a
    toElem (Para_Orderedlist a) = toElem a
    toElem (Para_Segmentedlist a) = toElem a
    toElem (Para_Simplelist a) = toElem a
    toElem (Para_Variablelist a) = toElem a
    toElem (Para_Caution a) = toElem a
    toElem (Para_Important a) = toElem a
    toElem (Para_Note a) = toElem a
    toElem (Para_Tip a) = toElem a
    toElem (Para_Warning a) = toElem a
    toElem (Para_Literallayout a) = toElem a
    toElem (Para_Programlisting a) = toElem a
    toElem (Para_Programlistingco a) = toElem a
    toElem (Para_Screen a) = toElem a
    toElem (Para_Screenco a) = toElem a
    toElem (Para_Screenshot a) = toElem a
    toElem (Para_Address a) = toElem a
    toElem (Para_Blockquote a) = toElem a
    toElem (Para_Graphic a) = toElem a
    toElem (Para_Graphicco a) = toElem a
    toElem (Para_Mediaobject a) = toElem a
    toElem (Para_Mediaobjectco a) = toElem a
    toElem (Para_Informalequation a) = toElem a
    toElem (Para_Informalexample a) = toElem a
    toElem (Para_Informalfigure a) = toElem a
    toElem (Para_Informaltable a) = toElem a
    toElem (Para_Equation a) = toElem a
    toElem (Para_Example a) = toElem a
    toElem (Para_Figure a) = toElem a
    toElem (Para_Table a) = toElem a
instance XmlAttrType Para_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Para_Revisionflag_Changed
	    translate "added" = Just Para_Revisionflag_Added
	    translate "deleted" = Just Para_Revisionflag_Deleted
	    translate "off" = Just Para_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Para_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Para_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Para_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Para_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Simpara where
    fromElem (CElem (Elem "simpara" as c0):rest) =
	(\(a,ca)->
	   (Just (Simpara (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Simpara as a) =
	[CElem (Elem "simpara" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Simpara_Attrs where
    fromAttrs as =
	Simpara_Attrs
	  { simparaId = possibleA fromAttrToStr "id" as
	  , simparaLang = possibleA fromAttrToStr "lang" as
	  , simparaRemap = possibleA fromAttrToStr "remap" as
	  , simparaXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , simparaRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , simparaArch = possibleA fromAttrToStr "arch" as
	  , simparaCondition = possibleA fromAttrToStr "condition" as
	  , simparaConformance = possibleA fromAttrToStr "conformance" as
	  , simparaOs = possibleA fromAttrToStr "os" as
	  , simparaRevision = possibleA fromAttrToStr "revision" as
	  , simparaSecurity = possibleA fromAttrToStr "security" as
	  , simparaUserlevel = possibleA fromAttrToStr "userlevel" as
	  , simparaVendor = possibleA fromAttrToStr "vendor" as
	  , simparaRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (simparaId v)
	, maybeToAttr toAttrFrStr "lang" (simparaLang v)
	, maybeToAttr toAttrFrStr "remap" (simparaRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (simparaXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (simparaRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (simparaArch v)
	, maybeToAttr toAttrFrStr "condition" (simparaCondition v)
	, maybeToAttr toAttrFrStr "conformance" (simparaConformance v)
	, maybeToAttr toAttrFrStr "os" (simparaOs v)
	, maybeToAttr toAttrFrStr "revision" (simparaRevision v)
	, maybeToAttr toAttrFrStr "security" (simparaSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (simparaUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (simparaVendor v)
	, maybeToAttr toAttrFrStr "role" (simparaRole v)
	]
instance XmlContent Simpara_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Simpara_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Simpara_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Simpara_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Simpara_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Simpara_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Simpara_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Simpara_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Simpara_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Simpara_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Simpara_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Simpara_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Simpara_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Simpara_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Simpara_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Simpara_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Simpara_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Simpara_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Simpara_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Simpara_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Simpara_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Simpara_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Simpara_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Simpara_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Simpara_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Simpara_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Simpara_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Simpara_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Simpara_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Simpara_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Simpara_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Simpara_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Simpara_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Simpara_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Simpara_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Simpara_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Simpara_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Simpara_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Simpara_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Simpara_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Simpara_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Simpara_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Simpara_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Simpara_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Simpara_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Simpara_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Simpara_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Simpara_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Simpara_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Simpara_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Simpara_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Simpara_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Simpara_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Simpara_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Simpara_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Simpara_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Simpara_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Simpara_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Simpara_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Simpara_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Simpara_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Simpara_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Simpara_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Simpara_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Simpara_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Simpara_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Simpara_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Simpara_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Simpara_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Simpara_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Simpara_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Simpara_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Simpara_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Simpara_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Simpara_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Simpara_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Simpara_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Simpara_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Simpara_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Simpara_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Simpara_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Simpara_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Simpara_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Simpara_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Simpara_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Simpara_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Simpara_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Simpara_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Simpara_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Simpara_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Simpara_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Simpara_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Simpara_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Simpara_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Simpara_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Simpara_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Simpara_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Simpara_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Simpara_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Simpara_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Simpara_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Simpara_Str a) = toText a
    toElem (Simpara_Footnoteref a) = toElem a
    toElem (Simpara_Xref a) = toElem a
    toElem (Simpara_Abbrev a) = toElem a
    toElem (Simpara_Acronym a) = toElem a
    toElem (Simpara_Citation a) = toElem a
    toElem (Simpara_Citerefentry a) = toElem a
    toElem (Simpara_Citetitle a) = toElem a
    toElem (Simpara_Emphasis a) = toElem a
    toElem (Simpara_Firstterm a) = toElem a
    toElem (Simpara_Foreignphrase a) = toElem a
    toElem (Simpara_Glossterm a) = toElem a
    toElem (Simpara_Footnote a) = toElem a
    toElem (Simpara_Phrase a) = toElem a
    toElem (Simpara_Quote a) = toElem a
    toElem (Simpara_Trademark a) = toElem a
    toElem (Simpara_Wordasword a) = toElem a
    toElem (Simpara_Personname a) = toElem a
    toElem (Simpara_Link a) = toElem a
    toElem (Simpara_Olink a) = toElem a
    toElem (Simpara_Ulink a) = toElem a
    toElem (Simpara_Action a) = toElem a
    toElem (Simpara_Application a) = toElem a
    toElem (Simpara_Classname a) = toElem a
    toElem (Simpara_Methodname a) = toElem a
    toElem (Simpara_Interfacename a) = toElem a
    toElem (Simpara_Exceptionname a) = toElem a
    toElem (Simpara_Ooclass a) = toElem a
    toElem (Simpara_Oointerface a) = toElem a
    toElem (Simpara_Ooexception a) = toElem a
    toElem (Simpara_Command a) = toElem a
    toElem (Simpara_Computeroutput a) = toElem a
    toElem (Simpara_Database a) = toElem a
    toElem (Simpara_Email a) = toElem a
    toElem (Simpara_Envar a) = toElem a
    toElem (Simpara_Errorcode a) = toElem a
    toElem (Simpara_Errorname a) = toElem a
    toElem (Simpara_Errortype a) = toElem a
    toElem (Simpara_Errortext a) = toElem a
    toElem (Simpara_Filename a) = toElem a
    toElem (Simpara_Function a) = toElem a
    toElem (Simpara_Guibutton a) = toElem a
    toElem (Simpara_Guiicon a) = toElem a
    toElem (Simpara_Guilabel a) = toElem a
    toElem (Simpara_Guimenu a) = toElem a
    toElem (Simpara_Guimenuitem a) = toElem a
    toElem (Simpara_Guisubmenu a) = toElem a
    toElem (Simpara_Hardware a) = toElem a
    toElem (Simpara_Interface a) = toElem a
    toElem (Simpara_Keycap a) = toElem a
    toElem (Simpara_Keycode a) = toElem a
    toElem (Simpara_Keycombo a) = toElem a
    toElem (Simpara_Keysym a) = toElem a
    toElem (Simpara_Literal a) = toElem a
    toElem (Simpara_Constant a) = toElem a
    toElem (Simpara_Markup a) = toElem a
    toElem (Simpara_Medialabel a) = toElem a
    toElem (Simpara_Menuchoice a) = toElem a
    toElem (Simpara_Mousebutton a) = toElem a
    toElem (Simpara_Option a) = toElem a
    toElem (Simpara_Optional a) = toElem a
    toElem (Simpara_Parameter a) = toElem a
    toElem (Simpara_Prompt a) = toElem a
    toElem (Simpara_Property a) = toElem a
    toElem (Simpara_Replaceable a) = toElem a
    toElem (Simpara_Returnvalue a) = toElem a
    toElem (Simpara_Sgmltag a) = toElem a
    toElem (Simpara_Structfield a) = toElem a
    toElem (Simpara_Structname a) = toElem a
    toElem (Simpara_Symbol a) = toElem a
    toElem (Simpara_Systemitem a) = toElem a
    toElem (Simpara_Token a) = toElem a
    toElem (Simpara_Type a) = toElem a
    toElem (Simpara_Userinput a) = toElem a
    toElem (Simpara_Varname a) = toElem a
    toElem (Simpara_Anchor a) = toElem a
    toElem (Simpara_Author a) = toElem a
    toElem (Simpara_Authorinitials a) = toElem a
    toElem (Simpara_Corpauthor a) = toElem a
    toElem (Simpara_Modespec a) = toElem a
    toElem (Simpara_Othercredit a) = toElem a
    toElem (Simpara_Productname a) = toElem a
    toElem (Simpara_Productnumber a) = toElem a
    toElem (Simpara_Revhistory a) = toElem a
    toElem (Simpara_Remark a) = toElem a
    toElem (Simpara_Subscript a) = toElem a
    toElem (Simpara_Superscript a) = toElem a
    toElem (Simpara_Inlinegraphic a) = toElem a
    toElem (Simpara_Inlinemediaobject a) = toElem a
    toElem (Simpara_Inlineequation a) = toElem a
    toElem (Simpara_Synopsis a) = toElem a
    toElem (Simpara_Cmdsynopsis a) = toElem a
    toElem (Simpara_Funcsynopsis a) = toElem a
    toElem (Simpara_Classsynopsis a) = toElem a
    toElem (Simpara_Fieldsynopsis a) = toElem a
    toElem (Simpara_Constructorsynopsis a) = toElem a
    toElem (Simpara_Destructorsynopsis a) = toElem a
    toElem (Simpara_Methodsynopsis a) = toElem a
    toElem (Simpara_Indexterm a) = toElem a
    toElem (Simpara_Beginpage a) = toElem a
instance XmlAttrType Simpara_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Simpara_Revisionflag_Changed
	    translate "added" = Just Simpara_Revisionflag_Added
	    translate "deleted" = Just Simpara_Revisionflag_Deleted
	    translate "off" = Just Simpara_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Simpara_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Simpara_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Simpara_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Simpara_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Caution where
    fromElem (CElem (Elem "caution" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Caution (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Caution as a b) =
	[CElem (Elem "caution" (toAttrs as) (maybe [] toElem a ++
					     concatMap toElem b))]
instance XmlAttributes Caution_Attrs where
    fromAttrs as =
	Caution_Attrs
	  { cautionId = possibleA fromAttrToStr "id" as
	  , cautionLang = possibleA fromAttrToStr "lang" as
	  , cautionRemap = possibleA fromAttrToStr "remap" as
	  , cautionXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , cautionRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , cautionArch = possibleA fromAttrToStr "arch" as
	  , cautionCondition = possibleA fromAttrToStr "condition" as
	  , cautionConformance = possibleA fromAttrToStr "conformance" as
	  , cautionOs = possibleA fromAttrToStr "os" as
	  , cautionRevision = possibleA fromAttrToStr "revision" as
	  , cautionSecurity = possibleA fromAttrToStr "security" as
	  , cautionUserlevel = possibleA fromAttrToStr "userlevel" as
	  , cautionVendor = possibleA fromAttrToStr "vendor" as
	  , cautionRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (cautionId v)
	, maybeToAttr toAttrFrStr "lang" (cautionLang v)
	, maybeToAttr toAttrFrStr "remap" (cautionRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (cautionXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (cautionRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (cautionArch v)
	, maybeToAttr toAttrFrStr "condition" (cautionCondition v)
	, maybeToAttr toAttrFrStr "conformance" (cautionConformance v)
	, maybeToAttr toAttrFrStr "os" (cautionOs v)
	, maybeToAttr toAttrFrStr "revision" (cautionRevision v)
	, maybeToAttr toAttrFrStr "security" (cautionSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (cautionUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (cautionVendor v)
	, maybeToAttr toAttrFrStr "role" (cautionRole v)
	]
instance XmlAttrType Caution_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Caution_Revisionflag_Changed
	    translate "added" = Just Caution_Revisionflag_Added
	    translate "deleted" = Just Caution_Revisionflag_Deleted
	    translate "off" = Just Caution_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Caution_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Caution_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Caution_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Caution_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Important where
    fromElem (CElem (Elem "important" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Important (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Important as a b) =
	[CElem (Elem "important" (toAttrs as) (maybe [] toElem a ++
					       concatMap toElem b))]
instance XmlAttributes Important_Attrs where
    fromAttrs as =
	Important_Attrs
	  { importantId = possibleA fromAttrToStr "id" as
	  , importantLang = possibleA fromAttrToStr "lang" as
	  , importantRemap = possibleA fromAttrToStr "remap" as
	  , importantXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , importantRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , importantArch = possibleA fromAttrToStr "arch" as
	  , importantCondition = possibleA fromAttrToStr "condition" as
	  , importantConformance = possibleA fromAttrToStr "conformance" as
	  , importantOs = possibleA fromAttrToStr "os" as
	  , importantRevision = possibleA fromAttrToStr "revision" as
	  , importantSecurity = possibleA fromAttrToStr "security" as
	  , importantUserlevel = possibleA fromAttrToStr "userlevel" as
	  , importantVendor = possibleA fromAttrToStr "vendor" as
	  , importantRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (importantId v)
	, maybeToAttr toAttrFrStr "lang" (importantLang v)
	, maybeToAttr toAttrFrStr "remap" (importantRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (importantXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (importantRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (importantArch v)
	, maybeToAttr toAttrFrStr "condition" (importantCondition v)
	, maybeToAttr toAttrFrStr "conformance" (importantConformance v)
	, maybeToAttr toAttrFrStr "os" (importantOs v)
	, maybeToAttr toAttrFrStr "revision" (importantRevision v)
	, maybeToAttr toAttrFrStr "security" (importantSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (importantUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (importantVendor v)
	, maybeToAttr toAttrFrStr "role" (importantRole v)
	]
instance XmlAttrType Important_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Important_Revisionflag_Changed
	    translate "added" = Just Important_Revisionflag_Added
	    translate "deleted" = Just Important_Revisionflag_Deleted
	    translate "off" = Just Important_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Important_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Important_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Important_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Important_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Note where
    fromElem (CElem (Elem "note" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Note (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Note as a b) =
	[CElem (Elem "note" (toAttrs as) (maybe [] toElem a ++
					  concatMap toElem b))]
instance XmlAttributes Note_Attrs where
    fromAttrs as =
	Note_Attrs
	  { noteId = possibleA fromAttrToStr "id" as
	  , noteLang = possibleA fromAttrToStr "lang" as
	  , noteRemap = possibleA fromAttrToStr "remap" as
	  , noteXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , noteRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , noteArch = possibleA fromAttrToStr "arch" as
	  , noteCondition = possibleA fromAttrToStr "condition" as
	  , noteConformance = possibleA fromAttrToStr "conformance" as
	  , noteOs = possibleA fromAttrToStr "os" as
	  , noteRevision = possibleA fromAttrToStr "revision" as
	  , noteSecurity = possibleA fromAttrToStr "security" as
	  , noteUserlevel = possibleA fromAttrToStr "userlevel" as
	  , noteVendor = possibleA fromAttrToStr "vendor" as
	  , noteRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (noteId v)
	, maybeToAttr toAttrFrStr "lang" (noteLang v)
	, maybeToAttr toAttrFrStr "remap" (noteRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (noteXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (noteRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (noteArch v)
	, maybeToAttr toAttrFrStr "condition" (noteCondition v)
	, maybeToAttr toAttrFrStr "conformance" (noteConformance v)
	, maybeToAttr toAttrFrStr "os" (noteOs v)
	, maybeToAttr toAttrFrStr "revision" (noteRevision v)
	, maybeToAttr toAttrFrStr "security" (noteSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (noteUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (noteVendor v)
	, maybeToAttr toAttrFrStr "role" (noteRole v)
	]
instance XmlAttrType Note_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Note_Revisionflag_Changed
	    translate "added" = Just Note_Revisionflag_Added
	    translate "deleted" = Just Note_Revisionflag_Deleted
	    translate "off" = Just Note_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Note_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Note_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Note_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Note_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Tip where
    fromElem (CElem (Elem "tip" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Tip (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Tip as a b) =
	[CElem (Elem "tip" (toAttrs as) (maybe [] toElem a ++
					 concatMap toElem b))]
instance XmlAttributes Tip_Attrs where
    fromAttrs as =
	Tip_Attrs
	  { tipId = possibleA fromAttrToStr "id" as
	  , tipLang = possibleA fromAttrToStr "lang" as
	  , tipRemap = possibleA fromAttrToStr "remap" as
	  , tipXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , tipRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , tipArch = possibleA fromAttrToStr "arch" as
	  , tipCondition = possibleA fromAttrToStr "condition" as
	  , tipConformance = possibleA fromAttrToStr "conformance" as
	  , tipOs = possibleA fromAttrToStr "os" as
	  , tipRevision = possibleA fromAttrToStr "revision" as
	  , tipSecurity = possibleA fromAttrToStr "security" as
	  , tipUserlevel = possibleA fromAttrToStr "userlevel" as
	  , tipVendor = possibleA fromAttrToStr "vendor" as
	  , tipRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (tipId v)
	, maybeToAttr toAttrFrStr "lang" (tipLang v)
	, maybeToAttr toAttrFrStr "remap" (tipRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (tipXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (tipRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (tipArch v)
	, maybeToAttr toAttrFrStr "condition" (tipCondition v)
	, maybeToAttr toAttrFrStr "conformance" (tipConformance v)
	, maybeToAttr toAttrFrStr "os" (tipOs v)
	, maybeToAttr toAttrFrStr "revision" (tipRevision v)
	, maybeToAttr toAttrFrStr "security" (tipSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (tipUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (tipVendor v)
	, maybeToAttr toAttrFrStr "role" (tipRole v)
	]
instance XmlAttrType Tip_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Tip_Revisionflag_Changed
	    translate "added" = Just Tip_Revisionflag_Added
	    translate "deleted" = Just Tip_Revisionflag_Deleted
	    translate "off" = Just Tip_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Tip_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Tip_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Tip_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Tip_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Warning where
    fromElem (CElem (Elem "warning" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Warning (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Warning as a b) =
	[CElem (Elem "warning" (toAttrs as) (maybe [] toElem a ++
					     concatMap toElem b))]
instance XmlAttributes Warning_Attrs where
    fromAttrs as =
	Warning_Attrs
	  { warningId = possibleA fromAttrToStr "id" as
	  , warningLang = possibleA fromAttrToStr "lang" as
	  , warningRemap = possibleA fromAttrToStr "remap" as
	  , warningXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , warningRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , warningArch = possibleA fromAttrToStr "arch" as
	  , warningCondition = possibleA fromAttrToStr "condition" as
	  , warningConformance = possibleA fromAttrToStr "conformance" as
	  , warningOs = possibleA fromAttrToStr "os" as
	  , warningRevision = possibleA fromAttrToStr "revision" as
	  , warningSecurity = possibleA fromAttrToStr "security" as
	  , warningUserlevel = possibleA fromAttrToStr "userlevel" as
	  , warningVendor = possibleA fromAttrToStr "vendor" as
	  , warningRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (warningId v)
	, maybeToAttr toAttrFrStr "lang" (warningLang v)
	, maybeToAttr toAttrFrStr "remap" (warningRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (warningXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (warningRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (warningArch v)
	, maybeToAttr toAttrFrStr "condition" (warningCondition v)
	, maybeToAttr toAttrFrStr "conformance" (warningConformance v)
	, maybeToAttr toAttrFrStr "os" (warningOs v)
	, maybeToAttr toAttrFrStr "revision" (warningRevision v)
	, maybeToAttr toAttrFrStr "security" (warningSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (warningUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (warningVendor v)
	, maybeToAttr toAttrFrStr "role" (warningRole v)
	]
instance XmlAttrType Warning_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Warning_Revisionflag_Changed
	    translate "added" = Just Warning_Revisionflag_Added
	    translate "deleted" = Just Warning_Revisionflag_Deleted
	    translate "off" = Just Warning_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Warning_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Warning_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Warning_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Warning_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Glosslist where
    fromElem (CElem (Elem "glosslist" as c0):rest) =
	(\(a,ca)->
	   (Just (Glosslist (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Glosslist as a) =
	[CElem (Elem "glosslist" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Glosslist_Attrs where
    fromAttrs as =
	Glosslist_Attrs
	  { glosslistId = possibleA fromAttrToStr "id" as
	  , glosslistLang = possibleA fromAttrToStr "lang" as
	  , glosslistRemap = possibleA fromAttrToStr "remap" as
	  , glosslistXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , glosslistRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , glosslistArch = possibleA fromAttrToStr "arch" as
	  , glosslistCondition = possibleA fromAttrToStr "condition" as
	  , glosslistConformance = possibleA fromAttrToStr "conformance" as
	  , glosslistOs = possibleA fromAttrToStr "os" as
	  , glosslistRevision = possibleA fromAttrToStr "revision" as
	  , glosslistSecurity = possibleA fromAttrToStr "security" as
	  , glosslistUserlevel = possibleA fromAttrToStr "userlevel" as
	  , glosslistVendor = possibleA fromAttrToStr "vendor" as
	  , glosslistRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (glosslistId v)
	, maybeToAttr toAttrFrStr "lang" (glosslistLang v)
	, maybeToAttr toAttrFrStr "remap" (glosslistRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (glosslistXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (glosslistRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (glosslistArch v)
	, maybeToAttr toAttrFrStr "condition" (glosslistCondition v)
	, maybeToAttr toAttrFrStr "conformance" (glosslistConformance v)
	, maybeToAttr toAttrFrStr "os" (glosslistOs v)
	, maybeToAttr toAttrFrStr "revision" (glosslistRevision v)
	, maybeToAttr toAttrFrStr "security" (glosslistSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (glosslistUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (glosslistVendor v)
	, maybeToAttr toAttrFrStr "role" (glosslistRole v)
	]
instance XmlAttrType Glosslist_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Glosslist_Revisionflag_Changed
	    translate "added" = Just Glosslist_Revisionflag_Added
	    translate "deleted" = Just Glosslist_Revisionflag_Deleted
	    translate "off" = Just Glosslist_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Glosslist_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Glosslist_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Glosslist_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Glosslist_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Glossentry where
    fromElem (CElem (Elem "glossentry" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (\(f,cf)->
			  (Just (Glossentry (fromAttrs as) a b c d e f), rest))
		       (definite fromElem "OneOf" "glossentry" ce))
		    (fromElem cd))
		 (many fromElem cc))
	      (fromElem cb))
	   (fromElem ca))
	(definite fromElem "<glossterm>" "glossentry" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Glossentry as a b c d e f) =
	[CElem (Elem "glossentry" (toAttrs as) (toElem a ++
						maybe [] toElem b ++ maybe [] toElem c ++
						concatMap toElem d ++ maybe [] toElem e ++
						toElem f))]
instance XmlAttributes Glossentry_Attrs where
    fromAttrs as =
	Glossentry_Attrs
	  { glossentrySortas = possibleA fromAttrToStr "sortas" as
	  , glossentryId = possibleA fromAttrToStr "id" as
	  , glossentryLang = possibleA fromAttrToStr "lang" as
	  , glossentryRemap = possibleA fromAttrToStr "remap" as
	  , glossentryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , glossentryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , glossentryArch = possibleA fromAttrToStr "arch" as
	  , glossentryCondition = possibleA fromAttrToStr "condition" as
	  , glossentryConformance = possibleA fromAttrToStr "conformance" as
	  , glossentryOs = possibleA fromAttrToStr "os" as
	  , glossentryRevision = possibleA fromAttrToStr "revision" as
	  , glossentrySecurity = possibleA fromAttrToStr "security" as
	  , glossentryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , glossentryVendor = possibleA fromAttrToStr "vendor" as
	  , glossentryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "sortas" (glossentrySortas v)
	, maybeToAttr toAttrFrStr "id" (glossentryId v)
	, maybeToAttr toAttrFrStr "lang" (glossentryLang v)
	, maybeToAttr toAttrFrStr "remap" (glossentryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (glossentryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (glossentryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (glossentryArch v)
	, maybeToAttr toAttrFrStr "condition" (glossentryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (glossentryConformance v)
	, maybeToAttr toAttrFrStr "os" (glossentryOs v)
	, maybeToAttr toAttrFrStr "revision" (glossentryRevision v)
	, maybeToAttr toAttrFrStr "security" (glossentrySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (glossentryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (glossentryVendor v)
	, maybeToAttr toAttrFrStr "role" (glossentryRole v)
	]
instance XmlAttrType Glossentry_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Glossentry_Revisionflag_Changed
	    translate "added" = Just Glossentry_Revisionflag_Added
	    translate "deleted" = Just Glossentry_Revisionflag_Deleted
	    translate "off" = Just Glossentry_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Glossentry_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Glossentry_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Glossentry_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Glossentry_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Glossdef where
    fromElem (CElem (Elem "glossdef" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Glossdef (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Glossdef as a b) =
	[CElem (Elem "glossdef" (toAttrs as) (concatMap toElem a ++
					      concatMap toElem b))]
instance XmlAttributes Glossdef_Attrs where
    fromAttrs as =
	Glossdef_Attrs
	  { glossdefSubject = possibleA fromAttrToStr "subject" as
	  , glossdefId = possibleA fromAttrToStr "id" as
	  , glossdefLang = possibleA fromAttrToStr "lang" as
	  , glossdefRemap = possibleA fromAttrToStr "remap" as
	  , glossdefXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , glossdefRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , glossdefArch = possibleA fromAttrToStr "arch" as
	  , glossdefCondition = possibleA fromAttrToStr "condition" as
	  , glossdefConformance = possibleA fromAttrToStr "conformance" as
	  , glossdefOs = possibleA fromAttrToStr "os" as
	  , glossdefRevision = possibleA fromAttrToStr "revision" as
	  , glossdefSecurity = possibleA fromAttrToStr "security" as
	  , glossdefUserlevel = possibleA fromAttrToStr "userlevel" as
	  , glossdefVendor = possibleA fromAttrToStr "vendor" as
	  , glossdefRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "subject" (glossdefSubject v)
	, maybeToAttr toAttrFrStr "id" (glossdefId v)
	, maybeToAttr toAttrFrStr "lang" (glossdefLang v)
	, maybeToAttr toAttrFrStr "remap" (glossdefRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (glossdefXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (glossdefRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (glossdefArch v)
	, maybeToAttr toAttrFrStr "condition" (glossdefCondition v)
	, maybeToAttr toAttrFrStr "conformance" (glossdefConformance v)
	, maybeToAttr toAttrFrStr "os" (glossdefOs v)
	, maybeToAttr toAttrFrStr "revision" (glossdefRevision v)
	, maybeToAttr toAttrFrStr "security" (glossdefSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (glossdefUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (glossdefVendor v)
	, maybeToAttr toAttrFrStr "role" (glossdefRole v)
	]
instance XmlAttrType Glossdef_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Glossdef_Revisionflag_Changed
	    translate "added" = Just Glossdef_Revisionflag_Added
	    translate "deleted" = Just Glossdef_Revisionflag_Deleted
	    translate "off" = Just Glossdef_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Glossdef_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Glossdef_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Glossdef_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Glossdef_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Glosssee where
    fromElem (CElem (Elem "glosssee" as c0):rest) =
	(\(a,ca)->
	   (Just (Glosssee (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Glosssee as a) =
	[CElem (Elem "glosssee" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Glosssee_Attrs where
    fromAttrs as =
	Glosssee_Attrs
	  { glossseeOtherterm = possibleA fromAttrToStr "otherterm" as
	  , glossseeId = possibleA fromAttrToStr "id" as
	  , glossseeLang = possibleA fromAttrToStr "lang" as
	  , glossseeRemap = possibleA fromAttrToStr "remap" as
	  , glossseeXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , glossseeRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , glossseeArch = possibleA fromAttrToStr "arch" as
	  , glossseeCondition = possibleA fromAttrToStr "condition" as
	  , glossseeConformance = possibleA fromAttrToStr "conformance" as
	  , glossseeOs = possibleA fromAttrToStr "os" as
	  , glossseeRevision = possibleA fromAttrToStr "revision" as
	  , glossseeSecurity = possibleA fromAttrToStr "security" as
	  , glossseeUserlevel = possibleA fromAttrToStr "userlevel" as
	  , glossseeVendor = possibleA fromAttrToStr "vendor" as
	  , glossseeRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "otherterm" (glossseeOtherterm v)
	, maybeToAttr toAttrFrStr "id" (glossseeId v)
	, maybeToAttr toAttrFrStr "lang" (glossseeLang v)
	, maybeToAttr toAttrFrStr "remap" (glossseeRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (glossseeXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (glossseeRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (glossseeArch v)
	, maybeToAttr toAttrFrStr "condition" (glossseeCondition v)
	, maybeToAttr toAttrFrStr "conformance" (glossseeConformance v)
	, maybeToAttr toAttrFrStr "os" (glossseeOs v)
	, maybeToAttr toAttrFrStr "revision" (glossseeRevision v)
	, maybeToAttr toAttrFrStr "security" (glossseeSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (glossseeUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (glossseeVendor v)
	, maybeToAttr toAttrFrStr "role" (glossseeRole v)
	]
instance XmlContent Glosssee_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Glosssee_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Glosssee_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Glosssee_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Glosssee_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Glosssee_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Glosssee_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Glosssee_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Glosssee_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Glosssee_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Glosssee_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Glosssee_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Glosssee_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Glosssee_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Glosssee_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Glosssee_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Glosssee_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Glosssee_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Glosssee_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Glosssee_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Glosssee_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Glosssee_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Glosssee_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Glosssee_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Glosssee_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Glosssee_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Glosssee_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Glosssee_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Glosssee_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Glosssee_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Glosssee_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Glosssee_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Glosssee_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Glosssee_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Glosssee_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Glosssee_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Glosssee_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Glosssee_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Glosssee_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Glosssee_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Glosssee_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Glosssee_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Glosssee_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Glosssee_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Glosssee_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Glosssee_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Glosssee_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Glosssee_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Glosssee_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Glosssee_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Glosssee_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Glosssee_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Glosssee_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Glosssee_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Glosssee_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Glosssee_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Glosssee_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Glosssee_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Glosssee_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Glosssee_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Glosssee_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Glosssee_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Glosssee_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Glosssee_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Glosssee_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Glosssee_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Glosssee_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Glosssee_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Glosssee_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Glosssee_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Glosssee_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Glosssee_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Glosssee_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Glosssee_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Glosssee_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Glosssee_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Glosssee_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Glosssee_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Glosssee_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Glosssee_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Glosssee_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Glosssee_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Glosssee_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Glosssee_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Glosssee_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Glosssee_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Glosssee_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Glosssee_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Glosssee_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Glosssee_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Glosssee_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Glosssee_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Glosssee_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Glosssee_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Glosssee_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Glosssee_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Glosssee_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Glosssee_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Glosssee_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Glosssee_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Glosssee_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Glosssee_Str a) = toText a
    toElem (Glosssee_Footnoteref a) = toElem a
    toElem (Glosssee_Xref a) = toElem a
    toElem (Glosssee_Abbrev a) = toElem a
    toElem (Glosssee_Acronym a) = toElem a
    toElem (Glosssee_Citation a) = toElem a
    toElem (Glosssee_Citerefentry a) = toElem a
    toElem (Glosssee_Citetitle a) = toElem a
    toElem (Glosssee_Emphasis a) = toElem a
    toElem (Glosssee_Firstterm a) = toElem a
    toElem (Glosssee_Foreignphrase a) = toElem a
    toElem (Glosssee_Glossterm a) = toElem a
    toElem (Glosssee_Footnote a) = toElem a
    toElem (Glosssee_Phrase a) = toElem a
    toElem (Glosssee_Quote a) = toElem a
    toElem (Glosssee_Trademark a) = toElem a
    toElem (Glosssee_Wordasword a) = toElem a
    toElem (Glosssee_Personname a) = toElem a
    toElem (Glosssee_Link a) = toElem a
    toElem (Glosssee_Olink a) = toElem a
    toElem (Glosssee_Ulink a) = toElem a
    toElem (Glosssee_Action a) = toElem a
    toElem (Glosssee_Application a) = toElem a
    toElem (Glosssee_Classname a) = toElem a
    toElem (Glosssee_Methodname a) = toElem a
    toElem (Glosssee_Interfacename a) = toElem a
    toElem (Glosssee_Exceptionname a) = toElem a
    toElem (Glosssee_Ooclass a) = toElem a
    toElem (Glosssee_Oointerface a) = toElem a
    toElem (Glosssee_Ooexception a) = toElem a
    toElem (Glosssee_Command a) = toElem a
    toElem (Glosssee_Computeroutput a) = toElem a
    toElem (Glosssee_Database a) = toElem a
    toElem (Glosssee_Email a) = toElem a
    toElem (Glosssee_Envar a) = toElem a
    toElem (Glosssee_Errorcode a) = toElem a
    toElem (Glosssee_Errorname a) = toElem a
    toElem (Glosssee_Errortype a) = toElem a
    toElem (Glosssee_Errortext a) = toElem a
    toElem (Glosssee_Filename a) = toElem a
    toElem (Glosssee_Function a) = toElem a
    toElem (Glosssee_Guibutton a) = toElem a
    toElem (Glosssee_Guiicon a) = toElem a
    toElem (Glosssee_Guilabel a) = toElem a
    toElem (Glosssee_Guimenu a) = toElem a
    toElem (Glosssee_Guimenuitem a) = toElem a
    toElem (Glosssee_Guisubmenu a) = toElem a
    toElem (Glosssee_Hardware a) = toElem a
    toElem (Glosssee_Interface a) = toElem a
    toElem (Glosssee_Keycap a) = toElem a
    toElem (Glosssee_Keycode a) = toElem a
    toElem (Glosssee_Keycombo a) = toElem a
    toElem (Glosssee_Keysym a) = toElem a
    toElem (Glosssee_Literal a) = toElem a
    toElem (Glosssee_Constant a) = toElem a
    toElem (Glosssee_Markup a) = toElem a
    toElem (Glosssee_Medialabel a) = toElem a
    toElem (Glosssee_Menuchoice a) = toElem a
    toElem (Glosssee_Mousebutton a) = toElem a
    toElem (Glosssee_Option a) = toElem a
    toElem (Glosssee_Optional a) = toElem a
    toElem (Glosssee_Parameter a) = toElem a
    toElem (Glosssee_Prompt a) = toElem a
    toElem (Glosssee_Property a) = toElem a
    toElem (Glosssee_Replaceable a) = toElem a
    toElem (Glosssee_Returnvalue a) = toElem a
    toElem (Glosssee_Sgmltag a) = toElem a
    toElem (Glosssee_Structfield a) = toElem a
    toElem (Glosssee_Structname a) = toElem a
    toElem (Glosssee_Symbol a) = toElem a
    toElem (Glosssee_Systemitem a) = toElem a
    toElem (Glosssee_Token a) = toElem a
    toElem (Glosssee_Type a) = toElem a
    toElem (Glosssee_Userinput a) = toElem a
    toElem (Glosssee_Varname a) = toElem a
    toElem (Glosssee_Anchor a) = toElem a
    toElem (Glosssee_Author a) = toElem a
    toElem (Glosssee_Authorinitials a) = toElem a
    toElem (Glosssee_Corpauthor a) = toElem a
    toElem (Glosssee_Modespec a) = toElem a
    toElem (Glosssee_Othercredit a) = toElem a
    toElem (Glosssee_Productname a) = toElem a
    toElem (Glosssee_Productnumber a) = toElem a
    toElem (Glosssee_Revhistory a) = toElem a
    toElem (Glosssee_Remark a) = toElem a
    toElem (Glosssee_Subscript a) = toElem a
    toElem (Glosssee_Superscript a) = toElem a
    toElem (Glosssee_Inlinegraphic a) = toElem a
    toElem (Glosssee_Inlinemediaobject a) = toElem a
    toElem (Glosssee_Inlineequation a) = toElem a
    toElem (Glosssee_Synopsis a) = toElem a
    toElem (Glosssee_Cmdsynopsis a) = toElem a
    toElem (Glosssee_Funcsynopsis a) = toElem a
    toElem (Glosssee_Classsynopsis a) = toElem a
    toElem (Glosssee_Fieldsynopsis a) = toElem a
    toElem (Glosssee_Constructorsynopsis a) = toElem a
    toElem (Glosssee_Destructorsynopsis a) = toElem a
    toElem (Glosssee_Methodsynopsis a) = toElem a
    toElem (Glosssee_Indexterm a) = toElem a
    toElem (Glosssee_Beginpage a) = toElem a
instance XmlAttrType Glosssee_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Glosssee_Revisionflag_Changed
	    translate "added" = Just Glosssee_Revisionflag_Added
	    translate "deleted" = Just Glosssee_Revisionflag_Deleted
	    translate "off" = Just Glosssee_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Glosssee_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Glosssee_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Glosssee_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Glosssee_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Glossseealso where
    fromElem (CElem (Elem "glossseealso" as c0):rest) =
	(\(a,ca)->
	   (Just (Glossseealso (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Glossseealso as a) =
	[CElem (Elem "glossseealso" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Glossseealso_Attrs where
    fromAttrs as =
	Glossseealso_Attrs
	  { glossseealsoOtherterm = possibleA fromAttrToStr "otherterm" as
	  , glossseealsoId = possibleA fromAttrToStr "id" as
	  , glossseealsoLang = possibleA fromAttrToStr "lang" as
	  , glossseealsoRemap = possibleA fromAttrToStr "remap" as
	  , glossseealsoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , glossseealsoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , glossseealsoArch = possibleA fromAttrToStr "arch" as
	  , glossseealsoCondition = possibleA fromAttrToStr "condition" as
	  , glossseealsoConformance = possibleA fromAttrToStr "conformance" as
	  , glossseealsoOs = possibleA fromAttrToStr "os" as
	  , glossseealsoRevision = possibleA fromAttrToStr "revision" as
	  , glossseealsoSecurity = possibleA fromAttrToStr "security" as
	  , glossseealsoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , glossseealsoVendor = possibleA fromAttrToStr "vendor" as
	  , glossseealsoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "otherterm" (glossseealsoOtherterm v)
	, maybeToAttr toAttrFrStr "id" (glossseealsoId v)
	, maybeToAttr toAttrFrStr "lang" (glossseealsoLang v)
	, maybeToAttr toAttrFrStr "remap" (glossseealsoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (glossseealsoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (glossseealsoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (glossseealsoArch v)
	, maybeToAttr toAttrFrStr "condition" (glossseealsoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (glossseealsoConformance v)
	, maybeToAttr toAttrFrStr "os" (glossseealsoOs v)
	, maybeToAttr toAttrFrStr "revision" (glossseealsoRevision v)
	, maybeToAttr toAttrFrStr "security" (glossseealsoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (glossseealsoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (glossseealsoVendor v)
	, maybeToAttr toAttrFrStr "role" (glossseealsoRole v)
	]
instance XmlContent Glossseealso_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Glossseealso_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Glossseealso_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Glossseealso_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Glossseealso_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Glossseealso_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Glossseealso_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Glossseealso_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Glossseealso_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Glossseealso_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Glossseealso_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Glossseealso_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Glossseealso_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Glossseealso_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Glossseealso_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Glossseealso_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Glossseealso_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Glossseealso_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Glossseealso_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Glossseealso_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Glossseealso_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Glossseealso_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Glossseealso_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Glossseealso_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Glossseealso_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Glossseealso_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Glossseealso_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Glossseealso_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Glossseealso_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Glossseealso_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Glossseealso_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Glossseealso_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Glossseealso_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Glossseealso_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Glossseealso_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Glossseealso_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Glossseealso_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Glossseealso_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Glossseealso_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Glossseealso_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Glossseealso_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Glossseealso_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Glossseealso_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Glossseealso_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Glossseealso_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Glossseealso_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Glossseealso_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Glossseealso_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Glossseealso_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Glossseealso_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Glossseealso_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Glossseealso_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Glossseealso_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Glossseealso_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Glossseealso_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Glossseealso_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Glossseealso_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Glossseealso_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Glossseealso_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Glossseealso_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Glossseealso_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Glossseealso_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Glossseealso_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Glossseealso_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Glossseealso_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Glossseealso_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Glossseealso_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Glossseealso_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Glossseealso_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Glossseealso_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Glossseealso_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Glossseealso_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Glossseealso_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Glossseealso_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Glossseealso_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Glossseealso_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Glossseealso_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Glossseealso_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Glossseealso_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Glossseealso_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Glossseealso_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Glossseealso_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Glossseealso_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Glossseealso_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Glossseealso_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Glossseealso_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Glossseealso_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Glossseealso_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Glossseealso_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Glossseealso_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Glossseealso_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Glossseealso_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Glossseealso_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Glossseealso_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Glossseealso_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Glossseealso_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Glossseealso_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Glossseealso_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Glossseealso_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Glossseealso_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Glossseealso_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Glossseealso_Str a) = toText a
    toElem (Glossseealso_Footnoteref a) = toElem a
    toElem (Glossseealso_Xref a) = toElem a
    toElem (Glossseealso_Abbrev a) = toElem a
    toElem (Glossseealso_Acronym a) = toElem a
    toElem (Glossseealso_Citation a) = toElem a
    toElem (Glossseealso_Citerefentry a) = toElem a
    toElem (Glossseealso_Citetitle a) = toElem a
    toElem (Glossseealso_Emphasis a) = toElem a
    toElem (Glossseealso_Firstterm a) = toElem a
    toElem (Glossseealso_Foreignphrase a) = toElem a
    toElem (Glossseealso_Glossterm a) = toElem a
    toElem (Glossseealso_Footnote a) = toElem a
    toElem (Glossseealso_Phrase a) = toElem a
    toElem (Glossseealso_Quote a) = toElem a
    toElem (Glossseealso_Trademark a) = toElem a
    toElem (Glossseealso_Wordasword a) = toElem a
    toElem (Glossseealso_Personname a) = toElem a
    toElem (Glossseealso_Link a) = toElem a
    toElem (Glossseealso_Olink a) = toElem a
    toElem (Glossseealso_Ulink a) = toElem a
    toElem (Glossseealso_Action a) = toElem a
    toElem (Glossseealso_Application a) = toElem a
    toElem (Glossseealso_Classname a) = toElem a
    toElem (Glossseealso_Methodname a) = toElem a
    toElem (Glossseealso_Interfacename a) = toElem a
    toElem (Glossseealso_Exceptionname a) = toElem a
    toElem (Glossseealso_Ooclass a) = toElem a
    toElem (Glossseealso_Oointerface a) = toElem a
    toElem (Glossseealso_Ooexception a) = toElem a
    toElem (Glossseealso_Command a) = toElem a
    toElem (Glossseealso_Computeroutput a) = toElem a
    toElem (Glossseealso_Database a) = toElem a
    toElem (Glossseealso_Email a) = toElem a
    toElem (Glossseealso_Envar a) = toElem a
    toElem (Glossseealso_Errorcode a) = toElem a
    toElem (Glossseealso_Errorname a) = toElem a
    toElem (Glossseealso_Errortype a) = toElem a
    toElem (Glossseealso_Errortext a) = toElem a
    toElem (Glossseealso_Filename a) = toElem a
    toElem (Glossseealso_Function a) = toElem a
    toElem (Glossseealso_Guibutton a) = toElem a
    toElem (Glossseealso_Guiicon a) = toElem a
    toElem (Glossseealso_Guilabel a) = toElem a
    toElem (Glossseealso_Guimenu a) = toElem a
    toElem (Glossseealso_Guimenuitem a) = toElem a
    toElem (Glossseealso_Guisubmenu a) = toElem a
    toElem (Glossseealso_Hardware a) = toElem a
    toElem (Glossseealso_Interface a) = toElem a
    toElem (Glossseealso_Keycap a) = toElem a
    toElem (Glossseealso_Keycode a) = toElem a
    toElem (Glossseealso_Keycombo a) = toElem a
    toElem (Glossseealso_Keysym a) = toElem a
    toElem (Glossseealso_Literal a) = toElem a
    toElem (Glossseealso_Constant a) = toElem a
    toElem (Glossseealso_Markup a) = toElem a
    toElem (Glossseealso_Medialabel a) = toElem a
    toElem (Glossseealso_Menuchoice a) = toElem a
    toElem (Glossseealso_Mousebutton a) = toElem a
    toElem (Glossseealso_Option a) = toElem a
    toElem (Glossseealso_Optional a) = toElem a
    toElem (Glossseealso_Parameter a) = toElem a
    toElem (Glossseealso_Prompt a) = toElem a
    toElem (Glossseealso_Property a) = toElem a
    toElem (Glossseealso_Replaceable a) = toElem a
    toElem (Glossseealso_Returnvalue a) = toElem a
    toElem (Glossseealso_Sgmltag a) = toElem a
    toElem (Glossseealso_Structfield a) = toElem a
    toElem (Glossseealso_Structname a) = toElem a
    toElem (Glossseealso_Symbol a) = toElem a
    toElem (Glossseealso_Systemitem a) = toElem a
    toElem (Glossseealso_Token a) = toElem a
    toElem (Glossseealso_Type a) = toElem a
    toElem (Glossseealso_Userinput a) = toElem a
    toElem (Glossseealso_Varname a) = toElem a
    toElem (Glossseealso_Anchor a) = toElem a
    toElem (Glossseealso_Author a) = toElem a
    toElem (Glossseealso_Authorinitials a) = toElem a
    toElem (Glossseealso_Corpauthor a) = toElem a
    toElem (Glossseealso_Modespec a) = toElem a
    toElem (Glossseealso_Othercredit a) = toElem a
    toElem (Glossseealso_Productname a) = toElem a
    toElem (Glossseealso_Productnumber a) = toElem a
    toElem (Glossseealso_Revhistory a) = toElem a
    toElem (Glossseealso_Remark a) = toElem a
    toElem (Glossseealso_Subscript a) = toElem a
    toElem (Glossseealso_Superscript a) = toElem a
    toElem (Glossseealso_Inlinegraphic a) = toElem a
    toElem (Glossseealso_Inlinemediaobject a) = toElem a
    toElem (Glossseealso_Inlineequation a) = toElem a
    toElem (Glossseealso_Synopsis a) = toElem a
    toElem (Glossseealso_Cmdsynopsis a) = toElem a
    toElem (Glossseealso_Funcsynopsis a) = toElem a
    toElem (Glossseealso_Classsynopsis a) = toElem a
    toElem (Glossseealso_Fieldsynopsis a) = toElem a
    toElem (Glossseealso_Constructorsynopsis a) = toElem a
    toElem (Glossseealso_Destructorsynopsis a) = toElem a
    toElem (Glossseealso_Methodsynopsis a) = toElem a
    toElem (Glossseealso_Indexterm a) = toElem a
    toElem (Glossseealso_Beginpage a) = toElem a
instance XmlAttrType Glossseealso_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Glossseealso_Revisionflag_Changed
	    translate "added" = Just Glossseealso_Revisionflag_Added
	    translate "deleted" = Just Glossseealso_Revisionflag_Deleted
	    translate "off" = Just Glossseealso_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Glossseealso_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Glossseealso_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Glossseealso_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Glossseealso_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Itemizedlist where
    fromElem (CElem (Elem "itemizedlist" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Itemizedlist (fromAttrs as) a b c d), rest))
		 (many fromElem cc))
	      (many fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Itemizedlist as a b c d) =
	[CElem (Elem "itemizedlist" (toAttrs as) (maybe [] toElem a ++
						  maybe [] toElem b ++ concatMap toElem c ++
						  concatMap toElem d))]
instance XmlAttributes Itemizedlist_Attrs where
    fromAttrs as =
	Itemizedlist_Attrs
	  { itemizedlistSpacing = possibleA fromAttrToTyp "spacing" as
	  , itemizedlistMark = possibleA fromAttrToStr "mark" as
	  , itemizedlistId = possibleA fromAttrToStr "id" as
	  , itemizedlistLang = possibleA fromAttrToStr "lang" as
	  , itemizedlistRemap = possibleA fromAttrToStr "remap" as
	  , itemizedlistXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , itemizedlistRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , itemizedlistArch = possibleA fromAttrToStr "arch" as
	  , itemizedlistCondition = possibleA fromAttrToStr "condition" as
	  , itemizedlistConformance = possibleA fromAttrToStr "conformance" as
	  , itemizedlistOs = possibleA fromAttrToStr "os" as
	  , itemizedlistRevision = possibleA fromAttrToStr "revision" as
	  , itemizedlistSecurity = possibleA fromAttrToStr "security" as
	  , itemizedlistUserlevel = possibleA fromAttrToStr "userlevel" as
	  , itemizedlistVendor = possibleA fromAttrToStr "vendor" as
	  , itemizedlistRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "spacing" (itemizedlistSpacing v)
	, maybeToAttr toAttrFrStr "mark" (itemizedlistMark v)
	, maybeToAttr toAttrFrStr "id" (itemizedlistId v)
	, maybeToAttr toAttrFrStr "lang" (itemizedlistLang v)
	, maybeToAttr toAttrFrStr "remap" (itemizedlistRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (itemizedlistXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (itemizedlistRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (itemizedlistArch v)
	, maybeToAttr toAttrFrStr "condition" (itemizedlistCondition v)
	, maybeToAttr toAttrFrStr "conformance" (itemizedlistConformance v)
	, maybeToAttr toAttrFrStr "os" (itemizedlistOs v)
	, maybeToAttr toAttrFrStr "revision" (itemizedlistRevision v)
	, maybeToAttr toAttrFrStr "security" (itemizedlistSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (itemizedlistUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (itemizedlistVendor v)
	, maybeToAttr toAttrFrStr "role" (itemizedlistRole v)
	]
instance XmlAttrType Itemizedlist_Spacing where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "normal" = Just Itemizedlist_Spacing_Normal
	    translate "compact" = Just Itemizedlist_Spacing_Compact
	    translate _ = Nothing
    toAttrFrTyp n Itemizedlist_Spacing_Normal = Just (n, str2attr "normal")
    toAttrFrTyp n Itemizedlist_Spacing_Compact = Just (n, str2attr "compact")
instance XmlAttrType Itemizedlist_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Itemizedlist_Revisionflag_Changed
	    translate "added" = Just Itemizedlist_Revisionflag_Added
	    translate "deleted" = Just Itemizedlist_Revisionflag_Deleted
	    translate "off" = Just Itemizedlist_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Itemizedlist_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Itemizedlist_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Itemizedlist_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Itemizedlist_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Orderedlist where
    fromElem (CElem (Elem "orderedlist" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Orderedlist (fromAttrs as) a b c d), rest))
		 (many fromElem cc))
	      (many fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Orderedlist as a b c d) =
	[CElem (Elem "orderedlist" (toAttrs as) (maybe [] toElem a ++
						 maybe [] toElem b ++ concatMap toElem c ++
						 concatMap toElem d))]
instance XmlAttributes Orderedlist_Attrs where
    fromAttrs as =
	Orderedlist_Attrs
	  { orderedlistNumeration = possibleA fromAttrToTyp "numeration" as
	  , orderedlistInheritnum = defaultA fromAttrToTyp Orderedlist_Inheritnum_Ignore "inheritnum" as
	  , orderedlistContinuation = defaultA fromAttrToTyp Orderedlist_Continuation_Restarts "continuation" as
	  , orderedlistSpacing = possibleA fromAttrToTyp "spacing" as
	  , orderedlistId = possibleA fromAttrToStr "id" as
	  , orderedlistLang = possibleA fromAttrToStr "lang" as
	  , orderedlistRemap = possibleA fromAttrToStr "remap" as
	  , orderedlistXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , orderedlistRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , orderedlistArch = possibleA fromAttrToStr "arch" as
	  , orderedlistCondition = possibleA fromAttrToStr "condition" as
	  , orderedlistConformance = possibleA fromAttrToStr "conformance" as
	  , orderedlistOs = possibleA fromAttrToStr "os" as
	  , orderedlistRevision = possibleA fromAttrToStr "revision" as
	  , orderedlistSecurity = possibleA fromAttrToStr "security" as
	  , orderedlistUserlevel = possibleA fromAttrToStr "userlevel" as
	  , orderedlistVendor = possibleA fromAttrToStr "vendor" as
	  , orderedlistRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "numeration" (orderedlistNumeration v)
	, defaultToAttr toAttrFrTyp "inheritnum" (orderedlistInheritnum v)
	, defaultToAttr toAttrFrTyp "continuation" (orderedlistContinuation v)
	, maybeToAttr toAttrFrTyp "spacing" (orderedlistSpacing v)
	, maybeToAttr toAttrFrStr "id" (orderedlistId v)
	, maybeToAttr toAttrFrStr "lang" (orderedlistLang v)
	, maybeToAttr toAttrFrStr "remap" (orderedlistRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (orderedlistXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (orderedlistRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (orderedlistArch v)
	, maybeToAttr toAttrFrStr "condition" (orderedlistCondition v)
	, maybeToAttr toAttrFrStr "conformance" (orderedlistConformance v)
	, maybeToAttr toAttrFrStr "os" (orderedlistOs v)
	, maybeToAttr toAttrFrStr "revision" (orderedlistRevision v)
	, maybeToAttr toAttrFrStr "security" (orderedlistSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (orderedlistUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (orderedlistVendor v)
	, maybeToAttr toAttrFrStr "role" (orderedlistRole v)
	]
instance XmlAttrType Orderedlist_Numeration where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "arabic" = Just Orderedlist_Numeration_Arabic
	    translate "upperalpha" = Just Orderedlist_Numeration_Upperalpha
	    translate "loweralpha" = Just Orderedlist_Numeration_Loweralpha
	    translate "upperroman" = Just Orderedlist_Numeration_Upperroman
	    translate "lowerroman" = Just Orderedlist_Numeration_Lowerroman
	    translate _ = Nothing
    toAttrFrTyp n Orderedlist_Numeration_Arabic = Just (n, str2attr "arabic")
    toAttrFrTyp n Orderedlist_Numeration_Upperalpha = Just (n, str2attr "upperalpha")
    toAttrFrTyp n Orderedlist_Numeration_Loweralpha = Just (n, str2attr "loweralpha")
    toAttrFrTyp n Orderedlist_Numeration_Upperroman = Just (n, str2attr "upperroman")
    toAttrFrTyp n Orderedlist_Numeration_Lowerroman = Just (n, str2attr "lowerroman")
instance XmlAttrType Orderedlist_Inheritnum where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "inherit" = Just Orderedlist_Inheritnum_Inherit
	    translate "ignore" = Just Orderedlist_Inheritnum_Ignore
	    translate _ = Nothing
    toAttrFrTyp n Orderedlist_Inheritnum_Inherit = Just (n, str2attr "inherit")
    toAttrFrTyp n Orderedlist_Inheritnum_Ignore = Just (n, str2attr "ignore")
instance XmlAttrType Orderedlist_Continuation where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "continues" = Just Orderedlist_Continuation_Continues
	    translate "restarts" = Just Orderedlist_Continuation_Restarts
	    translate _ = Nothing
    toAttrFrTyp n Orderedlist_Continuation_Continues = Just (n, str2attr "continues")
    toAttrFrTyp n Orderedlist_Continuation_Restarts = Just (n, str2attr "restarts")
instance XmlAttrType Orderedlist_Spacing where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "normal" = Just Orderedlist_Spacing_Normal
	    translate "compact" = Just Orderedlist_Spacing_Compact
	    translate _ = Nothing
    toAttrFrTyp n Orderedlist_Spacing_Normal = Just (n, str2attr "normal")
    toAttrFrTyp n Orderedlist_Spacing_Compact = Just (n, str2attr "compact")
instance XmlAttrType Orderedlist_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Orderedlist_Revisionflag_Changed
	    translate "added" = Just Orderedlist_Revisionflag_Added
	    translate "deleted" = Just Orderedlist_Revisionflag_Deleted
	    translate "off" = Just Orderedlist_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Orderedlist_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Orderedlist_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Orderedlist_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Orderedlist_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Listitem where
    fromElem (CElem (Elem "listitem" as c0):rest) =
	(\(a,ca)->
	   (Just (Listitem (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Listitem as a) =
	[CElem (Elem "listitem" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Listitem_Attrs where
    fromAttrs as =
	Listitem_Attrs
	  { listitemOverride = possibleA fromAttrToStr "override" as
	  , listitemId = possibleA fromAttrToStr "id" as
	  , listitemLang = possibleA fromAttrToStr "lang" as
	  , listitemRemap = possibleA fromAttrToStr "remap" as
	  , listitemXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , listitemRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , listitemArch = possibleA fromAttrToStr "arch" as
	  , listitemCondition = possibleA fromAttrToStr "condition" as
	  , listitemConformance = possibleA fromAttrToStr "conformance" as
	  , listitemOs = possibleA fromAttrToStr "os" as
	  , listitemRevision = possibleA fromAttrToStr "revision" as
	  , listitemSecurity = possibleA fromAttrToStr "security" as
	  , listitemUserlevel = possibleA fromAttrToStr "userlevel" as
	  , listitemVendor = possibleA fromAttrToStr "vendor" as
	  , listitemRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "override" (listitemOverride v)
	, maybeToAttr toAttrFrStr "id" (listitemId v)
	, maybeToAttr toAttrFrStr "lang" (listitemLang v)
	, maybeToAttr toAttrFrStr "remap" (listitemRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (listitemXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (listitemRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (listitemArch v)
	, maybeToAttr toAttrFrStr "condition" (listitemCondition v)
	, maybeToAttr toAttrFrStr "conformance" (listitemConformance v)
	, maybeToAttr toAttrFrStr "os" (listitemOs v)
	, maybeToAttr toAttrFrStr "revision" (listitemRevision v)
	, maybeToAttr toAttrFrStr "security" (listitemSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (listitemUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (listitemVendor v)
	, maybeToAttr toAttrFrStr "role" (listitemRole v)
	]
instance XmlAttrType Listitem_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Listitem_Revisionflag_Changed
	    translate "added" = Just Listitem_Revisionflag_Added
	    translate "deleted" = Just Listitem_Revisionflag_Deleted
	    translate "off" = Just Listitem_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Listitem_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Listitem_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Listitem_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Listitem_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Segmentedlist where
    fromElem (CElem (Elem "segmentedlist" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Segmentedlist (fromAttrs as) a b c), rest))
	      (many fromElem cb))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Segmentedlist as a b c) =
	[CElem (Elem "segmentedlist" (toAttrs as) (maybe [] toElem a ++
						   concatMap toElem b ++ concatMap toElem c))]
instance XmlAttributes Segmentedlist_Attrs where
    fromAttrs as =
	Segmentedlist_Attrs
	  { segmentedlistId = possibleA fromAttrToStr "id" as
	  , segmentedlistLang = possibleA fromAttrToStr "lang" as
	  , segmentedlistRemap = possibleA fromAttrToStr "remap" as
	  , segmentedlistXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , segmentedlistRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , segmentedlistArch = possibleA fromAttrToStr "arch" as
	  , segmentedlistCondition = possibleA fromAttrToStr "condition" as
	  , segmentedlistConformance = possibleA fromAttrToStr "conformance" as
	  , segmentedlistOs = possibleA fromAttrToStr "os" as
	  , segmentedlistRevision = possibleA fromAttrToStr "revision" as
	  , segmentedlistSecurity = possibleA fromAttrToStr "security" as
	  , segmentedlistUserlevel = possibleA fromAttrToStr "userlevel" as
	  , segmentedlistVendor = possibleA fromAttrToStr "vendor" as
	  , segmentedlistRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (segmentedlistId v)
	, maybeToAttr toAttrFrStr "lang" (segmentedlistLang v)
	, maybeToAttr toAttrFrStr "remap" (segmentedlistRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (segmentedlistXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (segmentedlistRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (segmentedlistArch v)
	, maybeToAttr toAttrFrStr "condition" (segmentedlistCondition v)
	, maybeToAttr toAttrFrStr "conformance" (segmentedlistConformance v)
	, maybeToAttr toAttrFrStr "os" (segmentedlistOs v)
	, maybeToAttr toAttrFrStr "revision" (segmentedlistRevision v)
	, maybeToAttr toAttrFrStr "security" (segmentedlistSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (segmentedlistUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (segmentedlistVendor v)
	, maybeToAttr toAttrFrStr "role" (segmentedlistRole v)
	]
instance XmlAttrType Segmentedlist_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Segmentedlist_Revisionflag_Changed
	    translate "added" = Just Segmentedlist_Revisionflag_Added
	    translate "deleted" = Just Segmentedlist_Revisionflag_Deleted
	    translate "off" = Just Segmentedlist_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Segmentedlist_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Segmentedlist_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Segmentedlist_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Segmentedlist_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Segtitle where
    fromElem (CElem (Elem "segtitle" as c0):rest) =
	(\(a,ca)->
	   (Just (Segtitle (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Segtitle as a) =
	[CElem (Elem "segtitle" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Segtitle_Attrs where
    fromAttrs as =
	Segtitle_Attrs
	  { segtitleId = possibleA fromAttrToStr "id" as
	  , segtitleLang = possibleA fromAttrToStr "lang" as
	  , segtitleRemap = possibleA fromAttrToStr "remap" as
	  , segtitleXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , segtitleRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , segtitleArch = possibleA fromAttrToStr "arch" as
	  , segtitleCondition = possibleA fromAttrToStr "condition" as
	  , segtitleConformance = possibleA fromAttrToStr "conformance" as
	  , segtitleOs = possibleA fromAttrToStr "os" as
	  , segtitleRevision = possibleA fromAttrToStr "revision" as
	  , segtitleSecurity = possibleA fromAttrToStr "security" as
	  , segtitleUserlevel = possibleA fromAttrToStr "userlevel" as
	  , segtitleVendor = possibleA fromAttrToStr "vendor" as
	  , segtitleRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (segtitleId v)
	, maybeToAttr toAttrFrStr "lang" (segtitleLang v)
	, maybeToAttr toAttrFrStr "remap" (segtitleRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (segtitleXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (segtitleRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (segtitleArch v)
	, maybeToAttr toAttrFrStr "condition" (segtitleCondition v)
	, maybeToAttr toAttrFrStr "conformance" (segtitleConformance v)
	, maybeToAttr toAttrFrStr "os" (segtitleOs v)
	, maybeToAttr toAttrFrStr "revision" (segtitleRevision v)
	, maybeToAttr toAttrFrStr "security" (segtitleSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (segtitleUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (segtitleVendor v)
	, maybeToAttr toAttrFrStr "role" (segtitleRole v)
	]
instance XmlContent Segtitle_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Segtitle_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Segtitle_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Segtitle_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Segtitle_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Segtitle_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Segtitle_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Segtitle_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Segtitle_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Segtitle_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Segtitle_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Segtitle_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Segtitle_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Segtitle_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Segtitle_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Segtitle_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Segtitle_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Segtitle_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Segtitle_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Segtitle_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Segtitle_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Segtitle_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Segtitle_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Segtitle_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Segtitle_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Segtitle_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Segtitle_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Segtitle_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Segtitle_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Segtitle_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Segtitle_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Segtitle_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Segtitle_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Segtitle_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Segtitle_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Segtitle_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Segtitle_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Segtitle_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Segtitle_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Segtitle_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Segtitle_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Segtitle_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Segtitle_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Segtitle_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Segtitle_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Segtitle_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Segtitle_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Segtitle_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Segtitle_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Segtitle_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Segtitle_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Segtitle_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Segtitle_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Segtitle_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Segtitle_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Segtitle_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Segtitle_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Segtitle_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Segtitle_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Segtitle_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Segtitle_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Segtitle_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Segtitle_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Segtitle_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Segtitle_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Segtitle_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Segtitle_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Segtitle_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Segtitle_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Segtitle_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Segtitle_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Segtitle_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Segtitle_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Segtitle_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Segtitle_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Segtitle_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Segtitle_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Segtitle_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Segtitle_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Segtitle_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Segtitle_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Segtitle_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Segtitle_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Segtitle_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Segtitle_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Segtitle_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Segtitle_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Segtitle_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Segtitle_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Segtitle_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Segtitle_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Segtitle_Indexterm a), rest)
																																																																																											(_,_) ->
																																																																																											    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Segtitle_Str a) = toText a
    toElem (Segtitle_Footnoteref a) = toElem a
    toElem (Segtitle_Xref a) = toElem a
    toElem (Segtitle_Abbrev a) = toElem a
    toElem (Segtitle_Acronym a) = toElem a
    toElem (Segtitle_Citation a) = toElem a
    toElem (Segtitle_Citerefentry a) = toElem a
    toElem (Segtitle_Citetitle a) = toElem a
    toElem (Segtitle_Emphasis a) = toElem a
    toElem (Segtitle_Firstterm a) = toElem a
    toElem (Segtitle_Foreignphrase a) = toElem a
    toElem (Segtitle_Glossterm a) = toElem a
    toElem (Segtitle_Footnote a) = toElem a
    toElem (Segtitle_Phrase a) = toElem a
    toElem (Segtitle_Quote a) = toElem a
    toElem (Segtitle_Trademark a) = toElem a
    toElem (Segtitle_Wordasword a) = toElem a
    toElem (Segtitle_Personname a) = toElem a
    toElem (Segtitle_Link a) = toElem a
    toElem (Segtitle_Olink a) = toElem a
    toElem (Segtitle_Ulink a) = toElem a
    toElem (Segtitle_Action a) = toElem a
    toElem (Segtitle_Application a) = toElem a
    toElem (Segtitle_Classname a) = toElem a
    toElem (Segtitle_Methodname a) = toElem a
    toElem (Segtitle_Interfacename a) = toElem a
    toElem (Segtitle_Exceptionname a) = toElem a
    toElem (Segtitle_Ooclass a) = toElem a
    toElem (Segtitle_Oointerface a) = toElem a
    toElem (Segtitle_Ooexception a) = toElem a
    toElem (Segtitle_Command a) = toElem a
    toElem (Segtitle_Computeroutput a) = toElem a
    toElem (Segtitle_Database a) = toElem a
    toElem (Segtitle_Email a) = toElem a
    toElem (Segtitle_Envar a) = toElem a
    toElem (Segtitle_Errorcode a) = toElem a
    toElem (Segtitle_Errorname a) = toElem a
    toElem (Segtitle_Errortype a) = toElem a
    toElem (Segtitle_Errortext a) = toElem a
    toElem (Segtitle_Filename a) = toElem a
    toElem (Segtitle_Function a) = toElem a
    toElem (Segtitle_Guibutton a) = toElem a
    toElem (Segtitle_Guiicon a) = toElem a
    toElem (Segtitle_Guilabel a) = toElem a
    toElem (Segtitle_Guimenu a) = toElem a
    toElem (Segtitle_Guimenuitem a) = toElem a
    toElem (Segtitle_Guisubmenu a) = toElem a
    toElem (Segtitle_Hardware a) = toElem a
    toElem (Segtitle_Interface a) = toElem a
    toElem (Segtitle_Keycap a) = toElem a
    toElem (Segtitle_Keycode a) = toElem a
    toElem (Segtitle_Keycombo a) = toElem a
    toElem (Segtitle_Keysym a) = toElem a
    toElem (Segtitle_Literal a) = toElem a
    toElem (Segtitle_Constant a) = toElem a
    toElem (Segtitle_Markup a) = toElem a
    toElem (Segtitle_Medialabel a) = toElem a
    toElem (Segtitle_Menuchoice a) = toElem a
    toElem (Segtitle_Mousebutton a) = toElem a
    toElem (Segtitle_Option a) = toElem a
    toElem (Segtitle_Optional a) = toElem a
    toElem (Segtitle_Parameter a) = toElem a
    toElem (Segtitle_Prompt a) = toElem a
    toElem (Segtitle_Property a) = toElem a
    toElem (Segtitle_Replaceable a) = toElem a
    toElem (Segtitle_Returnvalue a) = toElem a
    toElem (Segtitle_Sgmltag a) = toElem a
    toElem (Segtitle_Structfield a) = toElem a
    toElem (Segtitle_Structname a) = toElem a
    toElem (Segtitle_Symbol a) = toElem a
    toElem (Segtitle_Systemitem a) = toElem a
    toElem (Segtitle_Token a) = toElem a
    toElem (Segtitle_Type a) = toElem a
    toElem (Segtitle_Userinput a) = toElem a
    toElem (Segtitle_Varname a) = toElem a
    toElem (Segtitle_Anchor a) = toElem a
    toElem (Segtitle_Author a) = toElem a
    toElem (Segtitle_Authorinitials a) = toElem a
    toElem (Segtitle_Corpauthor a) = toElem a
    toElem (Segtitle_Modespec a) = toElem a
    toElem (Segtitle_Othercredit a) = toElem a
    toElem (Segtitle_Productname a) = toElem a
    toElem (Segtitle_Productnumber a) = toElem a
    toElem (Segtitle_Revhistory a) = toElem a
    toElem (Segtitle_Remark a) = toElem a
    toElem (Segtitle_Subscript a) = toElem a
    toElem (Segtitle_Superscript a) = toElem a
    toElem (Segtitle_Inlinegraphic a) = toElem a
    toElem (Segtitle_Inlinemediaobject a) = toElem a
    toElem (Segtitle_Inlineequation a) = toElem a
    toElem (Segtitle_Indexterm a) = toElem a
instance XmlAttrType Segtitle_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Segtitle_Revisionflag_Changed
	    translate "added" = Just Segtitle_Revisionflag_Added
	    translate "deleted" = Just Segtitle_Revisionflag_Deleted
	    translate "off" = Just Segtitle_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Segtitle_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Segtitle_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Segtitle_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Segtitle_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Seglistitem where
    fromElem (CElem (Elem "seglistitem" as c0):rest) =
	(\(a,ca)->
	   (Just (Seglistitem (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Seglistitem as a) =
	[CElem (Elem "seglistitem" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Seglistitem_Attrs where
    fromAttrs as =
	Seglistitem_Attrs
	  { seglistitemId = possibleA fromAttrToStr "id" as
	  , seglistitemLang = possibleA fromAttrToStr "lang" as
	  , seglistitemRemap = possibleA fromAttrToStr "remap" as
	  , seglistitemXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , seglistitemRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , seglistitemArch = possibleA fromAttrToStr "arch" as
	  , seglistitemCondition = possibleA fromAttrToStr "condition" as
	  , seglistitemConformance = possibleA fromAttrToStr "conformance" as
	  , seglistitemOs = possibleA fromAttrToStr "os" as
	  , seglistitemRevision = possibleA fromAttrToStr "revision" as
	  , seglistitemSecurity = possibleA fromAttrToStr "security" as
	  , seglistitemUserlevel = possibleA fromAttrToStr "userlevel" as
	  , seglistitemVendor = possibleA fromAttrToStr "vendor" as
	  , seglistitemRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (seglistitemId v)
	, maybeToAttr toAttrFrStr "lang" (seglistitemLang v)
	, maybeToAttr toAttrFrStr "remap" (seglistitemRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (seglistitemXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (seglistitemRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (seglistitemArch v)
	, maybeToAttr toAttrFrStr "condition" (seglistitemCondition v)
	, maybeToAttr toAttrFrStr "conformance" (seglistitemConformance v)
	, maybeToAttr toAttrFrStr "os" (seglistitemOs v)
	, maybeToAttr toAttrFrStr "revision" (seglistitemRevision v)
	, maybeToAttr toAttrFrStr "security" (seglistitemSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (seglistitemUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (seglistitemVendor v)
	, maybeToAttr toAttrFrStr "role" (seglistitemRole v)
	]
instance XmlAttrType Seglistitem_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Seglistitem_Revisionflag_Changed
	    translate "added" = Just Seglistitem_Revisionflag_Added
	    translate "deleted" = Just Seglistitem_Revisionflag_Deleted
	    translate "off" = Just Seglistitem_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Seglistitem_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Seglistitem_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Seglistitem_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Seglistitem_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Seg where
    fromElem (CElem (Elem "seg" as c0):rest) =
	(\(a,ca)->
	   (Just (Seg (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Seg as a) =
	[CElem (Elem "seg" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Seg_Attrs where
    fromAttrs as =
	Seg_Attrs
	  { segId = possibleA fromAttrToStr "id" as
	  , segLang = possibleA fromAttrToStr "lang" as
	  , segRemap = possibleA fromAttrToStr "remap" as
	  , segXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , segRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , segArch = possibleA fromAttrToStr "arch" as
	  , segCondition = possibleA fromAttrToStr "condition" as
	  , segConformance = possibleA fromAttrToStr "conformance" as
	  , segOs = possibleA fromAttrToStr "os" as
	  , segRevision = possibleA fromAttrToStr "revision" as
	  , segSecurity = possibleA fromAttrToStr "security" as
	  , segUserlevel = possibleA fromAttrToStr "userlevel" as
	  , segVendor = possibleA fromAttrToStr "vendor" as
	  , segRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (segId v)
	, maybeToAttr toAttrFrStr "lang" (segLang v)
	, maybeToAttr toAttrFrStr "remap" (segRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (segXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (segRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (segArch v)
	, maybeToAttr toAttrFrStr "condition" (segCondition v)
	, maybeToAttr toAttrFrStr "conformance" (segConformance v)
	, maybeToAttr toAttrFrStr "os" (segOs v)
	, maybeToAttr toAttrFrStr "revision" (segRevision v)
	, maybeToAttr toAttrFrStr "security" (segSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (segUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (segVendor v)
	, maybeToAttr toAttrFrStr "role" (segRole v)
	]
instance XmlContent Seg_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Seg_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Seg_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Seg_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Seg_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Seg_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Seg_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Seg_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Seg_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Seg_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Seg_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Seg_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Seg_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Seg_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Seg_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Seg_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Seg_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Seg_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Seg_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Seg_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Seg_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Seg_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Seg_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Seg_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Seg_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Seg_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Seg_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Seg_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Seg_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Seg_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Seg_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Seg_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Seg_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Seg_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Seg_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Seg_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Seg_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Seg_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Seg_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Seg_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Seg_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Seg_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Seg_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Seg_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Seg_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Seg_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Seg_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Seg_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Seg_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Seg_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Seg_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Seg_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Seg_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Seg_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Seg_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Seg_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Seg_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Seg_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Seg_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Seg_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Seg_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Seg_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Seg_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Seg_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Seg_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Seg_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Seg_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Seg_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Seg_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Seg_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Seg_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Seg_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Seg_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Seg_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Seg_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Seg_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Seg_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Seg_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Seg_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Seg_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Seg_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Seg_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Seg_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Seg_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Seg_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Seg_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Seg_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Seg_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Seg_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Seg_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Seg_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Seg_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Seg_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Seg_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Seg_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Seg_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Seg_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Seg_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Seg_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Seg_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Seg_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Seg_Str a) = toText a
    toElem (Seg_Footnoteref a) = toElem a
    toElem (Seg_Xref a) = toElem a
    toElem (Seg_Abbrev a) = toElem a
    toElem (Seg_Acronym a) = toElem a
    toElem (Seg_Citation a) = toElem a
    toElem (Seg_Citerefentry a) = toElem a
    toElem (Seg_Citetitle a) = toElem a
    toElem (Seg_Emphasis a) = toElem a
    toElem (Seg_Firstterm a) = toElem a
    toElem (Seg_Foreignphrase a) = toElem a
    toElem (Seg_Glossterm a) = toElem a
    toElem (Seg_Footnote a) = toElem a
    toElem (Seg_Phrase a) = toElem a
    toElem (Seg_Quote a) = toElem a
    toElem (Seg_Trademark a) = toElem a
    toElem (Seg_Wordasword a) = toElem a
    toElem (Seg_Personname a) = toElem a
    toElem (Seg_Link a) = toElem a
    toElem (Seg_Olink a) = toElem a
    toElem (Seg_Ulink a) = toElem a
    toElem (Seg_Action a) = toElem a
    toElem (Seg_Application a) = toElem a
    toElem (Seg_Classname a) = toElem a
    toElem (Seg_Methodname a) = toElem a
    toElem (Seg_Interfacename a) = toElem a
    toElem (Seg_Exceptionname a) = toElem a
    toElem (Seg_Ooclass a) = toElem a
    toElem (Seg_Oointerface a) = toElem a
    toElem (Seg_Ooexception a) = toElem a
    toElem (Seg_Command a) = toElem a
    toElem (Seg_Computeroutput a) = toElem a
    toElem (Seg_Database a) = toElem a
    toElem (Seg_Email a) = toElem a
    toElem (Seg_Envar a) = toElem a
    toElem (Seg_Errorcode a) = toElem a
    toElem (Seg_Errorname a) = toElem a
    toElem (Seg_Errortype a) = toElem a
    toElem (Seg_Errortext a) = toElem a
    toElem (Seg_Filename a) = toElem a
    toElem (Seg_Function a) = toElem a
    toElem (Seg_Guibutton a) = toElem a
    toElem (Seg_Guiicon a) = toElem a
    toElem (Seg_Guilabel a) = toElem a
    toElem (Seg_Guimenu a) = toElem a
    toElem (Seg_Guimenuitem a) = toElem a
    toElem (Seg_Guisubmenu a) = toElem a
    toElem (Seg_Hardware a) = toElem a
    toElem (Seg_Interface a) = toElem a
    toElem (Seg_Keycap a) = toElem a
    toElem (Seg_Keycode a) = toElem a
    toElem (Seg_Keycombo a) = toElem a
    toElem (Seg_Keysym a) = toElem a
    toElem (Seg_Literal a) = toElem a
    toElem (Seg_Constant a) = toElem a
    toElem (Seg_Markup a) = toElem a
    toElem (Seg_Medialabel a) = toElem a
    toElem (Seg_Menuchoice a) = toElem a
    toElem (Seg_Mousebutton a) = toElem a
    toElem (Seg_Option a) = toElem a
    toElem (Seg_Optional a) = toElem a
    toElem (Seg_Parameter a) = toElem a
    toElem (Seg_Prompt a) = toElem a
    toElem (Seg_Property a) = toElem a
    toElem (Seg_Replaceable a) = toElem a
    toElem (Seg_Returnvalue a) = toElem a
    toElem (Seg_Sgmltag a) = toElem a
    toElem (Seg_Structfield a) = toElem a
    toElem (Seg_Structname a) = toElem a
    toElem (Seg_Symbol a) = toElem a
    toElem (Seg_Systemitem a) = toElem a
    toElem (Seg_Token a) = toElem a
    toElem (Seg_Type a) = toElem a
    toElem (Seg_Userinput a) = toElem a
    toElem (Seg_Varname a) = toElem a
    toElem (Seg_Anchor a) = toElem a
    toElem (Seg_Author a) = toElem a
    toElem (Seg_Authorinitials a) = toElem a
    toElem (Seg_Corpauthor a) = toElem a
    toElem (Seg_Modespec a) = toElem a
    toElem (Seg_Othercredit a) = toElem a
    toElem (Seg_Productname a) = toElem a
    toElem (Seg_Productnumber a) = toElem a
    toElem (Seg_Revhistory a) = toElem a
    toElem (Seg_Remark a) = toElem a
    toElem (Seg_Subscript a) = toElem a
    toElem (Seg_Superscript a) = toElem a
    toElem (Seg_Inlinegraphic a) = toElem a
    toElem (Seg_Inlinemediaobject a) = toElem a
    toElem (Seg_Inlineequation a) = toElem a
    toElem (Seg_Synopsis a) = toElem a
    toElem (Seg_Cmdsynopsis a) = toElem a
    toElem (Seg_Funcsynopsis a) = toElem a
    toElem (Seg_Classsynopsis a) = toElem a
    toElem (Seg_Fieldsynopsis a) = toElem a
    toElem (Seg_Constructorsynopsis a) = toElem a
    toElem (Seg_Destructorsynopsis a) = toElem a
    toElem (Seg_Methodsynopsis a) = toElem a
    toElem (Seg_Indexterm a) = toElem a
    toElem (Seg_Beginpage a) = toElem a
instance XmlAttrType Seg_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Seg_Revisionflag_Changed
	    translate "added" = Just Seg_Revisionflag_Added
	    translate "deleted" = Just Seg_Revisionflag_Deleted
	    translate "off" = Just Seg_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Seg_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Seg_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Seg_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Seg_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Simplelist where
    fromElem (CElem (Elem "simplelist" as c0):rest) =
	(\(a,ca)->
	   (Just (Simplelist (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Simplelist as a) =
	[CElem (Elem "simplelist" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Simplelist_Attrs where
    fromAttrs as =
	Simplelist_Attrs
	  { simplelistColumns = possibleA fromAttrToStr "columns" as
	  , simplelistType = defaultA fromAttrToTyp Simplelist_Type_Vert "type" as
	  , simplelistId = possibleA fromAttrToStr "id" as
	  , simplelistLang = possibleA fromAttrToStr "lang" as
	  , simplelistRemap = possibleA fromAttrToStr "remap" as
	  , simplelistXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , simplelistRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , simplelistArch = possibleA fromAttrToStr "arch" as
	  , simplelistCondition = possibleA fromAttrToStr "condition" as
	  , simplelistConformance = possibleA fromAttrToStr "conformance" as
	  , simplelistOs = possibleA fromAttrToStr "os" as
	  , simplelistRevision = possibleA fromAttrToStr "revision" as
	  , simplelistSecurity = possibleA fromAttrToStr "security" as
	  , simplelistUserlevel = possibleA fromAttrToStr "userlevel" as
	  , simplelistVendor = possibleA fromAttrToStr "vendor" as
	  , simplelistRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "columns" (simplelistColumns v)
	, defaultToAttr toAttrFrTyp "type" (simplelistType v)
	, maybeToAttr toAttrFrStr "id" (simplelistId v)
	, maybeToAttr toAttrFrStr "lang" (simplelistLang v)
	, maybeToAttr toAttrFrStr "remap" (simplelistRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (simplelistXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (simplelistRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (simplelistArch v)
	, maybeToAttr toAttrFrStr "condition" (simplelistCondition v)
	, maybeToAttr toAttrFrStr "conformance" (simplelistConformance v)
	, maybeToAttr toAttrFrStr "os" (simplelistOs v)
	, maybeToAttr toAttrFrStr "revision" (simplelistRevision v)
	, maybeToAttr toAttrFrStr "security" (simplelistSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (simplelistUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (simplelistVendor v)
	, maybeToAttr toAttrFrStr "role" (simplelistRole v)
	]
instance XmlAttrType Simplelist_Type where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "inline" = Just Simplelist_Type_Inline
	    translate "vert" = Just Simplelist_Type_Vert
	    translate "horiz" = Just Simplelist_Type_Horiz
	    translate _ = Nothing
    toAttrFrTyp n Simplelist_Type_Inline = Just (n, str2attr "inline")
    toAttrFrTyp n Simplelist_Type_Vert = Just (n, str2attr "vert")
    toAttrFrTyp n Simplelist_Type_Horiz = Just (n, str2attr "horiz")
instance XmlAttrType Simplelist_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Simplelist_Revisionflag_Changed
	    translate "added" = Just Simplelist_Revisionflag_Added
	    translate "deleted" = Just Simplelist_Revisionflag_Deleted
	    translate "off" = Just Simplelist_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Simplelist_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Simplelist_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Simplelist_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Simplelist_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Member where
    fromElem (CElem (Elem "member" as c0):rest) =
	(\(a,ca)->
	   (Just (Member (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Member as a) =
	[CElem (Elem "member" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Member_Attrs where
    fromAttrs as =
	Member_Attrs
	  { memberId = possibleA fromAttrToStr "id" as
	  , memberLang = possibleA fromAttrToStr "lang" as
	  , memberRemap = possibleA fromAttrToStr "remap" as
	  , memberXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , memberRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , memberArch = possibleA fromAttrToStr "arch" as
	  , memberCondition = possibleA fromAttrToStr "condition" as
	  , memberConformance = possibleA fromAttrToStr "conformance" as
	  , memberOs = possibleA fromAttrToStr "os" as
	  , memberRevision = possibleA fromAttrToStr "revision" as
	  , memberSecurity = possibleA fromAttrToStr "security" as
	  , memberUserlevel = possibleA fromAttrToStr "userlevel" as
	  , memberVendor = possibleA fromAttrToStr "vendor" as
	  , memberRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (memberId v)
	, maybeToAttr toAttrFrStr "lang" (memberLang v)
	, maybeToAttr toAttrFrStr "remap" (memberRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (memberXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (memberRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (memberArch v)
	, maybeToAttr toAttrFrStr "condition" (memberCondition v)
	, maybeToAttr toAttrFrStr "conformance" (memberConformance v)
	, maybeToAttr toAttrFrStr "os" (memberOs v)
	, maybeToAttr toAttrFrStr "revision" (memberRevision v)
	, maybeToAttr toAttrFrStr "security" (memberSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (memberUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (memberVendor v)
	, maybeToAttr toAttrFrStr "role" (memberRole v)
	]
instance XmlContent Member_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Member_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Member_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Member_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Member_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Member_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Member_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Member_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Member_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Member_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Member_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Member_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Member_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Member_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Member_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Member_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Member_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Member_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Member_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Member_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Member_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Member_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Member_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Member_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Member_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Member_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Member_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Member_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Member_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Member_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Member_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Member_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Member_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Member_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Member_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Member_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Member_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Member_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Member_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Member_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Member_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Member_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Member_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Member_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Member_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Member_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Member_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Member_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Member_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Member_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Member_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Member_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Member_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Member_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Member_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Member_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Member_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Member_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Member_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Member_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Member_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Member_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Member_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Member_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Member_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Member_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Member_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Member_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Member_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Member_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Member_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Member_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Member_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Member_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Member_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Member_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Member_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Member_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Member_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Member_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Member_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Member_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Member_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Member_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Member_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Member_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Member_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Member_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Member_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Member_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Member_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Member_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Member_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Member_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Member_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Member_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Member_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Member_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Member_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Member_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Member_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Member_Str a) = toText a
    toElem (Member_Footnoteref a) = toElem a
    toElem (Member_Xref a) = toElem a
    toElem (Member_Abbrev a) = toElem a
    toElem (Member_Acronym a) = toElem a
    toElem (Member_Citation a) = toElem a
    toElem (Member_Citerefentry a) = toElem a
    toElem (Member_Citetitle a) = toElem a
    toElem (Member_Emphasis a) = toElem a
    toElem (Member_Firstterm a) = toElem a
    toElem (Member_Foreignphrase a) = toElem a
    toElem (Member_Glossterm a) = toElem a
    toElem (Member_Footnote a) = toElem a
    toElem (Member_Phrase a) = toElem a
    toElem (Member_Quote a) = toElem a
    toElem (Member_Trademark a) = toElem a
    toElem (Member_Wordasword a) = toElem a
    toElem (Member_Personname a) = toElem a
    toElem (Member_Link a) = toElem a
    toElem (Member_Olink a) = toElem a
    toElem (Member_Ulink a) = toElem a
    toElem (Member_Action a) = toElem a
    toElem (Member_Application a) = toElem a
    toElem (Member_Classname a) = toElem a
    toElem (Member_Methodname a) = toElem a
    toElem (Member_Interfacename a) = toElem a
    toElem (Member_Exceptionname a) = toElem a
    toElem (Member_Ooclass a) = toElem a
    toElem (Member_Oointerface a) = toElem a
    toElem (Member_Ooexception a) = toElem a
    toElem (Member_Command a) = toElem a
    toElem (Member_Computeroutput a) = toElem a
    toElem (Member_Database a) = toElem a
    toElem (Member_Email a) = toElem a
    toElem (Member_Envar a) = toElem a
    toElem (Member_Errorcode a) = toElem a
    toElem (Member_Errorname a) = toElem a
    toElem (Member_Errortype a) = toElem a
    toElem (Member_Errortext a) = toElem a
    toElem (Member_Filename a) = toElem a
    toElem (Member_Function a) = toElem a
    toElem (Member_Guibutton a) = toElem a
    toElem (Member_Guiicon a) = toElem a
    toElem (Member_Guilabel a) = toElem a
    toElem (Member_Guimenu a) = toElem a
    toElem (Member_Guimenuitem a) = toElem a
    toElem (Member_Guisubmenu a) = toElem a
    toElem (Member_Hardware a) = toElem a
    toElem (Member_Interface a) = toElem a
    toElem (Member_Keycap a) = toElem a
    toElem (Member_Keycode a) = toElem a
    toElem (Member_Keycombo a) = toElem a
    toElem (Member_Keysym a) = toElem a
    toElem (Member_Literal a) = toElem a
    toElem (Member_Constant a) = toElem a
    toElem (Member_Markup a) = toElem a
    toElem (Member_Medialabel a) = toElem a
    toElem (Member_Menuchoice a) = toElem a
    toElem (Member_Mousebutton a) = toElem a
    toElem (Member_Option a) = toElem a
    toElem (Member_Optional a) = toElem a
    toElem (Member_Parameter a) = toElem a
    toElem (Member_Prompt a) = toElem a
    toElem (Member_Property a) = toElem a
    toElem (Member_Replaceable a) = toElem a
    toElem (Member_Returnvalue a) = toElem a
    toElem (Member_Sgmltag a) = toElem a
    toElem (Member_Structfield a) = toElem a
    toElem (Member_Structname a) = toElem a
    toElem (Member_Symbol a) = toElem a
    toElem (Member_Systemitem a) = toElem a
    toElem (Member_Token a) = toElem a
    toElem (Member_Type a) = toElem a
    toElem (Member_Userinput a) = toElem a
    toElem (Member_Varname a) = toElem a
    toElem (Member_Anchor a) = toElem a
    toElem (Member_Author a) = toElem a
    toElem (Member_Authorinitials a) = toElem a
    toElem (Member_Corpauthor a) = toElem a
    toElem (Member_Modespec a) = toElem a
    toElem (Member_Othercredit a) = toElem a
    toElem (Member_Productname a) = toElem a
    toElem (Member_Productnumber a) = toElem a
    toElem (Member_Revhistory a) = toElem a
    toElem (Member_Remark a) = toElem a
    toElem (Member_Subscript a) = toElem a
    toElem (Member_Superscript a) = toElem a
    toElem (Member_Inlinegraphic a) = toElem a
    toElem (Member_Inlinemediaobject a) = toElem a
    toElem (Member_Inlineequation a) = toElem a
    toElem (Member_Synopsis a) = toElem a
    toElem (Member_Cmdsynopsis a) = toElem a
    toElem (Member_Funcsynopsis a) = toElem a
    toElem (Member_Classsynopsis a) = toElem a
    toElem (Member_Fieldsynopsis a) = toElem a
    toElem (Member_Constructorsynopsis a) = toElem a
    toElem (Member_Destructorsynopsis a) = toElem a
    toElem (Member_Methodsynopsis a) = toElem a
    toElem (Member_Indexterm a) = toElem a
    toElem (Member_Beginpage a) = toElem a
instance XmlAttrType Member_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Member_Revisionflag_Changed
	    translate "added" = Just Member_Revisionflag_Added
	    translate "deleted" = Just Member_Revisionflag_Deleted
	    translate "off" = Just Member_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Member_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Member_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Member_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Member_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Variablelist where
    fromElem (CElem (Elem "variablelist" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Variablelist (fromAttrs as) a b c d), rest))
		 (many fromElem cc))
	      (many fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Variablelist as a b c d) =
	[CElem (Elem "variablelist" (toAttrs as) (maybe [] toElem a ++
						  maybe [] toElem b ++ concatMap toElem c ++
						  concatMap toElem d))]
instance XmlAttributes Variablelist_Attrs where
    fromAttrs as =
	Variablelist_Attrs
	  { variablelistTermlength = possibleA fromAttrToStr "termlength" as
	  , variablelistId = possibleA fromAttrToStr "id" as
	  , variablelistLang = possibleA fromAttrToStr "lang" as
	  , variablelistRemap = possibleA fromAttrToStr "remap" as
	  , variablelistXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , variablelistRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , variablelistArch = possibleA fromAttrToStr "arch" as
	  , variablelistCondition = possibleA fromAttrToStr "condition" as
	  , variablelistConformance = possibleA fromAttrToStr "conformance" as
	  , variablelistOs = possibleA fromAttrToStr "os" as
	  , variablelistRevision = possibleA fromAttrToStr "revision" as
	  , variablelistSecurity = possibleA fromAttrToStr "security" as
	  , variablelistUserlevel = possibleA fromAttrToStr "userlevel" as
	  , variablelistVendor = possibleA fromAttrToStr "vendor" as
	  , variablelistRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "termlength" (variablelistTermlength v)
	, maybeToAttr toAttrFrStr "id" (variablelistId v)
	, maybeToAttr toAttrFrStr "lang" (variablelistLang v)
	, maybeToAttr toAttrFrStr "remap" (variablelistRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (variablelistXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (variablelistRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (variablelistArch v)
	, maybeToAttr toAttrFrStr "condition" (variablelistCondition v)
	, maybeToAttr toAttrFrStr "conformance" (variablelistConformance v)
	, maybeToAttr toAttrFrStr "os" (variablelistOs v)
	, maybeToAttr toAttrFrStr "revision" (variablelistRevision v)
	, maybeToAttr toAttrFrStr "security" (variablelistSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (variablelistUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (variablelistVendor v)
	, maybeToAttr toAttrFrStr "role" (variablelistRole v)
	]
instance XmlAttrType Variablelist_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Variablelist_Revisionflag_Changed
	    translate "added" = Just Variablelist_Revisionflag_Added
	    translate "deleted" = Just Variablelist_Revisionflag_Deleted
	    translate "off" = Just Variablelist_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Variablelist_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Variablelist_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Variablelist_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Variablelist_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Varlistentry where
    fromElem (CElem (Elem "varlistentry" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Varlistentry (fromAttrs as) a b), rest))
	   (definite fromElem "<listitem>" "varlistentry" ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Varlistentry as a b) =
	[CElem (Elem "varlistentry" (toAttrs as) (concatMap toElem a ++
						  toElem b))]
instance XmlAttributes Varlistentry_Attrs where
    fromAttrs as =
	Varlistentry_Attrs
	  { varlistentryId = possibleA fromAttrToStr "id" as
	  , varlistentryLang = possibleA fromAttrToStr "lang" as
	  , varlistentryRemap = possibleA fromAttrToStr "remap" as
	  , varlistentryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , varlistentryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , varlistentryArch = possibleA fromAttrToStr "arch" as
	  , varlistentryCondition = possibleA fromAttrToStr "condition" as
	  , varlistentryConformance = possibleA fromAttrToStr "conformance" as
	  , varlistentryOs = possibleA fromAttrToStr "os" as
	  , varlistentryRevision = possibleA fromAttrToStr "revision" as
	  , varlistentrySecurity = possibleA fromAttrToStr "security" as
	  , varlistentryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , varlistentryVendor = possibleA fromAttrToStr "vendor" as
	  , varlistentryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (varlistentryId v)
	, maybeToAttr toAttrFrStr "lang" (varlistentryLang v)
	, maybeToAttr toAttrFrStr "remap" (varlistentryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (varlistentryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (varlistentryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (varlistentryArch v)
	, maybeToAttr toAttrFrStr "condition" (varlistentryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (varlistentryConformance v)
	, maybeToAttr toAttrFrStr "os" (varlistentryOs v)
	, maybeToAttr toAttrFrStr "revision" (varlistentryRevision v)
	, maybeToAttr toAttrFrStr "security" (varlistentrySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (varlistentryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (varlistentryVendor v)
	, maybeToAttr toAttrFrStr "role" (varlistentryRole v)
	]
instance XmlAttrType Varlistentry_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Varlistentry_Revisionflag_Changed
	    translate "added" = Just Varlistentry_Revisionflag_Added
	    translate "deleted" = Just Varlistentry_Revisionflag_Deleted
	    translate "off" = Just Varlistentry_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Varlistentry_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Varlistentry_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Varlistentry_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Varlistentry_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Term where
    fromElem (CElem (Elem "term" as c0):rest) =
	(\(a,ca)->
	   (Just (Term (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Term as a) =
	[CElem (Elem "term" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Term_Attrs where
    fromAttrs as =
	Term_Attrs
	  { termId = possibleA fromAttrToStr "id" as
	  , termLang = possibleA fromAttrToStr "lang" as
	  , termRemap = possibleA fromAttrToStr "remap" as
	  , termXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , termRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , termArch = possibleA fromAttrToStr "arch" as
	  , termCondition = possibleA fromAttrToStr "condition" as
	  , termConformance = possibleA fromAttrToStr "conformance" as
	  , termOs = possibleA fromAttrToStr "os" as
	  , termRevision = possibleA fromAttrToStr "revision" as
	  , termSecurity = possibleA fromAttrToStr "security" as
	  , termUserlevel = possibleA fromAttrToStr "userlevel" as
	  , termVendor = possibleA fromAttrToStr "vendor" as
	  , termRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (termId v)
	, maybeToAttr toAttrFrStr "lang" (termLang v)
	, maybeToAttr toAttrFrStr "remap" (termRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (termXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (termRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (termArch v)
	, maybeToAttr toAttrFrStr "condition" (termCondition v)
	, maybeToAttr toAttrFrStr "conformance" (termConformance v)
	, maybeToAttr toAttrFrStr "os" (termOs v)
	, maybeToAttr toAttrFrStr "revision" (termRevision v)
	, maybeToAttr toAttrFrStr "security" (termSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (termUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (termVendor v)
	, maybeToAttr toAttrFrStr "role" (termRole v)
	]
instance XmlContent Term_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Term_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Term_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Term_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Term_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Term_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Term_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Term_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Term_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Term_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Term_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Term_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Term_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Term_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Term_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Term_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Term_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Term_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Term_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Term_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Term_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Term_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Term_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Term_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Term_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Term_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Term_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Term_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Term_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Term_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Term_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Term_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Term_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Term_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Term_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Term_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Term_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Term_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Term_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Term_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Term_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Term_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Term_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Term_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Term_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Term_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Term_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Term_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Term_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Term_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Term_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Term_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Term_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Term_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Term_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Term_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Term_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Term_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Term_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Term_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Term_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Term_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Term_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Term_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Term_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Term_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Term_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Term_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Term_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Term_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Term_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Term_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Term_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Term_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Term_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Term_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Term_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Term_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Term_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Term_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Term_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Term_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Term_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Term_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Term_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Term_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Term_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Term_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Term_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Term_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Term_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Term_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Term_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Term_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Term_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Term_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Term_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Term_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Term_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Term_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Term_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Term_Str a) = toText a
    toElem (Term_Footnoteref a) = toElem a
    toElem (Term_Xref a) = toElem a
    toElem (Term_Abbrev a) = toElem a
    toElem (Term_Acronym a) = toElem a
    toElem (Term_Citation a) = toElem a
    toElem (Term_Citerefentry a) = toElem a
    toElem (Term_Citetitle a) = toElem a
    toElem (Term_Emphasis a) = toElem a
    toElem (Term_Firstterm a) = toElem a
    toElem (Term_Foreignphrase a) = toElem a
    toElem (Term_Glossterm a) = toElem a
    toElem (Term_Footnote a) = toElem a
    toElem (Term_Phrase a) = toElem a
    toElem (Term_Quote a) = toElem a
    toElem (Term_Trademark a) = toElem a
    toElem (Term_Wordasword a) = toElem a
    toElem (Term_Personname a) = toElem a
    toElem (Term_Link a) = toElem a
    toElem (Term_Olink a) = toElem a
    toElem (Term_Ulink a) = toElem a
    toElem (Term_Action a) = toElem a
    toElem (Term_Application a) = toElem a
    toElem (Term_Classname a) = toElem a
    toElem (Term_Methodname a) = toElem a
    toElem (Term_Interfacename a) = toElem a
    toElem (Term_Exceptionname a) = toElem a
    toElem (Term_Ooclass a) = toElem a
    toElem (Term_Oointerface a) = toElem a
    toElem (Term_Ooexception a) = toElem a
    toElem (Term_Command a) = toElem a
    toElem (Term_Computeroutput a) = toElem a
    toElem (Term_Database a) = toElem a
    toElem (Term_Email a) = toElem a
    toElem (Term_Envar a) = toElem a
    toElem (Term_Errorcode a) = toElem a
    toElem (Term_Errorname a) = toElem a
    toElem (Term_Errortype a) = toElem a
    toElem (Term_Errortext a) = toElem a
    toElem (Term_Filename a) = toElem a
    toElem (Term_Function a) = toElem a
    toElem (Term_Guibutton a) = toElem a
    toElem (Term_Guiicon a) = toElem a
    toElem (Term_Guilabel a) = toElem a
    toElem (Term_Guimenu a) = toElem a
    toElem (Term_Guimenuitem a) = toElem a
    toElem (Term_Guisubmenu a) = toElem a
    toElem (Term_Hardware a) = toElem a
    toElem (Term_Interface a) = toElem a
    toElem (Term_Keycap a) = toElem a
    toElem (Term_Keycode a) = toElem a
    toElem (Term_Keycombo a) = toElem a
    toElem (Term_Keysym a) = toElem a
    toElem (Term_Literal a) = toElem a
    toElem (Term_Constant a) = toElem a
    toElem (Term_Markup a) = toElem a
    toElem (Term_Medialabel a) = toElem a
    toElem (Term_Menuchoice a) = toElem a
    toElem (Term_Mousebutton a) = toElem a
    toElem (Term_Option a) = toElem a
    toElem (Term_Optional a) = toElem a
    toElem (Term_Parameter a) = toElem a
    toElem (Term_Prompt a) = toElem a
    toElem (Term_Property a) = toElem a
    toElem (Term_Replaceable a) = toElem a
    toElem (Term_Returnvalue a) = toElem a
    toElem (Term_Sgmltag a) = toElem a
    toElem (Term_Structfield a) = toElem a
    toElem (Term_Structname a) = toElem a
    toElem (Term_Symbol a) = toElem a
    toElem (Term_Systemitem a) = toElem a
    toElem (Term_Token a) = toElem a
    toElem (Term_Type a) = toElem a
    toElem (Term_Userinput a) = toElem a
    toElem (Term_Varname a) = toElem a
    toElem (Term_Anchor a) = toElem a
    toElem (Term_Author a) = toElem a
    toElem (Term_Authorinitials a) = toElem a
    toElem (Term_Corpauthor a) = toElem a
    toElem (Term_Modespec a) = toElem a
    toElem (Term_Othercredit a) = toElem a
    toElem (Term_Productname a) = toElem a
    toElem (Term_Productnumber a) = toElem a
    toElem (Term_Revhistory a) = toElem a
    toElem (Term_Remark a) = toElem a
    toElem (Term_Subscript a) = toElem a
    toElem (Term_Superscript a) = toElem a
    toElem (Term_Inlinegraphic a) = toElem a
    toElem (Term_Inlinemediaobject a) = toElem a
    toElem (Term_Inlineequation a) = toElem a
    toElem (Term_Synopsis a) = toElem a
    toElem (Term_Cmdsynopsis a) = toElem a
    toElem (Term_Funcsynopsis a) = toElem a
    toElem (Term_Classsynopsis a) = toElem a
    toElem (Term_Fieldsynopsis a) = toElem a
    toElem (Term_Constructorsynopsis a) = toElem a
    toElem (Term_Destructorsynopsis a) = toElem a
    toElem (Term_Methodsynopsis a) = toElem a
    toElem (Term_Indexterm a) = toElem a
    toElem (Term_Beginpage a) = toElem a
instance XmlAttrType Term_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Term_Revisionflag_Changed
	    translate "added" = Just Term_Revisionflag_Added
	    translate "deleted" = Just Term_Revisionflag_Deleted
	    translate "off" = Just Term_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Term_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Term_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Term_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Term_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Calloutlist where
    fromElem (CElem (Elem "calloutlist" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Calloutlist (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Calloutlist as a b) =
	[CElem (Elem "calloutlist" (toAttrs as) (maybe [] toElem a ++
						 concatMap toElem b))]
instance XmlAttributes Calloutlist_Attrs where
    fromAttrs as =
	Calloutlist_Attrs
	  { calloutlistId = possibleA fromAttrToStr "id" as
	  , calloutlistLang = possibleA fromAttrToStr "lang" as
	  , calloutlistRemap = possibleA fromAttrToStr "remap" as
	  , calloutlistXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , calloutlistRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , calloutlistArch = possibleA fromAttrToStr "arch" as
	  , calloutlistCondition = possibleA fromAttrToStr "condition" as
	  , calloutlistConformance = possibleA fromAttrToStr "conformance" as
	  , calloutlistOs = possibleA fromAttrToStr "os" as
	  , calloutlistRevision = possibleA fromAttrToStr "revision" as
	  , calloutlistSecurity = possibleA fromAttrToStr "security" as
	  , calloutlistUserlevel = possibleA fromAttrToStr "userlevel" as
	  , calloutlistVendor = possibleA fromAttrToStr "vendor" as
	  , calloutlistRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (calloutlistId v)
	, maybeToAttr toAttrFrStr "lang" (calloutlistLang v)
	, maybeToAttr toAttrFrStr "remap" (calloutlistRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (calloutlistXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (calloutlistRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (calloutlistArch v)
	, maybeToAttr toAttrFrStr "condition" (calloutlistCondition v)
	, maybeToAttr toAttrFrStr "conformance" (calloutlistConformance v)
	, maybeToAttr toAttrFrStr "os" (calloutlistOs v)
	, maybeToAttr toAttrFrStr "revision" (calloutlistRevision v)
	, maybeToAttr toAttrFrStr "security" (calloutlistSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (calloutlistUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (calloutlistVendor v)
	, maybeToAttr toAttrFrStr "role" (calloutlistRole v)
	]
instance XmlAttrType Calloutlist_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Calloutlist_Revisionflag_Changed
	    translate "added" = Just Calloutlist_Revisionflag_Added
	    translate "deleted" = Just Calloutlist_Revisionflag_Deleted
	    translate "off" = Just Calloutlist_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Calloutlist_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Calloutlist_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Calloutlist_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Calloutlist_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Callout where
    fromElem (CElem (Elem "callout" as c0):rest) =
	(\(a,ca)->
	   (Just (Callout (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Callout as a) =
	[CElem (Elem "callout" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Callout_Attrs where
    fromAttrs as =
	Callout_Attrs
	  { calloutArearefs = definiteA fromAttrToStr "callout" "arearefs" as
	  , calloutId = possibleA fromAttrToStr "id" as
	  , calloutLang = possibleA fromAttrToStr "lang" as
	  , calloutRemap = possibleA fromAttrToStr "remap" as
	  , calloutXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , calloutRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , calloutArch = possibleA fromAttrToStr "arch" as
	  , calloutCondition = possibleA fromAttrToStr "condition" as
	  , calloutConformance = possibleA fromAttrToStr "conformance" as
	  , calloutOs = possibleA fromAttrToStr "os" as
	  , calloutRevision = possibleA fromAttrToStr "revision" as
	  , calloutSecurity = possibleA fromAttrToStr "security" as
	  , calloutUserlevel = possibleA fromAttrToStr "userlevel" as
	  , calloutVendor = possibleA fromAttrToStr "vendor" as
	  , calloutRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ toAttrFrStr "arearefs" (calloutArearefs v)
	, maybeToAttr toAttrFrStr "id" (calloutId v)
	, maybeToAttr toAttrFrStr "lang" (calloutLang v)
	, maybeToAttr toAttrFrStr "remap" (calloutRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (calloutXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (calloutRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (calloutArch v)
	, maybeToAttr toAttrFrStr "condition" (calloutCondition v)
	, maybeToAttr toAttrFrStr "conformance" (calloutConformance v)
	, maybeToAttr toAttrFrStr "os" (calloutOs v)
	, maybeToAttr toAttrFrStr "revision" (calloutRevision v)
	, maybeToAttr toAttrFrStr "security" (calloutSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (calloutUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (calloutVendor v)
	, maybeToAttr toAttrFrStr "role" (calloutRole v)
	]
instance XmlAttrType Callout_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Callout_Revisionflag_Changed
	    translate "added" = Just Callout_Revisionflag_Added
	    translate "deleted" = Just Callout_Revisionflag_Deleted
	    translate "off" = Just Callout_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Callout_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Callout_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Callout_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Callout_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Example where
    fromElem (CElem (Elem "example" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Example (fromAttrs as) a b c d), rest))
		 (many fromElem cc))
	      (fromElem cb))
	   (definite fromElem "<title>" "example" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Example as a b c d) =
	[CElem (Elem "example" (toAttrs as) (maybe [] toElem a ++ toElem b
					     ++ maybe [] toElem c ++ concatMap toElem d))]
instance XmlAttributes Example_Attrs where
    fromAttrs as =
	Example_Attrs
	  { exampleLabel = possibleA fromAttrToStr "label" as
	  , exampleWidth = possibleA fromAttrToStr "width" as
	  , exampleId = possibleA fromAttrToStr "id" as
	  , exampleLang = possibleA fromAttrToStr "lang" as
	  , exampleRemap = possibleA fromAttrToStr "remap" as
	  , exampleXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , exampleRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , exampleArch = possibleA fromAttrToStr "arch" as
	  , exampleCondition = possibleA fromAttrToStr "condition" as
	  , exampleConformance = possibleA fromAttrToStr "conformance" as
	  , exampleOs = possibleA fromAttrToStr "os" as
	  , exampleRevision = possibleA fromAttrToStr "revision" as
	  , exampleSecurity = possibleA fromAttrToStr "security" as
	  , exampleUserlevel = possibleA fromAttrToStr "userlevel" as
	  , exampleVendor = possibleA fromAttrToStr "vendor" as
	  , exampleRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (exampleLabel v)
	, maybeToAttr toAttrFrStr "width" (exampleWidth v)
	, maybeToAttr toAttrFrStr "id" (exampleId v)
	, maybeToAttr toAttrFrStr "lang" (exampleLang v)
	, maybeToAttr toAttrFrStr "remap" (exampleRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (exampleXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (exampleRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (exampleArch v)
	, maybeToAttr toAttrFrStr "condition" (exampleCondition v)
	, maybeToAttr toAttrFrStr "conformance" (exampleConformance v)
	, maybeToAttr toAttrFrStr "os" (exampleOs v)
	, maybeToAttr toAttrFrStr "revision" (exampleRevision v)
	, maybeToAttr toAttrFrStr "security" (exampleSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (exampleUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (exampleVendor v)
	, maybeToAttr toAttrFrStr "role" (exampleRole v)
	]
instance XmlAttrType Example_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Example_Revisionflag_Changed
	    translate "added" = Just Example_Revisionflag_Added
	    translate "deleted" = Just Example_Revisionflag_Deleted
	    translate "off" = Just Example_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Example_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Example_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Example_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Example_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Informalexample where
    fromElem (CElem (Elem "informalexample" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Informalexample (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Informalexample as a b) =
	[CElem (Elem "informalexample" (toAttrs as) (maybe [] toElem a ++
						     concatMap toElem b))]
instance XmlAttributes Informalexample_Attrs where
    fromAttrs as =
	Informalexample_Attrs
	  { informalexampleWidth = possibleA fromAttrToStr "width" as
	  , informalexampleId = possibleA fromAttrToStr "id" as
	  , informalexampleLang = possibleA fromAttrToStr "lang" as
	  , informalexampleRemap = possibleA fromAttrToStr "remap" as
	  , informalexampleXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , informalexampleRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , informalexampleArch = possibleA fromAttrToStr "arch" as
	  , informalexampleCondition = possibleA fromAttrToStr "condition" as
	  , informalexampleConformance = possibleA fromAttrToStr "conformance" as
	  , informalexampleOs = possibleA fromAttrToStr "os" as
	  , informalexampleRevision = possibleA fromAttrToStr "revision" as
	  , informalexampleSecurity = possibleA fromAttrToStr "security" as
	  , informalexampleUserlevel = possibleA fromAttrToStr "userlevel" as
	  , informalexampleVendor = possibleA fromAttrToStr "vendor" as
	  , informalexampleRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "width" (informalexampleWidth v)
	, maybeToAttr toAttrFrStr "id" (informalexampleId v)
	, maybeToAttr toAttrFrStr "lang" (informalexampleLang v)
	, maybeToAttr toAttrFrStr "remap" (informalexampleRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (informalexampleXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (informalexampleRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (informalexampleArch v)
	, maybeToAttr toAttrFrStr "condition" (informalexampleCondition v)
	, maybeToAttr toAttrFrStr "conformance" (informalexampleConformance v)
	, maybeToAttr toAttrFrStr "os" (informalexampleOs v)
	, maybeToAttr toAttrFrStr "revision" (informalexampleRevision v)
	, maybeToAttr toAttrFrStr "security" (informalexampleSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (informalexampleUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (informalexampleVendor v)
	, maybeToAttr toAttrFrStr "role" (informalexampleRole v)
	]
instance XmlAttrType Informalexample_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Informalexample_Revisionflag_Changed
	    translate "added" = Just Informalexample_Revisionflag_Added
	    translate "deleted" = Just Informalexample_Revisionflag_Deleted
	    translate "off" = Just Informalexample_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Informalexample_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Informalexample_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Informalexample_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Informalexample_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Programlistingco where
    fromElem (CElem (Elem "programlistingco" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Programlistingco (fromAttrs as) a b c), rest))
	      (many fromElem cb))
	   (definite fromElem "<programlisting>" "programlistingco" ca))
	(definite fromElem "<areaspec>" "programlistingco" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Programlistingco as a b c) =
	[CElem (Elem "programlistingco" (toAttrs as) (toElem a ++ toElem b
						      ++ concatMap toElem c))]
instance XmlAttributes Programlistingco_Attrs where
    fromAttrs as =
	Programlistingco_Attrs
	  { programlistingcoId = possibleA fromAttrToStr "id" as
	  , programlistingcoLang = possibleA fromAttrToStr "lang" as
	  , programlistingcoRemap = possibleA fromAttrToStr "remap" as
	  , programlistingcoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , programlistingcoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , programlistingcoArch = possibleA fromAttrToStr "arch" as
	  , programlistingcoCondition = possibleA fromAttrToStr "condition" as
	  , programlistingcoConformance = possibleA fromAttrToStr "conformance" as
	  , programlistingcoOs = possibleA fromAttrToStr "os" as
	  , programlistingcoRevision = possibleA fromAttrToStr "revision" as
	  , programlistingcoSecurity = possibleA fromAttrToStr "security" as
	  , programlistingcoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , programlistingcoVendor = possibleA fromAttrToStr "vendor" as
	  , programlistingcoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (programlistingcoId v)
	, maybeToAttr toAttrFrStr "lang" (programlistingcoLang v)
	, maybeToAttr toAttrFrStr "remap" (programlistingcoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (programlistingcoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (programlistingcoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (programlistingcoArch v)
	, maybeToAttr toAttrFrStr "condition" (programlistingcoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (programlistingcoConformance v)
	, maybeToAttr toAttrFrStr "os" (programlistingcoOs v)
	, maybeToAttr toAttrFrStr "revision" (programlistingcoRevision v)
	, maybeToAttr toAttrFrStr "security" (programlistingcoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (programlistingcoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (programlistingcoVendor v)
	, maybeToAttr toAttrFrStr "role" (programlistingcoRole v)
	]
instance XmlAttrType Programlistingco_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Programlistingco_Revisionflag_Changed
	    translate "added" = Just Programlistingco_Revisionflag_Added
	    translate "deleted" = Just Programlistingco_Revisionflag_Deleted
	    translate "off" = Just Programlistingco_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Programlistingco_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Programlistingco_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Programlistingco_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Programlistingco_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Areaspec where
    fromElem (CElem (Elem "areaspec" as c0):rest) =
	(\(a,ca)->
	   (Just (Areaspec (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Areaspec as a) =
	[CElem (Elem "areaspec" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Areaspec_Attrs where
    fromAttrs as =
	Areaspec_Attrs
	  { areaspecUnits = possibleA fromAttrToTyp "units" as
	  , areaspecOtherunits = possibleA fromAttrToStr "otherunits" as
	  , areaspecId = possibleA fromAttrToStr "id" as
	  , areaspecLang = possibleA fromAttrToStr "lang" as
	  , areaspecRemap = possibleA fromAttrToStr "remap" as
	  , areaspecXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , areaspecRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , areaspecArch = possibleA fromAttrToStr "arch" as
	  , areaspecCondition = possibleA fromAttrToStr "condition" as
	  , areaspecConformance = possibleA fromAttrToStr "conformance" as
	  , areaspecOs = possibleA fromAttrToStr "os" as
	  , areaspecRevision = possibleA fromAttrToStr "revision" as
	  , areaspecSecurity = possibleA fromAttrToStr "security" as
	  , areaspecUserlevel = possibleA fromAttrToStr "userlevel" as
	  , areaspecVendor = possibleA fromAttrToStr "vendor" as
	  , areaspecRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "units" (areaspecUnits v)
	, maybeToAttr toAttrFrStr "otherunits" (areaspecOtherunits v)
	, maybeToAttr toAttrFrStr "id" (areaspecId v)
	, maybeToAttr toAttrFrStr "lang" (areaspecLang v)
	, maybeToAttr toAttrFrStr "remap" (areaspecRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (areaspecXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (areaspecRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (areaspecArch v)
	, maybeToAttr toAttrFrStr "condition" (areaspecCondition v)
	, maybeToAttr toAttrFrStr "conformance" (areaspecConformance v)
	, maybeToAttr toAttrFrStr "os" (areaspecOs v)
	, maybeToAttr toAttrFrStr "revision" (areaspecRevision v)
	, maybeToAttr toAttrFrStr "security" (areaspecSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (areaspecUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (areaspecVendor v)
	, maybeToAttr toAttrFrStr "role" (areaspecRole v)
	]
instance XmlAttrType Areaspec_Units where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "calspair" = Just Areaspec_Units_Calspair
	    translate "linecolumn" = Just Areaspec_Units_Linecolumn
	    translate "linerange" = Just Areaspec_Units_Linerange
	    translate "linecolumnpair" = Just Areaspec_Units_Linecolumnpair
	    translate "other" = Just Areaspec_Units_Other
	    translate _ = Nothing
    toAttrFrTyp n Areaspec_Units_Calspair = Just (n, str2attr "calspair")
    toAttrFrTyp n Areaspec_Units_Linecolumn = Just (n, str2attr "linecolumn")
    toAttrFrTyp n Areaspec_Units_Linerange = Just (n, str2attr "linerange")
    toAttrFrTyp n Areaspec_Units_Linecolumnpair = Just (n, str2attr "linecolumnpair")
    toAttrFrTyp n Areaspec_Units_Other = Just (n, str2attr "other")
instance XmlAttrType Areaspec_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Areaspec_Revisionflag_Changed
	    translate "added" = Just Areaspec_Revisionflag_Added
	    translate "deleted" = Just Areaspec_Revisionflag_Deleted
	    translate "off" = Just Areaspec_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Areaspec_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Areaspec_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Areaspec_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Areaspec_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Area where
    fromElem (CElem (Elem "area" as []):rest) =
	(Just (fromAttrs as), rest)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem as =
	[CElem (Elem "area" (toAttrs as) [])]
instance XmlAttributes Area where
    fromAttrs as =
	Area
	  { areaLabel = possibleA fromAttrToStr "label" as
	  , areaLinkends = possibleA fromAttrToStr "linkends" as
	  , areaUnits = possibleA fromAttrToTyp "units" as
	  , areaOtherunits = possibleA fromAttrToStr "otherunits" as
	  , areaCoords = definiteA fromAttrToStr "area" "coords" as
	  , areaId = definiteA fromAttrToStr "area" "id" as
	  , areaLang = possibleA fromAttrToStr "lang" as
	  , areaRemap = possibleA fromAttrToStr "remap" as
	  , areaXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , areaRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , areaArch = possibleA fromAttrToStr "arch" as
	  , areaCondition = possibleA fromAttrToStr "condition" as
	  , areaConformance = possibleA fromAttrToStr "conformance" as
	  , areaOs = possibleA fromAttrToStr "os" as
	  , areaRevision = possibleA fromAttrToStr "revision" as
	  , areaSecurity = possibleA fromAttrToStr "security" as
	  , areaUserlevel = possibleA fromAttrToStr "userlevel" as
	  , areaVendor = possibleA fromAttrToStr "vendor" as
	  , areaRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (areaLabel v)
	, maybeToAttr toAttrFrStr "linkends" (areaLinkends v)
	, maybeToAttr toAttrFrTyp "units" (areaUnits v)
	, maybeToAttr toAttrFrStr "otherunits" (areaOtherunits v)
	, toAttrFrStr "coords" (areaCoords v)
	, toAttrFrStr "id" (areaId v)
	, maybeToAttr toAttrFrStr "lang" (areaLang v)
	, maybeToAttr toAttrFrStr "remap" (areaRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (areaXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (areaRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (areaArch v)
	, maybeToAttr toAttrFrStr "condition" (areaCondition v)
	, maybeToAttr toAttrFrStr "conformance" (areaConformance v)
	, maybeToAttr toAttrFrStr "os" (areaOs v)
	, maybeToAttr toAttrFrStr "revision" (areaRevision v)
	, maybeToAttr toAttrFrStr "security" (areaSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (areaUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (areaVendor v)
	, maybeToAttr toAttrFrStr "role" (areaRole v)
	]
instance XmlAttrType Area_Units where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "calspair" = Just Area_Units_Calspair
	    translate "linecolumn" = Just Area_Units_Linecolumn
	    translate "linerange" = Just Area_Units_Linerange
	    translate "linecolumnpair" = Just Area_Units_Linecolumnpair
	    translate "other" = Just Area_Units_Other
	    translate _ = Nothing
    toAttrFrTyp n Area_Units_Calspair = Just (n, str2attr "calspair")
    toAttrFrTyp n Area_Units_Linecolumn = Just (n, str2attr "linecolumn")
    toAttrFrTyp n Area_Units_Linerange = Just (n, str2attr "linerange")
    toAttrFrTyp n Area_Units_Linecolumnpair = Just (n, str2attr "linecolumnpair")
    toAttrFrTyp n Area_Units_Other = Just (n, str2attr "other")
instance XmlAttrType Area_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Area_Revisionflag_Changed
	    translate "added" = Just Area_Revisionflag_Added
	    translate "deleted" = Just Area_Revisionflag_Deleted
	    translate "off" = Just Area_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Area_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Area_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Area_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Area_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Areaset where
    fromElem (CElem (Elem "areaset" as c0):rest) =
	(\(a,ca)->
	   (Just (Areaset (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Areaset as a) =
	[CElem (Elem "areaset" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Areaset_Attrs where
    fromAttrs as =
	Areaset_Attrs
	  { areasetLabel = possibleA fromAttrToStr "label" as
	  , areasetUnits = possibleA fromAttrToTyp "units" as
	  , areasetOtherunits = possibleA fromAttrToStr "otherunits" as
	  , areasetCoords = definiteA fromAttrToStr "areaset" "coords" as
	  , areasetId = definiteA fromAttrToStr "areaset" "id" as
	  , areasetLang = possibleA fromAttrToStr "lang" as
	  , areasetRemap = possibleA fromAttrToStr "remap" as
	  , areasetXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , areasetRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , areasetArch = possibleA fromAttrToStr "arch" as
	  , areasetCondition = possibleA fromAttrToStr "condition" as
	  , areasetConformance = possibleA fromAttrToStr "conformance" as
	  , areasetOs = possibleA fromAttrToStr "os" as
	  , areasetRevision = possibleA fromAttrToStr "revision" as
	  , areasetSecurity = possibleA fromAttrToStr "security" as
	  , areasetUserlevel = possibleA fromAttrToStr "userlevel" as
	  , areasetVendor = possibleA fromAttrToStr "vendor" as
	  , areasetRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (areasetLabel v)
	, maybeToAttr toAttrFrTyp "units" (areasetUnits v)
	, maybeToAttr toAttrFrStr "otherunits" (areasetOtherunits v)
	, toAttrFrStr "coords" (areasetCoords v)
	, toAttrFrStr "id" (areasetId v)
	, maybeToAttr toAttrFrStr "lang" (areasetLang v)
	, maybeToAttr toAttrFrStr "remap" (areasetRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (areasetXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (areasetRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (areasetArch v)
	, maybeToAttr toAttrFrStr "condition" (areasetCondition v)
	, maybeToAttr toAttrFrStr "conformance" (areasetConformance v)
	, maybeToAttr toAttrFrStr "os" (areasetOs v)
	, maybeToAttr toAttrFrStr "revision" (areasetRevision v)
	, maybeToAttr toAttrFrStr "security" (areasetSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (areasetUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (areasetVendor v)
	, maybeToAttr toAttrFrStr "role" (areasetRole v)
	]
instance XmlAttrType Areaset_Units where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "calspair" = Just Areaset_Units_Calspair
	    translate "linecolumn" = Just Areaset_Units_Linecolumn
	    translate "linerange" = Just Areaset_Units_Linerange
	    translate "linecolumnpair" = Just Areaset_Units_Linecolumnpair
	    translate "other" = Just Areaset_Units_Other
	    translate _ = Nothing
    toAttrFrTyp n Areaset_Units_Calspair = Just (n, str2attr "calspair")
    toAttrFrTyp n Areaset_Units_Linecolumn = Just (n, str2attr "linecolumn")
    toAttrFrTyp n Areaset_Units_Linerange = Just (n, str2attr "linerange")
    toAttrFrTyp n Areaset_Units_Linecolumnpair = Just (n, str2attr "linecolumnpair")
    toAttrFrTyp n Areaset_Units_Other = Just (n, str2attr "other")
instance XmlAttrType Areaset_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Areaset_Revisionflag_Changed
	    translate "added" = Just Areaset_Revisionflag_Added
	    translate "deleted" = Just Areaset_Revisionflag_Deleted
	    translate "off" = Just Areaset_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Areaset_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Areaset_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Areaset_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Areaset_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Programlisting where
    fromElem (CElem (Elem "programlisting" as c0):rest) =
	(\(a,ca)->
	   (Just (Programlisting (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Programlisting as a) =
	[CElem (Elem "programlisting" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Programlisting_Attrs where
    fromAttrs as =
	Programlisting_Attrs
	  { programlistingWidth = possibleA fromAttrToStr "width" as
	  , programlistingFormat = defaultA fromAttrToTyp Programlisting_Format_Linespecific "format" as
	  , programlistingLinenumbering = possibleA fromAttrToTyp "linenumbering" as
	  , programlistingId = possibleA fromAttrToStr "id" as
	  , programlistingLang = possibleA fromAttrToStr "lang" as
	  , programlistingRemap = possibleA fromAttrToStr "remap" as
	  , programlistingXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , programlistingRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , programlistingArch = possibleA fromAttrToStr "arch" as
	  , programlistingCondition = possibleA fromAttrToStr "condition" as
	  , programlistingConformance = possibleA fromAttrToStr "conformance" as
	  , programlistingOs = possibleA fromAttrToStr "os" as
	  , programlistingRevision = possibleA fromAttrToStr "revision" as
	  , programlistingSecurity = possibleA fromAttrToStr "security" as
	  , programlistingUserlevel = possibleA fromAttrToStr "userlevel" as
	  , programlistingVendor = possibleA fromAttrToStr "vendor" as
	  , programlistingRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "width" (programlistingWidth v)
	, defaultToAttr toAttrFrTyp "format" (programlistingFormat v)
	, maybeToAttr toAttrFrTyp "linenumbering" (programlistingLinenumbering v)
	, maybeToAttr toAttrFrStr "id" (programlistingId v)
	, maybeToAttr toAttrFrStr "lang" (programlistingLang v)
	, maybeToAttr toAttrFrStr "remap" (programlistingRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (programlistingXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (programlistingRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (programlistingArch v)
	, maybeToAttr toAttrFrStr "condition" (programlistingCondition v)
	, maybeToAttr toAttrFrStr "conformance" (programlistingConformance v)
	, maybeToAttr toAttrFrStr "os" (programlistingOs v)
	, maybeToAttr toAttrFrStr "revision" (programlistingRevision v)
	, maybeToAttr toAttrFrStr "security" (programlistingSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (programlistingUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (programlistingVendor v)
	, maybeToAttr toAttrFrStr "role" (programlistingRole v)
	]
instance XmlContent Programlisting_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Programlisting_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Programlisting_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Programlisting_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Programlisting_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Programlisting_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Programlisting_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Programlisting_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Programlisting_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Programlisting_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Programlisting_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Programlisting_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Programlisting_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Programlisting_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Programlisting_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Programlisting_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Programlisting_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Programlisting_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Programlisting_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Programlisting_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Programlisting_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Programlisting_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Programlisting_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Programlisting_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Programlisting_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Programlisting_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Programlisting_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Programlisting_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Programlisting_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Programlisting_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Programlisting_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Programlisting_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Programlisting_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Programlisting_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Programlisting_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Programlisting_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Programlisting_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Programlisting_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Programlisting_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Programlisting_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Programlisting_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Programlisting_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Programlisting_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Programlisting_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Programlisting_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Programlisting_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Programlisting_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Programlisting_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Programlisting_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Programlisting_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Programlisting_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Programlisting_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Programlisting_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Programlisting_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Programlisting_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Programlisting_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Programlisting_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Programlisting_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Programlisting_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Programlisting_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Programlisting_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Programlisting_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Programlisting_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Programlisting_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Programlisting_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Programlisting_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Programlisting_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Programlisting_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Programlisting_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Programlisting_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Programlisting_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Programlisting_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Programlisting_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Programlisting_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Programlisting_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Programlisting_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Programlisting_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Programlisting_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Programlisting_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Programlisting_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Programlisting_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Programlisting_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Programlisting_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Programlisting_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Programlisting_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Programlisting_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Programlisting_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Programlisting_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Programlisting_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Programlisting_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Programlisting_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Programlisting_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Programlisting_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Programlisting_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Programlisting_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Programlisting_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Programlisting_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Programlisting_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Programlisting_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Programlisting_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Programlisting_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																					case (fromElem c0) of
																																																																																																					(Just a,rest) -> (Just (Programlisting_Co a), rest)
																																																																																																					(_,_) ->
																																																																																																						case (fromElem c0) of
																																																																																																						(Just a,rest) -> (Just (Programlisting_Coref a), rest)
																																																																																																						(_,_) ->
																																																																																																							case (fromElem c0) of
																																																																																																							(Just a,rest) -> (Just (Programlisting_Lineannotation a), rest)
																																																																																																							(_,_) ->
																																																																																																								case (fromElem c0) of
																																																																																																								(Just a,rest) -> (Just (Programlisting_Textobject a), rest)
																																																																																																								(_,_) ->
																																																																																																								    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Programlisting_Str a) = toText a
    toElem (Programlisting_Footnoteref a) = toElem a
    toElem (Programlisting_Xref a) = toElem a
    toElem (Programlisting_Abbrev a) = toElem a
    toElem (Programlisting_Acronym a) = toElem a
    toElem (Programlisting_Citation a) = toElem a
    toElem (Programlisting_Citerefentry a) = toElem a
    toElem (Programlisting_Citetitle a) = toElem a
    toElem (Programlisting_Emphasis a) = toElem a
    toElem (Programlisting_Firstterm a) = toElem a
    toElem (Programlisting_Foreignphrase a) = toElem a
    toElem (Programlisting_Glossterm a) = toElem a
    toElem (Programlisting_Footnote a) = toElem a
    toElem (Programlisting_Phrase a) = toElem a
    toElem (Programlisting_Quote a) = toElem a
    toElem (Programlisting_Trademark a) = toElem a
    toElem (Programlisting_Wordasword a) = toElem a
    toElem (Programlisting_Personname a) = toElem a
    toElem (Programlisting_Link a) = toElem a
    toElem (Programlisting_Olink a) = toElem a
    toElem (Programlisting_Ulink a) = toElem a
    toElem (Programlisting_Action a) = toElem a
    toElem (Programlisting_Application a) = toElem a
    toElem (Programlisting_Classname a) = toElem a
    toElem (Programlisting_Methodname a) = toElem a
    toElem (Programlisting_Interfacename a) = toElem a
    toElem (Programlisting_Exceptionname a) = toElem a
    toElem (Programlisting_Ooclass a) = toElem a
    toElem (Programlisting_Oointerface a) = toElem a
    toElem (Programlisting_Ooexception a) = toElem a
    toElem (Programlisting_Command a) = toElem a
    toElem (Programlisting_Computeroutput a) = toElem a
    toElem (Programlisting_Database a) = toElem a
    toElem (Programlisting_Email a) = toElem a
    toElem (Programlisting_Envar a) = toElem a
    toElem (Programlisting_Errorcode a) = toElem a
    toElem (Programlisting_Errorname a) = toElem a
    toElem (Programlisting_Errortype a) = toElem a
    toElem (Programlisting_Errortext a) = toElem a
    toElem (Programlisting_Filename a) = toElem a
    toElem (Programlisting_Function a) = toElem a
    toElem (Programlisting_Guibutton a) = toElem a
    toElem (Programlisting_Guiicon a) = toElem a
    toElem (Programlisting_Guilabel a) = toElem a
    toElem (Programlisting_Guimenu a) = toElem a
    toElem (Programlisting_Guimenuitem a) = toElem a
    toElem (Programlisting_Guisubmenu a) = toElem a
    toElem (Programlisting_Hardware a) = toElem a
    toElem (Programlisting_Interface a) = toElem a
    toElem (Programlisting_Keycap a) = toElem a
    toElem (Programlisting_Keycode a) = toElem a
    toElem (Programlisting_Keycombo a) = toElem a
    toElem (Programlisting_Keysym a) = toElem a
    toElem (Programlisting_Literal a) = toElem a
    toElem (Programlisting_Constant a) = toElem a
    toElem (Programlisting_Markup a) = toElem a
    toElem (Programlisting_Medialabel a) = toElem a
    toElem (Programlisting_Menuchoice a) = toElem a
    toElem (Programlisting_Mousebutton a) = toElem a
    toElem (Programlisting_Option a) = toElem a
    toElem (Programlisting_Optional a) = toElem a
    toElem (Programlisting_Parameter a) = toElem a
    toElem (Programlisting_Prompt a) = toElem a
    toElem (Programlisting_Property a) = toElem a
    toElem (Programlisting_Replaceable a) = toElem a
    toElem (Programlisting_Returnvalue a) = toElem a
    toElem (Programlisting_Sgmltag a) = toElem a
    toElem (Programlisting_Structfield a) = toElem a
    toElem (Programlisting_Structname a) = toElem a
    toElem (Programlisting_Symbol a) = toElem a
    toElem (Programlisting_Systemitem a) = toElem a
    toElem (Programlisting_Token a) = toElem a
    toElem (Programlisting_Type a) = toElem a
    toElem (Programlisting_Userinput a) = toElem a
    toElem (Programlisting_Varname a) = toElem a
    toElem (Programlisting_Anchor a) = toElem a
    toElem (Programlisting_Author a) = toElem a
    toElem (Programlisting_Authorinitials a) = toElem a
    toElem (Programlisting_Corpauthor a) = toElem a
    toElem (Programlisting_Modespec a) = toElem a
    toElem (Programlisting_Othercredit a) = toElem a
    toElem (Programlisting_Productname a) = toElem a
    toElem (Programlisting_Productnumber a) = toElem a
    toElem (Programlisting_Revhistory a) = toElem a
    toElem (Programlisting_Remark a) = toElem a
    toElem (Programlisting_Subscript a) = toElem a
    toElem (Programlisting_Superscript a) = toElem a
    toElem (Programlisting_Inlinegraphic a) = toElem a
    toElem (Programlisting_Inlinemediaobject a) = toElem a
    toElem (Programlisting_Inlineequation a) = toElem a
    toElem (Programlisting_Synopsis a) = toElem a
    toElem (Programlisting_Cmdsynopsis a) = toElem a
    toElem (Programlisting_Funcsynopsis a) = toElem a
    toElem (Programlisting_Classsynopsis a) = toElem a
    toElem (Programlisting_Fieldsynopsis a) = toElem a
    toElem (Programlisting_Constructorsynopsis a) = toElem a
    toElem (Programlisting_Destructorsynopsis a) = toElem a
    toElem (Programlisting_Methodsynopsis a) = toElem a
    toElem (Programlisting_Indexterm a) = toElem a
    toElem (Programlisting_Beginpage a) = toElem a
    toElem (Programlisting_Co a) = toElem a
    toElem (Programlisting_Coref a) = toElem a
    toElem (Programlisting_Lineannotation a) = toElem a
    toElem (Programlisting_Textobject a) = toElem a
instance XmlAttrType Programlisting_Format where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "linespecific" = Just Programlisting_Format_Linespecific
	    translate _ = Nothing
    toAttrFrTyp n Programlisting_Format_Linespecific = Just (n, str2attr "linespecific")
instance XmlAttrType Programlisting_Linenumbering where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "numbered" = Just Programlisting_Linenumbering_Numbered
	    translate "unnumbered" = Just Programlisting_Linenumbering_Unnumbered
	    translate _ = Nothing
    toAttrFrTyp n Programlisting_Linenumbering_Numbered = Just (n, str2attr "numbered")
    toAttrFrTyp n Programlisting_Linenumbering_Unnumbered = Just (n, str2attr "unnumbered")
instance XmlAttrType Programlisting_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Programlisting_Revisionflag_Changed
	    translate "added" = Just Programlisting_Revisionflag_Added
	    translate "deleted" = Just Programlisting_Revisionflag_Deleted
	    translate "off" = Just Programlisting_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Programlisting_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Programlisting_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Programlisting_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Programlisting_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Literallayout where
    fromElem (CElem (Elem "literallayout" as c0):rest) =
	(\(a,ca)->
	   (Just (Literallayout (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Literallayout as a) =
	[CElem (Elem "literallayout" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Literallayout_Attrs where
    fromAttrs as =
	Literallayout_Attrs
	  { literallayoutWidth = possibleA fromAttrToStr "width" as
	  , literallayoutFormat = defaultA fromAttrToTyp Literallayout_Format_Linespecific "format" as
	  , literallayoutLinenumbering = possibleA fromAttrToTyp "linenumbering" as
	  , literallayoutClass = defaultA fromAttrToTyp Literallayout_Class_Normal "class" as
	  , literallayoutId = possibleA fromAttrToStr "id" as
	  , literallayoutLang = possibleA fromAttrToStr "lang" as
	  , literallayoutRemap = possibleA fromAttrToStr "remap" as
	  , literallayoutXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , literallayoutRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , literallayoutArch = possibleA fromAttrToStr "arch" as
	  , literallayoutCondition = possibleA fromAttrToStr "condition" as
	  , literallayoutConformance = possibleA fromAttrToStr "conformance" as
	  , literallayoutOs = possibleA fromAttrToStr "os" as
	  , literallayoutRevision = possibleA fromAttrToStr "revision" as
	  , literallayoutSecurity = possibleA fromAttrToStr "security" as
	  , literallayoutUserlevel = possibleA fromAttrToStr "userlevel" as
	  , literallayoutVendor = possibleA fromAttrToStr "vendor" as
	  , literallayoutRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "width" (literallayoutWidth v)
	, defaultToAttr toAttrFrTyp "format" (literallayoutFormat v)
	, maybeToAttr toAttrFrTyp "linenumbering" (literallayoutLinenumbering v)
	, defaultToAttr toAttrFrTyp "class" (literallayoutClass v)
	, maybeToAttr toAttrFrStr "id" (literallayoutId v)
	, maybeToAttr toAttrFrStr "lang" (literallayoutLang v)
	, maybeToAttr toAttrFrStr "remap" (literallayoutRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (literallayoutXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (literallayoutRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (literallayoutArch v)
	, maybeToAttr toAttrFrStr "condition" (literallayoutCondition v)
	, maybeToAttr toAttrFrStr "conformance" (literallayoutConformance v)
	, maybeToAttr toAttrFrStr "os" (literallayoutOs v)
	, maybeToAttr toAttrFrStr "revision" (literallayoutRevision v)
	, maybeToAttr toAttrFrStr "security" (literallayoutSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (literallayoutUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (literallayoutVendor v)
	, maybeToAttr toAttrFrStr "role" (literallayoutRole v)
	]
instance XmlContent Literallayout_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Literallayout_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Literallayout_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Literallayout_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Literallayout_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Literallayout_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Literallayout_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Literallayout_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Literallayout_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Literallayout_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Literallayout_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Literallayout_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Literallayout_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Literallayout_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Literallayout_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Literallayout_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Literallayout_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Literallayout_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Literallayout_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Literallayout_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Literallayout_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Literallayout_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Literallayout_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Literallayout_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Literallayout_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Literallayout_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Literallayout_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Literallayout_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Literallayout_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Literallayout_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Literallayout_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Literallayout_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Literallayout_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Literallayout_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Literallayout_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Literallayout_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Literallayout_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Literallayout_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Literallayout_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Literallayout_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Literallayout_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Literallayout_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Literallayout_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Literallayout_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Literallayout_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Literallayout_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Literallayout_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Literallayout_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Literallayout_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Literallayout_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Literallayout_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Literallayout_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Literallayout_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Literallayout_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Literallayout_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Literallayout_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Literallayout_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Literallayout_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Literallayout_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Literallayout_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Literallayout_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Literallayout_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Literallayout_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Literallayout_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Literallayout_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Literallayout_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Literallayout_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Literallayout_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Literallayout_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Literallayout_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Literallayout_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Literallayout_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Literallayout_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Literallayout_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Literallayout_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Literallayout_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Literallayout_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Literallayout_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Literallayout_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Literallayout_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Literallayout_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Literallayout_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Literallayout_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Literallayout_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Literallayout_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Literallayout_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Literallayout_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Literallayout_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Literallayout_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Literallayout_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Literallayout_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Literallayout_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Literallayout_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Literallayout_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Literallayout_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Literallayout_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Literallayout_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Literallayout_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Literallayout_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Literallayout_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Literallayout_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																					case (fromElem c0) of
																																																																																																					(Just a,rest) -> (Just (Literallayout_Co a), rest)
																																																																																																					(_,_) ->
																																																																																																						case (fromElem c0) of
																																																																																																						(Just a,rest) -> (Just (Literallayout_Coref a), rest)
																																																																																																						(_,_) ->
																																																																																																							case (fromElem c0) of
																																																																																																							(Just a,rest) -> (Just (Literallayout_Textobject a), rest)
																																																																																																							(_,_) ->
																																																																																																								case (fromElem c0) of
																																																																																																								(Just a,rest) -> (Just (Literallayout_Lineannotation a), rest)
																																																																																																								(_,_) ->
																																																																																																								    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Literallayout_Str a) = toText a
    toElem (Literallayout_Footnoteref a) = toElem a
    toElem (Literallayout_Xref a) = toElem a
    toElem (Literallayout_Abbrev a) = toElem a
    toElem (Literallayout_Acronym a) = toElem a
    toElem (Literallayout_Citation a) = toElem a
    toElem (Literallayout_Citerefentry a) = toElem a
    toElem (Literallayout_Citetitle a) = toElem a
    toElem (Literallayout_Emphasis a) = toElem a
    toElem (Literallayout_Firstterm a) = toElem a
    toElem (Literallayout_Foreignphrase a) = toElem a
    toElem (Literallayout_Glossterm a) = toElem a
    toElem (Literallayout_Footnote a) = toElem a
    toElem (Literallayout_Phrase a) = toElem a
    toElem (Literallayout_Quote a) = toElem a
    toElem (Literallayout_Trademark a) = toElem a
    toElem (Literallayout_Wordasword a) = toElem a
    toElem (Literallayout_Personname a) = toElem a
    toElem (Literallayout_Link a) = toElem a
    toElem (Literallayout_Olink a) = toElem a
    toElem (Literallayout_Ulink a) = toElem a
    toElem (Literallayout_Action a) = toElem a
    toElem (Literallayout_Application a) = toElem a
    toElem (Literallayout_Classname a) = toElem a
    toElem (Literallayout_Methodname a) = toElem a
    toElem (Literallayout_Interfacename a) = toElem a
    toElem (Literallayout_Exceptionname a) = toElem a
    toElem (Literallayout_Ooclass a) = toElem a
    toElem (Literallayout_Oointerface a) = toElem a
    toElem (Literallayout_Ooexception a) = toElem a
    toElem (Literallayout_Command a) = toElem a
    toElem (Literallayout_Computeroutput a) = toElem a
    toElem (Literallayout_Database a) = toElem a
    toElem (Literallayout_Email a) = toElem a
    toElem (Literallayout_Envar a) = toElem a
    toElem (Literallayout_Errorcode a) = toElem a
    toElem (Literallayout_Errorname a) = toElem a
    toElem (Literallayout_Errortype a) = toElem a
    toElem (Literallayout_Errortext a) = toElem a
    toElem (Literallayout_Filename a) = toElem a
    toElem (Literallayout_Function a) = toElem a
    toElem (Literallayout_Guibutton a) = toElem a
    toElem (Literallayout_Guiicon a) = toElem a
    toElem (Literallayout_Guilabel a) = toElem a
    toElem (Literallayout_Guimenu a) = toElem a
    toElem (Literallayout_Guimenuitem a) = toElem a
    toElem (Literallayout_Guisubmenu a) = toElem a
    toElem (Literallayout_Hardware a) = toElem a
    toElem (Literallayout_Interface a) = toElem a
    toElem (Literallayout_Keycap a) = toElem a
    toElem (Literallayout_Keycode a) = toElem a
    toElem (Literallayout_Keycombo a) = toElem a
    toElem (Literallayout_Keysym a) = toElem a
    toElem (Literallayout_Literal a) = toElem a
    toElem (Literallayout_Constant a) = toElem a
    toElem (Literallayout_Markup a) = toElem a
    toElem (Literallayout_Medialabel a) = toElem a
    toElem (Literallayout_Menuchoice a) = toElem a
    toElem (Literallayout_Mousebutton a) = toElem a
    toElem (Literallayout_Option a) = toElem a
    toElem (Literallayout_Optional a) = toElem a
    toElem (Literallayout_Parameter a) = toElem a
    toElem (Literallayout_Prompt a) = toElem a
    toElem (Literallayout_Property a) = toElem a
    toElem (Literallayout_Replaceable a) = toElem a
    toElem (Literallayout_Returnvalue a) = toElem a
    toElem (Literallayout_Sgmltag a) = toElem a
    toElem (Literallayout_Structfield a) = toElem a
    toElem (Literallayout_Structname a) = toElem a
    toElem (Literallayout_Symbol a) = toElem a
    toElem (Literallayout_Systemitem a) = toElem a
    toElem (Literallayout_Token a) = toElem a
    toElem (Literallayout_Type a) = toElem a
    toElem (Literallayout_Userinput a) = toElem a
    toElem (Literallayout_Varname a) = toElem a
    toElem (Literallayout_Anchor a) = toElem a
    toElem (Literallayout_Author a) = toElem a
    toElem (Literallayout_Authorinitials a) = toElem a
    toElem (Literallayout_Corpauthor a) = toElem a
    toElem (Literallayout_Modespec a) = toElem a
    toElem (Literallayout_Othercredit a) = toElem a
    toElem (Literallayout_Productname a) = toElem a
    toElem (Literallayout_Productnumber a) = toElem a
    toElem (Literallayout_Revhistory a) = toElem a
    toElem (Literallayout_Remark a) = toElem a
    toElem (Literallayout_Subscript a) = toElem a
    toElem (Literallayout_Superscript a) = toElem a
    toElem (Literallayout_Inlinegraphic a) = toElem a
    toElem (Literallayout_Inlinemediaobject a) = toElem a
    toElem (Literallayout_Inlineequation a) = toElem a
    toElem (Literallayout_Synopsis a) = toElem a
    toElem (Literallayout_Cmdsynopsis a) = toElem a
    toElem (Literallayout_Funcsynopsis a) = toElem a
    toElem (Literallayout_Classsynopsis a) = toElem a
    toElem (Literallayout_Fieldsynopsis a) = toElem a
    toElem (Literallayout_Constructorsynopsis a) = toElem a
    toElem (Literallayout_Destructorsynopsis a) = toElem a
    toElem (Literallayout_Methodsynopsis a) = toElem a
    toElem (Literallayout_Indexterm a) = toElem a
    toElem (Literallayout_Beginpage a) = toElem a
    toElem (Literallayout_Co a) = toElem a
    toElem (Literallayout_Coref a) = toElem a
    toElem (Literallayout_Textobject a) = toElem a
    toElem (Literallayout_Lineannotation a) = toElem a
instance XmlAttrType Literallayout_Format where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "linespecific" = Just Literallayout_Format_Linespecific
	    translate _ = Nothing
    toAttrFrTyp n Literallayout_Format_Linespecific = Just (n, str2attr "linespecific")
instance XmlAttrType Literallayout_Linenumbering where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "numbered" = Just Literallayout_Linenumbering_Numbered
	    translate "unnumbered" = Just Literallayout_Linenumbering_Unnumbered
	    translate _ = Nothing
    toAttrFrTyp n Literallayout_Linenumbering_Numbered = Just (n, str2attr "numbered")
    toAttrFrTyp n Literallayout_Linenumbering_Unnumbered = Just (n, str2attr "unnumbered")
instance XmlAttrType Literallayout_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "monospaced" = Just Literallayout_Class_Monospaced
	    translate "normal" = Just Literallayout_Class_Normal
	    translate _ = Nothing
    toAttrFrTyp n Literallayout_Class_Monospaced = Just (n, str2attr "monospaced")
    toAttrFrTyp n Literallayout_Class_Normal = Just (n, str2attr "normal")
instance XmlAttrType Literallayout_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Literallayout_Revisionflag_Changed
	    translate "added" = Just Literallayout_Revisionflag_Added
	    translate "deleted" = Just Literallayout_Revisionflag_Deleted
	    translate "off" = Just Literallayout_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Literallayout_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Literallayout_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Literallayout_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Literallayout_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Screenco where
    fromElem (CElem (Elem "screenco" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Screenco (fromAttrs as) a b c), rest))
	      (many fromElem cb))
	   (definite fromElem "<screen>" "screenco" ca))
	(definite fromElem "<areaspec>" "screenco" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Screenco as a b c) =
	[CElem (Elem "screenco" (toAttrs as) (toElem a ++ toElem b ++
					      concatMap toElem c))]
instance XmlAttributes Screenco_Attrs where
    fromAttrs as =
	Screenco_Attrs
	  { screencoId = possibleA fromAttrToStr "id" as
	  , screencoLang = possibleA fromAttrToStr "lang" as
	  , screencoRemap = possibleA fromAttrToStr "remap" as
	  , screencoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , screencoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , screencoArch = possibleA fromAttrToStr "arch" as
	  , screencoCondition = possibleA fromAttrToStr "condition" as
	  , screencoConformance = possibleA fromAttrToStr "conformance" as
	  , screencoOs = possibleA fromAttrToStr "os" as
	  , screencoRevision = possibleA fromAttrToStr "revision" as
	  , screencoSecurity = possibleA fromAttrToStr "security" as
	  , screencoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , screencoVendor = possibleA fromAttrToStr "vendor" as
	  , screencoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (screencoId v)
	, maybeToAttr toAttrFrStr "lang" (screencoLang v)
	, maybeToAttr toAttrFrStr "remap" (screencoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (screencoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (screencoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (screencoArch v)
	, maybeToAttr toAttrFrStr "condition" (screencoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (screencoConformance v)
	, maybeToAttr toAttrFrStr "os" (screencoOs v)
	, maybeToAttr toAttrFrStr "revision" (screencoRevision v)
	, maybeToAttr toAttrFrStr "security" (screencoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (screencoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (screencoVendor v)
	, maybeToAttr toAttrFrStr "role" (screencoRole v)
	]
instance XmlAttrType Screenco_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Screenco_Revisionflag_Changed
	    translate "added" = Just Screenco_Revisionflag_Added
	    translate "deleted" = Just Screenco_Revisionflag_Deleted
	    translate "off" = Just Screenco_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Screenco_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Screenco_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Screenco_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Screenco_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Screen where
    fromElem (CElem (Elem "screen" as c0):rest) =
	(\(a,ca)->
	   (Just (Screen (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Screen as a) =
	[CElem (Elem "screen" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Screen_Attrs where
    fromAttrs as =
	Screen_Attrs
	  { screenWidth = possibleA fromAttrToStr "width" as
	  , screenFormat = defaultA fromAttrToTyp Screen_Format_Linespecific "format" as
	  , screenLinenumbering = possibleA fromAttrToTyp "linenumbering" as
	  , screenId = possibleA fromAttrToStr "id" as
	  , screenLang = possibleA fromAttrToStr "lang" as
	  , screenRemap = possibleA fromAttrToStr "remap" as
	  , screenXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , screenRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , screenArch = possibleA fromAttrToStr "arch" as
	  , screenCondition = possibleA fromAttrToStr "condition" as
	  , screenConformance = possibleA fromAttrToStr "conformance" as
	  , screenOs = possibleA fromAttrToStr "os" as
	  , screenRevision = possibleA fromAttrToStr "revision" as
	  , screenSecurity = possibleA fromAttrToStr "security" as
	  , screenUserlevel = possibleA fromAttrToStr "userlevel" as
	  , screenVendor = possibleA fromAttrToStr "vendor" as
	  , screenRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "width" (screenWidth v)
	, defaultToAttr toAttrFrTyp "format" (screenFormat v)
	, maybeToAttr toAttrFrTyp "linenumbering" (screenLinenumbering v)
	, maybeToAttr toAttrFrStr "id" (screenId v)
	, maybeToAttr toAttrFrStr "lang" (screenLang v)
	, maybeToAttr toAttrFrStr "remap" (screenRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (screenXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (screenRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (screenArch v)
	, maybeToAttr toAttrFrStr "condition" (screenCondition v)
	, maybeToAttr toAttrFrStr "conformance" (screenConformance v)
	, maybeToAttr toAttrFrStr "os" (screenOs v)
	, maybeToAttr toAttrFrStr "revision" (screenRevision v)
	, maybeToAttr toAttrFrStr "security" (screenSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (screenUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (screenVendor v)
	, maybeToAttr toAttrFrStr "role" (screenRole v)
	]
instance XmlContent Screen_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Screen_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Screen_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Screen_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Screen_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Screen_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Screen_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Screen_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Screen_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Screen_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Screen_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Screen_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Screen_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Screen_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Screen_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Screen_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Screen_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Screen_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Screen_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Screen_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Screen_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Screen_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Screen_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Screen_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Screen_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Screen_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Screen_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Screen_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Screen_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Screen_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Screen_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Screen_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Screen_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Screen_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Screen_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Screen_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Screen_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Screen_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Screen_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Screen_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Screen_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Screen_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Screen_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Screen_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Screen_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Screen_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Screen_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Screen_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Screen_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Screen_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Screen_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Screen_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Screen_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Screen_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Screen_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Screen_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Screen_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Screen_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Screen_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Screen_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Screen_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Screen_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Screen_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Screen_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Screen_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Screen_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Screen_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Screen_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Screen_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Screen_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Screen_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Screen_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Screen_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Screen_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Screen_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Screen_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Screen_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Screen_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Screen_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Screen_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Screen_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Screen_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Screen_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Screen_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Screen_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Screen_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Screen_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Screen_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Screen_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Screen_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Screen_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Screen_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Screen_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Screen_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Screen_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Screen_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Screen_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Screen_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Screen_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Screen_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Screen_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																					case (fromElem c0) of
																																																																																																					(Just a,rest) -> (Just (Screen_Co a), rest)
																																																																																																					(_,_) ->
																																																																																																						case (fromElem c0) of
																																																																																																						(Just a,rest) -> (Just (Screen_Coref a), rest)
																																																																																																						(_,_) ->
																																																																																																							case (fromElem c0) of
																																																																																																							(Just a,rest) -> (Just (Screen_Textobject a), rest)
																																																																																																							(_,_) ->
																																																																																																								case (fromElem c0) of
																																																																																																								(Just a,rest) -> (Just (Screen_Lineannotation a), rest)
																																																																																																								(_,_) ->
																																																																																																								    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Screen_Str a) = toText a
    toElem (Screen_Footnoteref a) = toElem a
    toElem (Screen_Xref a) = toElem a
    toElem (Screen_Abbrev a) = toElem a
    toElem (Screen_Acronym a) = toElem a
    toElem (Screen_Citation a) = toElem a
    toElem (Screen_Citerefentry a) = toElem a
    toElem (Screen_Citetitle a) = toElem a
    toElem (Screen_Emphasis a) = toElem a
    toElem (Screen_Firstterm a) = toElem a
    toElem (Screen_Foreignphrase a) = toElem a
    toElem (Screen_Glossterm a) = toElem a
    toElem (Screen_Footnote a) = toElem a
    toElem (Screen_Phrase a) = toElem a
    toElem (Screen_Quote a) = toElem a
    toElem (Screen_Trademark a) = toElem a
    toElem (Screen_Wordasword a) = toElem a
    toElem (Screen_Personname a) = toElem a
    toElem (Screen_Link a) = toElem a
    toElem (Screen_Olink a) = toElem a
    toElem (Screen_Ulink a) = toElem a
    toElem (Screen_Action a) = toElem a
    toElem (Screen_Application a) = toElem a
    toElem (Screen_Classname a) = toElem a
    toElem (Screen_Methodname a) = toElem a
    toElem (Screen_Interfacename a) = toElem a
    toElem (Screen_Exceptionname a) = toElem a
    toElem (Screen_Ooclass a) = toElem a
    toElem (Screen_Oointerface a) = toElem a
    toElem (Screen_Ooexception a) = toElem a
    toElem (Screen_Command a) = toElem a
    toElem (Screen_Computeroutput a) = toElem a
    toElem (Screen_Database a) = toElem a
    toElem (Screen_Email a) = toElem a
    toElem (Screen_Envar a) = toElem a
    toElem (Screen_Errorcode a) = toElem a
    toElem (Screen_Errorname a) = toElem a
    toElem (Screen_Errortype a) = toElem a
    toElem (Screen_Errortext a) = toElem a
    toElem (Screen_Filename a) = toElem a
    toElem (Screen_Function a) = toElem a
    toElem (Screen_Guibutton a) = toElem a
    toElem (Screen_Guiicon a) = toElem a
    toElem (Screen_Guilabel a) = toElem a
    toElem (Screen_Guimenu a) = toElem a
    toElem (Screen_Guimenuitem a) = toElem a
    toElem (Screen_Guisubmenu a) = toElem a
    toElem (Screen_Hardware a) = toElem a
    toElem (Screen_Interface a) = toElem a
    toElem (Screen_Keycap a) = toElem a
    toElem (Screen_Keycode a) = toElem a
    toElem (Screen_Keycombo a) = toElem a
    toElem (Screen_Keysym a) = toElem a
    toElem (Screen_Literal a) = toElem a
    toElem (Screen_Constant a) = toElem a
    toElem (Screen_Markup a) = toElem a
    toElem (Screen_Medialabel a) = toElem a
    toElem (Screen_Menuchoice a) = toElem a
    toElem (Screen_Mousebutton a) = toElem a
    toElem (Screen_Option a) = toElem a
    toElem (Screen_Optional a) = toElem a
    toElem (Screen_Parameter a) = toElem a
    toElem (Screen_Prompt a) = toElem a
    toElem (Screen_Property a) = toElem a
    toElem (Screen_Replaceable a) = toElem a
    toElem (Screen_Returnvalue a) = toElem a
    toElem (Screen_Sgmltag a) = toElem a
    toElem (Screen_Structfield a) = toElem a
    toElem (Screen_Structname a) = toElem a
    toElem (Screen_Symbol a) = toElem a
    toElem (Screen_Systemitem a) = toElem a
    toElem (Screen_Token a) = toElem a
    toElem (Screen_Type a) = toElem a
    toElem (Screen_Userinput a) = toElem a
    toElem (Screen_Varname a) = toElem a
    toElem (Screen_Anchor a) = toElem a
    toElem (Screen_Author a) = toElem a
    toElem (Screen_Authorinitials a) = toElem a
    toElem (Screen_Corpauthor a) = toElem a
    toElem (Screen_Modespec a) = toElem a
    toElem (Screen_Othercredit a) = toElem a
    toElem (Screen_Productname a) = toElem a
    toElem (Screen_Productnumber a) = toElem a
    toElem (Screen_Revhistory a) = toElem a
    toElem (Screen_Remark a) = toElem a
    toElem (Screen_Subscript a) = toElem a
    toElem (Screen_Superscript a) = toElem a
    toElem (Screen_Inlinegraphic a) = toElem a
    toElem (Screen_Inlinemediaobject a) = toElem a
    toElem (Screen_Inlineequation a) = toElem a
    toElem (Screen_Synopsis a) = toElem a
    toElem (Screen_Cmdsynopsis a) = toElem a
    toElem (Screen_Funcsynopsis a) = toElem a
    toElem (Screen_Classsynopsis a) = toElem a
    toElem (Screen_Fieldsynopsis a) = toElem a
    toElem (Screen_Constructorsynopsis a) = toElem a
    toElem (Screen_Destructorsynopsis a) = toElem a
    toElem (Screen_Methodsynopsis a) = toElem a
    toElem (Screen_Indexterm a) = toElem a
    toElem (Screen_Beginpage a) = toElem a
    toElem (Screen_Co a) = toElem a
    toElem (Screen_Coref a) = toElem a
    toElem (Screen_Textobject a) = toElem a
    toElem (Screen_Lineannotation a) = toElem a
instance XmlAttrType Screen_Format where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "linespecific" = Just Screen_Format_Linespecific
	    translate _ = Nothing
    toAttrFrTyp n Screen_Format_Linespecific = Just (n, str2attr "linespecific")
instance XmlAttrType Screen_Linenumbering where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "numbered" = Just Screen_Linenumbering_Numbered
	    translate "unnumbered" = Just Screen_Linenumbering_Unnumbered
	    translate _ = Nothing
    toAttrFrTyp n Screen_Linenumbering_Numbered = Just (n, str2attr "numbered")
    toAttrFrTyp n Screen_Linenumbering_Unnumbered = Just (n, str2attr "unnumbered")
instance XmlAttrType Screen_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Screen_Revisionflag_Changed
	    translate "added" = Just Screen_Revisionflag_Added
	    translate "deleted" = Just Screen_Revisionflag_Deleted
	    translate "off" = Just Screen_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Screen_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Screen_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Screen_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Screen_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Screenshot where
    fromElem (CElem (Elem "screenshot" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Screenshot (fromAttrs as) a b), rest))
	   (definite fromElem "OneOf" "screenshot" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Screenshot as a b) =
	[CElem (Elem "screenshot" (toAttrs as) (maybe [] toElem a ++
						toElem b))]
instance XmlAttributes Screenshot_Attrs where
    fromAttrs as =
	Screenshot_Attrs
	  { screenshotId = possibleA fromAttrToStr "id" as
	  , screenshotLang = possibleA fromAttrToStr "lang" as
	  , screenshotRemap = possibleA fromAttrToStr "remap" as
	  , screenshotXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , screenshotRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , screenshotArch = possibleA fromAttrToStr "arch" as
	  , screenshotCondition = possibleA fromAttrToStr "condition" as
	  , screenshotConformance = possibleA fromAttrToStr "conformance" as
	  , screenshotOs = possibleA fromAttrToStr "os" as
	  , screenshotRevision = possibleA fromAttrToStr "revision" as
	  , screenshotSecurity = possibleA fromAttrToStr "security" as
	  , screenshotUserlevel = possibleA fromAttrToStr "userlevel" as
	  , screenshotVendor = possibleA fromAttrToStr "vendor" as
	  , screenshotRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (screenshotId v)
	, maybeToAttr toAttrFrStr "lang" (screenshotLang v)
	, maybeToAttr toAttrFrStr "remap" (screenshotRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (screenshotXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (screenshotRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (screenshotArch v)
	, maybeToAttr toAttrFrStr "condition" (screenshotCondition v)
	, maybeToAttr toAttrFrStr "conformance" (screenshotConformance v)
	, maybeToAttr toAttrFrStr "os" (screenshotOs v)
	, maybeToAttr toAttrFrStr "revision" (screenshotRevision v)
	, maybeToAttr toAttrFrStr "security" (screenshotSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (screenshotUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (screenshotVendor v)
	, maybeToAttr toAttrFrStr "role" (screenshotRole v)
	]
instance XmlAttrType Screenshot_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Screenshot_Revisionflag_Changed
	    translate "added" = Just Screenshot_Revisionflag_Added
	    translate "deleted" = Just Screenshot_Revisionflag_Deleted
	    translate "off" = Just Screenshot_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Screenshot_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Screenshot_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Screenshot_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Screenshot_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Screeninfo where
    fromElem (CElem (Elem "screeninfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Screeninfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Screeninfo as a) =
	[CElem (Elem "screeninfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Screeninfo_Attrs where
    fromAttrs as =
	Screeninfo_Attrs
	  { screeninfoId = possibleA fromAttrToStr "id" as
	  , screeninfoLang = possibleA fromAttrToStr "lang" as
	  , screeninfoRemap = possibleA fromAttrToStr "remap" as
	  , screeninfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , screeninfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , screeninfoArch = possibleA fromAttrToStr "arch" as
	  , screeninfoCondition = possibleA fromAttrToStr "condition" as
	  , screeninfoConformance = possibleA fromAttrToStr "conformance" as
	  , screeninfoOs = possibleA fromAttrToStr "os" as
	  , screeninfoRevision = possibleA fromAttrToStr "revision" as
	  , screeninfoSecurity = possibleA fromAttrToStr "security" as
	  , screeninfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , screeninfoVendor = possibleA fromAttrToStr "vendor" as
	  , screeninfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (screeninfoId v)
	, maybeToAttr toAttrFrStr "lang" (screeninfoLang v)
	, maybeToAttr toAttrFrStr "remap" (screeninfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (screeninfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (screeninfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (screeninfoArch v)
	, maybeToAttr toAttrFrStr "condition" (screeninfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (screeninfoConformance v)
	, maybeToAttr toAttrFrStr "os" (screeninfoOs v)
	, maybeToAttr toAttrFrStr "revision" (screeninfoRevision v)
	, maybeToAttr toAttrFrStr "security" (screeninfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (screeninfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (screeninfoVendor v)
	, maybeToAttr toAttrFrStr "role" (screeninfoRole v)
	]
instance XmlContent Screeninfo_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Screeninfo_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Screeninfo_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Screeninfo_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Screeninfo_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Screeninfo_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Screeninfo_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Screeninfo_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Screeninfo_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Screeninfo_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Screeninfo_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Screeninfo_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Screeninfo_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Screeninfo_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Screeninfo_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Screeninfo_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Screeninfo_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Screeninfo_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Screeninfo_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Screeninfo_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Screeninfo_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Screeninfo_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Screeninfo_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Screeninfo_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Screeninfo_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Screeninfo_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Screeninfo_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Screeninfo_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Screeninfo_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Screeninfo_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Screeninfo_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Screeninfo_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Screeninfo_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Screeninfo_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Screeninfo_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Screeninfo_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Screeninfo_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Screeninfo_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Screeninfo_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Screeninfo_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Screeninfo_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Screeninfo_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Screeninfo_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Screeninfo_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Screeninfo_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Screeninfo_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Screeninfo_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Screeninfo_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Screeninfo_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Screeninfo_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Screeninfo_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Screeninfo_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Screeninfo_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Screeninfo_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Screeninfo_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Screeninfo_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Screeninfo_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Screeninfo_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Screeninfo_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Screeninfo_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Screeninfo_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Screeninfo_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Screeninfo_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Screeninfo_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Screeninfo_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Screeninfo_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Screeninfo_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Screeninfo_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Screeninfo_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Screeninfo_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Screeninfo_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Screeninfo_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Screeninfo_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Screeninfo_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Screeninfo_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Screeninfo_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Screeninfo_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Screeninfo_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Screeninfo_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Screeninfo_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Screeninfo_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Screeninfo_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Screeninfo_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Screeninfo_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Screeninfo_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Screeninfo_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Screeninfo_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Screeninfo_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Screeninfo_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Screeninfo_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Screeninfo_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Screeninfo_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Screeninfo_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Screeninfo_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Screeninfo_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Screeninfo_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Screeninfo_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Screeninfo_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Screeninfo_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Screeninfo_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Screeninfo_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Screeninfo_Str a) = toText a
    toElem (Screeninfo_Footnoteref a) = toElem a
    toElem (Screeninfo_Xref a) = toElem a
    toElem (Screeninfo_Abbrev a) = toElem a
    toElem (Screeninfo_Acronym a) = toElem a
    toElem (Screeninfo_Citation a) = toElem a
    toElem (Screeninfo_Citerefentry a) = toElem a
    toElem (Screeninfo_Citetitle a) = toElem a
    toElem (Screeninfo_Emphasis a) = toElem a
    toElem (Screeninfo_Firstterm a) = toElem a
    toElem (Screeninfo_Foreignphrase a) = toElem a
    toElem (Screeninfo_Glossterm a) = toElem a
    toElem (Screeninfo_Footnote a) = toElem a
    toElem (Screeninfo_Phrase a) = toElem a
    toElem (Screeninfo_Quote a) = toElem a
    toElem (Screeninfo_Trademark a) = toElem a
    toElem (Screeninfo_Wordasword a) = toElem a
    toElem (Screeninfo_Personname a) = toElem a
    toElem (Screeninfo_Link a) = toElem a
    toElem (Screeninfo_Olink a) = toElem a
    toElem (Screeninfo_Ulink a) = toElem a
    toElem (Screeninfo_Action a) = toElem a
    toElem (Screeninfo_Application a) = toElem a
    toElem (Screeninfo_Classname a) = toElem a
    toElem (Screeninfo_Methodname a) = toElem a
    toElem (Screeninfo_Interfacename a) = toElem a
    toElem (Screeninfo_Exceptionname a) = toElem a
    toElem (Screeninfo_Ooclass a) = toElem a
    toElem (Screeninfo_Oointerface a) = toElem a
    toElem (Screeninfo_Ooexception a) = toElem a
    toElem (Screeninfo_Command a) = toElem a
    toElem (Screeninfo_Computeroutput a) = toElem a
    toElem (Screeninfo_Database a) = toElem a
    toElem (Screeninfo_Email a) = toElem a
    toElem (Screeninfo_Envar a) = toElem a
    toElem (Screeninfo_Errorcode a) = toElem a
    toElem (Screeninfo_Errorname a) = toElem a
    toElem (Screeninfo_Errortype a) = toElem a
    toElem (Screeninfo_Errortext a) = toElem a
    toElem (Screeninfo_Filename a) = toElem a
    toElem (Screeninfo_Function a) = toElem a
    toElem (Screeninfo_Guibutton a) = toElem a
    toElem (Screeninfo_Guiicon a) = toElem a
    toElem (Screeninfo_Guilabel a) = toElem a
    toElem (Screeninfo_Guimenu a) = toElem a
    toElem (Screeninfo_Guimenuitem a) = toElem a
    toElem (Screeninfo_Guisubmenu a) = toElem a
    toElem (Screeninfo_Hardware a) = toElem a
    toElem (Screeninfo_Interface a) = toElem a
    toElem (Screeninfo_Keycap a) = toElem a
    toElem (Screeninfo_Keycode a) = toElem a
    toElem (Screeninfo_Keycombo a) = toElem a
    toElem (Screeninfo_Keysym a) = toElem a
    toElem (Screeninfo_Literal a) = toElem a
    toElem (Screeninfo_Constant a) = toElem a
    toElem (Screeninfo_Markup a) = toElem a
    toElem (Screeninfo_Medialabel a) = toElem a
    toElem (Screeninfo_Menuchoice a) = toElem a
    toElem (Screeninfo_Mousebutton a) = toElem a
    toElem (Screeninfo_Option a) = toElem a
    toElem (Screeninfo_Optional a) = toElem a
    toElem (Screeninfo_Parameter a) = toElem a
    toElem (Screeninfo_Prompt a) = toElem a
    toElem (Screeninfo_Property a) = toElem a
    toElem (Screeninfo_Replaceable a) = toElem a
    toElem (Screeninfo_Returnvalue a) = toElem a
    toElem (Screeninfo_Sgmltag a) = toElem a
    toElem (Screeninfo_Structfield a) = toElem a
    toElem (Screeninfo_Structname a) = toElem a
    toElem (Screeninfo_Symbol a) = toElem a
    toElem (Screeninfo_Systemitem a) = toElem a
    toElem (Screeninfo_Token a) = toElem a
    toElem (Screeninfo_Type a) = toElem a
    toElem (Screeninfo_Userinput a) = toElem a
    toElem (Screeninfo_Varname a) = toElem a
    toElem (Screeninfo_Anchor a) = toElem a
    toElem (Screeninfo_Author a) = toElem a
    toElem (Screeninfo_Authorinitials a) = toElem a
    toElem (Screeninfo_Corpauthor a) = toElem a
    toElem (Screeninfo_Modespec a) = toElem a
    toElem (Screeninfo_Othercredit a) = toElem a
    toElem (Screeninfo_Productname a) = toElem a
    toElem (Screeninfo_Productnumber a) = toElem a
    toElem (Screeninfo_Revhistory a) = toElem a
    toElem (Screeninfo_Remark a) = toElem a
    toElem (Screeninfo_Subscript a) = toElem a
    toElem (Screeninfo_Superscript a) = toElem a
    toElem (Screeninfo_Inlinegraphic a) = toElem a
    toElem (Screeninfo_Inlinemediaobject a) = toElem a
    toElem (Screeninfo_Inlineequation a) = toElem a
    toElem (Screeninfo_Synopsis a) = toElem a
    toElem (Screeninfo_Cmdsynopsis a) = toElem a
    toElem (Screeninfo_Funcsynopsis a) = toElem a
    toElem (Screeninfo_Classsynopsis a) = toElem a
    toElem (Screeninfo_Fieldsynopsis a) = toElem a
    toElem (Screeninfo_Constructorsynopsis a) = toElem a
    toElem (Screeninfo_Destructorsynopsis a) = toElem a
    toElem (Screeninfo_Methodsynopsis a) = toElem a
    toElem (Screeninfo_Indexterm a) = toElem a
    toElem (Screeninfo_Beginpage a) = toElem a
instance XmlAttrType Screeninfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Screeninfo_Revisionflag_Changed
	    translate "added" = Just Screeninfo_Revisionflag_Added
	    translate "deleted" = Just Screeninfo_Revisionflag_Deleted
	    translate "off" = Just Screeninfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Screeninfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Screeninfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Screeninfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Screeninfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Figure where
    fromElem (CElem (Elem "figure" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Figure (fromAttrs as) a b c d), rest))
		 (many fromElem cc))
	      (fromElem cb))
	   (definite fromElem "<title>" "figure" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Figure as a b c d) =
	[CElem (Elem "figure" (toAttrs as) (maybe [] toElem a ++ toElem b
					    ++ maybe [] toElem c ++ concatMap toElem d))]
instance XmlAttributes Figure_Attrs where
    fromAttrs as =
	Figure_Attrs
	  { figureFloat = defaultA fromAttrToStr "0" "float" as
	  , figurePgwide = possibleA fromAttrToStr "pgwide" as
	  , figureLabel = possibleA fromAttrToStr "label" as
	  , figureId = possibleA fromAttrToStr "id" as
	  , figureLang = possibleA fromAttrToStr "lang" as
	  , figureRemap = possibleA fromAttrToStr "remap" as
	  , figureXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , figureRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , figureArch = possibleA fromAttrToStr "arch" as
	  , figureCondition = possibleA fromAttrToStr "condition" as
	  , figureConformance = possibleA fromAttrToStr "conformance" as
	  , figureOs = possibleA fromAttrToStr "os" as
	  , figureRevision = possibleA fromAttrToStr "revision" as
	  , figureSecurity = possibleA fromAttrToStr "security" as
	  , figureUserlevel = possibleA fromAttrToStr "userlevel" as
	  , figureVendor = possibleA fromAttrToStr "vendor" as
	  , figureRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrStr "float" (figureFloat v)
	, maybeToAttr toAttrFrStr "pgwide" (figurePgwide v)
	, maybeToAttr toAttrFrStr "label" (figureLabel v)
	, maybeToAttr toAttrFrStr "id" (figureId v)
	, maybeToAttr toAttrFrStr "lang" (figureLang v)
	, maybeToAttr toAttrFrStr "remap" (figureRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (figureXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (figureRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (figureArch v)
	, maybeToAttr toAttrFrStr "condition" (figureCondition v)
	, maybeToAttr toAttrFrStr "conformance" (figureConformance v)
	, maybeToAttr toAttrFrStr "os" (figureOs v)
	, maybeToAttr toAttrFrStr "revision" (figureRevision v)
	, maybeToAttr toAttrFrStr "security" (figureSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (figureUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (figureVendor v)
	, maybeToAttr toAttrFrStr "role" (figureRole v)
	]
instance XmlAttrType Figure_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Figure_Revisionflag_Changed
	    translate "added" = Just Figure_Revisionflag_Added
	    translate "deleted" = Just Figure_Revisionflag_Deleted
	    translate "off" = Just Figure_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Figure_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Figure_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Figure_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Figure_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Informalfigure where
    fromElem (CElem (Elem "informalfigure" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Informalfigure (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Informalfigure as a b) =
	[CElem (Elem "informalfigure" (toAttrs as) (maybe [] toElem a ++
						    concatMap toElem b))]
instance XmlAttributes Informalfigure_Attrs where
    fromAttrs as =
	Informalfigure_Attrs
	  { informalfigureFloat = defaultA fromAttrToStr "0" "float" as
	  , informalfigurePgwide = possibleA fromAttrToStr "pgwide" as
	  , informalfigureLabel = possibleA fromAttrToStr "label" as
	  , informalfigureId = possibleA fromAttrToStr "id" as
	  , informalfigureLang = possibleA fromAttrToStr "lang" as
	  , informalfigureRemap = possibleA fromAttrToStr "remap" as
	  , informalfigureXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , informalfigureRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , informalfigureArch = possibleA fromAttrToStr "arch" as
	  , informalfigureCondition = possibleA fromAttrToStr "condition" as
	  , informalfigureConformance = possibleA fromAttrToStr "conformance" as
	  , informalfigureOs = possibleA fromAttrToStr "os" as
	  , informalfigureRevision = possibleA fromAttrToStr "revision" as
	  , informalfigureSecurity = possibleA fromAttrToStr "security" as
	  , informalfigureUserlevel = possibleA fromAttrToStr "userlevel" as
	  , informalfigureVendor = possibleA fromAttrToStr "vendor" as
	  , informalfigureRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrStr "float" (informalfigureFloat v)
	, maybeToAttr toAttrFrStr "pgwide" (informalfigurePgwide v)
	, maybeToAttr toAttrFrStr "label" (informalfigureLabel v)
	, maybeToAttr toAttrFrStr "id" (informalfigureId v)
	, maybeToAttr toAttrFrStr "lang" (informalfigureLang v)
	, maybeToAttr toAttrFrStr "remap" (informalfigureRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (informalfigureXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (informalfigureRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (informalfigureArch v)
	, maybeToAttr toAttrFrStr "condition" (informalfigureCondition v)
	, maybeToAttr toAttrFrStr "conformance" (informalfigureConformance v)
	, maybeToAttr toAttrFrStr "os" (informalfigureOs v)
	, maybeToAttr toAttrFrStr "revision" (informalfigureRevision v)
	, maybeToAttr toAttrFrStr "security" (informalfigureSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (informalfigureUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (informalfigureVendor v)
	, maybeToAttr toAttrFrStr "role" (informalfigureRole v)
	]
instance XmlAttrType Informalfigure_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Informalfigure_Revisionflag_Changed
	    translate "added" = Just Informalfigure_Revisionflag_Added
	    translate "deleted" = Just Informalfigure_Revisionflag_Deleted
	    translate "off" = Just Informalfigure_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Informalfigure_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Informalfigure_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Informalfigure_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Informalfigure_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Graphicco where
    fromElem (CElem (Elem "graphicco" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Graphicco (fromAttrs as) a b c), rest))
	      (many fromElem cb))
	   (definite fromElem "<graphic>" "graphicco" ca))
	(definite fromElem "<areaspec>" "graphicco" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Graphicco as a b c) =
	[CElem (Elem "graphicco" (toAttrs as) (toElem a ++ toElem b ++
					       concatMap toElem c))]
instance XmlAttributes Graphicco_Attrs where
    fromAttrs as =
	Graphicco_Attrs
	  { graphiccoId = possibleA fromAttrToStr "id" as
	  , graphiccoLang = possibleA fromAttrToStr "lang" as
	  , graphiccoRemap = possibleA fromAttrToStr "remap" as
	  , graphiccoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , graphiccoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , graphiccoArch = possibleA fromAttrToStr "arch" as
	  , graphiccoCondition = possibleA fromAttrToStr "condition" as
	  , graphiccoConformance = possibleA fromAttrToStr "conformance" as
	  , graphiccoOs = possibleA fromAttrToStr "os" as
	  , graphiccoRevision = possibleA fromAttrToStr "revision" as
	  , graphiccoSecurity = possibleA fromAttrToStr "security" as
	  , graphiccoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , graphiccoVendor = possibleA fromAttrToStr "vendor" as
	  , graphiccoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (graphiccoId v)
	, maybeToAttr toAttrFrStr "lang" (graphiccoLang v)
	, maybeToAttr toAttrFrStr "remap" (graphiccoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (graphiccoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (graphiccoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (graphiccoArch v)
	, maybeToAttr toAttrFrStr "condition" (graphiccoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (graphiccoConformance v)
	, maybeToAttr toAttrFrStr "os" (graphiccoOs v)
	, maybeToAttr toAttrFrStr "revision" (graphiccoRevision v)
	, maybeToAttr toAttrFrStr "security" (graphiccoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (graphiccoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (graphiccoVendor v)
	, maybeToAttr toAttrFrStr "role" (graphiccoRole v)
	]
instance XmlAttrType Graphicco_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Graphicco_Revisionflag_Changed
	    translate "added" = Just Graphicco_Revisionflag_Added
	    translate "deleted" = Just Graphicco_Revisionflag_Deleted
	    translate "off" = Just Graphicco_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Graphicco_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Graphicco_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Graphicco_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Graphicco_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Graphic where
    fromElem (CElem (Elem "graphic" as []):rest) =
	(Just (fromAttrs as), rest)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem as =
	[CElem (Elem "graphic" (toAttrs as) [])]
instance XmlAttributes Graphic where
    fromAttrs as =
	Graphic
	  { graphicEntityref = possibleA fromAttrToStr "entityref" as
	  , graphicFileref = possibleA fromAttrToStr "fileref" as
	  , graphicFormat = possibleA fromAttrToTyp "format" as
	  , graphicSrccredit = possibleA fromAttrToStr "srccredit" as
	  , graphicWidth = possibleA fromAttrToStr "width" as
	  , graphicContentwidth = possibleA fromAttrToStr "contentwidth" as
	  , graphicDepth = possibleA fromAttrToStr "depth" as
	  , graphicContentdepth = possibleA fromAttrToStr "contentdepth" as
	  , graphicAlign = possibleA fromAttrToTyp "align" as
	  , graphicValign = possibleA fromAttrToTyp "valign" as
	  , graphicScale = possibleA fromAttrToStr "scale" as
	  , graphicScalefit = possibleA fromAttrToStr "scalefit" as
	  , graphicId = possibleA fromAttrToStr "id" as
	  , graphicLang = possibleA fromAttrToStr "lang" as
	  , graphicRemap = possibleA fromAttrToStr "remap" as
	  , graphicXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , graphicRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , graphicArch = possibleA fromAttrToStr "arch" as
	  , graphicCondition = possibleA fromAttrToStr "condition" as
	  , graphicConformance = possibleA fromAttrToStr "conformance" as
	  , graphicOs = possibleA fromAttrToStr "os" as
	  , graphicRevision = possibleA fromAttrToStr "revision" as
	  , graphicSecurity = possibleA fromAttrToStr "security" as
	  , graphicUserlevel = possibleA fromAttrToStr "userlevel" as
	  , graphicVendor = possibleA fromAttrToStr "vendor" as
	  , graphicRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "entityref" (graphicEntityref v)
	, maybeToAttr toAttrFrStr "fileref" (graphicFileref v)
	, maybeToAttr toAttrFrTyp "format" (graphicFormat v)
	, maybeToAttr toAttrFrStr "srccredit" (graphicSrccredit v)
	, maybeToAttr toAttrFrStr "width" (graphicWidth v)
	, maybeToAttr toAttrFrStr "contentwidth" (graphicContentwidth v)
	, maybeToAttr toAttrFrStr "depth" (graphicDepth v)
	, maybeToAttr toAttrFrStr "contentdepth" (graphicContentdepth v)
	, maybeToAttr toAttrFrTyp "align" (graphicAlign v)
	, maybeToAttr toAttrFrTyp "valign" (graphicValign v)
	, maybeToAttr toAttrFrStr "scale" (graphicScale v)
	, maybeToAttr toAttrFrStr "scalefit" (graphicScalefit v)
	, maybeToAttr toAttrFrStr "id" (graphicId v)
	, maybeToAttr toAttrFrStr "lang" (graphicLang v)
	, maybeToAttr toAttrFrStr "remap" (graphicRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (graphicXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (graphicRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (graphicArch v)
	, maybeToAttr toAttrFrStr "condition" (graphicCondition v)
	, maybeToAttr toAttrFrStr "conformance" (graphicConformance v)
	, maybeToAttr toAttrFrStr "os" (graphicOs v)
	, maybeToAttr toAttrFrStr "revision" (graphicRevision v)
	, maybeToAttr toAttrFrStr "security" (graphicSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (graphicUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (graphicVendor v)
	, maybeToAttr toAttrFrStr "role" (graphicRole v)
	]
instance XmlAttrType Graphic_Format where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "BMP" = Just Graphic_Format_BMP
	    translate "CGM-CHAR" = Just Graphic_Format_CGM_CHAR
	    translate "CGM-BINARY" = Just Graphic_Format_CGM_BINARY
	    translate "CGM-CLEAR" = Just Graphic_Format_CGM_CLEAR
	    translate "DITROFF" = Just Graphic_Format_DITROFF
	    translate "DVI" = Just Graphic_Format_DVI
	    translate "EPS" = Just Graphic_Format_EPS
	    translate "EQN" = Just Graphic_Format_EQN
	    translate "FAX" = Just Graphic_Format_FAX
	    translate "GIF" = Just Graphic_Format_GIF
	    translate "GIF87a" = Just Graphic_Format_GIF87a
	    translate "GIF89a" = Just Graphic_Format_GIF89a
	    translate "JPG" = Just Graphic_Format_JPG
	    translate "JPEG" = Just Graphic_Format_JPEG
	    translate "IGES" = Just Graphic_Format_IGES
	    translate "PCX" = Just Graphic_Format_PCX
	    translate "PIC" = Just Graphic_Format_PIC
	    translate "PNG" = Just Graphic_Format_PNG
	    translate "PS" = Just Graphic_Format_PS
	    translate "SGML" = Just Graphic_Format_SGML
	    translate "TBL" = Just Graphic_Format_TBL
	    translate "TEX" = Just Graphic_Format_TEX
	    translate "TIFF" = Just Graphic_Format_TIFF
	    translate "WMF" = Just Graphic_Format_WMF
	    translate "WPG" = Just Graphic_Format_WPG
	    translate "SVG" = Just Graphic_Format_SVG
	    translate "linespecific" = Just Graphic_Format_Linespecific
	    translate _ = Nothing
    toAttrFrTyp n Graphic_Format_BMP = Just (n, str2attr "BMP")
    toAttrFrTyp n Graphic_Format_CGM_CHAR = Just (n, str2attr "CGM-CHAR")
    toAttrFrTyp n Graphic_Format_CGM_BINARY = Just (n, str2attr "CGM-BINARY")
    toAttrFrTyp n Graphic_Format_CGM_CLEAR = Just (n, str2attr "CGM-CLEAR")
    toAttrFrTyp n Graphic_Format_DITROFF = Just (n, str2attr "DITROFF")
    toAttrFrTyp n Graphic_Format_DVI = Just (n, str2attr "DVI")
    toAttrFrTyp n Graphic_Format_EPS = Just (n, str2attr "EPS")
    toAttrFrTyp n Graphic_Format_EQN = Just (n, str2attr "EQN")
    toAttrFrTyp n Graphic_Format_FAX = Just (n, str2attr "FAX")
    toAttrFrTyp n Graphic_Format_GIF = Just (n, str2attr "GIF")
    toAttrFrTyp n Graphic_Format_GIF87a = Just (n, str2attr "GIF87a")
    toAttrFrTyp n Graphic_Format_GIF89a = Just (n, str2attr "GIF89a")
    toAttrFrTyp n Graphic_Format_JPG = Just (n, str2attr "JPG")
    toAttrFrTyp n Graphic_Format_JPEG = Just (n, str2attr "JPEG")
    toAttrFrTyp n Graphic_Format_IGES = Just (n, str2attr "IGES")
    toAttrFrTyp n Graphic_Format_PCX = Just (n, str2attr "PCX")
    toAttrFrTyp n Graphic_Format_PIC = Just (n, str2attr "PIC")
    toAttrFrTyp n Graphic_Format_PNG = Just (n, str2attr "PNG")
    toAttrFrTyp n Graphic_Format_PS = Just (n, str2attr "PS")
    toAttrFrTyp n Graphic_Format_SGML = Just (n, str2attr "SGML")
    toAttrFrTyp n Graphic_Format_TBL = Just (n, str2attr "TBL")
    toAttrFrTyp n Graphic_Format_TEX = Just (n, str2attr "TEX")
    toAttrFrTyp n Graphic_Format_TIFF = Just (n, str2attr "TIFF")
    toAttrFrTyp n Graphic_Format_WMF = Just (n, str2attr "WMF")
    toAttrFrTyp n Graphic_Format_WPG = Just (n, str2attr "WPG")
    toAttrFrTyp n Graphic_Format_SVG = Just (n, str2attr "SVG")
    toAttrFrTyp n Graphic_Format_Linespecific = Just (n, str2attr "linespecific")
instance XmlAttrType Graphic_Align where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "left" = Just Graphic_Align_Left
	    translate "right" = Just Graphic_Align_Right
	    translate "center" = Just Graphic_Align_Center
	    translate _ = Nothing
    toAttrFrTyp n Graphic_Align_Left = Just (n, str2attr "left")
    toAttrFrTyp n Graphic_Align_Right = Just (n, str2attr "right")
    toAttrFrTyp n Graphic_Align_Center = Just (n, str2attr "center")
instance XmlAttrType Graphic_Valign where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "top" = Just Graphic_Valign_Top
	    translate "middle" = Just Graphic_Valign_Middle
	    translate "bottom" = Just Graphic_Valign_Bottom
	    translate _ = Nothing
    toAttrFrTyp n Graphic_Valign_Top = Just (n, str2attr "top")
    toAttrFrTyp n Graphic_Valign_Middle = Just (n, str2attr "middle")
    toAttrFrTyp n Graphic_Valign_Bottom = Just (n, str2attr "bottom")
instance XmlAttrType Graphic_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Graphic_Revisionflag_Changed
	    translate "added" = Just Graphic_Revisionflag_Added
	    translate "deleted" = Just Graphic_Revisionflag_Deleted
	    translate "off" = Just Graphic_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Graphic_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Graphic_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Graphic_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Graphic_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Inlinegraphic where
    fromElem (CElem (Elem "inlinegraphic" as []):rest) =
	(Just (fromAttrs as), rest)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem as =
	[CElem (Elem "inlinegraphic" (toAttrs as) [])]
instance XmlAttributes Inlinegraphic where
    fromAttrs as =
	Inlinegraphic
	  { inlinegraphicEntityref = possibleA fromAttrToStr "entityref" as
	  , inlinegraphicFileref = possibleA fromAttrToStr "fileref" as
	  , inlinegraphicFormat = possibleA fromAttrToTyp "format" as
	  , inlinegraphicSrccredit = possibleA fromAttrToStr "srccredit" as
	  , inlinegraphicWidth = possibleA fromAttrToStr "width" as
	  , inlinegraphicContentwidth = possibleA fromAttrToStr "contentwidth" as
	  , inlinegraphicDepth = possibleA fromAttrToStr "depth" as
	  , inlinegraphicContentdepth = possibleA fromAttrToStr "contentdepth" as
	  , inlinegraphicAlign = possibleA fromAttrToTyp "align" as
	  , inlinegraphicValign = possibleA fromAttrToTyp "valign" as
	  , inlinegraphicScale = possibleA fromAttrToStr "scale" as
	  , inlinegraphicScalefit = possibleA fromAttrToStr "scalefit" as
	  , inlinegraphicId = possibleA fromAttrToStr "id" as
	  , inlinegraphicLang = possibleA fromAttrToStr "lang" as
	  , inlinegraphicRemap = possibleA fromAttrToStr "remap" as
	  , inlinegraphicXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , inlinegraphicRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , inlinegraphicArch = possibleA fromAttrToStr "arch" as
	  , inlinegraphicCondition = possibleA fromAttrToStr "condition" as
	  , inlinegraphicConformance = possibleA fromAttrToStr "conformance" as
	  , inlinegraphicOs = possibleA fromAttrToStr "os" as
	  , inlinegraphicRevision = possibleA fromAttrToStr "revision" as
	  , inlinegraphicSecurity = possibleA fromAttrToStr "security" as
	  , inlinegraphicUserlevel = possibleA fromAttrToStr "userlevel" as
	  , inlinegraphicVendor = possibleA fromAttrToStr "vendor" as
	  , inlinegraphicRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "entityref" (inlinegraphicEntityref v)
	, maybeToAttr toAttrFrStr "fileref" (inlinegraphicFileref v)
	, maybeToAttr toAttrFrTyp "format" (inlinegraphicFormat v)
	, maybeToAttr toAttrFrStr "srccredit" (inlinegraphicSrccredit v)
	, maybeToAttr toAttrFrStr "width" (inlinegraphicWidth v)
	, maybeToAttr toAttrFrStr "contentwidth" (inlinegraphicContentwidth v)
	, maybeToAttr toAttrFrStr "depth" (inlinegraphicDepth v)
	, maybeToAttr toAttrFrStr "contentdepth" (inlinegraphicContentdepth v)
	, maybeToAttr toAttrFrTyp "align" (inlinegraphicAlign v)
	, maybeToAttr toAttrFrTyp "valign" (inlinegraphicValign v)
	, maybeToAttr toAttrFrStr "scale" (inlinegraphicScale v)
	, maybeToAttr toAttrFrStr "scalefit" (inlinegraphicScalefit v)
	, maybeToAttr toAttrFrStr "id" (inlinegraphicId v)
	, maybeToAttr toAttrFrStr "lang" (inlinegraphicLang v)
	, maybeToAttr toAttrFrStr "remap" (inlinegraphicRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (inlinegraphicXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (inlinegraphicRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (inlinegraphicArch v)
	, maybeToAttr toAttrFrStr "condition" (inlinegraphicCondition v)
	, maybeToAttr toAttrFrStr "conformance" (inlinegraphicConformance v)
	, maybeToAttr toAttrFrStr "os" (inlinegraphicOs v)
	, maybeToAttr toAttrFrStr "revision" (inlinegraphicRevision v)
	, maybeToAttr toAttrFrStr "security" (inlinegraphicSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (inlinegraphicUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (inlinegraphicVendor v)
	, maybeToAttr toAttrFrStr "role" (inlinegraphicRole v)
	]
instance XmlAttrType Inlinegraphic_Format where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "BMP" = Just Inlinegraphic_Format_BMP
	    translate "CGM-CHAR" = Just Inlinegraphic_Format_CGM_CHAR
	    translate "CGM-BINARY" = Just Inlinegraphic_Format_CGM_BINARY
	    translate "CGM-CLEAR" = Just Inlinegraphic_Format_CGM_CLEAR
	    translate "DITROFF" = Just Inlinegraphic_Format_DITROFF
	    translate "DVI" = Just Inlinegraphic_Format_DVI
	    translate "EPS" = Just Inlinegraphic_Format_EPS
	    translate "EQN" = Just Inlinegraphic_Format_EQN
	    translate "FAX" = Just Inlinegraphic_Format_FAX
	    translate "GIF" = Just Inlinegraphic_Format_GIF
	    translate "GIF87a" = Just Inlinegraphic_Format_GIF87a
	    translate "GIF89a" = Just Inlinegraphic_Format_GIF89a
	    translate "JPG" = Just Inlinegraphic_Format_JPG
	    translate "JPEG" = Just Inlinegraphic_Format_JPEG
	    translate "IGES" = Just Inlinegraphic_Format_IGES
	    translate "PCX" = Just Inlinegraphic_Format_PCX
	    translate "PIC" = Just Inlinegraphic_Format_PIC
	    translate "PNG" = Just Inlinegraphic_Format_PNG
	    translate "PS" = Just Inlinegraphic_Format_PS
	    translate "SGML" = Just Inlinegraphic_Format_SGML
	    translate "TBL" = Just Inlinegraphic_Format_TBL
	    translate "TEX" = Just Inlinegraphic_Format_TEX
	    translate "TIFF" = Just Inlinegraphic_Format_TIFF
	    translate "WMF" = Just Inlinegraphic_Format_WMF
	    translate "WPG" = Just Inlinegraphic_Format_WPG
	    translate "SVG" = Just Inlinegraphic_Format_SVG
	    translate "linespecific" = Just Inlinegraphic_Format_Linespecific
	    translate _ = Nothing
    toAttrFrTyp n Inlinegraphic_Format_BMP = Just (n, str2attr "BMP")
    toAttrFrTyp n Inlinegraphic_Format_CGM_CHAR = Just (n, str2attr "CGM-CHAR")
    toAttrFrTyp n Inlinegraphic_Format_CGM_BINARY = Just (n, str2attr "CGM-BINARY")
    toAttrFrTyp n Inlinegraphic_Format_CGM_CLEAR = Just (n, str2attr "CGM-CLEAR")
    toAttrFrTyp n Inlinegraphic_Format_DITROFF = Just (n, str2attr "DITROFF")
    toAttrFrTyp n Inlinegraphic_Format_DVI = Just (n, str2attr "DVI")
    toAttrFrTyp n Inlinegraphic_Format_EPS = Just (n, str2attr "EPS")
    toAttrFrTyp n Inlinegraphic_Format_EQN = Just (n, str2attr "EQN")
    toAttrFrTyp n Inlinegraphic_Format_FAX = Just (n, str2attr "FAX")
    toAttrFrTyp n Inlinegraphic_Format_GIF = Just (n, str2attr "GIF")
    toAttrFrTyp n Inlinegraphic_Format_GIF87a = Just (n, str2attr "GIF87a")
    toAttrFrTyp n Inlinegraphic_Format_GIF89a = Just (n, str2attr "GIF89a")
    toAttrFrTyp n Inlinegraphic_Format_JPG = Just (n, str2attr "JPG")
    toAttrFrTyp n Inlinegraphic_Format_JPEG = Just (n, str2attr "JPEG")
    toAttrFrTyp n Inlinegraphic_Format_IGES = Just (n, str2attr "IGES")
    toAttrFrTyp n Inlinegraphic_Format_PCX = Just (n, str2attr "PCX")
    toAttrFrTyp n Inlinegraphic_Format_PIC = Just (n, str2attr "PIC")
    toAttrFrTyp n Inlinegraphic_Format_PNG = Just (n, str2attr "PNG")
    toAttrFrTyp n Inlinegraphic_Format_PS = Just (n, str2attr "PS")
    toAttrFrTyp n Inlinegraphic_Format_SGML = Just (n, str2attr "SGML")
    toAttrFrTyp n Inlinegraphic_Format_TBL = Just (n, str2attr "TBL")
    toAttrFrTyp n Inlinegraphic_Format_TEX = Just (n, str2attr "TEX")
    toAttrFrTyp n Inlinegraphic_Format_TIFF = Just (n, str2attr "TIFF")
    toAttrFrTyp n Inlinegraphic_Format_WMF = Just (n, str2attr "WMF")
    toAttrFrTyp n Inlinegraphic_Format_WPG = Just (n, str2attr "WPG")
    toAttrFrTyp n Inlinegraphic_Format_SVG = Just (n, str2attr "SVG")
    toAttrFrTyp n Inlinegraphic_Format_Linespecific = Just (n, str2attr "linespecific")
instance XmlAttrType Inlinegraphic_Align where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "left" = Just Inlinegraphic_Align_Left
	    translate "right" = Just Inlinegraphic_Align_Right
	    translate "center" = Just Inlinegraphic_Align_Center
	    translate _ = Nothing
    toAttrFrTyp n Inlinegraphic_Align_Left = Just (n, str2attr "left")
    toAttrFrTyp n Inlinegraphic_Align_Right = Just (n, str2attr "right")
    toAttrFrTyp n Inlinegraphic_Align_Center = Just (n, str2attr "center")
instance XmlAttrType Inlinegraphic_Valign where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "top" = Just Inlinegraphic_Valign_Top
	    translate "middle" = Just Inlinegraphic_Valign_Middle
	    translate "bottom" = Just Inlinegraphic_Valign_Bottom
	    translate _ = Nothing
    toAttrFrTyp n Inlinegraphic_Valign_Top = Just (n, str2attr "top")
    toAttrFrTyp n Inlinegraphic_Valign_Middle = Just (n, str2attr "middle")
    toAttrFrTyp n Inlinegraphic_Valign_Bottom = Just (n, str2attr "bottom")
instance XmlAttrType Inlinegraphic_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Inlinegraphic_Revisionflag_Changed
	    translate "added" = Just Inlinegraphic_Revisionflag_Added
	    translate "deleted" = Just Inlinegraphic_Revisionflag_Deleted
	    translate "off" = Just Inlinegraphic_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Inlinegraphic_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Inlinegraphic_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Inlinegraphic_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Inlinegraphic_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Mediaobject where
    fromElem (CElem (Elem "mediaobject" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Mediaobject (fromAttrs as) a b c), rest))
	      (fromElem cb))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Mediaobject as a b c) =
	[CElem (Elem "mediaobject" (toAttrs as) (maybe [] toElem a ++
						 concatMap toElem b ++ maybe [] toElem c))]
instance XmlAttributes Mediaobject_Attrs where
    fromAttrs as =
	Mediaobject_Attrs
	  { mediaobjectId = possibleA fromAttrToStr "id" as
	  , mediaobjectLang = possibleA fromAttrToStr "lang" as
	  , mediaobjectRemap = possibleA fromAttrToStr "remap" as
	  , mediaobjectXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , mediaobjectRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , mediaobjectArch = possibleA fromAttrToStr "arch" as
	  , mediaobjectCondition = possibleA fromAttrToStr "condition" as
	  , mediaobjectConformance = possibleA fromAttrToStr "conformance" as
	  , mediaobjectOs = possibleA fromAttrToStr "os" as
	  , mediaobjectRevision = possibleA fromAttrToStr "revision" as
	  , mediaobjectSecurity = possibleA fromAttrToStr "security" as
	  , mediaobjectUserlevel = possibleA fromAttrToStr "userlevel" as
	  , mediaobjectVendor = possibleA fromAttrToStr "vendor" as
	  , mediaobjectRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (mediaobjectId v)
	, maybeToAttr toAttrFrStr "lang" (mediaobjectLang v)
	, maybeToAttr toAttrFrStr "remap" (mediaobjectRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (mediaobjectXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (mediaobjectRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (mediaobjectArch v)
	, maybeToAttr toAttrFrStr "condition" (mediaobjectCondition v)
	, maybeToAttr toAttrFrStr "conformance" (mediaobjectConformance v)
	, maybeToAttr toAttrFrStr "os" (mediaobjectOs v)
	, maybeToAttr toAttrFrStr "revision" (mediaobjectRevision v)
	, maybeToAttr toAttrFrStr "security" (mediaobjectSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (mediaobjectUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (mediaobjectVendor v)
	, maybeToAttr toAttrFrStr "role" (mediaobjectRole v)
	]
instance XmlAttrType Mediaobject_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Mediaobject_Revisionflag_Changed
	    translate "added" = Just Mediaobject_Revisionflag_Added
	    translate "deleted" = Just Mediaobject_Revisionflag_Deleted
	    translate "off" = Just Mediaobject_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Mediaobject_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Mediaobject_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Mediaobject_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Mediaobject_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Inlinemediaobject where
    fromElem (CElem (Elem "inlinemediaobject" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Inlinemediaobject (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Inlinemediaobject as a b) =
	[CElem (Elem "inlinemediaobject" (toAttrs as) (maybe [] toElem a ++
						       concatMap toElem b))]
instance XmlAttributes Inlinemediaobject_Attrs where
    fromAttrs as =
	Inlinemediaobject_Attrs
	  { inlinemediaobjectId = possibleA fromAttrToStr "id" as
	  , inlinemediaobjectLang = possibleA fromAttrToStr "lang" as
	  , inlinemediaobjectRemap = possibleA fromAttrToStr "remap" as
	  , inlinemediaobjectXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , inlinemediaobjectRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , inlinemediaobjectArch = possibleA fromAttrToStr "arch" as
	  , inlinemediaobjectCondition = possibleA fromAttrToStr "condition" as
	  , inlinemediaobjectConformance = possibleA fromAttrToStr "conformance" as
	  , inlinemediaobjectOs = possibleA fromAttrToStr "os" as
	  , inlinemediaobjectRevision = possibleA fromAttrToStr "revision" as
	  , inlinemediaobjectSecurity = possibleA fromAttrToStr "security" as
	  , inlinemediaobjectUserlevel = possibleA fromAttrToStr "userlevel" as
	  , inlinemediaobjectVendor = possibleA fromAttrToStr "vendor" as
	  , inlinemediaobjectRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (inlinemediaobjectId v)
	, maybeToAttr toAttrFrStr "lang" (inlinemediaobjectLang v)
	, maybeToAttr toAttrFrStr "remap" (inlinemediaobjectRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (inlinemediaobjectXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (inlinemediaobjectRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (inlinemediaobjectArch v)
	, maybeToAttr toAttrFrStr "condition" (inlinemediaobjectCondition v)
	, maybeToAttr toAttrFrStr "conformance" (inlinemediaobjectConformance v)
	, maybeToAttr toAttrFrStr "os" (inlinemediaobjectOs v)
	, maybeToAttr toAttrFrStr "revision" (inlinemediaobjectRevision v)
	, maybeToAttr toAttrFrStr "security" (inlinemediaobjectSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (inlinemediaobjectUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (inlinemediaobjectVendor v)
	, maybeToAttr toAttrFrStr "role" (inlinemediaobjectRole v)
	]
instance XmlAttrType Inlinemediaobject_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Inlinemediaobject_Revisionflag_Changed
	    translate "added" = Just Inlinemediaobject_Revisionflag_Added
	    translate "deleted" = Just Inlinemediaobject_Revisionflag_Deleted
	    translate "off" = Just Inlinemediaobject_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Inlinemediaobject_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Inlinemediaobject_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Inlinemediaobject_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Inlinemediaobject_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Videoobject where
    fromElem (CElem (Elem "videoobject" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Videoobject (fromAttrs as) a b), rest))
	   (definite fromElem "<videodata>" "videoobject" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Videoobject as a b) =
	[CElem (Elem "videoobject" (toAttrs as) (maybe [] toElem a ++
						 toElem b))]
instance XmlAttributes Videoobject_Attrs where
    fromAttrs as =
	Videoobject_Attrs
	  { videoobjectId = possibleA fromAttrToStr "id" as
	  , videoobjectLang = possibleA fromAttrToStr "lang" as
	  , videoobjectRemap = possibleA fromAttrToStr "remap" as
	  , videoobjectXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , videoobjectRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , videoobjectArch = possibleA fromAttrToStr "arch" as
	  , videoobjectCondition = possibleA fromAttrToStr "condition" as
	  , videoobjectConformance = possibleA fromAttrToStr "conformance" as
	  , videoobjectOs = possibleA fromAttrToStr "os" as
	  , videoobjectRevision = possibleA fromAttrToStr "revision" as
	  , videoobjectSecurity = possibleA fromAttrToStr "security" as
	  , videoobjectUserlevel = possibleA fromAttrToStr "userlevel" as
	  , videoobjectVendor = possibleA fromAttrToStr "vendor" as
	  , videoobjectRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (videoobjectId v)
	, maybeToAttr toAttrFrStr "lang" (videoobjectLang v)
	, maybeToAttr toAttrFrStr "remap" (videoobjectRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (videoobjectXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (videoobjectRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (videoobjectArch v)
	, maybeToAttr toAttrFrStr "condition" (videoobjectCondition v)
	, maybeToAttr toAttrFrStr "conformance" (videoobjectConformance v)
	, maybeToAttr toAttrFrStr "os" (videoobjectOs v)
	, maybeToAttr toAttrFrStr "revision" (videoobjectRevision v)
	, maybeToAttr toAttrFrStr "security" (videoobjectSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (videoobjectUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (videoobjectVendor v)
	, maybeToAttr toAttrFrStr "role" (videoobjectRole v)
	]
instance XmlAttrType Videoobject_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Videoobject_Revisionflag_Changed
	    translate "added" = Just Videoobject_Revisionflag_Added
	    translate "deleted" = Just Videoobject_Revisionflag_Deleted
	    translate "off" = Just Videoobject_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Videoobject_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Videoobject_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Videoobject_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Videoobject_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Audioobject where
    fromElem (CElem (Elem "audioobject" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Audioobject (fromAttrs as) a b), rest))
	   (definite fromElem "<audiodata>" "audioobject" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Audioobject as a b) =
	[CElem (Elem "audioobject" (toAttrs as) (maybe [] toElem a ++
						 toElem b))]
instance XmlAttributes Audioobject_Attrs where
    fromAttrs as =
	Audioobject_Attrs
	  { audioobjectId = possibleA fromAttrToStr "id" as
	  , audioobjectLang = possibleA fromAttrToStr "lang" as
	  , audioobjectRemap = possibleA fromAttrToStr "remap" as
	  , audioobjectXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , audioobjectRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , audioobjectArch = possibleA fromAttrToStr "arch" as
	  , audioobjectCondition = possibleA fromAttrToStr "condition" as
	  , audioobjectConformance = possibleA fromAttrToStr "conformance" as
	  , audioobjectOs = possibleA fromAttrToStr "os" as
	  , audioobjectRevision = possibleA fromAttrToStr "revision" as
	  , audioobjectSecurity = possibleA fromAttrToStr "security" as
	  , audioobjectUserlevel = possibleA fromAttrToStr "userlevel" as
	  , audioobjectVendor = possibleA fromAttrToStr "vendor" as
	  , audioobjectRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (audioobjectId v)
	, maybeToAttr toAttrFrStr "lang" (audioobjectLang v)
	, maybeToAttr toAttrFrStr "remap" (audioobjectRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (audioobjectXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (audioobjectRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (audioobjectArch v)
	, maybeToAttr toAttrFrStr "condition" (audioobjectCondition v)
	, maybeToAttr toAttrFrStr "conformance" (audioobjectConformance v)
	, maybeToAttr toAttrFrStr "os" (audioobjectOs v)
	, maybeToAttr toAttrFrStr "revision" (audioobjectRevision v)
	, maybeToAttr toAttrFrStr "security" (audioobjectSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (audioobjectUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (audioobjectVendor v)
	, maybeToAttr toAttrFrStr "role" (audioobjectRole v)
	]
instance XmlAttrType Audioobject_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Audioobject_Revisionflag_Changed
	    translate "added" = Just Audioobject_Revisionflag_Added
	    translate "deleted" = Just Audioobject_Revisionflag_Deleted
	    translate "off" = Just Audioobject_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Audioobject_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Audioobject_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Audioobject_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Audioobject_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Imageobject where
    fromElem (CElem (Elem "imageobject" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Imageobject (fromAttrs as) a b), rest))
	   (definite fromElem "<imagedata>" "imageobject" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Imageobject as a b) =
	[CElem (Elem "imageobject" (toAttrs as) (maybe [] toElem a ++
						 toElem b))]
instance XmlAttributes Imageobject_Attrs where
    fromAttrs as =
	Imageobject_Attrs
	  { imageobjectId = possibleA fromAttrToStr "id" as
	  , imageobjectLang = possibleA fromAttrToStr "lang" as
	  , imageobjectRemap = possibleA fromAttrToStr "remap" as
	  , imageobjectXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , imageobjectRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , imageobjectArch = possibleA fromAttrToStr "arch" as
	  , imageobjectCondition = possibleA fromAttrToStr "condition" as
	  , imageobjectConformance = possibleA fromAttrToStr "conformance" as
	  , imageobjectOs = possibleA fromAttrToStr "os" as
	  , imageobjectRevision = possibleA fromAttrToStr "revision" as
	  , imageobjectSecurity = possibleA fromAttrToStr "security" as
	  , imageobjectUserlevel = possibleA fromAttrToStr "userlevel" as
	  , imageobjectVendor = possibleA fromAttrToStr "vendor" as
	  , imageobjectRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (imageobjectId v)
	, maybeToAttr toAttrFrStr "lang" (imageobjectLang v)
	, maybeToAttr toAttrFrStr "remap" (imageobjectRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (imageobjectXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (imageobjectRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (imageobjectArch v)
	, maybeToAttr toAttrFrStr "condition" (imageobjectCondition v)
	, maybeToAttr toAttrFrStr "conformance" (imageobjectConformance v)
	, maybeToAttr toAttrFrStr "os" (imageobjectOs v)
	, maybeToAttr toAttrFrStr "revision" (imageobjectRevision v)
	, maybeToAttr toAttrFrStr "security" (imageobjectSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (imageobjectUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (imageobjectVendor v)
	, maybeToAttr toAttrFrStr "role" (imageobjectRole v)
	]
instance XmlAttrType Imageobject_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Imageobject_Revisionflag_Changed
	    translate "added" = Just Imageobject_Revisionflag_Added
	    translate "deleted" = Just Imageobject_Revisionflag_Deleted
	    translate "off" = Just Imageobject_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Imageobject_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Imageobject_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Imageobject_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Imageobject_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Textobject where
    fromElem (CElem (Elem "textobject" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Textobject (fromAttrs as) a b), rest))
	   (definite fromElem "OneOf" "textobject" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Textobject as a b) =
	[CElem (Elem "textobject" (toAttrs as) (maybe [] toElem a ++
						toElem b))]
instance XmlAttributes Textobject_Attrs where
    fromAttrs as =
	Textobject_Attrs
	  { textobjectId = possibleA fromAttrToStr "id" as
	  , textobjectLang = possibleA fromAttrToStr "lang" as
	  , textobjectRemap = possibleA fromAttrToStr "remap" as
	  , textobjectXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , textobjectRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , textobjectArch = possibleA fromAttrToStr "arch" as
	  , textobjectCondition = possibleA fromAttrToStr "condition" as
	  , textobjectConformance = possibleA fromAttrToStr "conformance" as
	  , textobjectOs = possibleA fromAttrToStr "os" as
	  , textobjectRevision = possibleA fromAttrToStr "revision" as
	  , textobjectSecurity = possibleA fromAttrToStr "security" as
	  , textobjectUserlevel = possibleA fromAttrToStr "userlevel" as
	  , textobjectVendor = possibleA fromAttrToStr "vendor" as
	  , textobjectRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (textobjectId v)
	, maybeToAttr toAttrFrStr "lang" (textobjectLang v)
	, maybeToAttr toAttrFrStr "remap" (textobjectRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (textobjectXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (textobjectRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (textobjectArch v)
	, maybeToAttr toAttrFrStr "condition" (textobjectCondition v)
	, maybeToAttr toAttrFrStr "conformance" (textobjectConformance v)
	, maybeToAttr toAttrFrStr "os" (textobjectOs v)
	, maybeToAttr toAttrFrStr "revision" (textobjectRevision v)
	, maybeToAttr toAttrFrStr "security" (textobjectSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (textobjectUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (textobjectVendor v)
	, maybeToAttr toAttrFrStr "role" (textobjectRole v)
	]
instance XmlAttrType Textobject_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Textobject_Revisionflag_Changed
	    translate "added" = Just Textobject_Revisionflag_Added
	    translate "deleted" = Just Textobject_Revisionflag_Deleted
	    translate "off" = Just Textobject_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Textobject_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Textobject_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Textobject_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Textobject_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Objectinfo where
    fromElem (CElem (Elem "objectinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Objectinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Objectinfo as a) =
	[CElem (Elem "objectinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Objectinfo_Attrs where
    fromAttrs as =
	Objectinfo_Attrs
	  { objectinfoId = possibleA fromAttrToStr "id" as
	  , objectinfoLang = possibleA fromAttrToStr "lang" as
	  , objectinfoRemap = possibleA fromAttrToStr "remap" as
	  , objectinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , objectinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , objectinfoArch = possibleA fromAttrToStr "arch" as
	  , objectinfoCondition = possibleA fromAttrToStr "condition" as
	  , objectinfoConformance = possibleA fromAttrToStr "conformance" as
	  , objectinfoOs = possibleA fromAttrToStr "os" as
	  , objectinfoRevision = possibleA fromAttrToStr "revision" as
	  , objectinfoSecurity = possibleA fromAttrToStr "security" as
	  , objectinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , objectinfoVendor = possibleA fromAttrToStr "vendor" as
	  , objectinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (objectinfoId v)
	, maybeToAttr toAttrFrStr "lang" (objectinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (objectinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (objectinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (objectinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (objectinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (objectinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (objectinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (objectinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (objectinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (objectinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (objectinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (objectinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (objectinfoRole v)
	]
instance XmlAttrType Objectinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Objectinfo_Revisionflag_Changed
	    translate "added" = Just Objectinfo_Revisionflag_Added
	    translate "deleted" = Just Objectinfo_Revisionflag_Deleted
	    translate "off" = Just Objectinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Objectinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Objectinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Objectinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Objectinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Videodata where
    fromElem (CElem (Elem "videodata" as []):rest) =
	(Just (fromAttrs as), rest)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem as =
	[CElem (Elem "videodata" (toAttrs as) [])]
instance XmlAttributes Videodata where
    fromAttrs as =
	Videodata
	  { videodataWidth = possibleA fromAttrToStr "width" as
	  , videodataContentwidth = possibleA fromAttrToStr "contentwidth" as
	  , videodataDepth = possibleA fromAttrToStr "depth" as
	  , videodataContentdepth = possibleA fromAttrToStr "contentdepth" as
	  , videodataAlign = possibleA fromAttrToTyp "align" as
	  , videodataValign = possibleA fromAttrToTyp "valign" as
	  , videodataScale = possibleA fromAttrToStr "scale" as
	  , videodataScalefit = possibleA fromAttrToStr "scalefit" as
	  , videodataEntityref = possibleA fromAttrToStr "entityref" as
	  , videodataFileref = possibleA fromAttrToStr "fileref" as
	  , videodataFormat = possibleA fromAttrToTyp "format" as
	  , videodataSrccredit = possibleA fromAttrToStr "srccredit" as
	  , videodataId = possibleA fromAttrToStr "id" as
	  , videodataLang = possibleA fromAttrToStr "lang" as
	  , videodataRemap = possibleA fromAttrToStr "remap" as
	  , videodataXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , videodataRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , videodataArch = possibleA fromAttrToStr "arch" as
	  , videodataCondition = possibleA fromAttrToStr "condition" as
	  , videodataConformance = possibleA fromAttrToStr "conformance" as
	  , videodataOs = possibleA fromAttrToStr "os" as
	  , videodataRevision = possibleA fromAttrToStr "revision" as
	  , videodataSecurity = possibleA fromAttrToStr "security" as
	  , videodataUserlevel = possibleA fromAttrToStr "userlevel" as
	  , videodataVendor = possibleA fromAttrToStr "vendor" as
	  , videodataRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "width" (videodataWidth v)
	, maybeToAttr toAttrFrStr "contentwidth" (videodataContentwidth v)
	, maybeToAttr toAttrFrStr "depth" (videodataDepth v)
	, maybeToAttr toAttrFrStr "contentdepth" (videodataContentdepth v)
	, maybeToAttr toAttrFrTyp "align" (videodataAlign v)
	, maybeToAttr toAttrFrTyp "valign" (videodataValign v)
	, maybeToAttr toAttrFrStr "scale" (videodataScale v)
	, maybeToAttr toAttrFrStr "scalefit" (videodataScalefit v)
	, maybeToAttr toAttrFrStr "entityref" (videodataEntityref v)
	, maybeToAttr toAttrFrStr "fileref" (videodataFileref v)
	, maybeToAttr toAttrFrTyp "format" (videodataFormat v)
	, maybeToAttr toAttrFrStr "srccredit" (videodataSrccredit v)
	, maybeToAttr toAttrFrStr "id" (videodataId v)
	, maybeToAttr toAttrFrStr "lang" (videodataLang v)
	, maybeToAttr toAttrFrStr "remap" (videodataRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (videodataXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (videodataRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (videodataArch v)
	, maybeToAttr toAttrFrStr "condition" (videodataCondition v)
	, maybeToAttr toAttrFrStr "conformance" (videodataConformance v)
	, maybeToAttr toAttrFrStr "os" (videodataOs v)
	, maybeToAttr toAttrFrStr "revision" (videodataRevision v)
	, maybeToAttr toAttrFrStr "security" (videodataSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (videodataUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (videodataVendor v)
	, maybeToAttr toAttrFrStr "role" (videodataRole v)
	]
instance XmlAttrType Videodata_Align where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "left" = Just Videodata_Align_Left
	    translate "right" = Just Videodata_Align_Right
	    translate "center" = Just Videodata_Align_Center
	    translate _ = Nothing
    toAttrFrTyp n Videodata_Align_Left = Just (n, str2attr "left")
    toAttrFrTyp n Videodata_Align_Right = Just (n, str2attr "right")
    toAttrFrTyp n Videodata_Align_Center = Just (n, str2attr "center")
instance XmlAttrType Videodata_Valign where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "top" = Just Videodata_Valign_Top
	    translate "middle" = Just Videodata_Valign_Middle
	    translate "bottom" = Just Videodata_Valign_Bottom
	    translate _ = Nothing
    toAttrFrTyp n Videodata_Valign_Top = Just (n, str2attr "top")
    toAttrFrTyp n Videodata_Valign_Middle = Just (n, str2attr "middle")
    toAttrFrTyp n Videodata_Valign_Bottom = Just (n, str2attr "bottom")
instance XmlAttrType Videodata_Format where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "BMP" = Just Videodata_Format_BMP
	    translate "CGM-CHAR" = Just Videodata_Format_CGM_CHAR
	    translate "CGM-BINARY" = Just Videodata_Format_CGM_BINARY
	    translate "CGM-CLEAR" = Just Videodata_Format_CGM_CLEAR
	    translate "DITROFF" = Just Videodata_Format_DITROFF
	    translate "DVI" = Just Videodata_Format_DVI
	    translate "EPS" = Just Videodata_Format_EPS
	    translate "EQN" = Just Videodata_Format_EQN
	    translate "FAX" = Just Videodata_Format_FAX
	    translate "GIF" = Just Videodata_Format_GIF
	    translate "GIF87a" = Just Videodata_Format_GIF87a
	    translate "GIF89a" = Just Videodata_Format_GIF89a
	    translate "JPG" = Just Videodata_Format_JPG
	    translate "JPEG" = Just Videodata_Format_JPEG
	    translate "IGES" = Just Videodata_Format_IGES
	    translate "PCX" = Just Videodata_Format_PCX
	    translate "PIC" = Just Videodata_Format_PIC
	    translate "PNG" = Just Videodata_Format_PNG
	    translate "PS" = Just Videodata_Format_PS
	    translate "SGML" = Just Videodata_Format_SGML
	    translate "TBL" = Just Videodata_Format_TBL
	    translate "TEX" = Just Videodata_Format_TEX
	    translate "TIFF" = Just Videodata_Format_TIFF
	    translate "WMF" = Just Videodata_Format_WMF
	    translate "WPG" = Just Videodata_Format_WPG
	    translate "SVG" = Just Videodata_Format_SVG
	    translate "linespecific" = Just Videodata_Format_Linespecific
	    translate _ = Nothing
    toAttrFrTyp n Videodata_Format_BMP = Just (n, str2attr "BMP")
    toAttrFrTyp n Videodata_Format_CGM_CHAR = Just (n, str2attr "CGM-CHAR")
    toAttrFrTyp n Videodata_Format_CGM_BINARY = Just (n, str2attr "CGM-BINARY")
    toAttrFrTyp n Videodata_Format_CGM_CLEAR = Just (n, str2attr "CGM-CLEAR")
    toAttrFrTyp n Videodata_Format_DITROFF = Just (n, str2attr "DITROFF")
    toAttrFrTyp n Videodata_Format_DVI = Just (n, str2attr "DVI")
    toAttrFrTyp n Videodata_Format_EPS = Just (n, str2attr "EPS")
    toAttrFrTyp n Videodata_Format_EQN = Just (n, str2attr "EQN")
    toAttrFrTyp n Videodata_Format_FAX = Just (n, str2attr "FAX")
    toAttrFrTyp n Videodata_Format_GIF = Just (n, str2attr "GIF")
    toAttrFrTyp n Videodata_Format_GIF87a = Just (n, str2attr "GIF87a")
    toAttrFrTyp n Videodata_Format_GIF89a = Just (n, str2attr "GIF89a")
    toAttrFrTyp n Videodata_Format_JPG = Just (n, str2attr "JPG")
    toAttrFrTyp n Videodata_Format_JPEG = Just (n, str2attr "JPEG")
    toAttrFrTyp n Videodata_Format_IGES = Just (n, str2attr "IGES")
    toAttrFrTyp n Videodata_Format_PCX = Just (n, str2attr "PCX")
    toAttrFrTyp n Videodata_Format_PIC = Just (n, str2attr "PIC")
    toAttrFrTyp n Videodata_Format_PNG = Just (n, str2attr "PNG")
    toAttrFrTyp n Videodata_Format_PS = Just (n, str2attr "PS")
    toAttrFrTyp n Videodata_Format_SGML = Just (n, str2attr "SGML")
    toAttrFrTyp n Videodata_Format_TBL = Just (n, str2attr "TBL")
    toAttrFrTyp n Videodata_Format_TEX = Just (n, str2attr "TEX")
    toAttrFrTyp n Videodata_Format_TIFF = Just (n, str2attr "TIFF")
    toAttrFrTyp n Videodata_Format_WMF = Just (n, str2attr "WMF")
    toAttrFrTyp n Videodata_Format_WPG = Just (n, str2attr "WPG")
    toAttrFrTyp n Videodata_Format_SVG = Just (n, str2attr "SVG")
    toAttrFrTyp n Videodata_Format_Linespecific = Just (n, str2attr "linespecific")
instance XmlAttrType Videodata_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Videodata_Revisionflag_Changed
	    translate "added" = Just Videodata_Revisionflag_Added
	    translate "deleted" = Just Videodata_Revisionflag_Deleted
	    translate "off" = Just Videodata_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Videodata_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Videodata_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Videodata_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Videodata_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Audiodata where
    fromElem (CElem (Elem "audiodata" as []):rest) =
	(Just (fromAttrs as), rest)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem as =
	[CElem (Elem "audiodata" (toAttrs as) [])]
instance XmlAttributes Audiodata where
    fromAttrs as =
	Audiodata
	  { audiodataEntityref = possibleA fromAttrToStr "entityref" as
	  , audiodataFileref = possibleA fromAttrToStr "fileref" as
	  , audiodataFormat = possibleA fromAttrToTyp "format" as
	  , audiodataSrccredit = possibleA fromAttrToStr "srccredit" as
	  , audiodataId = possibleA fromAttrToStr "id" as
	  , audiodataLang = possibleA fromAttrToStr "lang" as
	  , audiodataRemap = possibleA fromAttrToStr "remap" as
	  , audiodataXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , audiodataRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , audiodataArch = possibleA fromAttrToStr "arch" as
	  , audiodataCondition = possibleA fromAttrToStr "condition" as
	  , audiodataConformance = possibleA fromAttrToStr "conformance" as
	  , audiodataOs = possibleA fromAttrToStr "os" as
	  , audiodataRevision = possibleA fromAttrToStr "revision" as
	  , audiodataSecurity = possibleA fromAttrToStr "security" as
	  , audiodataUserlevel = possibleA fromAttrToStr "userlevel" as
	  , audiodataVendor = possibleA fromAttrToStr "vendor" as
	  , audiodataRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "entityref" (audiodataEntityref v)
	, maybeToAttr toAttrFrStr "fileref" (audiodataFileref v)
	, maybeToAttr toAttrFrTyp "format" (audiodataFormat v)
	, maybeToAttr toAttrFrStr "srccredit" (audiodataSrccredit v)
	, maybeToAttr toAttrFrStr "id" (audiodataId v)
	, maybeToAttr toAttrFrStr "lang" (audiodataLang v)
	, maybeToAttr toAttrFrStr "remap" (audiodataRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (audiodataXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (audiodataRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (audiodataArch v)
	, maybeToAttr toAttrFrStr "condition" (audiodataCondition v)
	, maybeToAttr toAttrFrStr "conformance" (audiodataConformance v)
	, maybeToAttr toAttrFrStr "os" (audiodataOs v)
	, maybeToAttr toAttrFrStr "revision" (audiodataRevision v)
	, maybeToAttr toAttrFrStr "security" (audiodataSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (audiodataUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (audiodataVendor v)
	, maybeToAttr toAttrFrStr "role" (audiodataRole v)
	]
instance XmlAttrType Audiodata_Format where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "BMP" = Just Audiodata_Format_BMP
	    translate "CGM-CHAR" = Just Audiodata_Format_CGM_CHAR
	    translate "CGM-BINARY" = Just Audiodata_Format_CGM_BINARY
	    translate "CGM-CLEAR" = Just Audiodata_Format_CGM_CLEAR
	    translate "DITROFF" = Just Audiodata_Format_DITROFF
	    translate "DVI" = Just Audiodata_Format_DVI
	    translate "EPS" = Just Audiodata_Format_EPS
	    translate "EQN" = Just Audiodata_Format_EQN
	    translate "FAX" = Just Audiodata_Format_FAX
	    translate "GIF" = Just Audiodata_Format_GIF
	    translate "GIF87a" = Just Audiodata_Format_GIF87a
	    translate "GIF89a" = Just Audiodata_Format_GIF89a
	    translate "JPG" = Just Audiodata_Format_JPG
	    translate "JPEG" = Just Audiodata_Format_JPEG
	    translate "IGES" = Just Audiodata_Format_IGES
	    translate "PCX" = Just Audiodata_Format_PCX
	    translate "PIC" = Just Audiodata_Format_PIC
	    translate "PNG" = Just Audiodata_Format_PNG
	    translate "PS" = Just Audiodata_Format_PS
	    translate "SGML" = Just Audiodata_Format_SGML
	    translate "TBL" = Just Audiodata_Format_TBL
	    translate "TEX" = Just Audiodata_Format_TEX
	    translate "TIFF" = Just Audiodata_Format_TIFF
	    translate "WMF" = Just Audiodata_Format_WMF
	    translate "WPG" = Just Audiodata_Format_WPG
	    translate "SVG" = Just Audiodata_Format_SVG
	    translate "linespecific" = Just Audiodata_Format_Linespecific
	    translate _ = Nothing
    toAttrFrTyp n Audiodata_Format_BMP = Just (n, str2attr "BMP")
    toAttrFrTyp n Audiodata_Format_CGM_CHAR = Just (n, str2attr "CGM-CHAR")
    toAttrFrTyp n Audiodata_Format_CGM_BINARY = Just (n, str2attr "CGM-BINARY")
    toAttrFrTyp n Audiodata_Format_CGM_CLEAR = Just (n, str2attr "CGM-CLEAR")
    toAttrFrTyp n Audiodata_Format_DITROFF = Just (n, str2attr "DITROFF")
    toAttrFrTyp n Audiodata_Format_DVI = Just (n, str2attr "DVI")
    toAttrFrTyp n Audiodata_Format_EPS = Just (n, str2attr "EPS")
    toAttrFrTyp n Audiodata_Format_EQN = Just (n, str2attr "EQN")
    toAttrFrTyp n Audiodata_Format_FAX = Just (n, str2attr "FAX")
    toAttrFrTyp n Audiodata_Format_GIF = Just (n, str2attr "GIF")
    toAttrFrTyp n Audiodata_Format_GIF87a = Just (n, str2attr "GIF87a")
    toAttrFrTyp n Audiodata_Format_GIF89a = Just (n, str2attr "GIF89a")
    toAttrFrTyp n Audiodata_Format_JPG = Just (n, str2attr "JPG")
    toAttrFrTyp n Audiodata_Format_JPEG = Just (n, str2attr "JPEG")
    toAttrFrTyp n Audiodata_Format_IGES = Just (n, str2attr "IGES")
    toAttrFrTyp n Audiodata_Format_PCX = Just (n, str2attr "PCX")
    toAttrFrTyp n Audiodata_Format_PIC = Just (n, str2attr "PIC")
    toAttrFrTyp n Audiodata_Format_PNG = Just (n, str2attr "PNG")
    toAttrFrTyp n Audiodata_Format_PS = Just (n, str2attr "PS")
    toAttrFrTyp n Audiodata_Format_SGML = Just (n, str2attr "SGML")
    toAttrFrTyp n Audiodata_Format_TBL = Just (n, str2attr "TBL")
    toAttrFrTyp n Audiodata_Format_TEX = Just (n, str2attr "TEX")
    toAttrFrTyp n Audiodata_Format_TIFF = Just (n, str2attr "TIFF")
    toAttrFrTyp n Audiodata_Format_WMF = Just (n, str2attr "WMF")
    toAttrFrTyp n Audiodata_Format_WPG = Just (n, str2attr "WPG")
    toAttrFrTyp n Audiodata_Format_SVG = Just (n, str2attr "SVG")
    toAttrFrTyp n Audiodata_Format_Linespecific = Just (n, str2attr "linespecific")
instance XmlAttrType Audiodata_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Audiodata_Revisionflag_Changed
	    translate "added" = Just Audiodata_Revisionflag_Added
	    translate "deleted" = Just Audiodata_Revisionflag_Deleted
	    translate "off" = Just Audiodata_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Audiodata_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Audiodata_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Audiodata_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Audiodata_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Imagedata where
    fromElem (CElem (Elem "imagedata" as []):rest) =
	(Just (fromAttrs as), rest)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem as =
	[CElem (Elem "imagedata" (toAttrs as) [])]
instance XmlAttributes Imagedata where
    fromAttrs as =
	Imagedata
	  { imagedataWidth = possibleA fromAttrToStr "width" as
	  , imagedataContentwidth = possibleA fromAttrToStr "contentwidth" as
	  , imagedataDepth = possibleA fromAttrToStr "depth" as
	  , imagedataContentdepth = possibleA fromAttrToStr "contentdepth" as
	  , imagedataAlign = possibleA fromAttrToTyp "align" as
	  , imagedataValign = possibleA fromAttrToTyp "valign" as
	  , imagedataScale = possibleA fromAttrToStr "scale" as
	  , imagedataScalefit = possibleA fromAttrToStr "scalefit" as
	  , imagedataEntityref = possibleA fromAttrToStr "entityref" as
	  , imagedataFileref = possibleA fromAttrToStr "fileref" as
	  , imagedataFormat = possibleA fromAttrToTyp "format" as
	  , imagedataSrccredit = possibleA fromAttrToStr "srccredit" as
	  , imagedataId = possibleA fromAttrToStr "id" as
	  , imagedataLang = possibleA fromAttrToStr "lang" as
	  , imagedataRemap = possibleA fromAttrToStr "remap" as
	  , imagedataXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , imagedataRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , imagedataArch = possibleA fromAttrToStr "arch" as
	  , imagedataCondition = possibleA fromAttrToStr "condition" as
	  , imagedataConformance = possibleA fromAttrToStr "conformance" as
	  , imagedataOs = possibleA fromAttrToStr "os" as
	  , imagedataRevision = possibleA fromAttrToStr "revision" as
	  , imagedataSecurity = possibleA fromAttrToStr "security" as
	  , imagedataUserlevel = possibleA fromAttrToStr "userlevel" as
	  , imagedataVendor = possibleA fromAttrToStr "vendor" as
	  , imagedataRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "width" (imagedataWidth v)
	, maybeToAttr toAttrFrStr "contentwidth" (imagedataContentwidth v)
	, maybeToAttr toAttrFrStr "depth" (imagedataDepth v)
	, maybeToAttr toAttrFrStr "contentdepth" (imagedataContentdepth v)
	, maybeToAttr toAttrFrTyp "align" (imagedataAlign v)
	, maybeToAttr toAttrFrTyp "valign" (imagedataValign v)
	, maybeToAttr toAttrFrStr "scale" (imagedataScale v)
	, maybeToAttr toAttrFrStr "scalefit" (imagedataScalefit v)
	, maybeToAttr toAttrFrStr "entityref" (imagedataEntityref v)
	, maybeToAttr toAttrFrStr "fileref" (imagedataFileref v)
	, maybeToAttr toAttrFrTyp "format" (imagedataFormat v)
	, maybeToAttr toAttrFrStr "srccredit" (imagedataSrccredit v)
	, maybeToAttr toAttrFrStr "id" (imagedataId v)
	, maybeToAttr toAttrFrStr "lang" (imagedataLang v)
	, maybeToAttr toAttrFrStr "remap" (imagedataRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (imagedataXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (imagedataRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (imagedataArch v)
	, maybeToAttr toAttrFrStr "condition" (imagedataCondition v)
	, maybeToAttr toAttrFrStr "conformance" (imagedataConformance v)
	, maybeToAttr toAttrFrStr "os" (imagedataOs v)
	, maybeToAttr toAttrFrStr "revision" (imagedataRevision v)
	, maybeToAttr toAttrFrStr "security" (imagedataSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (imagedataUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (imagedataVendor v)
	, maybeToAttr toAttrFrStr "role" (imagedataRole v)
	]
instance XmlAttrType Imagedata_Align where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "left" = Just Imagedata_Align_Left
	    translate "right" = Just Imagedata_Align_Right
	    translate "center" = Just Imagedata_Align_Center
	    translate _ = Nothing
    toAttrFrTyp n Imagedata_Align_Left = Just (n, str2attr "left")
    toAttrFrTyp n Imagedata_Align_Right = Just (n, str2attr "right")
    toAttrFrTyp n Imagedata_Align_Center = Just (n, str2attr "center")
instance XmlAttrType Imagedata_Valign where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "top" = Just Imagedata_Valign_Top
	    translate "middle" = Just Imagedata_Valign_Middle
	    translate "bottom" = Just Imagedata_Valign_Bottom
	    translate _ = Nothing
    toAttrFrTyp n Imagedata_Valign_Top = Just (n, str2attr "top")
    toAttrFrTyp n Imagedata_Valign_Middle = Just (n, str2attr "middle")
    toAttrFrTyp n Imagedata_Valign_Bottom = Just (n, str2attr "bottom")
instance XmlAttrType Imagedata_Format where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "BMP" = Just Imagedata_Format_BMP
	    translate "CGM-CHAR" = Just Imagedata_Format_CGM_CHAR
	    translate "CGM-BINARY" = Just Imagedata_Format_CGM_BINARY
	    translate "CGM-CLEAR" = Just Imagedata_Format_CGM_CLEAR
	    translate "DITROFF" = Just Imagedata_Format_DITROFF
	    translate "DVI" = Just Imagedata_Format_DVI
	    translate "EPS" = Just Imagedata_Format_EPS
	    translate "EQN" = Just Imagedata_Format_EQN
	    translate "FAX" = Just Imagedata_Format_FAX
	    translate "GIF" = Just Imagedata_Format_GIF
	    translate "GIF87a" = Just Imagedata_Format_GIF87a
	    translate "GIF89a" = Just Imagedata_Format_GIF89a
	    translate "JPG" = Just Imagedata_Format_JPG
	    translate "JPEG" = Just Imagedata_Format_JPEG
	    translate "IGES" = Just Imagedata_Format_IGES
	    translate "PCX" = Just Imagedata_Format_PCX
	    translate "PIC" = Just Imagedata_Format_PIC
	    translate "PNG" = Just Imagedata_Format_PNG
	    translate "PS" = Just Imagedata_Format_PS
	    translate "SGML" = Just Imagedata_Format_SGML
	    translate "TBL" = Just Imagedata_Format_TBL
	    translate "TEX" = Just Imagedata_Format_TEX
	    translate "TIFF" = Just Imagedata_Format_TIFF
	    translate "WMF" = Just Imagedata_Format_WMF
	    translate "WPG" = Just Imagedata_Format_WPG
	    translate "SVG" = Just Imagedata_Format_SVG
	    translate "linespecific" = Just Imagedata_Format_Linespecific
	    translate _ = Nothing
    toAttrFrTyp n Imagedata_Format_BMP = Just (n, str2attr "BMP")
    toAttrFrTyp n Imagedata_Format_CGM_CHAR = Just (n, str2attr "CGM-CHAR")
    toAttrFrTyp n Imagedata_Format_CGM_BINARY = Just (n, str2attr "CGM-BINARY")
    toAttrFrTyp n Imagedata_Format_CGM_CLEAR = Just (n, str2attr "CGM-CLEAR")
    toAttrFrTyp n Imagedata_Format_DITROFF = Just (n, str2attr "DITROFF")
    toAttrFrTyp n Imagedata_Format_DVI = Just (n, str2attr "DVI")
    toAttrFrTyp n Imagedata_Format_EPS = Just (n, str2attr "EPS")
    toAttrFrTyp n Imagedata_Format_EQN = Just (n, str2attr "EQN")
    toAttrFrTyp n Imagedata_Format_FAX = Just (n, str2attr "FAX")
    toAttrFrTyp n Imagedata_Format_GIF = Just (n, str2attr "GIF")
    toAttrFrTyp n Imagedata_Format_GIF87a = Just (n, str2attr "GIF87a")
    toAttrFrTyp n Imagedata_Format_GIF89a = Just (n, str2attr "GIF89a")
    toAttrFrTyp n Imagedata_Format_JPG = Just (n, str2attr "JPG")
    toAttrFrTyp n Imagedata_Format_JPEG = Just (n, str2attr "JPEG")
    toAttrFrTyp n Imagedata_Format_IGES = Just (n, str2attr "IGES")
    toAttrFrTyp n Imagedata_Format_PCX = Just (n, str2attr "PCX")
    toAttrFrTyp n Imagedata_Format_PIC = Just (n, str2attr "PIC")
    toAttrFrTyp n Imagedata_Format_PNG = Just (n, str2attr "PNG")
    toAttrFrTyp n Imagedata_Format_PS = Just (n, str2attr "PS")
    toAttrFrTyp n Imagedata_Format_SGML = Just (n, str2attr "SGML")
    toAttrFrTyp n Imagedata_Format_TBL = Just (n, str2attr "TBL")
    toAttrFrTyp n Imagedata_Format_TEX = Just (n, str2attr "TEX")
    toAttrFrTyp n Imagedata_Format_TIFF = Just (n, str2attr "TIFF")
    toAttrFrTyp n Imagedata_Format_WMF = Just (n, str2attr "WMF")
    toAttrFrTyp n Imagedata_Format_WPG = Just (n, str2attr "WPG")
    toAttrFrTyp n Imagedata_Format_SVG = Just (n, str2attr "SVG")
    toAttrFrTyp n Imagedata_Format_Linespecific = Just (n, str2attr "linespecific")
instance XmlAttrType Imagedata_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Imagedata_Revisionflag_Changed
	    translate "added" = Just Imagedata_Revisionflag_Added
	    translate "deleted" = Just Imagedata_Revisionflag_Deleted
	    translate "off" = Just Imagedata_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Imagedata_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Imagedata_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Imagedata_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Imagedata_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Textdata where
    fromElem (CElem (Elem "textdata" as []):rest) =
	(Just (fromAttrs as), rest)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem as =
	[CElem (Elem "textdata" (toAttrs as) [])]
instance XmlAttributes Textdata where
    fromAttrs as =
	Textdata
	  { textdataEncoding = possibleA fromAttrToStr "encoding" as
	  , textdataEntityref = possibleA fromAttrToStr "entityref" as
	  , textdataFileref = possibleA fromAttrToStr "fileref" as
	  , textdataFormat = possibleA fromAttrToTyp "format" as
	  , textdataSrccredit = possibleA fromAttrToStr "srccredit" as
	  , textdataId = possibleA fromAttrToStr "id" as
	  , textdataLang = possibleA fromAttrToStr "lang" as
	  , textdataRemap = possibleA fromAttrToStr "remap" as
	  , textdataXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , textdataRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , textdataArch = possibleA fromAttrToStr "arch" as
	  , textdataCondition = possibleA fromAttrToStr "condition" as
	  , textdataConformance = possibleA fromAttrToStr "conformance" as
	  , textdataOs = possibleA fromAttrToStr "os" as
	  , textdataRevision = possibleA fromAttrToStr "revision" as
	  , textdataSecurity = possibleA fromAttrToStr "security" as
	  , textdataUserlevel = possibleA fromAttrToStr "userlevel" as
	  , textdataVendor = possibleA fromAttrToStr "vendor" as
	  , textdataRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "encoding" (textdataEncoding v)
	, maybeToAttr toAttrFrStr "entityref" (textdataEntityref v)
	, maybeToAttr toAttrFrStr "fileref" (textdataFileref v)
	, maybeToAttr toAttrFrTyp "format" (textdataFormat v)
	, maybeToAttr toAttrFrStr "srccredit" (textdataSrccredit v)
	, maybeToAttr toAttrFrStr "id" (textdataId v)
	, maybeToAttr toAttrFrStr "lang" (textdataLang v)
	, maybeToAttr toAttrFrStr "remap" (textdataRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (textdataXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (textdataRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (textdataArch v)
	, maybeToAttr toAttrFrStr "condition" (textdataCondition v)
	, maybeToAttr toAttrFrStr "conformance" (textdataConformance v)
	, maybeToAttr toAttrFrStr "os" (textdataOs v)
	, maybeToAttr toAttrFrStr "revision" (textdataRevision v)
	, maybeToAttr toAttrFrStr "security" (textdataSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (textdataUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (textdataVendor v)
	, maybeToAttr toAttrFrStr "role" (textdataRole v)
	]
instance XmlAttrType Textdata_Format where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "BMP" = Just Textdata_Format_BMP
	    translate "CGM-CHAR" = Just Textdata_Format_CGM_CHAR
	    translate "CGM-BINARY" = Just Textdata_Format_CGM_BINARY
	    translate "CGM-CLEAR" = Just Textdata_Format_CGM_CLEAR
	    translate "DITROFF" = Just Textdata_Format_DITROFF
	    translate "DVI" = Just Textdata_Format_DVI
	    translate "EPS" = Just Textdata_Format_EPS
	    translate "EQN" = Just Textdata_Format_EQN
	    translate "FAX" = Just Textdata_Format_FAX
	    translate "GIF" = Just Textdata_Format_GIF
	    translate "GIF87a" = Just Textdata_Format_GIF87a
	    translate "GIF89a" = Just Textdata_Format_GIF89a
	    translate "JPG" = Just Textdata_Format_JPG
	    translate "JPEG" = Just Textdata_Format_JPEG
	    translate "IGES" = Just Textdata_Format_IGES
	    translate "PCX" = Just Textdata_Format_PCX
	    translate "PIC" = Just Textdata_Format_PIC
	    translate "PNG" = Just Textdata_Format_PNG
	    translate "PS" = Just Textdata_Format_PS
	    translate "SGML" = Just Textdata_Format_SGML
	    translate "TBL" = Just Textdata_Format_TBL
	    translate "TEX" = Just Textdata_Format_TEX
	    translate "TIFF" = Just Textdata_Format_TIFF
	    translate "WMF" = Just Textdata_Format_WMF
	    translate "WPG" = Just Textdata_Format_WPG
	    translate "SVG" = Just Textdata_Format_SVG
	    translate "linespecific" = Just Textdata_Format_Linespecific
	    translate _ = Nothing
    toAttrFrTyp n Textdata_Format_BMP = Just (n, str2attr "BMP")
    toAttrFrTyp n Textdata_Format_CGM_CHAR = Just (n, str2attr "CGM-CHAR")
    toAttrFrTyp n Textdata_Format_CGM_BINARY = Just (n, str2attr "CGM-BINARY")
    toAttrFrTyp n Textdata_Format_CGM_CLEAR = Just (n, str2attr "CGM-CLEAR")
    toAttrFrTyp n Textdata_Format_DITROFF = Just (n, str2attr "DITROFF")
    toAttrFrTyp n Textdata_Format_DVI = Just (n, str2attr "DVI")
    toAttrFrTyp n Textdata_Format_EPS = Just (n, str2attr "EPS")
    toAttrFrTyp n Textdata_Format_EQN = Just (n, str2attr "EQN")
    toAttrFrTyp n Textdata_Format_FAX = Just (n, str2attr "FAX")
    toAttrFrTyp n Textdata_Format_GIF = Just (n, str2attr "GIF")
    toAttrFrTyp n Textdata_Format_GIF87a = Just (n, str2attr "GIF87a")
    toAttrFrTyp n Textdata_Format_GIF89a = Just (n, str2attr "GIF89a")
    toAttrFrTyp n Textdata_Format_JPG = Just (n, str2attr "JPG")
    toAttrFrTyp n Textdata_Format_JPEG = Just (n, str2attr "JPEG")
    toAttrFrTyp n Textdata_Format_IGES = Just (n, str2attr "IGES")
    toAttrFrTyp n Textdata_Format_PCX = Just (n, str2attr "PCX")
    toAttrFrTyp n Textdata_Format_PIC = Just (n, str2attr "PIC")
    toAttrFrTyp n Textdata_Format_PNG = Just (n, str2attr "PNG")
    toAttrFrTyp n Textdata_Format_PS = Just (n, str2attr "PS")
    toAttrFrTyp n Textdata_Format_SGML = Just (n, str2attr "SGML")
    toAttrFrTyp n Textdata_Format_TBL = Just (n, str2attr "TBL")
    toAttrFrTyp n Textdata_Format_TEX = Just (n, str2attr "TEX")
    toAttrFrTyp n Textdata_Format_TIFF = Just (n, str2attr "TIFF")
    toAttrFrTyp n Textdata_Format_WMF = Just (n, str2attr "WMF")
    toAttrFrTyp n Textdata_Format_WPG = Just (n, str2attr "WPG")
    toAttrFrTyp n Textdata_Format_SVG = Just (n, str2attr "SVG")
    toAttrFrTyp n Textdata_Format_Linespecific = Just (n, str2attr "linespecific")
instance XmlAttrType Textdata_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Textdata_Revisionflag_Changed
	    translate "added" = Just Textdata_Revisionflag_Added
	    translate "deleted" = Just Textdata_Revisionflag_Deleted
	    translate "off" = Just Textdata_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Textdata_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Textdata_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Textdata_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Textdata_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Caption where
    fromElem (CElem (Elem "caption" as c0):rest) =
	(\(a,ca)->
	   (Just (Caption (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Caption as a) =
	[CElem (Elem "caption" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Caption_Attrs where
    fromAttrs as =
	Caption_Attrs
	  { captionId = possibleA fromAttrToStr "id" as
	  , captionLang = possibleA fromAttrToStr "lang" as
	  , captionRemap = possibleA fromAttrToStr "remap" as
	  , captionXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , captionRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , captionArch = possibleA fromAttrToStr "arch" as
	  , captionCondition = possibleA fromAttrToStr "condition" as
	  , captionConformance = possibleA fromAttrToStr "conformance" as
	  , captionOs = possibleA fromAttrToStr "os" as
	  , captionRevision = possibleA fromAttrToStr "revision" as
	  , captionSecurity = possibleA fromAttrToStr "security" as
	  , captionUserlevel = possibleA fromAttrToStr "userlevel" as
	  , captionVendor = possibleA fromAttrToStr "vendor" as
	  , captionRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (captionId v)
	, maybeToAttr toAttrFrStr "lang" (captionLang v)
	, maybeToAttr toAttrFrStr "remap" (captionRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (captionXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (captionRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (captionArch v)
	, maybeToAttr toAttrFrStr "condition" (captionCondition v)
	, maybeToAttr toAttrFrStr "conformance" (captionConformance v)
	, maybeToAttr toAttrFrStr "os" (captionOs v)
	, maybeToAttr toAttrFrStr "revision" (captionRevision v)
	, maybeToAttr toAttrFrStr "security" (captionSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (captionUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (captionVendor v)
	, maybeToAttr toAttrFrStr "role" (captionRole v)
	]
instance XmlContent Caption_ where
    fromElem c0 =
	case (fromElem c0) of
	(Just a,rest) -> (Just (Caption_Calloutlist a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Caption_Glosslist a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Caption_Itemizedlist a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Caption_Orderedlist a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Caption_Segmentedlist a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Caption_Simplelist a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Caption_Variablelist a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Caption_Caution a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Caption_Important a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Caption_Note a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Caption_Tip a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Caption_Warning a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Caption_Literallayout a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Caption_Programlisting a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Caption_Programlistingco a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Caption_Screen a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Caption_Screenco a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Caption_Screenshot a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Caption_Formalpara a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Caption_Para a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Caption_Simpara a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Caption_Blockquote a), rest)
																						(_,_) ->
																						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Caption_Calloutlist a) = toElem a
    toElem (Caption_Glosslist a) = toElem a
    toElem (Caption_Itemizedlist a) = toElem a
    toElem (Caption_Orderedlist a) = toElem a
    toElem (Caption_Segmentedlist a) = toElem a
    toElem (Caption_Simplelist a) = toElem a
    toElem (Caption_Variablelist a) = toElem a
    toElem (Caption_Caution a) = toElem a
    toElem (Caption_Important a) = toElem a
    toElem (Caption_Note a) = toElem a
    toElem (Caption_Tip a) = toElem a
    toElem (Caption_Warning a) = toElem a
    toElem (Caption_Literallayout a) = toElem a
    toElem (Caption_Programlisting a) = toElem a
    toElem (Caption_Programlistingco a) = toElem a
    toElem (Caption_Screen a) = toElem a
    toElem (Caption_Screenco a) = toElem a
    toElem (Caption_Screenshot a) = toElem a
    toElem (Caption_Formalpara a) = toElem a
    toElem (Caption_Para a) = toElem a
    toElem (Caption_Simpara a) = toElem a
    toElem (Caption_Blockquote a) = toElem a
instance XmlAttrType Caption_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Caption_Revisionflag_Changed
	    translate "added" = Just Caption_Revisionflag_Added
	    translate "deleted" = Just Caption_Revisionflag_Deleted
	    translate "off" = Just Caption_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Caption_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Caption_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Caption_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Caption_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Mediaobjectco where
    fromElem (CElem (Elem "mediaobjectco" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Mediaobjectco (fromAttrs as) a b c), rest))
	      (many fromElem cb))
	   (definite fromElem "<imageobjectco>" "mediaobjectco" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Mediaobjectco as a b c) =
	[CElem (Elem "mediaobjectco" (toAttrs as) (maybe [] toElem a ++
						   toElem b ++ concatMap toElem c))]
instance XmlAttributes Mediaobjectco_Attrs where
    fromAttrs as =
	Mediaobjectco_Attrs
	  { mediaobjectcoId = possibleA fromAttrToStr "id" as
	  , mediaobjectcoLang = possibleA fromAttrToStr "lang" as
	  , mediaobjectcoRemap = possibleA fromAttrToStr "remap" as
	  , mediaobjectcoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , mediaobjectcoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , mediaobjectcoArch = possibleA fromAttrToStr "arch" as
	  , mediaobjectcoCondition = possibleA fromAttrToStr "condition" as
	  , mediaobjectcoConformance = possibleA fromAttrToStr "conformance" as
	  , mediaobjectcoOs = possibleA fromAttrToStr "os" as
	  , mediaobjectcoRevision = possibleA fromAttrToStr "revision" as
	  , mediaobjectcoSecurity = possibleA fromAttrToStr "security" as
	  , mediaobjectcoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , mediaobjectcoVendor = possibleA fromAttrToStr "vendor" as
	  , mediaobjectcoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (mediaobjectcoId v)
	, maybeToAttr toAttrFrStr "lang" (mediaobjectcoLang v)
	, maybeToAttr toAttrFrStr "remap" (mediaobjectcoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (mediaobjectcoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (mediaobjectcoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (mediaobjectcoArch v)
	, maybeToAttr toAttrFrStr "condition" (mediaobjectcoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (mediaobjectcoConformance v)
	, maybeToAttr toAttrFrStr "os" (mediaobjectcoOs v)
	, maybeToAttr toAttrFrStr "revision" (mediaobjectcoRevision v)
	, maybeToAttr toAttrFrStr "security" (mediaobjectcoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (mediaobjectcoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (mediaobjectcoVendor v)
	, maybeToAttr toAttrFrStr "role" (mediaobjectcoRole v)
	]
instance XmlAttrType Mediaobjectco_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Mediaobjectco_Revisionflag_Changed
	    translate "added" = Just Mediaobjectco_Revisionflag_Added
	    translate "deleted" = Just Mediaobjectco_Revisionflag_Deleted
	    translate "off" = Just Mediaobjectco_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Mediaobjectco_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Mediaobjectco_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Mediaobjectco_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Mediaobjectco_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Imageobjectco where
    fromElem (CElem (Elem "imageobjectco" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Imageobjectco (fromAttrs as) a b c), rest))
	      (many fromElem cb))
	   (definite fromElem "<imageobject>" "imageobjectco" ca))
	(definite fromElem "<areaspec>" "imageobjectco" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Imageobjectco as a b c) =
	[CElem (Elem "imageobjectco" (toAttrs as) (toElem a ++ toElem b ++
						   concatMap toElem c))]
instance XmlAttributes Imageobjectco_Attrs where
    fromAttrs as =
	Imageobjectco_Attrs
	  { imageobjectcoId = possibleA fromAttrToStr "id" as
	  , imageobjectcoLang = possibleA fromAttrToStr "lang" as
	  , imageobjectcoRemap = possibleA fromAttrToStr "remap" as
	  , imageobjectcoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , imageobjectcoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , imageobjectcoArch = possibleA fromAttrToStr "arch" as
	  , imageobjectcoCondition = possibleA fromAttrToStr "condition" as
	  , imageobjectcoConformance = possibleA fromAttrToStr "conformance" as
	  , imageobjectcoOs = possibleA fromAttrToStr "os" as
	  , imageobjectcoRevision = possibleA fromAttrToStr "revision" as
	  , imageobjectcoSecurity = possibleA fromAttrToStr "security" as
	  , imageobjectcoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , imageobjectcoVendor = possibleA fromAttrToStr "vendor" as
	  , imageobjectcoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (imageobjectcoId v)
	, maybeToAttr toAttrFrStr "lang" (imageobjectcoLang v)
	, maybeToAttr toAttrFrStr "remap" (imageobjectcoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (imageobjectcoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (imageobjectcoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (imageobjectcoArch v)
	, maybeToAttr toAttrFrStr "condition" (imageobjectcoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (imageobjectcoConformance v)
	, maybeToAttr toAttrFrStr "os" (imageobjectcoOs v)
	, maybeToAttr toAttrFrStr "revision" (imageobjectcoRevision v)
	, maybeToAttr toAttrFrStr "security" (imageobjectcoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (imageobjectcoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (imageobjectcoVendor v)
	, maybeToAttr toAttrFrStr "role" (imageobjectcoRole v)
	]
instance XmlAttrType Imageobjectco_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Imageobjectco_Revisionflag_Changed
	    translate "added" = Just Imageobjectco_Revisionflag_Added
	    translate "deleted" = Just Imageobjectco_Revisionflag_Deleted
	    translate "off" = Just Imageobjectco_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Imageobjectco_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Imageobjectco_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Imageobjectco_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Imageobjectco_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Equation where
    fromElem (CElem (Elem "equation" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Equation (fromAttrs as) a b c), rest))
	      (definite fromElem "OneOf" "equation" cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Equation as a b c) =
	[CElem (Elem "equation" (toAttrs as) (maybe [] toElem a ++
					      maybe [] toElem b ++ toElem c))]
instance XmlAttributes Equation_Attrs where
    fromAttrs as =
	Equation_Attrs
	  { equationLabel = possibleA fromAttrToStr "label" as
	  , equationId = possibleA fromAttrToStr "id" as
	  , equationLang = possibleA fromAttrToStr "lang" as
	  , equationRemap = possibleA fromAttrToStr "remap" as
	  , equationXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , equationRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , equationArch = possibleA fromAttrToStr "arch" as
	  , equationCondition = possibleA fromAttrToStr "condition" as
	  , equationConformance = possibleA fromAttrToStr "conformance" as
	  , equationOs = possibleA fromAttrToStr "os" as
	  , equationRevision = possibleA fromAttrToStr "revision" as
	  , equationSecurity = possibleA fromAttrToStr "security" as
	  , equationUserlevel = possibleA fromAttrToStr "userlevel" as
	  , equationVendor = possibleA fromAttrToStr "vendor" as
	  , equationRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (equationLabel v)
	, maybeToAttr toAttrFrStr "id" (equationId v)
	, maybeToAttr toAttrFrStr "lang" (equationLang v)
	, maybeToAttr toAttrFrStr "remap" (equationRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (equationXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (equationRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (equationArch v)
	, maybeToAttr toAttrFrStr "condition" (equationCondition v)
	, maybeToAttr toAttrFrStr "conformance" (equationConformance v)
	, maybeToAttr toAttrFrStr "os" (equationOs v)
	, maybeToAttr toAttrFrStr "revision" (equationRevision v)
	, maybeToAttr toAttrFrStr "security" (equationSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (equationUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (equationVendor v)
	, maybeToAttr toAttrFrStr "role" (equationRole v)
	]
instance XmlAttrType Equation_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Equation_Revisionflag_Changed
	    translate "added" = Just Equation_Revisionflag_Added
	    translate "deleted" = Just Equation_Revisionflag_Deleted
	    translate "off" = Just Equation_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Equation_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Equation_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Equation_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Equation_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Informalequation where
    fromElem (CElem (Elem "informalequation" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Informalequation (fromAttrs as) a b c), rest))
	      (definite fromElem "OneOf" "informalequation" cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Informalequation as a b c) =
	[CElem (Elem "informalequation" (toAttrs as) (maybe [] toElem a ++
						      maybe [] toElem b ++ toElem c))]
instance XmlAttributes Informalequation_Attrs where
    fromAttrs as =
	Informalequation_Attrs
	  { informalequationId = possibleA fromAttrToStr "id" as
	  , informalequationLang = possibleA fromAttrToStr "lang" as
	  , informalequationRemap = possibleA fromAttrToStr "remap" as
	  , informalequationXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , informalequationRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , informalequationArch = possibleA fromAttrToStr "arch" as
	  , informalequationCondition = possibleA fromAttrToStr "condition" as
	  , informalequationConformance = possibleA fromAttrToStr "conformance" as
	  , informalequationOs = possibleA fromAttrToStr "os" as
	  , informalequationRevision = possibleA fromAttrToStr "revision" as
	  , informalequationSecurity = possibleA fromAttrToStr "security" as
	  , informalequationUserlevel = possibleA fromAttrToStr "userlevel" as
	  , informalequationVendor = possibleA fromAttrToStr "vendor" as
	  , informalequationRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (informalequationId v)
	, maybeToAttr toAttrFrStr "lang" (informalequationLang v)
	, maybeToAttr toAttrFrStr "remap" (informalequationRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (informalequationXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (informalequationRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (informalequationArch v)
	, maybeToAttr toAttrFrStr "condition" (informalequationCondition v)
	, maybeToAttr toAttrFrStr "conformance" (informalequationConformance v)
	, maybeToAttr toAttrFrStr "os" (informalequationOs v)
	, maybeToAttr toAttrFrStr "revision" (informalequationRevision v)
	, maybeToAttr toAttrFrStr "security" (informalequationSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (informalequationUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (informalequationVendor v)
	, maybeToAttr toAttrFrStr "role" (informalequationRole v)
	]
instance XmlAttrType Informalequation_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Informalequation_Revisionflag_Changed
	    translate "added" = Just Informalequation_Revisionflag_Added
	    translate "deleted" = Just Informalequation_Revisionflag_Deleted
	    translate "off" = Just Informalequation_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Informalequation_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Informalequation_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Informalequation_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Informalequation_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Inlineequation where
    fromElem (CElem (Elem "inlineequation" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Inlineequation (fromAttrs as) a b), rest))
	   (definite fromElem "OneOf" "inlineequation" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Inlineequation as a b) =
	[CElem (Elem "inlineequation" (toAttrs as) (maybe [] toElem a ++
						    toElem b))]
instance XmlAttributes Inlineequation_Attrs where
    fromAttrs as =
	Inlineequation_Attrs
	  { inlineequationId = possibleA fromAttrToStr "id" as
	  , inlineequationLang = possibleA fromAttrToStr "lang" as
	  , inlineequationRemap = possibleA fromAttrToStr "remap" as
	  , inlineequationXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , inlineequationRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , inlineequationArch = possibleA fromAttrToStr "arch" as
	  , inlineequationCondition = possibleA fromAttrToStr "condition" as
	  , inlineequationConformance = possibleA fromAttrToStr "conformance" as
	  , inlineequationOs = possibleA fromAttrToStr "os" as
	  , inlineequationRevision = possibleA fromAttrToStr "revision" as
	  , inlineequationSecurity = possibleA fromAttrToStr "security" as
	  , inlineequationUserlevel = possibleA fromAttrToStr "userlevel" as
	  , inlineequationVendor = possibleA fromAttrToStr "vendor" as
	  , inlineequationRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (inlineequationId v)
	, maybeToAttr toAttrFrStr "lang" (inlineequationLang v)
	, maybeToAttr toAttrFrStr "remap" (inlineequationRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (inlineequationXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (inlineequationRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (inlineequationArch v)
	, maybeToAttr toAttrFrStr "condition" (inlineequationCondition v)
	, maybeToAttr toAttrFrStr "conformance" (inlineequationConformance v)
	, maybeToAttr toAttrFrStr "os" (inlineequationOs v)
	, maybeToAttr toAttrFrStr "revision" (inlineequationRevision v)
	, maybeToAttr toAttrFrStr "security" (inlineequationSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (inlineequationUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (inlineequationVendor v)
	, maybeToAttr toAttrFrStr "role" (inlineequationRole v)
	]
instance XmlAttrType Inlineequation_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Inlineequation_Revisionflag_Changed
	    translate "added" = Just Inlineequation_Revisionflag_Added
	    translate "deleted" = Just Inlineequation_Revisionflag_Deleted
	    translate "off" = Just Inlineequation_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Inlineequation_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Inlineequation_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Inlineequation_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Inlineequation_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Alt where
    fromElem (CElem (Elem "alt" as c0):rest) =
	(\(a,ca)->
	   (Just (Alt (fromAttrs as) a), rest))
	(definite fromText "text" "alt" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Alt as a) =
	[CElem (Elem "alt" (toAttrs as) (toText a))]
instance XmlAttributes Alt_Attrs where
    fromAttrs as =
	Alt_Attrs
	  { altId = possibleA fromAttrToStr "id" as
	  , altLang = possibleA fromAttrToStr "lang" as
	  , altRemap = possibleA fromAttrToStr "remap" as
	  , altXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , altRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , altArch = possibleA fromAttrToStr "arch" as
	  , altCondition = possibleA fromAttrToStr "condition" as
	  , altConformance = possibleA fromAttrToStr "conformance" as
	  , altOs = possibleA fromAttrToStr "os" as
	  , altRevision = possibleA fromAttrToStr "revision" as
	  , altSecurity = possibleA fromAttrToStr "security" as
	  , altUserlevel = possibleA fromAttrToStr "userlevel" as
	  , altVendor = possibleA fromAttrToStr "vendor" as
	  , altRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (altId v)
	, maybeToAttr toAttrFrStr "lang" (altLang v)
	, maybeToAttr toAttrFrStr "remap" (altRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (altXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (altRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (altArch v)
	, maybeToAttr toAttrFrStr "condition" (altCondition v)
	, maybeToAttr toAttrFrStr "conformance" (altConformance v)
	, maybeToAttr toAttrFrStr "os" (altOs v)
	, maybeToAttr toAttrFrStr "revision" (altRevision v)
	, maybeToAttr toAttrFrStr "security" (altSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (altUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (altVendor v)
	, maybeToAttr toAttrFrStr "role" (altRole v)
	]
instance XmlAttrType Alt_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Alt_Revisionflag_Changed
	    translate "added" = Just Alt_Revisionflag_Added
	    translate "deleted" = Just Alt_Revisionflag_Deleted
	    translate "off" = Just Alt_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Alt_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Alt_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Alt_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Alt_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Table where
    fromElem (CElem (Elem "table" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Table (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Table as a b) =
	[CElem (Elem "table" (toAttrs as) (maybe [] toElem a ++
					   concatMap toElem b))]
instance XmlAttributes Table_Attrs where
    fromAttrs as =
	Table_Attrs
	  { tableFrame = possibleA fromAttrToTyp "frame" as
	  , tableColsep = possibleA fromAttrToStr "colsep" as
	  , tableRowsep = possibleA fromAttrToStr "rowsep" as
	  , tablePgwide = possibleA fromAttrToStr "pgwide" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "frame" (tableFrame v)
	, maybeToAttr toAttrFrStr "colsep" (tableColsep v)
	, maybeToAttr toAttrFrStr "rowsep" (tableRowsep v)
	, maybeToAttr toAttrFrStr "pgwide" (tablePgwide v)
	]
instance XmlAttrType Table_Frame where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "top" = Just Table_Frame_Top
	    translate "bottom" = Just Table_Frame_Bottom
	    translate "topbot" = Just Table_Frame_Topbot
	    translate "all" = Just Table_Frame_All
	    translate "sides" = Just Table_Frame_Sides
	    translate "none" = Just Table_Frame_None
	    translate _ = Nothing
    toAttrFrTyp n Table_Frame_Top = Just (n, str2attr "top")
    toAttrFrTyp n Table_Frame_Bottom = Just (n, str2attr "bottom")
    toAttrFrTyp n Table_Frame_Topbot = Just (n, str2attr "topbot")
    toAttrFrTyp n Table_Frame_All = Just (n, str2attr "all")
    toAttrFrTyp n Table_Frame_Sides = Just (n, str2attr "sides")
    toAttrFrTyp n Table_Frame_None = Just (n, str2attr "none")
instance XmlContent Tgroup where
    fromElem (CElem (Elem "tgroup" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Tgroup (fromAttrs as) a b c), rest))
	      (definite fromElem "<tbody>" "tgroup" cb))
	   (fromElem ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Tgroup as a b c) =
	[CElem (Elem "tgroup" (toAttrs as) (concatMap toElem a ++
					    maybe [] toElem b ++ toElem c))]
instance XmlAttributes Tgroup_Attrs where
    fromAttrs as =
	Tgroup_Attrs
	  { tgroupCols = definiteA fromAttrToStr "tgroup" "cols" as
	  , tgroupColsep = possibleA fromAttrToStr "colsep" as
	  , tgroupRowsep = possibleA fromAttrToStr "rowsep" as
	  , tgroupAlign = possibleA fromAttrToTyp "align" as
	  }
    toAttrs v = catMaybes 
	[ toAttrFrStr "cols" (tgroupCols v)
	, maybeToAttr toAttrFrStr "colsep" (tgroupColsep v)
	, maybeToAttr toAttrFrStr "rowsep" (tgroupRowsep v)
	, maybeToAttr toAttrFrTyp "align" (tgroupAlign v)
	]
instance XmlAttrType Tgroup_Align where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "left" = Just Tgroup_Align_Left
	    translate "right" = Just Tgroup_Align_Right
	    translate "center" = Just Tgroup_Align_Center
	    translate "justify" = Just Tgroup_Align_Justify
	    translate "char" = Just Tgroup_Align_Char
	    translate _ = Nothing
    toAttrFrTyp n Tgroup_Align_Left = Just (n, str2attr "left")
    toAttrFrTyp n Tgroup_Align_Right = Just (n, str2attr "right")
    toAttrFrTyp n Tgroup_Align_Center = Just (n, str2attr "center")
    toAttrFrTyp n Tgroup_Align_Justify = Just (n, str2attr "justify")
    toAttrFrTyp n Tgroup_Align_Char = Just (n, str2attr "char")
instance XmlContent Colspec where
    fromElem (CElem (Elem "colspec" as []):rest) =
	(Just (fromAttrs as), rest)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem as =
	[CElem (Elem "colspec" (toAttrs as) [])]
instance XmlAttributes Colspec where
    fromAttrs as =
	Colspec
	  { colspecColnum = possibleA fromAttrToStr "colnum" as
	  , colspecColname = possibleA fromAttrToStr "colname" as
	  , colspecColwidth = possibleA fromAttrToStr "colwidth" as
	  , colspecColsep = possibleA fromAttrToStr "colsep" as
	  , colspecRowsep = possibleA fromAttrToStr "rowsep" as
	  , colspecAlign = possibleA fromAttrToTyp "align" as
	  , colspecChar = possibleA fromAttrToStr "char" as
	  , colspecCharoff = possibleA fromAttrToStr "charoff" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "colnum" (colspecColnum v)
	, maybeToAttr toAttrFrStr "colname" (colspecColname v)
	, maybeToAttr toAttrFrStr "colwidth" (colspecColwidth v)
	, maybeToAttr toAttrFrStr "colsep" (colspecColsep v)
	, maybeToAttr toAttrFrStr "rowsep" (colspecRowsep v)
	, maybeToAttr toAttrFrTyp "align" (colspecAlign v)
	, maybeToAttr toAttrFrStr "char" (colspecChar v)
	, maybeToAttr toAttrFrStr "charoff" (colspecCharoff v)
	]
instance XmlAttrType Colspec_Align where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "left" = Just Colspec_Align_Left
	    translate "right" = Just Colspec_Align_Right
	    translate "center" = Just Colspec_Align_Center
	    translate "justify" = Just Colspec_Align_Justify
	    translate "char" = Just Colspec_Align_Char
	    translate _ = Nothing
    toAttrFrTyp n Colspec_Align_Left = Just (n, str2attr "left")
    toAttrFrTyp n Colspec_Align_Right = Just (n, str2attr "right")
    toAttrFrTyp n Colspec_Align_Center = Just (n, str2attr "center")
    toAttrFrTyp n Colspec_Align_Justify = Just (n, str2attr "justify")
    toAttrFrTyp n Colspec_Align_Char = Just (n, str2attr "char")
instance XmlContent Thead where
    fromElem (CElem (Elem "thead" as c0):rest) =
	(\(a,ca)->
	   (Just (Thead (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Thead as a) =
	[CElem (Elem "thead" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Thead_Attrs where
    fromAttrs as =
	Thead_Attrs
	  { theadValign = possibleA fromAttrToTyp "valign" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "valign" (theadValign v)
	]
instance XmlAttrType Thead_Valign where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "top" = Just Thead_Valign_Top
	    translate "middle" = Just Thead_Valign_Middle
	    translate "bottom" = Just Thead_Valign_Bottom
	    translate _ = Nothing
    toAttrFrTyp n Thead_Valign_Top = Just (n, str2attr "top")
    toAttrFrTyp n Thead_Valign_Middle = Just (n, str2attr "middle")
    toAttrFrTyp n Thead_Valign_Bottom = Just (n, str2attr "bottom")
instance XmlContent Tbody where
    fromElem (CElem (Elem "tbody" as c0):rest) =
	(\(a,ca)->
	   (Just (Tbody (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Tbody as a) =
	[CElem (Elem "tbody" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Tbody_Attrs where
    fromAttrs as =
	Tbody_Attrs
	  { tbodyValign = possibleA fromAttrToTyp "valign" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "valign" (tbodyValign v)
	]
instance XmlAttrType Tbody_Valign where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "top" = Just Tbody_Valign_Top
	    translate "middle" = Just Tbody_Valign_Middle
	    translate "bottom" = Just Tbody_Valign_Bottom
	    translate _ = Nothing
    toAttrFrTyp n Tbody_Valign_Top = Just (n, str2attr "top")
    toAttrFrTyp n Tbody_Valign_Middle = Just (n, str2attr "middle")
    toAttrFrTyp n Tbody_Valign_Bottom = Just (n, str2attr "bottom")
instance XmlContent Row where
    fromElem (CElem (Elem "row" as c0):rest) =
	(\(a,ca)->
	   (Just (Row (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Row as a) =
	[CElem (Elem "row" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Row_Attrs where
    fromAttrs as =
	Row_Attrs
	  { rowRowsep = possibleA fromAttrToStr "rowsep" as
	  , rowValign = possibleA fromAttrToTyp "valign" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "rowsep" (rowRowsep v)
	, maybeToAttr toAttrFrTyp "valign" (rowValign v)
	]
instance XmlAttrType Row_Valign where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "top" = Just Row_Valign_Top
	    translate "middle" = Just Row_Valign_Middle
	    translate "bottom" = Just Row_Valign_Bottom
	    translate _ = Nothing
    toAttrFrTyp n Row_Valign_Top = Just (n, str2attr "top")
    toAttrFrTyp n Row_Valign_Middle = Just (n, str2attr "middle")
    toAttrFrTyp n Row_Valign_Bottom = Just (n, str2attr "bottom")
instance XmlContent Entry where
    fromElem (CElem (Elem "entry" as c0):rest) =
	(\(a,ca)->
	   (Just (Entry (fromAttrs as) a), rest))
	(many fromText c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Entry as a) =
	[CElem (Elem "entry" (toAttrs as) (concatMap toText a))]
instance XmlAttributes Entry_Attrs where
    fromAttrs as =
	Entry_Attrs
	  { entryColname = possibleA fromAttrToStr "colname" as
	  , entryNamest = possibleA fromAttrToStr "namest" as
	  , entryNameend = possibleA fromAttrToStr "nameend" as
	  , entryMorerows = possibleA fromAttrToStr "morerows" as
	  , entryColsep = possibleA fromAttrToStr "colsep" as
	  , entryRowsep = possibleA fromAttrToStr "rowsep" as
	  , entryAlign = possibleA fromAttrToTyp "align" as
	  , entryChar = possibleA fromAttrToStr "char" as
	  , entryCharoff = possibleA fromAttrToStr "charoff" as
	  , entryValign = possibleA fromAttrToTyp "valign" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "colname" (entryColname v)
	, maybeToAttr toAttrFrStr "namest" (entryNamest v)
	, maybeToAttr toAttrFrStr "nameend" (entryNameend v)
	, maybeToAttr toAttrFrStr "morerows" (entryMorerows v)
	, maybeToAttr toAttrFrStr "colsep" (entryColsep v)
	, maybeToAttr toAttrFrStr "rowsep" (entryRowsep v)
	, maybeToAttr toAttrFrTyp "align" (entryAlign v)
	, maybeToAttr toAttrFrStr "char" (entryChar v)
	, maybeToAttr toAttrFrStr "charoff" (entryCharoff v)
	, maybeToAttr toAttrFrTyp "valign" (entryValign v)
	]
instance XmlAttrType Entry_Align where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "left" = Just Entry_Align_Left
	    translate "right" = Just Entry_Align_Right
	    translate "center" = Just Entry_Align_Center
	    translate "justify" = Just Entry_Align_Justify
	    translate "char" = Just Entry_Align_Char
	    translate _ = Nothing
    toAttrFrTyp n Entry_Align_Left = Just (n, str2attr "left")
    toAttrFrTyp n Entry_Align_Right = Just (n, str2attr "right")
    toAttrFrTyp n Entry_Align_Center = Just (n, str2attr "center")
    toAttrFrTyp n Entry_Align_Justify = Just (n, str2attr "justify")
    toAttrFrTyp n Entry_Align_Char = Just (n, str2attr "char")
instance XmlAttrType Entry_Valign where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "top" = Just Entry_Valign_Top
	    translate "middle" = Just Entry_Valign_Middle
	    translate "bottom" = Just Entry_Valign_Bottom
	    translate _ = Nothing
    toAttrFrTyp n Entry_Valign_Top = Just (n, str2attr "top")
    toAttrFrTyp n Entry_Valign_Middle = Just (n, str2attr "middle")
    toAttrFrTyp n Entry_Valign_Bottom = Just (n, str2attr "bottom")
instance XmlContent Informaltable where
    fromElem (CElem (Elem "informaltable" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Informaltable (fromAttrs as) a b c), rest))
	      (definite fromElem "OneOf" "informaltable" cb))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Informaltable as a b c) =
	[CElem (Elem "informaltable" (toAttrs as) (maybe [] toElem a ++
						   concatMap toElem b ++ toElem c))]
instance XmlAttributes Informaltable_Attrs where
    fromAttrs as =
	Informaltable_Attrs
	  { informaltableFrame = possibleA fromAttrToTyp "frame" as
	  , informaltableColsep = possibleA fromAttrToStr "colsep" as
	  , informaltableRowsep = possibleA fromAttrToStr "rowsep" as
	  , informaltablePgwide = possibleA fromAttrToStr "pgwide" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "frame" (informaltableFrame v)
	, maybeToAttr toAttrFrStr "colsep" (informaltableColsep v)
	, maybeToAttr toAttrFrStr "rowsep" (informaltableRowsep v)
	, maybeToAttr toAttrFrStr "pgwide" (informaltablePgwide v)
	]
instance XmlAttrType Informaltable_Frame where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "top" = Just Informaltable_Frame_Top
	    translate "bottom" = Just Informaltable_Frame_Bottom
	    translate "topbot" = Just Informaltable_Frame_Topbot
	    translate "all" = Just Informaltable_Frame_All
	    translate "sides" = Just Informaltable_Frame_Sides
	    translate "none" = Just Informaltable_Frame_None
	    translate _ = Nothing
    toAttrFrTyp n Informaltable_Frame_Top = Just (n, str2attr "top")
    toAttrFrTyp n Informaltable_Frame_Bottom = Just (n, str2attr "bottom")
    toAttrFrTyp n Informaltable_Frame_Topbot = Just (n, str2attr "topbot")
    toAttrFrTyp n Informaltable_Frame_All = Just (n, str2attr "all")
    toAttrFrTyp n Informaltable_Frame_Sides = Just (n, str2attr "sides")
    toAttrFrTyp n Informaltable_Frame_None = Just (n, str2attr "none")
instance XmlContent Synopsis where
    fromElem (CElem (Elem "synopsis" as c0):rest) =
	(\(a,ca)->
	   (Just (Synopsis (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Synopsis as a) =
	[CElem (Elem "synopsis" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Synopsis_Attrs where
    fromAttrs as =
	Synopsis_Attrs
	  { synopsisLabel = possibleA fromAttrToStr "label" as
	  , synopsisFormat = defaultA fromAttrToTyp Synopsis_Format_Linespecific "format" as
	  , synopsisLinenumbering = possibleA fromAttrToTyp "linenumbering" as
	  , synopsisId = possibleA fromAttrToStr "id" as
	  , synopsisLang = possibleA fromAttrToStr "lang" as
	  , synopsisRemap = possibleA fromAttrToStr "remap" as
	  , synopsisXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , synopsisRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , synopsisArch = possibleA fromAttrToStr "arch" as
	  , synopsisCondition = possibleA fromAttrToStr "condition" as
	  , synopsisConformance = possibleA fromAttrToStr "conformance" as
	  , synopsisOs = possibleA fromAttrToStr "os" as
	  , synopsisRevision = possibleA fromAttrToStr "revision" as
	  , synopsisSecurity = possibleA fromAttrToStr "security" as
	  , synopsisUserlevel = possibleA fromAttrToStr "userlevel" as
	  , synopsisVendor = possibleA fromAttrToStr "vendor" as
	  , synopsisRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (synopsisLabel v)
	, defaultToAttr toAttrFrTyp "format" (synopsisFormat v)
	, maybeToAttr toAttrFrTyp "linenumbering" (synopsisLinenumbering v)
	, maybeToAttr toAttrFrStr "id" (synopsisId v)
	, maybeToAttr toAttrFrStr "lang" (synopsisLang v)
	, maybeToAttr toAttrFrStr "remap" (synopsisRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (synopsisXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (synopsisRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (synopsisArch v)
	, maybeToAttr toAttrFrStr "condition" (synopsisCondition v)
	, maybeToAttr toAttrFrStr "conformance" (synopsisConformance v)
	, maybeToAttr toAttrFrStr "os" (synopsisOs v)
	, maybeToAttr toAttrFrStr "revision" (synopsisRevision v)
	, maybeToAttr toAttrFrStr "security" (synopsisSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (synopsisUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (synopsisVendor v)
	, maybeToAttr toAttrFrStr "role" (synopsisRole v)
	]
instance XmlContent Synopsis_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Synopsis_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Synopsis_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Synopsis_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Synopsis_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Synopsis_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Synopsis_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Synopsis_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Synopsis_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Synopsis_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Synopsis_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Synopsis_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Synopsis_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Synopsis_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Synopsis_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Synopsis_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Synopsis_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Synopsis_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Synopsis_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Synopsis_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Synopsis_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Synopsis_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Synopsis_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Synopsis_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Synopsis_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Synopsis_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Synopsis_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Synopsis_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Synopsis_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Synopsis_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Synopsis_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Synopsis_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Synopsis_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Synopsis_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Synopsis_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Synopsis_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Synopsis_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Synopsis_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Synopsis_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Synopsis_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Synopsis_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Synopsis_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Synopsis_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Synopsis_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Synopsis_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Synopsis_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Synopsis_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Synopsis_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Synopsis_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Synopsis_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Synopsis_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Synopsis_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Synopsis_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Synopsis_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Synopsis_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Synopsis_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Synopsis_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Synopsis_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Synopsis_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Synopsis_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Synopsis_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Synopsis_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Synopsis_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Synopsis_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Synopsis_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Synopsis_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Synopsis_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Synopsis_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Synopsis_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Synopsis_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Synopsis_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Synopsis_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Synopsis_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Synopsis_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Synopsis_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Synopsis_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Synopsis_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Synopsis_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Synopsis_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Synopsis_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Synopsis_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Synopsis_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Synopsis_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Synopsis_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Synopsis_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Synopsis_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Synopsis_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Synopsis_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Synopsis_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Synopsis_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Synopsis_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Synopsis_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Synopsis_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Synopsis_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Synopsis_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Synopsis_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Synopsis_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Synopsis_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Synopsis_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Synopsis_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Synopsis_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																					case (fromElem c0) of
																																																																																																					(Just a,rest) -> (Just (Synopsis_Graphic a), rest)
																																																																																																					(_,_) ->
																																																																																																						case (fromElem c0) of
																																																																																																						(Just a,rest) -> (Just (Synopsis_Mediaobject a), rest)
																																																																																																						(_,_) ->
																																																																																																							case (fromElem c0) of
																																																																																																							(Just a,rest) -> (Just (Synopsis_Co a), rest)
																																																																																																							(_,_) ->
																																																																																																								case (fromElem c0) of
																																																																																																								(Just a,rest) -> (Just (Synopsis_Coref a), rest)
																																																																																																								(_,_) ->
																																																																																																									case (fromElem c0) of
																																																																																																									(Just a,rest) -> (Just (Synopsis_Textobject a), rest)
																																																																																																									(_,_) ->
																																																																																																										case (fromElem c0) of
																																																																																																										(Just a,rest) -> (Just (Synopsis_Lineannotation a), rest)
																																																																																																										(_,_) ->
																																																																																																										    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Synopsis_Str a) = toText a
    toElem (Synopsis_Footnoteref a) = toElem a
    toElem (Synopsis_Xref a) = toElem a
    toElem (Synopsis_Abbrev a) = toElem a
    toElem (Synopsis_Acronym a) = toElem a
    toElem (Synopsis_Citation a) = toElem a
    toElem (Synopsis_Citerefentry a) = toElem a
    toElem (Synopsis_Citetitle a) = toElem a
    toElem (Synopsis_Emphasis a) = toElem a
    toElem (Synopsis_Firstterm a) = toElem a
    toElem (Synopsis_Foreignphrase a) = toElem a
    toElem (Synopsis_Glossterm a) = toElem a
    toElem (Synopsis_Footnote a) = toElem a
    toElem (Synopsis_Phrase a) = toElem a
    toElem (Synopsis_Quote a) = toElem a
    toElem (Synopsis_Trademark a) = toElem a
    toElem (Synopsis_Wordasword a) = toElem a
    toElem (Synopsis_Personname a) = toElem a
    toElem (Synopsis_Link a) = toElem a
    toElem (Synopsis_Olink a) = toElem a
    toElem (Synopsis_Ulink a) = toElem a
    toElem (Synopsis_Action a) = toElem a
    toElem (Synopsis_Application a) = toElem a
    toElem (Synopsis_Classname a) = toElem a
    toElem (Synopsis_Methodname a) = toElem a
    toElem (Synopsis_Interfacename a) = toElem a
    toElem (Synopsis_Exceptionname a) = toElem a
    toElem (Synopsis_Ooclass a) = toElem a
    toElem (Synopsis_Oointerface a) = toElem a
    toElem (Synopsis_Ooexception a) = toElem a
    toElem (Synopsis_Command a) = toElem a
    toElem (Synopsis_Computeroutput a) = toElem a
    toElem (Synopsis_Database a) = toElem a
    toElem (Synopsis_Email a) = toElem a
    toElem (Synopsis_Envar a) = toElem a
    toElem (Synopsis_Errorcode a) = toElem a
    toElem (Synopsis_Errorname a) = toElem a
    toElem (Synopsis_Errortype a) = toElem a
    toElem (Synopsis_Errortext a) = toElem a
    toElem (Synopsis_Filename a) = toElem a
    toElem (Synopsis_Function a) = toElem a
    toElem (Synopsis_Guibutton a) = toElem a
    toElem (Synopsis_Guiicon a) = toElem a
    toElem (Synopsis_Guilabel a) = toElem a
    toElem (Synopsis_Guimenu a) = toElem a
    toElem (Synopsis_Guimenuitem a) = toElem a
    toElem (Synopsis_Guisubmenu a) = toElem a
    toElem (Synopsis_Hardware a) = toElem a
    toElem (Synopsis_Interface a) = toElem a
    toElem (Synopsis_Keycap a) = toElem a
    toElem (Synopsis_Keycode a) = toElem a
    toElem (Synopsis_Keycombo a) = toElem a
    toElem (Synopsis_Keysym a) = toElem a
    toElem (Synopsis_Literal a) = toElem a
    toElem (Synopsis_Constant a) = toElem a
    toElem (Synopsis_Markup a) = toElem a
    toElem (Synopsis_Medialabel a) = toElem a
    toElem (Synopsis_Menuchoice a) = toElem a
    toElem (Synopsis_Mousebutton a) = toElem a
    toElem (Synopsis_Option a) = toElem a
    toElem (Synopsis_Optional a) = toElem a
    toElem (Synopsis_Parameter a) = toElem a
    toElem (Synopsis_Prompt a) = toElem a
    toElem (Synopsis_Property a) = toElem a
    toElem (Synopsis_Replaceable a) = toElem a
    toElem (Synopsis_Returnvalue a) = toElem a
    toElem (Synopsis_Sgmltag a) = toElem a
    toElem (Synopsis_Structfield a) = toElem a
    toElem (Synopsis_Structname a) = toElem a
    toElem (Synopsis_Symbol a) = toElem a
    toElem (Synopsis_Systemitem a) = toElem a
    toElem (Synopsis_Token a) = toElem a
    toElem (Synopsis_Type a) = toElem a
    toElem (Synopsis_Userinput a) = toElem a
    toElem (Synopsis_Varname a) = toElem a
    toElem (Synopsis_Anchor a) = toElem a
    toElem (Synopsis_Author a) = toElem a
    toElem (Synopsis_Authorinitials a) = toElem a
    toElem (Synopsis_Corpauthor a) = toElem a
    toElem (Synopsis_Modespec a) = toElem a
    toElem (Synopsis_Othercredit a) = toElem a
    toElem (Synopsis_Productname a) = toElem a
    toElem (Synopsis_Productnumber a) = toElem a
    toElem (Synopsis_Revhistory a) = toElem a
    toElem (Synopsis_Remark a) = toElem a
    toElem (Synopsis_Subscript a) = toElem a
    toElem (Synopsis_Superscript a) = toElem a
    toElem (Synopsis_Inlinegraphic a) = toElem a
    toElem (Synopsis_Inlinemediaobject a) = toElem a
    toElem (Synopsis_Inlineequation a) = toElem a
    toElem (Synopsis_Synopsis a) = toElem a
    toElem (Synopsis_Cmdsynopsis a) = toElem a
    toElem (Synopsis_Funcsynopsis a) = toElem a
    toElem (Synopsis_Classsynopsis a) = toElem a
    toElem (Synopsis_Fieldsynopsis a) = toElem a
    toElem (Synopsis_Constructorsynopsis a) = toElem a
    toElem (Synopsis_Destructorsynopsis a) = toElem a
    toElem (Synopsis_Methodsynopsis a) = toElem a
    toElem (Synopsis_Indexterm a) = toElem a
    toElem (Synopsis_Beginpage a) = toElem a
    toElem (Synopsis_Graphic a) = toElem a
    toElem (Synopsis_Mediaobject a) = toElem a
    toElem (Synopsis_Co a) = toElem a
    toElem (Synopsis_Coref a) = toElem a
    toElem (Synopsis_Textobject a) = toElem a
    toElem (Synopsis_Lineannotation a) = toElem a
instance XmlAttrType Synopsis_Format where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "linespecific" = Just Synopsis_Format_Linespecific
	    translate _ = Nothing
    toAttrFrTyp n Synopsis_Format_Linespecific = Just (n, str2attr "linespecific")
instance XmlAttrType Synopsis_Linenumbering where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "numbered" = Just Synopsis_Linenumbering_Numbered
	    translate "unnumbered" = Just Synopsis_Linenumbering_Unnumbered
	    translate _ = Nothing
    toAttrFrTyp n Synopsis_Linenumbering_Numbered = Just (n, str2attr "numbered")
    toAttrFrTyp n Synopsis_Linenumbering_Unnumbered = Just (n, str2attr "unnumbered")
instance XmlAttrType Synopsis_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Synopsis_Revisionflag_Changed
	    translate "added" = Just Synopsis_Revisionflag_Added
	    translate "deleted" = Just Synopsis_Revisionflag_Deleted
	    translate "off" = Just Synopsis_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Synopsis_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Synopsis_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Synopsis_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Synopsis_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Cmdsynopsis where
    fromElem (CElem (Elem "cmdsynopsis" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Cmdsynopsis (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Cmdsynopsis as a b) =
	[CElem (Elem "cmdsynopsis" (toAttrs as) (concatMap toElem a ++
						 concatMap toElem b))]
instance XmlAttributes Cmdsynopsis_Attrs where
    fromAttrs as =
	Cmdsynopsis_Attrs
	  { cmdsynopsisLabel = possibleA fromAttrToStr "label" as
	  , cmdsynopsisSepchar = defaultA fromAttrToStr " " "sepchar" as
	  , cmdsynopsisCmdlength = possibleA fromAttrToStr "cmdlength" as
	  , cmdsynopsisId = possibleA fromAttrToStr "id" as
	  , cmdsynopsisLang = possibleA fromAttrToStr "lang" as
	  , cmdsynopsisRemap = possibleA fromAttrToStr "remap" as
	  , cmdsynopsisXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , cmdsynopsisRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , cmdsynopsisArch = possibleA fromAttrToStr "arch" as
	  , cmdsynopsisCondition = possibleA fromAttrToStr "condition" as
	  , cmdsynopsisConformance = possibleA fromAttrToStr "conformance" as
	  , cmdsynopsisOs = possibleA fromAttrToStr "os" as
	  , cmdsynopsisRevision = possibleA fromAttrToStr "revision" as
	  , cmdsynopsisSecurity = possibleA fromAttrToStr "security" as
	  , cmdsynopsisUserlevel = possibleA fromAttrToStr "userlevel" as
	  , cmdsynopsisVendor = possibleA fromAttrToStr "vendor" as
	  , cmdsynopsisRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (cmdsynopsisLabel v)
	, defaultToAttr toAttrFrStr "sepchar" (cmdsynopsisSepchar v)
	, maybeToAttr toAttrFrStr "cmdlength" (cmdsynopsisCmdlength v)
	, maybeToAttr toAttrFrStr "id" (cmdsynopsisId v)
	, maybeToAttr toAttrFrStr "lang" (cmdsynopsisLang v)
	, maybeToAttr toAttrFrStr "remap" (cmdsynopsisRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (cmdsynopsisXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (cmdsynopsisRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (cmdsynopsisArch v)
	, maybeToAttr toAttrFrStr "condition" (cmdsynopsisCondition v)
	, maybeToAttr toAttrFrStr "conformance" (cmdsynopsisConformance v)
	, maybeToAttr toAttrFrStr "os" (cmdsynopsisOs v)
	, maybeToAttr toAttrFrStr "revision" (cmdsynopsisRevision v)
	, maybeToAttr toAttrFrStr "security" (cmdsynopsisSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (cmdsynopsisUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (cmdsynopsisVendor v)
	, maybeToAttr toAttrFrStr "role" (cmdsynopsisRole v)
	]
instance XmlAttrType Cmdsynopsis_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Cmdsynopsis_Revisionflag_Changed
	    translate "added" = Just Cmdsynopsis_Revisionflag_Added
	    translate "deleted" = Just Cmdsynopsis_Revisionflag_Deleted
	    translate "off" = Just Cmdsynopsis_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Cmdsynopsis_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Cmdsynopsis_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Cmdsynopsis_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Cmdsynopsis_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Arg where
    fromElem (CElem (Elem "arg" as c0):rest) =
	(\(a,ca)->
	   (Just (Arg (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Arg as a) =
	[CElem (Elem "arg" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Arg_Attrs where
    fromAttrs as =
	Arg_Attrs
	  { argChoice = defaultA fromAttrToTyp Arg_Choice_Opt "choice" as
	  , argRep = defaultA fromAttrToTyp Arg_Rep_Norepeat "rep" as
	  , argId = possibleA fromAttrToStr "id" as
	  , argLang = possibleA fromAttrToStr "lang" as
	  , argRemap = possibleA fromAttrToStr "remap" as
	  , argXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , argRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , argArch = possibleA fromAttrToStr "arch" as
	  , argCondition = possibleA fromAttrToStr "condition" as
	  , argConformance = possibleA fromAttrToStr "conformance" as
	  , argOs = possibleA fromAttrToStr "os" as
	  , argRevision = possibleA fromAttrToStr "revision" as
	  , argSecurity = possibleA fromAttrToStr "security" as
	  , argUserlevel = possibleA fromAttrToStr "userlevel" as
	  , argVendor = possibleA fromAttrToStr "vendor" as
	  , argRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "choice" (argChoice v)
	, defaultToAttr toAttrFrTyp "rep" (argRep v)
	, maybeToAttr toAttrFrStr "id" (argId v)
	, maybeToAttr toAttrFrStr "lang" (argLang v)
	, maybeToAttr toAttrFrStr "remap" (argRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (argXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (argRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (argArch v)
	, maybeToAttr toAttrFrStr "condition" (argCondition v)
	, maybeToAttr toAttrFrStr "conformance" (argConformance v)
	, maybeToAttr toAttrFrStr "os" (argOs v)
	, maybeToAttr toAttrFrStr "revision" (argRevision v)
	, maybeToAttr toAttrFrStr "security" (argSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (argUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (argVendor v)
	, maybeToAttr toAttrFrStr "role" (argRole v)
	]
instance XmlContent Arg_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Arg_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Arg_Arg a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Arg_Group a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Arg_Option a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Arg_Synopfragmentref a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Arg_Replaceable a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Arg_Sbr a), rest)
							(_,_) ->
							    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Arg_Str a) = toText a
    toElem (Arg_Arg a) = toElem a
    toElem (Arg_Group a) = toElem a
    toElem (Arg_Option a) = toElem a
    toElem (Arg_Synopfragmentref a) = toElem a
    toElem (Arg_Replaceable a) = toElem a
    toElem (Arg_Sbr a) = toElem a
instance XmlAttrType Arg_Choice where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "opt" = Just Arg_Choice_Opt
	    translate "req" = Just Arg_Choice_Req
	    translate "plain" = Just Arg_Choice_Plain
	    translate _ = Nothing
    toAttrFrTyp n Arg_Choice_Opt = Just (n, str2attr "opt")
    toAttrFrTyp n Arg_Choice_Req = Just (n, str2attr "req")
    toAttrFrTyp n Arg_Choice_Plain = Just (n, str2attr "plain")
instance XmlAttrType Arg_Rep where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "norepeat" = Just Arg_Rep_Norepeat
	    translate "repeat" = Just Arg_Rep_Repeat
	    translate _ = Nothing
    toAttrFrTyp n Arg_Rep_Norepeat = Just (n, str2attr "norepeat")
    toAttrFrTyp n Arg_Rep_Repeat = Just (n, str2attr "repeat")
instance XmlAttrType Arg_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Arg_Revisionflag_Changed
	    translate "added" = Just Arg_Revisionflag_Added
	    translate "deleted" = Just Arg_Revisionflag_Deleted
	    translate "off" = Just Arg_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Arg_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Arg_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Arg_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Arg_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Group where
    fromElem (CElem (Elem "group" as c0):rest) =
	(\(a,ca)->
	   (Just (Group (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Group as a) =
	[CElem (Elem "group" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Group_Attrs where
    fromAttrs as =
	Group_Attrs
	  { groupChoice = defaultA fromAttrToTyp Group_Choice_Opt "choice" as
	  , groupRep = defaultA fromAttrToTyp Group_Rep_Norepeat "rep" as
	  , groupId = possibleA fromAttrToStr "id" as
	  , groupLang = possibleA fromAttrToStr "lang" as
	  , groupRemap = possibleA fromAttrToStr "remap" as
	  , groupXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , groupRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , groupArch = possibleA fromAttrToStr "arch" as
	  , groupCondition = possibleA fromAttrToStr "condition" as
	  , groupConformance = possibleA fromAttrToStr "conformance" as
	  , groupOs = possibleA fromAttrToStr "os" as
	  , groupRevision = possibleA fromAttrToStr "revision" as
	  , groupSecurity = possibleA fromAttrToStr "security" as
	  , groupUserlevel = possibleA fromAttrToStr "userlevel" as
	  , groupVendor = possibleA fromAttrToStr "vendor" as
	  , groupRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "choice" (groupChoice v)
	, defaultToAttr toAttrFrTyp "rep" (groupRep v)
	, maybeToAttr toAttrFrStr "id" (groupId v)
	, maybeToAttr toAttrFrStr "lang" (groupLang v)
	, maybeToAttr toAttrFrStr "remap" (groupRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (groupXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (groupRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (groupArch v)
	, maybeToAttr toAttrFrStr "condition" (groupCondition v)
	, maybeToAttr toAttrFrStr "conformance" (groupConformance v)
	, maybeToAttr toAttrFrStr "os" (groupOs v)
	, maybeToAttr toAttrFrStr "revision" (groupRevision v)
	, maybeToAttr toAttrFrStr "security" (groupSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (groupUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (groupVendor v)
	, maybeToAttr toAttrFrStr "role" (groupRole v)
	]
instance XmlAttrType Group_Choice where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "opt" = Just Group_Choice_Opt
	    translate "req" = Just Group_Choice_Req
	    translate "plain" = Just Group_Choice_Plain
	    translate _ = Nothing
    toAttrFrTyp n Group_Choice_Opt = Just (n, str2attr "opt")
    toAttrFrTyp n Group_Choice_Req = Just (n, str2attr "req")
    toAttrFrTyp n Group_Choice_Plain = Just (n, str2attr "plain")
instance XmlAttrType Group_Rep where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "norepeat" = Just Group_Rep_Norepeat
	    translate "repeat" = Just Group_Rep_Repeat
	    translate _ = Nothing
    toAttrFrTyp n Group_Rep_Norepeat = Just (n, str2attr "norepeat")
    toAttrFrTyp n Group_Rep_Repeat = Just (n, str2attr "repeat")
instance XmlAttrType Group_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Group_Revisionflag_Changed
	    translate "added" = Just Group_Revisionflag_Added
	    translate "deleted" = Just Group_Revisionflag_Deleted
	    translate "off" = Just Group_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Group_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Group_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Group_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Group_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Sbr where
    fromElem (CElem (Elem "sbr" as []):rest) =
	(Just (fromAttrs as), rest)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem as =
	[CElem (Elem "sbr" (toAttrs as) [])]
instance XmlAttributes Sbr where
    fromAttrs as =
	Sbr
	  { sbrId = possibleA fromAttrToStr "id" as
	  , sbrLang = possibleA fromAttrToStr "lang" as
	  , sbrRemap = possibleA fromAttrToStr "remap" as
	  , sbrXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , sbrRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , sbrArch = possibleA fromAttrToStr "arch" as
	  , sbrCondition = possibleA fromAttrToStr "condition" as
	  , sbrConformance = possibleA fromAttrToStr "conformance" as
	  , sbrOs = possibleA fromAttrToStr "os" as
	  , sbrRevision = possibleA fromAttrToStr "revision" as
	  , sbrSecurity = possibleA fromAttrToStr "security" as
	  , sbrUserlevel = possibleA fromAttrToStr "userlevel" as
	  , sbrVendor = possibleA fromAttrToStr "vendor" as
	  , sbrRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (sbrId v)
	, maybeToAttr toAttrFrStr "lang" (sbrLang v)
	, maybeToAttr toAttrFrStr "remap" (sbrRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (sbrXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (sbrRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (sbrArch v)
	, maybeToAttr toAttrFrStr "condition" (sbrCondition v)
	, maybeToAttr toAttrFrStr "conformance" (sbrConformance v)
	, maybeToAttr toAttrFrStr "os" (sbrOs v)
	, maybeToAttr toAttrFrStr "revision" (sbrRevision v)
	, maybeToAttr toAttrFrStr "security" (sbrSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (sbrUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (sbrVendor v)
	, maybeToAttr toAttrFrStr "role" (sbrRole v)
	]
instance XmlAttrType Sbr_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Sbr_Revisionflag_Changed
	    translate "added" = Just Sbr_Revisionflag_Added
	    translate "deleted" = Just Sbr_Revisionflag_Deleted
	    translate "off" = Just Sbr_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Sbr_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Sbr_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Sbr_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Sbr_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Synopfragmentref where
    fromElem (CElem (Elem "synopfragmentref" as c0):rest) =
	(\(a,ca)->
	   (Just (Synopfragmentref (fromAttrs as) a), rest))
	(definite fromText "text" "synopfragmentref" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Synopfragmentref as a) =
	[CElem (Elem "synopfragmentref" (toAttrs as) (toText a))]
instance XmlAttributes Synopfragmentref_Attrs where
    fromAttrs as =
	Synopfragmentref_Attrs
	  { synopfragmentrefLinkend = definiteA fromAttrToStr "synopfragmentref" "linkend" as
	  , synopfragmentrefId = possibleA fromAttrToStr "id" as
	  , synopfragmentrefLang = possibleA fromAttrToStr "lang" as
	  , synopfragmentrefRemap = possibleA fromAttrToStr "remap" as
	  , synopfragmentrefXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , synopfragmentrefRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , synopfragmentrefArch = possibleA fromAttrToStr "arch" as
	  , synopfragmentrefCondition = possibleA fromAttrToStr "condition" as
	  , synopfragmentrefConformance = possibleA fromAttrToStr "conformance" as
	  , synopfragmentrefOs = possibleA fromAttrToStr "os" as
	  , synopfragmentrefRevision = possibleA fromAttrToStr "revision" as
	  , synopfragmentrefSecurity = possibleA fromAttrToStr "security" as
	  , synopfragmentrefUserlevel = possibleA fromAttrToStr "userlevel" as
	  , synopfragmentrefVendor = possibleA fromAttrToStr "vendor" as
	  , synopfragmentrefRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ toAttrFrStr "linkend" (synopfragmentrefLinkend v)
	, maybeToAttr toAttrFrStr "id" (synopfragmentrefId v)
	, maybeToAttr toAttrFrStr "lang" (synopfragmentrefLang v)
	, maybeToAttr toAttrFrStr "remap" (synopfragmentrefRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (synopfragmentrefXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (synopfragmentrefRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (synopfragmentrefArch v)
	, maybeToAttr toAttrFrStr "condition" (synopfragmentrefCondition v)
	, maybeToAttr toAttrFrStr "conformance" (synopfragmentrefConformance v)
	, maybeToAttr toAttrFrStr "os" (synopfragmentrefOs v)
	, maybeToAttr toAttrFrStr "revision" (synopfragmentrefRevision v)
	, maybeToAttr toAttrFrStr "security" (synopfragmentrefSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (synopfragmentrefUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (synopfragmentrefVendor v)
	, maybeToAttr toAttrFrStr "role" (synopfragmentrefRole v)
	]
instance XmlAttrType Synopfragmentref_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Synopfragmentref_Revisionflag_Changed
	    translate "added" = Just Synopfragmentref_Revisionflag_Added
	    translate "deleted" = Just Synopfragmentref_Revisionflag_Deleted
	    translate "off" = Just Synopfragmentref_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Synopfragmentref_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Synopfragmentref_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Synopfragmentref_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Synopfragmentref_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Synopfragment where
    fromElem (CElem (Elem "synopfragment" as c0):rest) =
	(\(a,ca)->
	   (Just (Synopfragment (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Synopfragment as a) =
	[CElem (Elem "synopfragment" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Synopfragment_Attrs where
    fromAttrs as =
	Synopfragment_Attrs
	  { synopfragmentId = definiteA fromAttrToStr "synopfragment" "id" as
	  , synopfragmentLang = possibleA fromAttrToStr "lang" as
	  , synopfragmentRemap = possibleA fromAttrToStr "remap" as
	  , synopfragmentXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , synopfragmentRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , synopfragmentArch = possibleA fromAttrToStr "arch" as
	  , synopfragmentCondition = possibleA fromAttrToStr "condition" as
	  , synopfragmentConformance = possibleA fromAttrToStr "conformance" as
	  , synopfragmentOs = possibleA fromAttrToStr "os" as
	  , synopfragmentRevision = possibleA fromAttrToStr "revision" as
	  , synopfragmentSecurity = possibleA fromAttrToStr "security" as
	  , synopfragmentUserlevel = possibleA fromAttrToStr "userlevel" as
	  , synopfragmentVendor = possibleA fromAttrToStr "vendor" as
	  , synopfragmentRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ toAttrFrStr "id" (synopfragmentId v)
	, maybeToAttr toAttrFrStr "lang" (synopfragmentLang v)
	, maybeToAttr toAttrFrStr "remap" (synopfragmentRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (synopfragmentXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (synopfragmentRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (synopfragmentArch v)
	, maybeToAttr toAttrFrStr "condition" (synopfragmentCondition v)
	, maybeToAttr toAttrFrStr "conformance" (synopfragmentConformance v)
	, maybeToAttr toAttrFrStr "os" (synopfragmentOs v)
	, maybeToAttr toAttrFrStr "revision" (synopfragmentRevision v)
	, maybeToAttr toAttrFrStr "security" (synopfragmentSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (synopfragmentUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (synopfragmentVendor v)
	, maybeToAttr toAttrFrStr "role" (synopfragmentRole v)
	]
instance XmlAttrType Synopfragment_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Synopfragment_Revisionflag_Changed
	    translate "added" = Just Synopfragment_Revisionflag_Added
	    translate "deleted" = Just Synopfragment_Revisionflag_Deleted
	    translate "off" = Just Synopfragment_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Synopfragment_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Synopfragment_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Synopfragment_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Synopfragment_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Funcsynopsis where
    fromElem (CElem (Elem "funcsynopsis" as c0):rest) =
	(\(a,ca)->
	   (Just (Funcsynopsis (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Funcsynopsis as a) =
	[CElem (Elem "funcsynopsis" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Funcsynopsis_Attrs where
    fromAttrs as =
	Funcsynopsis_Attrs
	  { funcsynopsisLabel = possibleA fromAttrToStr "label" as
	  , funcsynopsisId = possibleA fromAttrToStr "id" as
	  , funcsynopsisLang = possibleA fromAttrToStr "lang" as
	  , funcsynopsisRemap = possibleA fromAttrToStr "remap" as
	  , funcsynopsisXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , funcsynopsisRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , funcsynopsisArch = possibleA fromAttrToStr "arch" as
	  , funcsynopsisCondition = possibleA fromAttrToStr "condition" as
	  , funcsynopsisConformance = possibleA fromAttrToStr "conformance" as
	  , funcsynopsisOs = possibleA fromAttrToStr "os" as
	  , funcsynopsisRevision = possibleA fromAttrToStr "revision" as
	  , funcsynopsisSecurity = possibleA fromAttrToStr "security" as
	  , funcsynopsisUserlevel = possibleA fromAttrToStr "userlevel" as
	  , funcsynopsisVendor = possibleA fromAttrToStr "vendor" as
	  , funcsynopsisRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (funcsynopsisLabel v)
	, maybeToAttr toAttrFrStr "id" (funcsynopsisId v)
	, maybeToAttr toAttrFrStr "lang" (funcsynopsisLang v)
	, maybeToAttr toAttrFrStr "remap" (funcsynopsisRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (funcsynopsisXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (funcsynopsisRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (funcsynopsisArch v)
	, maybeToAttr toAttrFrStr "condition" (funcsynopsisCondition v)
	, maybeToAttr toAttrFrStr "conformance" (funcsynopsisConformance v)
	, maybeToAttr toAttrFrStr "os" (funcsynopsisOs v)
	, maybeToAttr toAttrFrStr "revision" (funcsynopsisRevision v)
	, maybeToAttr toAttrFrStr "security" (funcsynopsisSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (funcsynopsisUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (funcsynopsisVendor v)
	, maybeToAttr toAttrFrStr "role" (funcsynopsisRole v)
	]
instance XmlAttrType Funcsynopsis_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Funcsynopsis_Revisionflag_Changed
	    translate "added" = Just Funcsynopsis_Revisionflag_Added
	    translate "deleted" = Just Funcsynopsis_Revisionflag_Deleted
	    translate "off" = Just Funcsynopsis_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Funcsynopsis_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Funcsynopsis_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Funcsynopsis_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Funcsynopsis_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Funcsynopsisinfo where
    fromElem (CElem (Elem "funcsynopsisinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Funcsynopsisinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Funcsynopsisinfo as a) =
	[CElem (Elem "funcsynopsisinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Funcsynopsisinfo_Attrs where
    fromAttrs as =
	Funcsynopsisinfo_Attrs
	  { funcsynopsisinfoFormat = defaultA fromAttrToTyp Funcsynopsisinfo_Format_Linespecific "format" as
	  , funcsynopsisinfoLinenumbering = possibleA fromAttrToTyp "linenumbering" as
	  , funcsynopsisinfoId = possibleA fromAttrToStr "id" as
	  , funcsynopsisinfoLang = possibleA fromAttrToStr "lang" as
	  , funcsynopsisinfoRemap = possibleA fromAttrToStr "remap" as
	  , funcsynopsisinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , funcsynopsisinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , funcsynopsisinfoArch = possibleA fromAttrToStr "arch" as
	  , funcsynopsisinfoCondition = possibleA fromAttrToStr "condition" as
	  , funcsynopsisinfoConformance = possibleA fromAttrToStr "conformance" as
	  , funcsynopsisinfoOs = possibleA fromAttrToStr "os" as
	  , funcsynopsisinfoRevision = possibleA fromAttrToStr "revision" as
	  , funcsynopsisinfoSecurity = possibleA fromAttrToStr "security" as
	  , funcsynopsisinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , funcsynopsisinfoVendor = possibleA fromAttrToStr "vendor" as
	  , funcsynopsisinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "format" (funcsynopsisinfoFormat v)
	, maybeToAttr toAttrFrTyp "linenumbering" (funcsynopsisinfoLinenumbering v)
	, maybeToAttr toAttrFrStr "id" (funcsynopsisinfoId v)
	, maybeToAttr toAttrFrStr "lang" (funcsynopsisinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (funcsynopsisinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (funcsynopsisinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (funcsynopsisinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (funcsynopsisinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (funcsynopsisinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (funcsynopsisinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (funcsynopsisinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (funcsynopsisinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (funcsynopsisinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (funcsynopsisinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (funcsynopsisinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (funcsynopsisinfoRole v)
	]
instance XmlContent Funcsynopsisinfo_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Funcsynopsisinfo_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Funcsynopsisinfo_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Funcsynopsisinfo_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Funcsynopsisinfo_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Funcsynopsisinfo_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Funcsynopsisinfo_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Funcsynopsisinfo_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Funcsynopsisinfo_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Funcsynopsisinfo_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Funcsynopsisinfo_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Funcsynopsisinfo_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Funcsynopsisinfo_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Funcsynopsisinfo_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Funcsynopsisinfo_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Funcsynopsisinfo_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Funcsynopsisinfo_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Funcsynopsisinfo_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Funcsynopsisinfo_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Funcsynopsisinfo_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Funcsynopsisinfo_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Funcsynopsisinfo_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Funcsynopsisinfo_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Funcsynopsisinfo_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Funcsynopsisinfo_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Funcsynopsisinfo_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Funcsynopsisinfo_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Funcsynopsisinfo_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Funcsynopsisinfo_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Funcsynopsisinfo_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Funcsynopsisinfo_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Funcsynopsisinfo_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Funcsynopsisinfo_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Funcsynopsisinfo_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Funcsynopsisinfo_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Funcsynopsisinfo_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Funcsynopsisinfo_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Funcsynopsisinfo_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Funcsynopsisinfo_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Funcsynopsisinfo_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Funcsynopsisinfo_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Funcsynopsisinfo_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Funcsynopsisinfo_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Funcsynopsisinfo_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Funcsynopsisinfo_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Funcsynopsisinfo_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Funcsynopsisinfo_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Funcsynopsisinfo_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Funcsynopsisinfo_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Funcsynopsisinfo_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Funcsynopsisinfo_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Funcsynopsisinfo_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Funcsynopsisinfo_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Funcsynopsisinfo_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Funcsynopsisinfo_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Funcsynopsisinfo_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Funcsynopsisinfo_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Funcsynopsisinfo_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Funcsynopsisinfo_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Funcsynopsisinfo_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Funcsynopsisinfo_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Funcsynopsisinfo_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Funcsynopsisinfo_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Funcsynopsisinfo_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Funcsynopsisinfo_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Funcsynopsisinfo_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Funcsynopsisinfo_Beginpage a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Funcsynopsisinfo_Textobject a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Funcsynopsisinfo_Lineannotation a), rest)
																																																																				(_,_) ->
																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Funcsynopsisinfo_Str a) = toText a
    toElem (Funcsynopsisinfo_Link a) = toElem a
    toElem (Funcsynopsisinfo_Olink a) = toElem a
    toElem (Funcsynopsisinfo_Ulink a) = toElem a
    toElem (Funcsynopsisinfo_Action a) = toElem a
    toElem (Funcsynopsisinfo_Application a) = toElem a
    toElem (Funcsynopsisinfo_Classname a) = toElem a
    toElem (Funcsynopsisinfo_Methodname a) = toElem a
    toElem (Funcsynopsisinfo_Interfacename a) = toElem a
    toElem (Funcsynopsisinfo_Exceptionname a) = toElem a
    toElem (Funcsynopsisinfo_Ooclass a) = toElem a
    toElem (Funcsynopsisinfo_Oointerface a) = toElem a
    toElem (Funcsynopsisinfo_Ooexception a) = toElem a
    toElem (Funcsynopsisinfo_Command a) = toElem a
    toElem (Funcsynopsisinfo_Computeroutput a) = toElem a
    toElem (Funcsynopsisinfo_Database a) = toElem a
    toElem (Funcsynopsisinfo_Email a) = toElem a
    toElem (Funcsynopsisinfo_Envar a) = toElem a
    toElem (Funcsynopsisinfo_Errorcode a) = toElem a
    toElem (Funcsynopsisinfo_Errorname a) = toElem a
    toElem (Funcsynopsisinfo_Errortype a) = toElem a
    toElem (Funcsynopsisinfo_Errortext a) = toElem a
    toElem (Funcsynopsisinfo_Filename a) = toElem a
    toElem (Funcsynopsisinfo_Function a) = toElem a
    toElem (Funcsynopsisinfo_Guibutton a) = toElem a
    toElem (Funcsynopsisinfo_Guiicon a) = toElem a
    toElem (Funcsynopsisinfo_Guilabel a) = toElem a
    toElem (Funcsynopsisinfo_Guimenu a) = toElem a
    toElem (Funcsynopsisinfo_Guimenuitem a) = toElem a
    toElem (Funcsynopsisinfo_Guisubmenu a) = toElem a
    toElem (Funcsynopsisinfo_Hardware a) = toElem a
    toElem (Funcsynopsisinfo_Interface a) = toElem a
    toElem (Funcsynopsisinfo_Keycap a) = toElem a
    toElem (Funcsynopsisinfo_Keycode a) = toElem a
    toElem (Funcsynopsisinfo_Keycombo a) = toElem a
    toElem (Funcsynopsisinfo_Keysym a) = toElem a
    toElem (Funcsynopsisinfo_Literal a) = toElem a
    toElem (Funcsynopsisinfo_Constant a) = toElem a
    toElem (Funcsynopsisinfo_Markup a) = toElem a
    toElem (Funcsynopsisinfo_Medialabel a) = toElem a
    toElem (Funcsynopsisinfo_Menuchoice a) = toElem a
    toElem (Funcsynopsisinfo_Mousebutton a) = toElem a
    toElem (Funcsynopsisinfo_Option a) = toElem a
    toElem (Funcsynopsisinfo_Optional a) = toElem a
    toElem (Funcsynopsisinfo_Parameter a) = toElem a
    toElem (Funcsynopsisinfo_Prompt a) = toElem a
    toElem (Funcsynopsisinfo_Property a) = toElem a
    toElem (Funcsynopsisinfo_Replaceable a) = toElem a
    toElem (Funcsynopsisinfo_Returnvalue a) = toElem a
    toElem (Funcsynopsisinfo_Sgmltag a) = toElem a
    toElem (Funcsynopsisinfo_Structfield a) = toElem a
    toElem (Funcsynopsisinfo_Structname a) = toElem a
    toElem (Funcsynopsisinfo_Symbol a) = toElem a
    toElem (Funcsynopsisinfo_Systemitem a) = toElem a
    toElem (Funcsynopsisinfo_Token a) = toElem a
    toElem (Funcsynopsisinfo_Type a) = toElem a
    toElem (Funcsynopsisinfo_Userinput a) = toElem a
    toElem (Funcsynopsisinfo_Varname a) = toElem a
    toElem (Funcsynopsisinfo_Anchor a) = toElem a
    toElem (Funcsynopsisinfo_Remark a) = toElem a
    toElem (Funcsynopsisinfo_Subscript a) = toElem a
    toElem (Funcsynopsisinfo_Superscript a) = toElem a
    toElem (Funcsynopsisinfo_Inlinegraphic a) = toElem a
    toElem (Funcsynopsisinfo_Inlinemediaobject a) = toElem a
    toElem (Funcsynopsisinfo_Indexterm a) = toElem a
    toElem (Funcsynopsisinfo_Beginpage a) = toElem a
    toElem (Funcsynopsisinfo_Textobject a) = toElem a
    toElem (Funcsynopsisinfo_Lineannotation a) = toElem a
instance XmlAttrType Funcsynopsisinfo_Format where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "linespecific" = Just Funcsynopsisinfo_Format_Linespecific
	    translate _ = Nothing
    toAttrFrTyp n Funcsynopsisinfo_Format_Linespecific = Just (n, str2attr "linespecific")
instance XmlAttrType Funcsynopsisinfo_Linenumbering where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "numbered" = Just Funcsynopsisinfo_Linenumbering_Numbered
	    translate "unnumbered" = Just Funcsynopsisinfo_Linenumbering_Unnumbered
	    translate _ = Nothing
    toAttrFrTyp n Funcsynopsisinfo_Linenumbering_Numbered = Just (n, str2attr "numbered")
    toAttrFrTyp n Funcsynopsisinfo_Linenumbering_Unnumbered = Just (n, str2attr "unnumbered")
instance XmlAttrType Funcsynopsisinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Funcsynopsisinfo_Revisionflag_Changed
	    translate "added" = Just Funcsynopsisinfo_Revisionflag_Added
	    translate "deleted" = Just Funcsynopsisinfo_Revisionflag_Deleted
	    translate "off" = Just Funcsynopsisinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Funcsynopsisinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Funcsynopsisinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Funcsynopsisinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Funcsynopsisinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Funcprototype where
    fromElem (CElem (Elem "funcprototype" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Funcprototype (fromAttrs as) a b), rest))
	   (definite fromElem "OneOf" "funcprototype" ca))
	(definite fromElem "<funcdef>" "funcprototype" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Funcprototype as a b) =
	[CElem (Elem "funcprototype" (toAttrs as) (toElem a ++ toElem b))]
instance XmlAttributes Funcprototype_Attrs where
    fromAttrs as =
	Funcprototype_Attrs
	  { funcprototypeId = possibleA fromAttrToStr "id" as
	  , funcprototypeLang = possibleA fromAttrToStr "lang" as
	  , funcprototypeRemap = possibleA fromAttrToStr "remap" as
	  , funcprototypeXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , funcprototypeRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , funcprototypeArch = possibleA fromAttrToStr "arch" as
	  , funcprototypeCondition = possibleA fromAttrToStr "condition" as
	  , funcprototypeConformance = possibleA fromAttrToStr "conformance" as
	  , funcprototypeOs = possibleA fromAttrToStr "os" as
	  , funcprototypeRevision = possibleA fromAttrToStr "revision" as
	  , funcprototypeSecurity = possibleA fromAttrToStr "security" as
	  , funcprototypeUserlevel = possibleA fromAttrToStr "userlevel" as
	  , funcprototypeVendor = possibleA fromAttrToStr "vendor" as
	  , funcprototypeRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (funcprototypeId v)
	, maybeToAttr toAttrFrStr "lang" (funcprototypeLang v)
	, maybeToAttr toAttrFrStr "remap" (funcprototypeRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (funcprototypeXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (funcprototypeRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (funcprototypeArch v)
	, maybeToAttr toAttrFrStr "condition" (funcprototypeCondition v)
	, maybeToAttr toAttrFrStr "conformance" (funcprototypeConformance v)
	, maybeToAttr toAttrFrStr "os" (funcprototypeOs v)
	, maybeToAttr toAttrFrStr "revision" (funcprototypeRevision v)
	, maybeToAttr toAttrFrStr "security" (funcprototypeSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (funcprototypeUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (funcprototypeVendor v)
	, maybeToAttr toAttrFrStr "role" (funcprototypeRole v)
	]
instance XmlAttrType Funcprototype_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Funcprototype_Revisionflag_Changed
	    translate "added" = Just Funcprototype_Revisionflag_Added
	    translate "deleted" = Just Funcprototype_Revisionflag_Deleted
	    translate "off" = Just Funcprototype_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Funcprototype_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Funcprototype_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Funcprototype_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Funcprototype_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Funcdef where
    fromElem (CElem (Elem "funcdef" as c0):rest) =
	(\(a,ca)->
	   (Just (Funcdef (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Funcdef as a) =
	[CElem (Elem "funcdef" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Funcdef_Attrs where
    fromAttrs as =
	Funcdef_Attrs
	  { funcdefId = possibleA fromAttrToStr "id" as
	  , funcdefLang = possibleA fromAttrToStr "lang" as
	  , funcdefRemap = possibleA fromAttrToStr "remap" as
	  , funcdefXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , funcdefRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , funcdefArch = possibleA fromAttrToStr "arch" as
	  , funcdefCondition = possibleA fromAttrToStr "condition" as
	  , funcdefConformance = possibleA fromAttrToStr "conformance" as
	  , funcdefOs = possibleA fromAttrToStr "os" as
	  , funcdefRevision = possibleA fromAttrToStr "revision" as
	  , funcdefSecurity = possibleA fromAttrToStr "security" as
	  , funcdefUserlevel = possibleA fromAttrToStr "userlevel" as
	  , funcdefVendor = possibleA fromAttrToStr "vendor" as
	  , funcdefRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (funcdefId v)
	, maybeToAttr toAttrFrStr "lang" (funcdefLang v)
	, maybeToAttr toAttrFrStr "remap" (funcdefRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (funcdefXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (funcdefRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (funcdefArch v)
	, maybeToAttr toAttrFrStr "condition" (funcdefCondition v)
	, maybeToAttr toAttrFrStr "conformance" (funcdefConformance v)
	, maybeToAttr toAttrFrStr "os" (funcdefOs v)
	, maybeToAttr toAttrFrStr "revision" (funcdefRevision v)
	, maybeToAttr toAttrFrStr "security" (funcdefSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (funcdefUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (funcdefVendor v)
	, maybeToAttr toAttrFrStr "role" (funcdefRole v)
	]
instance XmlContent Funcdef_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Funcdef_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Funcdef_Type a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Funcdef_Replaceable a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Funcdef_Function a), rest)
				(_,_) ->
				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Funcdef_Str a) = toText a
    toElem (Funcdef_Type a) = toElem a
    toElem (Funcdef_Replaceable a) = toElem a
    toElem (Funcdef_Function a) = toElem a
instance XmlAttrType Funcdef_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Funcdef_Revisionflag_Changed
	    translate "added" = Just Funcdef_Revisionflag_Added
	    translate "deleted" = Just Funcdef_Revisionflag_Deleted
	    translate "off" = Just Funcdef_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Funcdef_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Funcdef_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Funcdef_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Funcdef_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Void where
    fromElem (CElem (Elem "void" as []):rest) =
	(Just (fromAttrs as), rest)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem as =
	[CElem (Elem "void" (toAttrs as) [])]
instance XmlAttributes Void where
    fromAttrs as =
	Void
	  { voidId = possibleA fromAttrToStr "id" as
	  , voidLang = possibleA fromAttrToStr "lang" as
	  , voidRemap = possibleA fromAttrToStr "remap" as
	  , voidXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , voidRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , voidArch = possibleA fromAttrToStr "arch" as
	  , voidCondition = possibleA fromAttrToStr "condition" as
	  , voidConformance = possibleA fromAttrToStr "conformance" as
	  , voidOs = possibleA fromAttrToStr "os" as
	  , voidRevision = possibleA fromAttrToStr "revision" as
	  , voidSecurity = possibleA fromAttrToStr "security" as
	  , voidUserlevel = possibleA fromAttrToStr "userlevel" as
	  , voidVendor = possibleA fromAttrToStr "vendor" as
	  , voidRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (voidId v)
	, maybeToAttr toAttrFrStr "lang" (voidLang v)
	, maybeToAttr toAttrFrStr "remap" (voidRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (voidXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (voidRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (voidArch v)
	, maybeToAttr toAttrFrStr "condition" (voidCondition v)
	, maybeToAttr toAttrFrStr "conformance" (voidConformance v)
	, maybeToAttr toAttrFrStr "os" (voidOs v)
	, maybeToAttr toAttrFrStr "revision" (voidRevision v)
	, maybeToAttr toAttrFrStr "security" (voidSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (voidUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (voidVendor v)
	, maybeToAttr toAttrFrStr "role" (voidRole v)
	]
instance XmlAttrType Void_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Void_Revisionflag_Changed
	    translate "added" = Just Void_Revisionflag_Added
	    translate "deleted" = Just Void_Revisionflag_Deleted
	    translate "off" = Just Void_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Void_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Void_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Void_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Void_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Varargs where
    fromElem (CElem (Elem "varargs" as []):rest) =
	(Just (fromAttrs as), rest)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem as =
	[CElem (Elem "varargs" (toAttrs as) [])]
instance XmlAttributes Varargs where
    fromAttrs as =
	Varargs
	  { varargsId = possibleA fromAttrToStr "id" as
	  , varargsLang = possibleA fromAttrToStr "lang" as
	  , varargsRemap = possibleA fromAttrToStr "remap" as
	  , varargsXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , varargsRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , varargsArch = possibleA fromAttrToStr "arch" as
	  , varargsCondition = possibleA fromAttrToStr "condition" as
	  , varargsConformance = possibleA fromAttrToStr "conformance" as
	  , varargsOs = possibleA fromAttrToStr "os" as
	  , varargsRevision = possibleA fromAttrToStr "revision" as
	  , varargsSecurity = possibleA fromAttrToStr "security" as
	  , varargsUserlevel = possibleA fromAttrToStr "userlevel" as
	  , varargsVendor = possibleA fromAttrToStr "vendor" as
	  , varargsRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (varargsId v)
	, maybeToAttr toAttrFrStr "lang" (varargsLang v)
	, maybeToAttr toAttrFrStr "remap" (varargsRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (varargsXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (varargsRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (varargsArch v)
	, maybeToAttr toAttrFrStr "condition" (varargsCondition v)
	, maybeToAttr toAttrFrStr "conformance" (varargsConformance v)
	, maybeToAttr toAttrFrStr "os" (varargsOs v)
	, maybeToAttr toAttrFrStr "revision" (varargsRevision v)
	, maybeToAttr toAttrFrStr "security" (varargsSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (varargsUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (varargsVendor v)
	, maybeToAttr toAttrFrStr "role" (varargsRole v)
	]
instance XmlAttrType Varargs_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Varargs_Revisionflag_Changed
	    translate "added" = Just Varargs_Revisionflag_Added
	    translate "deleted" = Just Varargs_Revisionflag_Deleted
	    translate "off" = Just Varargs_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Varargs_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Varargs_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Varargs_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Varargs_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Paramdef where
    fromElem (CElem (Elem "paramdef" as c0):rest) =
	(\(a,ca)->
	   (Just (Paramdef (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Paramdef as a) =
	[CElem (Elem "paramdef" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Paramdef_Attrs where
    fromAttrs as =
	Paramdef_Attrs
	  { paramdefId = possibleA fromAttrToStr "id" as
	  , paramdefLang = possibleA fromAttrToStr "lang" as
	  , paramdefRemap = possibleA fromAttrToStr "remap" as
	  , paramdefXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , paramdefRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , paramdefArch = possibleA fromAttrToStr "arch" as
	  , paramdefCondition = possibleA fromAttrToStr "condition" as
	  , paramdefConformance = possibleA fromAttrToStr "conformance" as
	  , paramdefOs = possibleA fromAttrToStr "os" as
	  , paramdefRevision = possibleA fromAttrToStr "revision" as
	  , paramdefSecurity = possibleA fromAttrToStr "security" as
	  , paramdefUserlevel = possibleA fromAttrToStr "userlevel" as
	  , paramdefVendor = possibleA fromAttrToStr "vendor" as
	  , paramdefRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (paramdefId v)
	, maybeToAttr toAttrFrStr "lang" (paramdefLang v)
	, maybeToAttr toAttrFrStr "remap" (paramdefRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (paramdefXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (paramdefRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (paramdefArch v)
	, maybeToAttr toAttrFrStr "condition" (paramdefCondition v)
	, maybeToAttr toAttrFrStr "conformance" (paramdefConformance v)
	, maybeToAttr toAttrFrStr "os" (paramdefOs v)
	, maybeToAttr toAttrFrStr "revision" (paramdefRevision v)
	, maybeToAttr toAttrFrStr "security" (paramdefSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (paramdefUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (paramdefVendor v)
	, maybeToAttr toAttrFrStr "role" (paramdefRole v)
	]
instance XmlContent Paramdef_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Paramdef_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Paramdef_Type a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Paramdef_Replaceable a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Paramdef_Parameter a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Paramdef_Funcparams a), rest)
					(_,_) ->
					    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Paramdef_Str a) = toText a
    toElem (Paramdef_Type a) = toElem a
    toElem (Paramdef_Replaceable a) = toElem a
    toElem (Paramdef_Parameter a) = toElem a
    toElem (Paramdef_Funcparams a) = toElem a
instance XmlAttrType Paramdef_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Paramdef_Revisionflag_Changed
	    translate "added" = Just Paramdef_Revisionflag_Added
	    translate "deleted" = Just Paramdef_Revisionflag_Deleted
	    translate "off" = Just Paramdef_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Paramdef_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Paramdef_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Paramdef_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Paramdef_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Funcparams where
    fromElem (CElem (Elem "funcparams" as c0):rest) =
	(\(a,ca)->
	   (Just (Funcparams (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Funcparams as a) =
	[CElem (Elem "funcparams" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Funcparams_Attrs where
    fromAttrs as =
	Funcparams_Attrs
	  { funcparamsId = possibleA fromAttrToStr "id" as
	  , funcparamsLang = possibleA fromAttrToStr "lang" as
	  , funcparamsRemap = possibleA fromAttrToStr "remap" as
	  , funcparamsXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , funcparamsRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , funcparamsArch = possibleA fromAttrToStr "arch" as
	  , funcparamsCondition = possibleA fromAttrToStr "condition" as
	  , funcparamsConformance = possibleA fromAttrToStr "conformance" as
	  , funcparamsOs = possibleA fromAttrToStr "os" as
	  , funcparamsRevision = possibleA fromAttrToStr "revision" as
	  , funcparamsSecurity = possibleA fromAttrToStr "security" as
	  , funcparamsUserlevel = possibleA fromAttrToStr "userlevel" as
	  , funcparamsVendor = possibleA fromAttrToStr "vendor" as
	  , funcparamsRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (funcparamsId v)
	, maybeToAttr toAttrFrStr "lang" (funcparamsLang v)
	, maybeToAttr toAttrFrStr "remap" (funcparamsRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (funcparamsXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (funcparamsRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (funcparamsArch v)
	, maybeToAttr toAttrFrStr "condition" (funcparamsCondition v)
	, maybeToAttr toAttrFrStr "conformance" (funcparamsConformance v)
	, maybeToAttr toAttrFrStr "os" (funcparamsOs v)
	, maybeToAttr toAttrFrStr "revision" (funcparamsRevision v)
	, maybeToAttr toAttrFrStr "security" (funcparamsSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (funcparamsUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (funcparamsVendor v)
	, maybeToAttr toAttrFrStr "role" (funcparamsRole v)
	]
instance XmlContent Funcparams_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Funcparams_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Funcparams_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Funcparams_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Funcparams_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Funcparams_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Funcparams_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Funcparams_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Funcparams_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Funcparams_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Funcparams_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Funcparams_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Funcparams_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Funcparams_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Funcparams_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Funcparams_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Funcparams_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Funcparams_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Funcparams_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Funcparams_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Funcparams_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Funcparams_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Funcparams_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Funcparams_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Funcparams_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Funcparams_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Funcparams_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Funcparams_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Funcparams_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Funcparams_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Funcparams_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Funcparams_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Funcparams_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Funcparams_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Funcparams_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Funcparams_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Funcparams_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Funcparams_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Funcparams_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Funcparams_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Funcparams_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Funcparams_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Funcparams_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Funcparams_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Funcparams_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Funcparams_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Funcparams_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Funcparams_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Funcparams_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Funcparams_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Funcparams_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Funcparams_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Funcparams_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Funcparams_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Funcparams_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Funcparams_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Funcparams_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Funcparams_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Funcparams_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Funcparams_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Funcparams_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Funcparams_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Funcparams_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Funcparams_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Funcparams_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Funcparams_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Funcparams_Beginpage a), rest)
																																																																		(_,_) ->
																																																																		    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Funcparams_Str a) = toText a
    toElem (Funcparams_Link a) = toElem a
    toElem (Funcparams_Olink a) = toElem a
    toElem (Funcparams_Ulink a) = toElem a
    toElem (Funcparams_Action a) = toElem a
    toElem (Funcparams_Application a) = toElem a
    toElem (Funcparams_Classname a) = toElem a
    toElem (Funcparams_Methodname a) = toElem a
    toElem (Funcparams_Interfacename a) = toElem a
    toElem (Funcparams_Exceptionname a) = toElem a
    toElem (Funcparams_Ooclass a) = toElem a
    toElem (Funcparams_Oointerface a) = toElem a
    toElem (Funcparams_Ooexception a) = toElem a
    toElem (Funcparams_Command a) = toElem a
    toElem (Funcparams_Computeroutput a) = toElem a
    toElem (Funcparams_Database a) = toElem a
    toElem (Funcparams_Email a) = toElem a
    toElem (Funcparams_Envar a) = toElem a
    toElem (Funcparams_Errorcode a) = toElem a
    toElem (Funcparams_Errorname a) = toElem a
    toElem (Funcparams_Errortype a) = toElem a
    toElem (Funcparams_Errortext a) = toElem a
    toElem (Funcparams_Filename a) = toElem a
    toElem (Funcparams_Function a) = toElem a
    toElem (Funcparams_Guibutton a) = toElem a
    toElem (Funcparams_Guiicon a) = toElem a
    toElem (Funcparams_Guilabel a) = toElem a
    toElem (Funcparams_Guimenu a) = toElem a
    toElem (Funcparams_Guimenuitem a) = toElem a
    toElem (Funcparams_Guisubmenu a) = toElem a
    toElem (Funcparams_Hardware a) = toElem a
    toElem (Funcparams_Interface a) = toElem a
    toElem (Funcparams_Keycap a) = toElem a
    toElem (Funcparams_Keycode a) = toElem a
    toElem (Funcparams_Keycombo a) = toElem a
    toElem (Funcparams_Keysym a) = toElem a
    toElem (Funcparams_Literal a) = toElem a
    toElem (Funcparams_Constant a) = toElem a
    toElem (Funcparams_Markup a) = toElem a
    toElem (Funcparams_Medialabel a) = toElem a
    toElem (Funcparams_Menuchoice a) = toElem a
    toElem (Funcparams_Mousebutton a) = toElem a
    toElem (Funcparams_Option a) = toElem a
    toElem (Funcparams_Optional a) = toElem a
    toElem (Funcparams_Parameter a) = toElem a
    toElem (Funcparams_Prompt a) = toElem a
    toElem (Funcparams_Property a) = toElem a
    toElem (Funcparams_Replaceable a) = toElem a
    toElem (Funcparams_Returnvalue a) = toElem a
    toElem (Funcparams_Sgmltag a) = toElem a
    toElem (Funcparams_Structfield a) = toElem a
    toElem (Funcparams_Structname a) = toElem a
    toElem (Funcparams_Symbol a) = toElem a
    toElem (Funcparams_Systemitem a) = toElem a
    toElem (Funcparams_Token a) = toElem a
    toElem (Funcparams_Type a) = toElem a
    toElem (Funcparams_Userinput a) = toElem a
    toElem (Funcparams_Varname a) = toElem a
    toElem (Funcparams_Anchor a) = toElem a
    toElem (Funcparams_Remark a) = toElem a
    toElem (Funcparams_Subscript a) = toElem a
    toElem (Funcparams_Superscript a) = toElem a
    toElem (Funcparams_Inlinegraphic a) = toElem a
    toElem (Funcparams_Inlinemediaobject a) = toElem a
    toElem (Funcparams_Indexterm a) = toElem a
    toElem (Funcparams_Beginpage a) = toElem a
instance XmlAttrType Funcparams_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Funcparams_Revisionflag_Changed
	    translate "added" = Just Funcparams_Revisionflag_Added
	    translate "deleted" = Just Funcparams_Revisionflag_Deleted
	    translate "off" = Just Funcparams_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Funcparams_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Funcparams_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Funcparams_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Funcparams_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Classsynopsis where
    fromElem (CElem (Elem "classsynopsis" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Classsynopsis (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Classsynopsis as a b) =
	[CElem (Elem "classsynopsis" (toAttrs as) (concatMap toElem a ++
						   concatMap toElem b))]
instance XmlAttributes Classsynopsis_Attrs where
    fromAttrs as =
	Classsynopsis_Attrs
	  { classsynopsisLanguage = possibleA fromAttrToStr "language" as
	  , classsynopsisClass = defaultA fromAttrToTyp Classsynopsis_Class_Class "class" as
	  , classsynopsisId = possibleA fromAttrToStr "id" as
	  , classsynopsisLang = possibleA fromAttrToStr "lang" as
	  , classsynopsisRemap = possibleA fromAttrToStr "remap" as
	  , classsynopsisXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , classsynopsisRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , classsynopsisArch = possibleA fromAttrToStr "arch" as
	  , classsynopsisCondition = possibleA fromAttrToStr "condition" as
	  , classsynopsisConformance = possibleA fromAttrToStr "conformance" as
	  , classsynopsisOs = possibleA fromAttrToStr "os" as
	  , classsynopsisRevision = possibleA fromAttrToStr "revision" as
	  , classsynopsisSecurity = possibleA fromAttrToStr "security" as
	  , classsynopsisUserlevel = possibleA fromAttrToStr "userlevel" as
	  , classsynopsisVendor = possibleA fromAttrToStr "vendor" as
	  , classsynopsisRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "language" (classsynopsisLanguage v)
	, defaultToAttr toAttrFrTyp "class" (classsynopsisClass v)
	, maybeToAttr toAttrFrStr "id" (classsynopsisId v)
	, maybeToAttr toAttrFrStr "lang" (classsynopsisLang v)
	, maybeToAttr toAttrFrStr "remap" (classsynopsisRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (classsynopsisXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (classsynopsisRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (classsynopsisArch v)
	, maybeToAttr toAttrFrStr "condition" (classsynopsisCondition v)
	, maybeToAttr toAttrFrStr "conformance" (classsynopsisConformance v)
	, maybeToAttr toAttrFrStr "os" (classsynopsisOs v)
	, maybeToAttr toAttrFrStr "revision" (classsynopsisRevision v)
	, maybeToAttr toAttrFrStr "security" (classsynopsisSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (classsynopsisUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (classsynopsisVendor v)
	, maybeToAttr toAttrFrStr "role" (classsynopsisRole v)
	]
instance XmlAttrType Classsynopsis_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "class" = Just Classsynopsis_Class_Class
	    translate "interface" = Just Classsynopsis_Class_Interface
	    translate _ = Nothing
    toAttrFrTyp n Classsynopsis_Class_Class = Just (n, str2attr "class")
    toAttrFrTyp n Classsynopsis_Class_Interface = Just (n, str2attr "interface")
instance XmlAttrType Classsynopsis_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Classsynopsis_Revisionflag_Changed
	    translate "added" = Just Classsynopsis_Revisionflag_Added
	    translate "deleted" = Just Classsynopsis_Revisionflag_Deleted
	    translate "off" = Just Classsynopsis_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Classsynopsis_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Classsynopsis_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Classsynopsis_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Classsynopsis_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Classsynopsisinfo where
    fromElem (CElem (Elem "classsynopsisinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Classsynopsisinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Classsynopsisinfo as a) =
	[CElem (Elem "classsynopsisinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Classsynopsisinfo_Attrs where
    fromAttrs as =
	Classsynopsisinfo_Attrs
	  { classsynopsisinfoFormat = defaultA fromAttrToTyp Classsynopsisinfo_Format_Linespecific "format" as
	  , classsynopsisinfoLinenumbering = possibleA fromAttrToTyp "linenumbering" as
	  , classsynopsisinfoId = possibleA fromAttrToStr "id" as
	  , classsynopsisinfoLang = possibleA fromAttrToStr "lang" as
	  , classsynopsisinfoRemap = possibleA fromAttrToStr "remap" as
	  , classsynopsisinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , classsynopsisinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , classsynopsisinfoArch = possibleA fromAttrToStr "arch" as
	  , classsynopsisinfoCondition = possibleA fromAttrToStr "condition" as
	  , classsynopsisinfoConformance = possibleA fromAttrToStr "conformance" as
	  , classsynopsisinfoOs = possibleA fromAttrToStr "os" as
	  , classsynopsisinfoRevision = possibleA fromAttrToStr "revision" as
	  , classsynopsisinfoSecurity = possibleA fromAttrToStr "security" as
	  , classsynopsisinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , classsynopsisinfoVendor = possibleA fromAttrToStr "vendor" as
	  , classsynopsisinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "format" (classsynopsisinfoFormat v)
	, maybeToAttr toAttrFrTyp "linenumbering" (classsynopsisinfoLinenumbering v)
	, maybeToAttr toAttrFrStr "id" (classsynopsisinfoId v)
	, maybeToAttr toAttrFrStr "lang" (classsynopsisinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (classsynopsisinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (classsynopsisinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (classsynopsisinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (classsynopsisinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (classsynopsisinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (classsynopsisinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (classsynopsisinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (classsynopsisinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (classsynopsisinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (classsynopsisinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (classsynopsisinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (classsynopsisinfoRole v)
	]
instance XmlContent Classsynopsisinfo_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Classsynopsisinfo_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Classsynopsisinfo_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Classsynopsisinfo_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Classsynopsisinfo_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Classsynopsisinfo_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Classsynopsisinfo_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Classsynopsisinfo_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Classsynopsisinfo_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Classsynopsisinfo_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Classsynopsisinfo_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Classsynopsisinfo_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Classsynopsisinfo_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Classsynopsisinfo_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Classsynopsisinfo_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Classsynopsisinfo_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Classsynopsisinfo_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Classsynopsisinfo_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Classsynopsisinfo_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Classsynopsisinfo_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Classsynopsisinfo_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Classsynopsisinfo_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Classsynopsisinfo_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Classsynopsisinfo_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Classsynopsisinfo_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Classsynopsisinfo_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Classsynopsisinfo_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Classsynopsisinfo_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Classsynopsisinfo_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Classsynopsisinfo_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Classsynopsisinfo_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Classsynopsisinfo_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Classsynopsisinfo_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Classsynopsisinfo_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Classsynopsisinfo_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Classsynopsisinfo_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Classsynopsisinfo_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Classsynopsisinfo_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Classsynopsisinfo_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Classsynopsisinfo_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Classsynopsisinfo_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Classsynopsisinfo_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Classsynopsisinfo_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Classsynopsisinfo_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Classsynopsisinfo_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Classsynopsisinfo_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Classsynopsisinfo_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Classsynopsisinfo_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Classsynopsisinfo_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Classsynopsisinfo_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Classsynopsisinfo_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Classsynopsisinfo_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Classsynopsisinfo_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Classsynopsisinfo_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Classsynopsisinfo_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Classsynopsisinfo_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Classsynopsisinfo_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Classsynopsisinfo_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Classsynopsisinfo_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Classsynopsisinfo_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Classsynopsisinfo_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Classsynopsisinfo_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Classsynopsisinfo_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Classsynopsisinfo_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Classsynopsisinfo_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Classsynopsisinfo_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Classsynopsisinfo_Beginpage a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Classsynopsisinfo_Textobject a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Classsynopsisinfo_Lineannotation a), rest)
																																																																				(_,_) ->
																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Classsynopsisinfo_Str a) = toText a
    toElem (Classsynopsisinfo_Link a) = toElem a
    toElem (Classsynopsisinfo_Olink a) = toElem a
    toElem (Classsynopsisinfo_Ulink a) = toElem a
    toElem (Classsynopsisinfo_Action a) = toElem a
    toElem (Classsynopsisinfo_Application a) = toElem a
    toElem (Classsynopsisinfo_Classname a) = toElem a
    toElem (Classsynopsisinfo_Methodname a) = toElem a
    toElem (Classsynopsisinfo_Interfacename a) = toElem a
    toElem (Classsynopsisinfo_Exceptionname a) = toElem a
    toElem (Classsynopsisinfo_Ooclass a) = toElem a
    toElem (Classsynopsisinfo_Oointerface a) = toElem a
    toElem (Classsynopsisinfo_Ooexception a) = toElem a
    toElem (Classsynopsisinfo_Command a) = toElem a
    toElem (Classsynopsisinfo_Computeroutput a) = toElem a
    toElem (Classsynopsisinfo_Database a) = toElem a
    toElem (Classsynopsisinfo_Email a) = toElem a
    toElem (Classsynopsisinfo_Envar a) = toElem a
    toElem (Classsynopsisinfo_Errorcode a) = toElem a
    toElem (Classsynopsisinfo_Errorname a) = toElem a
    toElem (Classsynopsisinfo_Errortype a) = toElem a
    toElem (Classsynopsisinfo_Errortext a) = toElem a
    toElem (Classsynopsisinfo_Filename a) = toElem a
    toElem (Classsynopsisinfo_Function a) = toElem a
    toElem (Classsynopsisinfo_Guibutton a) = toElem a
    toElem (Classsynopsisinfo_Guiicon a) = toElem a
    toElem (Classsynopsisinfo_Guilabel a) = toElem a
    toElem (Classsynopsisinfo_Guimenu a) = toElem a
    toElem (Classsynopsisinfo_Guimenuitem a) = toElem a
    toElem (Classsynopsisinfo_Guisubmenu a) = toElem a
    toElem (Classsynopsisinfo_Hardware a) = toElem a
    toElem (Classsynopsisinfo_Interface a) = toElem a
    toElem (Classsynopsisinfo_Keycap a) = toElem a
    toElem (Classsynopsisinfo_Keycode a) = toElem a
    toElem (Classsynopsisinfo_Keycombo a) = toElem a
    toElem (Classsynopsisinfo_Keysym a) = toElem a
    toElem (Classsynopsisinfo_Literal a) = toElem a
    toElem (Classsynopsisinfo_Constant a) = toElem a
    toElem (Classsynopsisinfo_Markup a) = toElem a
    toElem (Classsynopsisinfo_Medialabel a) = toElem a
    toElem (Classsynopsisinfo_Menuchoice a) = toElem a
    toElem (Classsynopsisinfo_Mousebutton a) = toElem a
    toElem (Classsynopsisinfo_Option a) = toElem a
    toElem (Classsynopsisinfo_Optional a) = toElem a
    toElem (Classsynopsisinfo_Parameter a) = toElem a
    toElem (Classsynopsisinfo_Prompt a) = toElem a
    toElem (Classsynopsisinfo_Property a) = toElem a
    toElem (Classsynopsisinfo_Replaceable a) = toElem a
    toElem (Classsynopsisinfo_Returnvalue a) = toElem a
    toElem (Classsynopsisinfo_Sgmltag a) = toElem a
    toElem (Classsynopsisinfo_Structfield a) = toElem a
    toElem (Classsynopsisinfo_Structname a) = toElem a
    toElem (Classsynopsisinfo_Symbol a) = toElem a
    toElem (Classsynopsisinfo_Systemitem a) = toElem a
    toElem (Classsynopsisinfo_Token a) = toElem a
    toElem (Classsynopsisinfo_Type a) = toElem a
    toElem (Classsynopsisinfo_Userinput a) = toElem a
    toElem (Classsynopsisinfo_Varname a) = toElem a
    toElem (Classsynopsisinfo_Anchor a) = toElem a
    toElem (Classsynopsisinfo_Remark a) = toElem a
    toElem (Classsynopsisinfo_Subscript a) = toElem a
    toElem (Classsynopsisinfo_Superscript a) = toElem a
    toElem (Classsynopsisinfo_Inlinegraphic a) = toElem a
    toElem (Classsynopsisinfo_Inlinemediaobject a) = toElem a
    toElem (Classsynopsisinfo_Indexterm a) = toElem a
    toElem (Classsynopsisinfo_Beginpage a) = toElem a
    toElem (Classsynopsisinfo_Textobject a) = toElem a
    toElem (Classsynopsisinfo_Lineannotation a) = toElem a
instance XmlAttrType Classsynopsisinfo_Format where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "linespecific" = Just Classsynopsisinfo_Format_Linespecific
	    translate _ = Nothing
    toAttrFrTyp n Classsynopsisinfo_Format_Linespecific = Just (n, str2attr "linespecific")
instance XmlAttrType Classsynopsisinfo_Linenumbering where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "numbered" = Just Classsynopsisinfo_Linenumbering_Numbered
	    translate "unnumbered" = Just Classsynopsisinfo_Linenumbering_Unnumbered
	    translate _ = Nothing
    toAttrFrTyp n Classsynopsisinfo_Linenumbering_Numbered = Just (n, str2attr "numbered")
    toAttrFrTyp n Classsynopsisinfo_Linenumbering_Unnumbered = Just (n, str2attr "unnumbered")
instance XmlAttrType Classsynopsisinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Classsynopsisinfo_Revisionflag_Changed
	    translate "added" = Just Classsynopsisinfo_Revisionflag_Added
	    translate "deleted" = Just Classsynopsisinfo_Revisionflag_Deleted
	    translate "off" = Just Classsynopsisinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Classsynopsisinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Classsynopsisinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Classsynopsisinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Classsynopsisinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Ooclass where
    fromElem (CElem (Elem "ooclass" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Ooclass (fromAttrs as) a b), rest))
	   (definite fromElem "<classname>" "ooclass" ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Ooclass as a b) =
	[CElem (Elem "ooclass" (toAttrs as) (concatMap toElem a ++
					     toElem b))]
instance XmlAttributes Ooclass_Attrs where
    fromAttrs as =
	Ooclass_Attrs
	  { ooclassId = possibleA fromAttrToStr "id" as
	  , ooclassLang = possibleA fromAttrToStr "lang" as
	  , ooclassRemap = possibleA fromAttrToStr "remap" as
	  , ooclassXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , ooclassRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , ooclassArch = possibleA fromAttrToStr "arch" as
	  , ooclassCondition = possibleA fromAttrToStr "condition" as
	  , ooclassConformance = possibleA fromAttrToStr "conformance" as
	  , ooclassOs = possibleA fromAttrToStr "os" as
	  , ooclassRevision = possibleA fromAttrToStr "revision" as
	  , ooclassSecurity = possibleA fromAttrToStr "security" as
	  , ooclassUserlevel = possibleA fromAttrToStr "userlevel" as
	  , ooclassVendor = possibleA fromAttrToStr "vendor" as
	  , ooclassRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (ooclassId v)
	, maybeToAttr toAttrFrStr "lang" (ooclassLang v)
	, maybeToAttr toAttrFrStr "remap" (ooclassRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (ooclassXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (ooclassRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (ooclassArch v)
	, maybeToAttr toAttrFrStr "condition" (ooclassCondition v)
	, maybeToAttr toAttrFrStr "conformance" (ooclassConformance v)
	, maybeToAttr toAttrFrStr "os" (ooclassOs v)
	, maybeToAttr toAttrFrStr "revision" (ooclassRevision v)
	, maybeToAttr toAttrFrStr "security" (ooclassSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (ooclassUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (ooclassVendor v)
	, maybeToAttr toAttrFrStr "role" (ooclassRole v)
	]
instance XmlAttrType Ooclass_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Ooclass_Revisionflag_Changed
	    translate "added" = Just Ooclass_Revisionflag_Added
	    translate "deleted" = Just Ooclass_Revisionflag_Deleted
	    translate "off" = Just Ooclass_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Ooclass_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Ooclass_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Ooclass_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Ooclass_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Oointerface where
    fromElem (CElem (Elem "oointerface" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Oointerface (fromAttrs as) a b), rest))
	   (definite fromElem "<interfacename>" "oointerface" ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Oointerface as a b) =
	[CElem (Elem "oointerface" (toAttrs as) (concatMap toElem a ++
						 toElem b))]
instance XmlAttributes Oointerface_Attrs where
    fromAttrs as =
	Oointerface_Attrs
	  { oointerfaceId = possibleA fromAttrToStr "id" as
	  , oointerfaceLang = possibleA fromAttrToStr "lang" as
	  , oointerfaceRemap = possibleA fromAttrToStr "remap" as
	  , oointerfaceXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , oointerfaceRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , oointerfaceArch = possibleA fromAttrToStr "arch" as
	  , oointerfaceCondition = possibleA fromAttrToStr "condition" as
	  , oointerfaceConformance = possibleA fromAttrToStr "conformance" as
	  , oointerfaceOs = possibleA fromAttrToStr "os" as
	  , oointerfaceRevision = possibleA fromAttrToStr "revision" as
	  , oointerfaceSecurity = possibleA fromAttrToStr "security" as
	  , oointerfaceUserlevel = possibleA fromAttrToStr "userlevel" as
	  , oointerfaceVendor = possibleA fromAttrToStr "vendor" as
	  , oointerfaceRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (oointerfaceId v)
	, maybeToAttr toAttrFrStr "lang" (oointerfaceLang v)
	, maybeToAttr toAttrFrStr "remap" (oointerfaceRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (oointerfaceXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (oointerfaceRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (oointerfaceArch v)
	, maybeToAttr toAttrFrStr "condition" (oointerfaceCondition v)
	, maybeToAttr toAttrFrStr "conformance" (oointerfaceConformance v)
	, maybeToAttr toAttrFrStr "os" (oointerfaceOs v)
	, maybeToAttr toAttrFrStr "revision" (oointerfaceRevision v)
	, maybeToAttr toAttrFrStr "security" (oointerfaceSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (oointerfaceUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (oointerfaceVendor v)
	, maybeToAttr toAttrFrStr "role" (oointerfaceRole v)
	]
instance XmlAttrType Oointerface_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Oointerface_Revisionflag_Changed
	    translate "added" = Just Oointerface_Revisionflag_Added
	    translate "deleted" = Just Oointerface_Revisionflag_Deleted
	    translate "off" = Just Oointerface_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Oointerface_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Oointerface_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Oointerface_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Oointerface_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Ooexception where
    fromElem (CElem (Elem "ooexception" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Ooexception (fromAttrs as) a b), rest))
	   (definite fromElem "<exceptionname>" "ooexception" ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Ooexception as a b) =
	[CElem (Elem "ooexception" (toAttrs as) (concatMap toElem a ++
						 toElem b))]
instance XmlAttributes Ooexception_Attrs where
    fromAttrs as =
	Ooexception_Attrs
	  { ooexceptionId = possibleA fromAttrToStr "id" as
	  , ooexceptionLang = possibleA fromAttrToStr "lang" as
	  , ooexceptionRemap = possibleA fromAttrToStr "remap" as
	  , ooexceptionXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , ooexceptionRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , ooexceptionArch = possibleA fromAttrToStr "arch" as
	  , ooexceptionCondition = possibleA fromAttrToStr "condition" as
	  , ooexceptionConformance = possibleA fromAttrToStr "conformance" as
	  , ooexceptionOs = possibleA fromAttrToStr "os" as
	  , ooexceptionRevision = possibleA fromAttrToStr "revision" as
	  , ooexceptionSecurity = possibleA fromAttrToStr "security" as
	  , ooexceptionUserlevel = possibleA fromAttrToStr "userlevel" as
	  , ooexceptionVendor = possibleA fromAttrToStr "vendor" as
	  , ooexceptionRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (ooexceptionId v)
	, maybeToAttr toAttrFrStr "lang" (ooexceptionLang v)
	, maybeToAttr toAttrFrStr "remap" (ooexceptionRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (ooexceptionXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (ooexceptionRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (ooexceptionArch v)
	, maybeToAttr toAttrFrStr "condition" (ooexceptionCondition v)
	, maybeToAttr toAttrFrStr "conformance" (ooexceptionConformance v)
	, maybeToAttr toAttrFrStr "os" (ooexceptionOs v)
	, maybeToAttr toAttrFrStr "revision" (ooexceptionRevision v)
	, maybeToAttr toAttrFrStr "security" (ooexceptionSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (ooexceptionUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (ooexceptionVendor v)
	, maybeToAttr toAttrFrStr "role" (ooexceptionRole v)
	]
instance XmlAttrType Ooexception_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Ooexception_Revisionflag_Changed
	    translate "added" = Just Ooexception_Revisionflag_Added
	    translate "deleted" = Just Ooexception_Revisionflag_Deleted
	    translate "off" = Just Ooexception_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Ooexception_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Ooexception_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Ooexception_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Ooexception_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Modifier where
    fromElem (CElem (Elem "modifier" as c0):rest) =
	(\(a,ca)->
	   (Just (Modifier (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Modifier as a) =
	[CElem (Elem "modifier" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Modifier_Attrs where
    fromAttrs as =
	Modifier_Attrs
	  { modifierId = possibleA fromAttrToStr "id" as
	  , modifierLang = possibleA fromAttrToStr "lang" as
	  , modifierRemap = possibleA fromAttrToStr "remap" as
	  , modifierXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , modifierRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , modifierArch = possibleA fromAttrToStr "arch" as
	  , modifierCondition = possibleA fromAttrToStr "condition" as
	  , modifierConformance = possibleA fromAttrToStr "conformance" as
	  , modifierOs = possibleA fromAttrToStr "os" as
	  , modifierRevision = possibleA fromAttrToStr "revision" as
	  , modifierSecurity = possibleA fromAttrToStr "security" as
	  , modifierUserlevel = possibleA fromAttrToStr "userlevel" as
	  , modifierVendor = possibleA fromAttrToStr "vendor" as
	  , modifierRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (modifierId v)
	, maybeToAttr toAttrFrStr "lang" (modifierLang v)
	, maybeToAttr toAttrFrStr "remap" (modifierRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (modifierXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (modifierRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (modifierArch v)
	, maybeToAttr toAttrFrStr "condition" (modifierCondition v)
	, maybeToAttr toAttrFrStr "conformance" (modifierConformance v)
	, maybeToAttr toAttrFrStr "os" (modifierOs v)
	, maybeToAttr toAttrFrStr "revision" (modifierRevision v)
	, maybeToAttr toAttrFrStr "security" (modifierSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (modifierUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (modifierVendor v)
	, maybeToAttr toAttrFrStr "role" (modifierRole v)
	]
instance XmlContent Modifier_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Modifier_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Modifier_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Modifier_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Modifier_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Modifier_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Modifier_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Modifier_Str a) = toText a
    toElem (Modifier_Replaceable a) = toElem a
    toElem (Modifier_Inlinegraphic a) = toElem a
    toElem (Modifier_Inlinemediaobject a) = toElem a
    toElem (Modifier_Indexterm a) = toElem a
    toElem (Modifier_Beginpage a) = toElem a
instance XmlAttrType Modifier_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Modifier_Revisionflag_Changed
	    translate "added" = Just Modifier_Revisionflag_Added
	    translate "deleted" = Just Modifier_Revisionflag_Deleted
	    translate "off" = Just Modifier_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Modifier_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Modifier_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Modifier_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Modifier_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Interfacename where
    fromElem (CElem (Elem "interfacename" as c0):rest) =
	(\(a,ca)->
	   (Just (Interfacename (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Interfacename as a) =
	[CElem (Elem "interfacename" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Interfacename_Attrs where
    fromAttrs as =
	Interfacename_Attrs
	  { interfacenameId = possibleA fromAttrToStr "id" as
	  , interfacenameLang = possibleA fromAttrToStr "lang" as
	  , interfacenameRemap = possibleA fromAttrToStr "remap" as
	  , interfacenameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , interfacenameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , interfacenameArch = possibleA fromAttrToStr "arch" as
	  , interfacenameCondition = possibleA fromAttrToStr "condition" as
	  , interfacenameConformance = possibleA fromAttrToStr "conformance" as
	  , interfacenameOs = possibleA fromAttrToStr "os" as
	  , interfacenameRevision = possibleA fromAttrToStr "revision" as
	  , interfacenameSecurity = possibleA fromAttrToStr "security" as
	  , interfacenameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , interfacenameVendor = possibleA fromAttrToStr "vendor" as
	  , interfacenameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (interfacenameId v)
	, maybeToAttr toAttrFrStr "lang" (interfacenameLang v)
	, maybeToAttr toAttrFrStr "remap" (interfacenameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (interfacenameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (interfacenameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (interfacenameArch v)
	, maybeToAttr toAttrFrStr "condition" (interfacenameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (interfacenameConformance v)
	, maybeToAttr toAttrFrStr "os" (interfacenameOs v)
	, maybeToAttr toAttrFrStr "revision" (interfacenameRevision v)
	, maybeToAttr toAttrFrStr "security" (interfacenameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (interfacenameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (interfacenameVendor v)
	, maybeToAttr toAttrFrStr "role" (interfacenameRole v)
	]
instance XmlContent Interfacename_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Interfacename_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Interfacename_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Interfacename_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Interfacename_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Interfacename_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Interfacename_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Interfacename_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Interfacename_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Interfacename_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Interfacename_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Interfacename_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Interfacename_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Interfacename_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Interfacename_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Interfacename_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Interfacename_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Interfacename_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Interfacename_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Interfacename_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Interfacename_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Interfacename_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Interfacename_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Interfacename_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Interfacename_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Interfacename_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Interfacename_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Interfacename_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Interfacename_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Interfacename_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Interfacename_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Interfacename_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Interfacename_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Interfacename_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Interfacename_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Interfacename_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Interfacename_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Interfacename_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Interfacename_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Interfacename_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Interfacename_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Interfacename_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Interfacename_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Interfacename_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Interfacename_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Interfacename_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Interfacename_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Interfacename_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Interfacename_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Interfacename_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Interfacename_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Interfacename_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Interfacename_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Interfacename_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Interfacename_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Interfacename_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Interfacename_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Interfacename_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Interfacename_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Interfacename_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Interfacename_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Interfacename_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Interfacename_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Interfacename_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Interfacename_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Interfacename_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Interfacename_Beginpage a), rest)
																																																																		(_,_) ->
																																																																		    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Interfacename_Str a) = toText a
    toElem (Interfacename_Link a) = toElem a
    toElem (Interfacename_Olink a) = toElem a
    toElem (Interfacename_Ulink a) = toElem a
    toElem (Interfacename_Action a) = toElem a
    toElem (Interfacename_Application a) = toElem a
    toElem (Interfacename_Classname a) = toElem a
    toElem (Interfacename_Methodname a) = toElem a
    toElem (Interfacename_Interfacename a) = toElem a
    toElem (Interfacename_Exceptionname a) = toElem a
    toElem (Interfacename_Ooclass a) = toElem a
    toElem (Interfacename_Oointerface a) = toElem a
    toElem (Interfacename_Ooexception a) = toElem a
    toElem (Interfacename_Command a) = toElem a
    toElem (Interfacename_Computeroutput a) = toElem a
    toElem (Interfacename_Database a) = toElem a
    toElem (Interfacename_Email a) = toElem a
    toElem (Interfacename_Envar a) = toElem a
    toElem (Interfacename_Errorcode a) = toElem a
    toElem (Interfacename_Errorname a) = toElem a
    toElem (Interfacename_Errortype a) = toElem a
    toElem (Interfacename_Errortext a) = toElem a
    toElem (Interfacename_Filename a) = toElem a
    toElem (Interfacename_Function a) = toElem a
    toElem (Interfacename_Guibutton a) = toElem a
    toElem (Interfacename_Guiicon a) = toElem a
    toElem (Interfacename_Guilabel a) = toElem a
    toElem (Interfacename_Guimenu a) = toElem a
    toElem (Interfacename_Guimenuitem a) = toElem a
    toElem (Interfacename_Guisubmenu a) = toElem a
    toElem (Interfacename_Hardware a) = toElem a
    toElem (Interfacename_Interface a) = toElem a
    toElem (Interfacename_Keycap a) = toElem a
    toElem (Interfacename_Keycode a) = toElem a
    toElem (Interfacename_Keycombo a) = toElem a
    toElem (Interfacename_Keysym a) = toElem a
    toElem (Interfacename_Literal a) = toElem a
    toElem (Interfacename_Constant a) = toElem a
    toElem (Interfacename_Markup a) = toElem a
    toElem (Interfacename_Medialabel a) = toElem a
    toElem (Interfacename_Menuchoice a) = toElem a
    toElem (Interfacename_Mousebutton a) = toElem a
    toElem (Interfacename_Option a) = toElem a
    toElem (Interfacename_Optional a) = toElem a
    toElem (Interfacename_Parameter a) = toElem a
    toElem (Interfacename_Prompt a) = toElem a
    toElem (Interfacename_Property a) = toElem a
    toElem (Interfacename_Replaceable a) = toElem a
    toElem (Interfacename_Returnvalue a) = toElem a
    toElem (Interfacename_Sgmltag a) = toElem a
    toElem (Interfacename_Structfield a) = toElem a
    toElem (Interfacename_Structname a) = toElem a
    toElem (Interfacename_Symbol a) = toElem a
    toElem (Interfacename_Systemitem a) = toElem a
    toElem (Interfacename_Token a) = toElem a
    toElem (Interfacename_Type a) = toElem a
    toElem (Interfacename_Userinput a) = toElem a
    toElem (Interfacename_Varname a) = toElem a
    toElem (Interfacename_Anchor a) = toElem a
    toElem (Interfacename_Remark a) = toElem a
    toElem (Interfacename_Subscript a) = toElem a
    toElem (Interfacename_Superscript a) = toElem a
    toElem (Interfacename_Inlinegraphic a) = toElem a
    toElem (Interfacename_Inlinemediaobject a) = toElem a
    toElem (Interfacename_Indexterm a) = toElem a
    toElem (Interfacename_Beginpage a) = toElem a
instance XmlAttrType Interfacename_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Interfacename_Revisionflag_Changed
	    translate "added" = Just Interfacename_Revisionflag_Added
	    translate "deleted" = Just Interfacename_Revisionflag_Deleted
	    translate "off" = Just Interfacename_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Interfacename_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Interfacename_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Interfacename_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Interfacename_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Exceptionname where
    fromElem (CElem (Elem "exceptionname" as c0):rest) =
	(\(a,ca)->
	   (Just (Exceptionname (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Exceptionname as a) =
	[CElem (Elem "exceptionname" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Exceptionname_Attrs where
    fromAttrs as =
	Exceptionname_Attrs
	  { exceptionnameId = possibleA fromAttrToStr "id" as
	  , exceptionnameLang = possibleA fromAttrToStr "lang" as
	  , exceptionnameRemap = possibleA fromAttrToStr "remap" as
	  , exceptionnameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , exceptionnameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , exceptionnameArch = possibleA fromAttrToStr "arch" as
	  , exceptionnameCondition = possibleA fromAttrToStr "condition" as
	  , exceptionnameConformance = possibleA fromAttrToStr "conformance" as
	  , exceptionnameOs = possibleA fromAttrToStr "os" as
	  , exceptionnameRevision = possibleA fromAttrToStr "revision" as
	  , exceptionnameSecurity = possibleA fromAttrToStr "security" as
	  , exceptionnameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , exceptionnameVendor = possibleA fromAttrToStr "vendor" as
	  , exceptionnameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (exceptionnameId v)
	, maybeToAttr toAttrFrStr "lang" (exceptionnameLang v)
	, maybeToAttr toAttrFrStr "remap" (exceptionnameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (exceptionnameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (exceptionnameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (exceptionnameArch v)
	, maybeToAttr toAttrFrStr "condition" (exceptionnameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (exceptionnameConformance v)
	, maybeToAttr toAttrFrStr "os" (exceptionnameOs v)
	, maybeToAttr toAttrFrStr "revision" (exceptionnameRevision v)
	, maybeToAttr toAttrFrStr "security" (exceptionnameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (exceptionnameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (exceptionnameVendor v)
	, maybeToAttr toAttrFrStr "role" (exceptionnameRole v)
	]
instance XmlContent Exceptionname_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Exceptionname_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Exceptionname_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Exceptionname_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Exceptionname_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Exceptionname_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Exceptionname_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Exceptionname_Str a) = toText a
    toElem (Exceptionname_Replaceable a) = toElem a
    toElem (Exceptionname_Inlinegraphic a) = toElem a
    toElem (Exceptionname_Inlinemediaobject a) = toElem a
    toElem (Exceptionname_Indexterm a) = toElem a
    toElem (Exceptionname_Beginpage a) = toElem a
instance XmlAttrType Exceptionname_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Exceptionname_Revisionflag_Changed
	    translate "added" = Just Exceptionname_Revisionflag_Added
	    translate "deleted" = Just Exceptionname_Revisionflag_Deleted
	    translate "off" = Just Exceptionname_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Exceptionname_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Exceptionname_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Exceptionname_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Exceptionname_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Fieldsynopsis where
    fromElem (CElem (Elem "fieldsynopsis" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Fieldsynopsis (fromAttrs as) a b c d), rest))
		 (fromElem cc))
	      (definite fromElem "<varname>" "fieldsynopsis" cb))
	   (fromElem ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Fieldsynopsis as a b c d) =
	[CElem (Elem "fieldsynopsis" (toAttrs as) (concatMap toElem a ++
						   maybe [] toElem b ++ toElem c ++
						   maybe [] toElem d))]
instance XmlAttributes Fieldsynopsis_Attrs where
    fromAttrs as =
	Fieldsynopsis_Attrs
	  { fieldsynopsisLanguage = possibleA fromAttrToStr "language" as
	  , fieldsynopsisId = possibleA fromAttrToStr "id" as
	  , fieldsynopsisLang = possibleA fromAttrToStr "lang" as
	  , fieldsynopsisRemap = possibleA fromAttrToStr "remap" as
	  , fieldsynopsisXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , fieldsynopsisRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , fieldsynopsisArch = possibleA fromAttrToStr "arch" as
	  , fieldsynopsisCondition = possibleA fromAttrToStr "condition" as
	  , fieldsynopsisConformance = possibleA fromAttrToStr "conformance" as
	  , fieldsynopsisOs = possibleA fromAttrToStr "os" as
	  , fieldsynopsisRevision = possibleA fromAttrToStr "revision" as
	  , fieldsynopsisSecurity = possibleA fromAttrToStr "security" as
	  , fieldsynopsisUserlevel = possibleA fromAttrToStr "userlevel" as
	  , fieldsynopsisVendor = possibleA fromAttrToStr "vendor" as
	  , fieldsynopsisRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "language" (fieldsynopsisLanguage v)
	, maybeToAttr toAttrFrStr "id" (fieldsynopsisId v)
	, maybeToAttr toAttrFrStr "lang" (fieldsynopsisLang v)
	, maybeToAttr toAttrFrStr "remap" (fieldsynopsisRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (fieldsynopsisXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (fieldsynopsisRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (fieldsynopsisArch v)
	, maybeToAttr toAttrFrStr "condition" (fieldsynopsisCondition v)
	, maybeToAttr toAttrFrStr "conformance" (fieldsynopsisConformance v)
	, maybeToAttr toAttrFrStr "os" (fieldsynopsisOs v)
	, maybeToAttr toAttrFrStr "revision" (fieldsynopsisRevision v)
	, maybeToAttr toAttrFrStr "security" (fieldsynopsisSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (fieldsynopsisUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (fieldsynopsisVendor v)
	, maybeToAttr toAttrFrStr "role" (fieldsynopsisRole v)
	]
instance XmlAttrType Fieldsynopsis_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Fieldsynopsis_Revisionflag_Changed
	    translate "added" = Just Fieldsynopsis_Revisionflag_Added
	    translate "deleted" = Just Fieldsynopsis_Revisionflag_Deleted
	    translate "off" = Just Fieldsynopsis_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Fieldsynopsis_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Fieldsynopsis_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Fieldsynopsis_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Fieldsynopsis_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Initializer where
    fromElem (CElem (Elem "initializer" as c0):rest) =
	(\(a,ca)->
	   (Just (Initializer (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Initializer as a) =
	[CElem (Elem "initializer" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Initializer_Attrs where
    fromAttrs as =
	Initializer_Attrs
	  { initializerId = possibleA fromAttrToStr "id" as
	  , initializerLang = possibleA fromAttrToStr "lang" as
	  , initializerRemap = possibleA fromAttrToStr "remap" as
	  , initializerXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , initializerRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , initializerArch = possibleA fromAttrToStr "arch" as
	  , initializerCondition = possibleA fromAttrToStr "condition" as
	  , initializerConformance = possibleA fromAttrToStr "conformance" as
	  , initializerOs = possibleA fromAttrToStr "os" as
	  , initializerRevision = possibleA fromAttrToStr "revision" as
	  , initializerSecurity = possibleA fromAttrToStr "security" as
	  , initializerUserlevel = possibleA fromAttrToStr "userlevel" as
	  , initializerVendor = possibleA fromAttrToStr "vendor" as
	  , initializerRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (initializerId v)
	, maybeToAttr toAttrFrStr "lang" (initializerLang v)
	, maybeToAttr toAttrFrStr "remap" (initializerRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (initializerXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (initializerRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (initializerArch v)
	, maybeToAttr toAttrFrStr "condition" (initializerCondition v)
	, maybeToAttr toAttrFrStr "conformance" (initializerConformance v)
	, maybeToAttr toAttrFrStr "os" (initializerOs v)
	, maybeToAttr toAttrFrStr "revision" (initializerRevision v)
	, maybeToAttr toAttrFrStr "security" (initializerSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (initializerUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (initializerVendor v)
	, maybeToAttr toAttrFrStr "role" (initializerRole v)
	]
instance XmlContent Initializer_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Initializer_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Initializer_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Initializer_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Initializer_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Initializer_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Initializer_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Initializer_Str a) = toText a
    toElem (Initializer_Replaceable a) = toElem a
    toElem (Initializer_Inlinegraphic a) = toElem a
    toElem (Initializer_Inlinemediaobject a) = toElem a
    toElem (Initializer_Indexterm a) = toElem a
    toElem (Initializer_Beginpage a) = toElem a
instance XmlAttrType Initializer_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Initializer_Revisionflag_Changed
	    translate "added" = Just Initializer_Revisionflag_Added
	    translate "deleted" = Just Initializer_Revisionflag_Deleted
	    translate "off" = Just Initializer_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Initializer_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Initializer_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Initializer_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Initializer_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Constructorsynopsis where
    fromElem (CElem (Elem "constructorsynopsis" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Constructorsynopsis (fromAttrs as) a b c d), rest))
		 (many fromElem cc))
	      (definite fromElem "OneOf" "constructorsynopsis" cb))
	   (fromElem ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Constructorsynopsis as a b c d) =
	[CElem (Elem "constructorsynopsis" (toAttrs as) (concatMap toElem a
							 ++ maybe [] toElem b ++ toElem c ++
							 concatMap toElem d))]
instance XmlAttributes Constructorsynopsis_Attrs where
    fromAttrs as =
	Constructorsynopsis_Attrs
	  { constructorsynopsisLanguage = possibleA fromAttrToStr "language" as
	  , constructorsynopsisId = possibleA fromAttrToStr "id" as
	  , constructorsynopsisLang = possibleA fromAttrToStr "lang" as
	  , constructorsynopsisRemap = possibleA fromAttrToStr "remap" as
	  , constructorsynopsisXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , constructorsynopsisRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , constructorsynopsisArch = possibleA fromAttrToStr "arch" as
	  , constructorsynopsisCondition = possibleA fromAttrToStr "condition" as
	  , constructorsynopsisConformance = possibleA fromAttrToStr "conformance" as
	  , constructorsynopsisOs = possibleA fromAttrToStr "os" as
	  , constructorsynopsisRevision = possibleA fromAttrToStr "revision" as
	  , constructorsynopsisSecurity = possibleA fromAttrToStr "security" as
	  , constructorsynopsisUserlevel = possibleA fromAttrToStr "userlevel" as
	  , constructorsynopsisVendor = possibleA fromAttrToStr "vendor" as
	  , constructorsynopsisRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "language" (constructorsynopsisLanguage v)
	, maybeToAttr toAttrFrStr "id" (constructorsynopsisId v)
	, maybeToAttr toAttrFrStr "lang" (constructorsynopsisLang v)
	, maybeToAttr toAttrFrStr "remap" (constructorsynopsisRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (constructorsynopsisXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (constructorsynopsisRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (constructorsynopsisArch v)
	, maybeToAttr toAttrFrStr "condition" (constructorsynopsisCondition v)
	, maybeToAttr toAttrFrStr "conformance" (constructorsynopsisConformance v)
	, maybeToAttr toAttrFrStr "os" (constructorsynopsisOs v)
	, maybeToAttr toAttrFrStr "revision" (constructorsynopsisRevision v)
	, maybeToAttr toAttrFrStr "security" (constructorsynopsisSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (constructorsynopsisUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (constructorsynopsisVendor v)
	, maybeToAttr toAttrFrStr "role" (constructorsynopsisRole v)
	]
instance XmlAttrType Constructorsynopsis_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Constructorsynopsis_Revisionflag_Changed
	    translate "added" = Just Constructorsynopsis_Revisionflag_Added
	    translate "deleted" = Just Constructorsynopsis_Revisionflag_Deleted
	    translate "off" = Just Constructorsynopsis_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Constructorsynopsis_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Constructorsynopsis_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Constructorsynopsis_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Constructorsynopsis_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Destructorsynopsis where
    fromElem (CElem (Elem "destructorsynopsis" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Destructorsynopsis (fromAttrs as) a b c d), rest))
		 (many fromElem cc))
	      (definite fromElem "OneOf" "destructorsynopsis" cb))
	   (fromElem ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Destructorsynopsis as a b c d) =
	[CElem (Elem "destructorsynopsis" (toAttrs as) (concatMap toElem a
							++ maybe [] toElem b ++ toElem c ++
							concatMap toElem d))]
instance XmlAttributes Destructorsynopsis_Attrs where
    fromAttrs as =
	Destructorsynopsis_Attrs
	  { destructorsynopsisLanguage = possibleA fromAttrToStr "language" as
	  , destructorsynopsisId = possibleA fromAttrToStr "id" as
	  , destructorsynopsisLang = possibleA fromAttrToStr "lang" as
	  , destructorsynopsisRemap = possibleA fromAttrToStr "remap" as
	  , destructorsynopsisXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , destructorsynopsisRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , destructorsynopsisArch = possibleA fromAttrToStr "arch" as
	  , destructorsynopsisCondition = possibleA fromAttrToStr "condition" as
	  , destructorsynopsisConformance = possibleA fromAttrToStr "conformance" as
	  , destructorsynopsisOs = possibleA fromAttrToStr "os" as
	  , destructorsynopsisRevision = possibleA fromAttrToStr "revision" as
	  , destructorsynopsisSecurity = possibleA fromAttrToStr "security" as
	  , destructorsynopsisUserlevel = possibleA fromAttrToStr "userlevel" as
	  , destructorsynopsisVendor = possibleA fromAttrToStr "vendor" as
	  , destructorsynopsisRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "language" (destructorsynopsisLanguage v)
	, maybeToAttr toAttrFrStr "id" (destructorsynopsisId v)
	, maybeToAttr toAttrFrStr "lang" (destructorsynopsisLang v)
	, maybeToAttr toAttrFrStr "remap" (destructorsynopsisRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (destructorsynopsisXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (destructorsynopsisRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (destructorsynopsisArch v)
	, maybeToAttr toAttrFrStr "condition" (destructorsynopsisCondition v)
	, maybeToAttr toAttrFrStr "conformance" (destructorsynopsisConformance v)
	, maybeToAttr toAttrFrStr "os" (destructorsynopsisOs v)
	, maybeToAttr toAttrFrStr "revision" (destructorsynopsisRevision v)
	, maybeToAttr toAttrFrStr "security" (destructorsynopsisSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (destructorsynopsisUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (destructorsynopsisVendor v)
	, maybeToAttr toAttrFrStr "role" (destructorsynopsisRole v)
	]
instance XmlAttrType Destructorsynopsis_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Destructorsynopsis_Revisionflag_Changed
	    translate "added" = Just Destructorsynopsis_Revisionflag_Added
	    translate "deleted" = Just Destructorsynopsis_Revisionflag_Deleted
	    translate "off" = Just Destructorsynopsis_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Destructorsynopsis_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Destructorsynopsis_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Destructorsynopsis_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Destructorsynopsis_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Methodsynopsis where
    fromElem (CElem (Elem "methodsynopsis" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (\(f,cf)->
			  (Just (Methodsynopsis (fromAttrs as) a b c d e f), rest))
		       (many fromElem ce))
		    (many fromElem cd))
		 (definite fromElem "OneOf" "methodsynopsis" cc))
	      (definite fromElem "<methodname>" "methodsynopsis" cb))
	   (fromElem ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Methodsynopsis as a b c d e f) =
	[CElem (Elem "methodsynopsis" (toAttrs as) (concatMap toElem a ++
						    maybe [] toElem b ++ toElem c ++ toElem d ++
						    concatMap toElem e ++ concatMap toElem f))]
instance XmlAttributes Methodsynopsis_Attrs where
    fromAttrs as =
	Methodsynopsis_Attrs
	  { methodsynopsisLanguage = possibleA fromAttrToStr "language" as
	  , methodsynopsisId = possibleA fromAttrToStr "id" as
	  , methodsynopsisLang = possibleA fromAttrToStr "lang" as
	  , methodsynopsisRemap = possibleA fromAttrToStr "remap" as
	  , methodsynopsisXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , methodsynopsisRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , methodsynopsisArch = possibleA fromAttrToStr "arch" as
	  , methodsynopsisCondition = possibleA fromAttrToStr "condition" as
	  , methodsynopsisConformance = possibleA fromAttrToStr "conformance" as
	  , methodsynopsisOs = possibleA fromAttrToStr "os" as
	  , methodsynopsisRevision = possibleA fromAttrToStr "revision" as
	  , methodsynopsisSecurity = possibleA fromAttrToStr "security" as
	  , methodsynopsisUserlevel = possibleA fromAttrToStr "userlevel" as
	  , methodsynopsisVendor = possibleA fromAttrToStr "vendor" as
	  , methodsynopsisRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "language" (methodsynopsisLanguage v)
	, maybeToAttr toAttrFrStr "id" (methodsynopsisId v)
	, maybeToAttr toAttrFrStr "lang" (methodsynopsisLang v)
	, maybeToAttr toAttrFrStr "remap" (methodsynopsisRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (methodsynopsisXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (methodsynopsisRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (methodsynopsisArch v)
	, maybeToAttr toAttrFrStr "condition" (methodsynopsisCondition v)
	, maybeToAttr toAttrFrStr "conformance" (methodsynopsisConformance v)
	, maybeToAttr toAttrFrStr "os" (methodsynopsisOs v)
	, maybeToAttr toAttrFrStr "revision" (methodsynopsisRevision v)
	, maybeToAttr toAttrFrStr "security" (methodsynopsisSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (methodsynopsisUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (methodsynopsisVendor v)
	, maybeToAttr toAttrFrStr "role" (methodsynopsisRole v)
	]
instance XmlAttrType Methodsynopsis_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Methodsynopsis_Revisionflag_Changed
	    translate "added" = Just Methodsynopsis_Revisionflag_Added
	    translate "deleted" = Just Methodsynopsis_Revisionflag_Deleted
	    translate "off" = Just Methodsynopsis_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Methodsynopsis_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Methodsynopsis_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Methodsynopsis_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Methodsynopsis_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Methodname where
    fromElem (CElem (Elem "methodname" as c0):rest) =
	(\(a,ca)->
	   (Just (Methodname (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Methodname as a) =
	[CElem (Elem "methodname" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Methodname_Attrs where
    fromAttrs as =
	Methodname_Attrs
	  { methodnameId = possibleA fromAttrToStr "id" as
	  , methodnameLang = possibleA fromAttrToStr "lang" as
	  , methodnameRemap = possibleA fromAttrToStr "remap" as
	  , methodnameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , methodnameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , methodnameArch = possibleA fromAttrToStr "arch" as
	  , methodnameCondition = possibleA fromAttrToStr "condition" as
	  , methodnameConformance = possibleA fromAttrToStr "conformance" as
	  , methodnameOs = possibleA fromAttrToStr "os" as
	  , methodnameRevision = possibleA fromAttrToStr "revision" as
	  , methodnameSecurity = possibleA fromAttrToStr "security" as
	  , methodnameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , methodnameVendor = possibleA fromAttrToStr "vendor" as
	  , methodnameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (methodnameId v)
	, maybeToAttr toAttrFrStr "lang" (methodnameLang v)
	, maybeToAttr toAttrFrStr "remap" (methodnameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (methodnameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (methodnameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (methodnameArch v)
	, maybeToAttr toAttrFrStr "condition" (methodnameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (methodnameConformance v)
	, maybeToAttr toAttrFrStr "os" (methodnameOs v)
	, maybeToAttr toAttrFrStr "revision" (methodnameRevision v)
	, maybeToAttr toAttrFrStr "security" (methodnameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (methodnameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (methodnameVendor v)
	, maybeToAttr toAttrFrStr "role" (methodnameRole v)
	]
instance XmlContent Methodname_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Methodname_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Methodname_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Methodname_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Methodname_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Methodname_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Methodname_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Methodname_Str a) = toText a
    toElem (Methodname_Replaceable a) = toElem a
    toElem (Methodname_Inlinegraphic a) = toElem a
    toElem (Methodname_Inlinemediaobject a) = toElem a
    toElem (Methodname_Indexterm a) = toElem a
    toElem (Methodname_Beginpage a) = toElem a
instance XmlAttrType Methodname_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Methodname_Revisionflag_Changed
	    translate "added" = Just Methodname_Revisionflag_Added
	    translate "deleted" = Just Methodname_Revisionflag_Deleted
	    translate "off" = Just Methodname_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Methodname_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Methodname_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Methodname_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Methodname_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Methodparam where
    fromElem (CElem (Elem "methodparam" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Methodparam (fromAttrs as) a b c d), rest))
		 (many fromElem cc))
	      (definite fromElem "OneOf" "methodparam" cb))
	   (fromElem ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Methodparam as a b c d) =
	[CElem (Elem "methodparam" (toAttrs as) (concatMap toElem a ++
						 maybe [] toElem b ++ toElem c ++
						 concatMap toElem d))]
instance XmlAttributes Methodparam_Attrs where
    fromAttrs as =
	Methodparam_Attrs
	  { methodparamChoice = defaultA fromAttrToTyp Methodparam_Choice_Req "choice" as
	  , methodparamRep = defaultA fromAttrToTyp Methodparam_Rep_Norepeat "rep" as
	  , methodparamId = possibleA fromAttrToStr "id" as
	  , methodparamLang = possibleA fromAttrToStr "lang" as
	  , methodparamRemap = possibleA fromAttrToStr "remap" as
	  , methodparamXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , methodparamRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , methodparamArch = possibleA fromAttrToStr "arch" as
	  , methodparamCondition = possibleA fromAttrToStr "condition" as
	  , methodparamConformance = possibleA fromAttrToStr "conformance" as
	  , methodparamOs = possibleA fromAttrToStr "os" as
	  , methodparamRevision = possibleA fromAttrToStr "revision" as
	  , methodparamSecurity = possibleA fromAttrToStr "security" as
	  , methodparamUserlevel = possibleA fromAttrToStr "userlevel" as
	  , methodparamVendor = possibleA fromAttrToStr "vendor" as
	  , methodparamRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "choice" (methodparamChoice v)
	, defaultToAttr toAttrFrTyp "rep" (methodparamRep v)
	, maybeToAttr toAttrFrStr "id" (methodparamId v)
	, maybeToAttr toAttrFrStr "lang" (methodparamLang v)
	, maybeToAttr toAttrFrStr "remap" (methodparamRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (methodparamXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (methodparamRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (methodparamArch v)
	, maybeToAttr toAttrFrStr "condition" (methodparamCondition v)
	, maybeToAttr toAttrFrStr "conformance" (methodparamConformance v)
	, maybeToAttr toAttrFrStr "os" (methodparamOs v)
	, maybeToAttr toAttrFrStr "revision" (methodparamRevision v)
	, maybeToAttr toAttrFrStr "security" (methodparamSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (methodparamUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (methodparamVendor v)
	, maybeToAttr toAttrFrStr "role" (methodparamRole v)
	]
instance XmlAttrType Methodparam_Choice where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "opt" = Just Methodparam_Choice_Opt
	    translate "req" = Just Methodparam_Choice_Req
	    translate "plain" = Just Methodparam_Choice_Plain
	    translate _ = Nothing
    toAttrFrTyp n Methodparam_Choice_Opt = Just (n, str2attr "opt")
    toAttrFrTyp n Methodparam_Choice_Req = Just (n, str2attr "req")
    toAttrFrTyp n Methodparam_Choice_Plain = Just (n, str2attr "plain")
instance XmlAttrType Methodparam_Rep where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "norepeat" = Just Methodparam_Rep_Norepeat
	    translate "repeat" = Just Methodparam_Rep_Repeat
	    translate _ = Nothing
    toAttrFrTyp n Methodparam_Rep_Norepeat = Just (n, str2attr "norepeat")
    toAttrFrTyp n Methodparam_Rep_Repeat = Just (n, str2attr "repeat")
instance XmlAttrType Methodparam_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Methodparam_Revisionflag_Changed
	    translate "added" = Just Methodparam_Revisionflag_Added
	    translate "deleted" = Just Methodparam_Revisionflag_Deleted
	    translate "off" = Just Methodparam_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Methodparam_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Methodparam_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Methodparam_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Methodparam_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Ackno where
    fromElem (CElem (Elem "ackno" as c0):rest) =
	(\(a,ca)->
	   (Just (Ackno (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Ackno as a) =
	[CElem (Elem "ackno" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Ackno_Attrs where
    fromAttrs as =
	Ackno_Attrs
	  { acknoId = possibleA fromAttrToStr "id" as
	  , acknoLang = possibleA fromAttrToStr "lang" as
	  , acknoRemap = possibleA fromAttrToStr "remap" as
	  , acknoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , acknoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , acknoArch = possibleA fromAttrToStr "arch" as
	  , acknoCondition = possibleA fromAttrToStr "condition" as
	  , acknoConformance = possibleA fromAttrToStr "conformance" as
	  , acknoOs = possibleA fromAttrToStr "os" as
	  , acknoRevision = possibleA fromAttrToStr "revision" as
	  , acknoSecurity = possibleA fromAttrToStr "security" as
	  , acknoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , acknoVendor = possibleA fromAttrToStr "vendor" as
	  , acknoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (acknoId v)
	, maybeToAttr toAttrFrStr "lang" (acknoLang v)
	, maybeToAttr toAttrFrStr "remap" (acknoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (acknoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (acknoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (acknoArch v)
	, maybeToAttr toAttrFrStr "condition" (acknoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (acknoConformance v)
	, maybeToAttr toAttrFrStr "os" (acknoOs v)
	, maybeToAttr toAttrFrStr "revision" (acknoRevision v)
	, maybeToAttr toAttrFrStr "security" (acknoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (acknoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (acknoVendor v)
	, maybeToAttr toAttrFrStr "role" (acknoRole v)
	]
instance XmlContent Ackno_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Ackno_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Ackno_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Ackno_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Ackno_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Ackno_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Ackno_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Ackno_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Ackno_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Ackno_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Ackno_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Ackno_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Ackno_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Ackno_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Ackno_Str a) = toText a
    toElem (Ackno_Link a) = toElem a
    toElem (Ackno_Olink a) = toElem a
    toElem (Ackno_Ulink a) = toElem a
    toElem (Ackno_Emphasis a) = toElem a
    toElem (Ackno_Trademark a) = toElem a
    toElem (Ackno_Replaceable a) = toElem a
    toElem (Ackno_Remark a) = toElem a
    toElem (Ackno_Subscript a) = toElem a
    toElem (Ackno_Superscript a) = toElem a
    toElem (Ackno_Inlinegraphic a) = toElem a
    toElem (Ackno_Inlinemediaobject a) = toElem a
    toElem (Ackno_Indexterm a) = toElem a
instance XmlAttrType Ackno_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Ackno_Revisionflag_Changed
	    translate "added" = Just Ackno_Revisionflag_Added
	    translate "deleted" = Just Ackno_Revisionflag_Deleted
	    translate "off" = Just Ackno_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Ackno_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Ackno_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Ackno_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Ackno_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Address where
    fromElem (CElem (Elem "address" as c0):rest) =
	(\(a,ca)->
	   (Just (Address (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Address as a) =
	[CElem (Elem "address" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Address_Attrs where
    fromAttrs as =
	Address_Attrs
	  { addressFormat = defaultA fromAttrToTyp Address_Format_Linespecific "format" as
	  , addressLinenumbering = possibleA fromAttrToTyp "linenumbering" as
	  , addressId = possibleA fromAttrToStr "id" as
	  , addressLang = possibleA fromAttrToStr "lang" as
	  , addressRemap = possibleA fromAttrToStr "remap" as
	  , addressXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , addressRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , addressArch = possibleA fromAttrToStr "arch" as
	  , addressCondition = possibleA fromAttrToStr "condition" as
	  , addressConformance = possibleA fromAttrToStr "conformance" as
	  , addressOs = possibleA fromAttrToStr "os" as
	  , addressRevision = possibleA fromAttrToStr "revision" as
	  , addressSecurity = possibleA fromAttrToStr "security" as
	  , addressUserlevel = possibleA fromAttrToStr "userlevel" as
	  , addressVendor = possibleA fromAttrToStr "vendor" as
	  , addressRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "format" (addressFormat v)
	, maybeToAttr toAttrFrTyp "linenumbering" (addressLinenumbering v)
	, maybeToAttr toAttrFrStr "id" (addressId v)
	, maybeToAttr toAttrFrStr "lang" (addressLang v)
	, maybeToAttr toAttrFrStr "remap" (addressRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (addressXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (addressRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (addressArch v)
	, maybeToAttr toAttrFrStr "condition" (addressCondition v)
	, maybeToAttr toAttrFrStr "conformance" (addressConformance v)
	, maybeToAttr toAttrFrStr "os" (addressOs v)
	, maybeToAttr toAttrFrStr "revision" (addressRevision v)
	, maybeToAttr toAttrFrStr "security" (addressSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (addressUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (addressVendor v)
	, maybeToAttr toAttrFrStr "role" (addressRole v)
	]
instance XmlContent Address_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Address_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Address_Personname a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Address_Honorific a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Address_Firstname a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Address_Surname a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Address_Lineage a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Address_Othername a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Address_Affiliation a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Address_Authorblurb a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Address_Contrib a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Address_Street a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Address_Pob a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Address_Postcode a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Address_City a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Address_State a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Address_Country a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Address_Phone a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Address_Fax a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Address_Email a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Address_Otheraddr a), rest)
																				(_,_) ->
																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Address_Str a) = toText a
    toElem (Address_Personname a) = toElem a
    toElem (Address_Honorific a) = toElem a
    toElem (Address_Firstname a) = toElem a
    toElem (Address_Surname a) = toElem a
    toElem (Address_Lineage a) = toElem a
    toElem (Address_Othername a) = toElem a
    toElem (Address_Affiliation a) = toElem a
    toElem (Address_Authorblurb a) = toElem a
    toElem (Address_Contrib a) = toElem a
    toElem (Address_Street a) = toElem a
    toElem (Address_Pob a) = toElem a
    toElem (Address_Postcode a) = toElem a
    toElem (Address_City a) = toElem a
    toElem (Address_State a) = toElem a
    toElem (Address_Country a) = toElem a
    toElem (Address_Phone a) = toElem a
    toElem (Address_Fax a) = toElem a
    toElem (Address_Email a) = toElem a
    toElem (Address_Otheraddr a) = toElem a
instance XmlAttrType Address_Format where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "linespecific" = Just Address_Format_Linespecific
	    translate _ = Nothing
    toAttrFrTyp n Address_Format_Linespecific = Just (n, str2attr "linespecific")
instance XmlAttrType Address_Linenumbering where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "numbered" = Just Address_Linenumbering_Numbered
	    translate "unnumbered" = Just Address_Linenumbering_Unnumbered
	    translate _ = Nothing
    toAttrFrTyp n Address_Linenumbering_Numbered = Just (n, str2attr "numbered")
    toAttrFrTyp n Address_Linenumbering_Unnumbered = Just (n, str2attr "unnumbered")
instance XmlAttrType Address_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Address_Revisionflag_Changed
	    translate "added" = Just Address_Revisionflag_Added
	    translate "deleted" = Just Address_Revisionflag_Deleted
	    translate "off" = Just Address_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Address_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Address_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Address_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Address_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Street where
    fromElem (CElem (Elem "street" as c0):rest) =
	(\(a,ca)->
	   (Just (Street (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Street as a) =
	[CElem (Elem "street" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Street_Attrs where
    fromAttrs as =
	Street_Attrs
	  { streetId = possibleA fromAttrToStr "id" as
	  , streetLang = possibleA fromAttrToStr "lang" as
	  , streetRemap = possibleA fromAttrToStr "remap" as
	  , streetXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , streetRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , streetArch = possibleA fromAttrToStr "arch" as
	  , streetCondition = possibleA fromAttrToStr "condition" as
	  , streetConformance = possibleA fromAttrToStr "conformance" as
	  , streetOs = possibleA fromAttrToStr "os" as
	  , streetRevision = possibleA fromAttrToStr "revision" as
	  , streetSecurity = possibleA fromAttrToStr "security" as
	  , streetUserlevel = possibleA fromAttrToStr "userlevel" as
	  , streetVendor = possibleA fromAttrToStr "vendor" as
	  , streetRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (streetId v)
	, maybeToAttr toAttrFrStr "lang" (streetLang v)
	, maybeToAttr toAttrFrStr "remap" (streetRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (streetXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (streetRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (streetArch v)
	, maybeToAttr toAttrFrStr "condition" (streetCondition v)
	, maybeToAttr toAttrFrStr "conformance" (streetConformance v)
	, maybeToAttr toAttrFrStr "os" (streetOs v)
	, maybeToAttr toAttrFrStr "revision" (streetRevision v)
	, maybeToAttr toAttrFrStr "security" (streetSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (streetUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (streetVendor v)
	, maybeToAttr toAttrFrStr "role" (streetRole v)
	]
instance XmlContent Street_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Street_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Street_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Street_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Street_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Street_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Street_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Street_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Street_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Street_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Street_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Street_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Street_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Street_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Street_Str a) = toText a
    toElem (Street_Link a) = toElem a
    toElem (Street_Olink a) = toElem a
    toElem (Street_Ulink a) = toElem a
    toElem (Street_Emphasis a) = toElem a
    toElem (Street_Trademark a) = toElem a
    toElem (Street_Replaceable a) = toElem a
    toElem (Street_Remark a) = toElem a
    toElem (Street_Subscript a) = toElem a
    toElem (Street_Superscript a) = toElem a
    toElem (Street_Inlinegraphic a) = toElem a
    toElem (Street_Inlinemediaobject a) = toElem a
    toElem (Street_Indexterm a) = toElem a
instance XmlAttrType Street_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Street_Revisionflag_Changed
	    translate "added" = Just Street_Revisionflag_Added
	    translate "deleted" = Just Street_Revisionflag_Deleted
	    translate "off" = Just Street_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Street_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Street_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Street_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Street_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Pob where
    fromElem (CElem (Elem "pob" as c0):rest) =
	(\(a,ca)->
	   (Just (Pob (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Pob as a) =
	[CElem (Elem "pob" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Pob_Attrs where
    fromAttrs as =
	Pob_Attrs
	  { pobId = possibleA fromAttrToStr "id" as
	  , pobLang = possibleA fromAttrToStr "lang" as
	  , pobRemap = possibleA fromAttrToStr "remap" as
	  , pobXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , pobRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , pobArch = possibleA fromAttrToStr "arch" as
	  , pobCondition = possibleA fromAttrToStr "condition" as
	  , pobConformance = possibleA fromAttrToStr "conformance" as
	  , pobOs = possibleA fromAttrToStr "os" as
	  , pobRevision = possibleA fromAttrToStr "revision" as
	  , pobSecurity = possibleA fromAttrToStr "security" as
	  , pobUserlevel = possibleA fromAttrToStr "userlevel" as
	  , pobVendor = possibleA fromAttrToStr "vendor" as
	  , pobRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (pobId v)
	, maybeToAttr toAttrFrStr "lang" (pobLang v)
	, maybeToAttr toAttrFrStr "remap" (pobRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (pobXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (pobRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (pobArch v)
	, maybeToAttr toAttrFrStr "condition" (pobCondition v)
	, maybeToAttr toAttrFrStr "conformance" (pobConformance v)
	, maybeToAttr toAttrFrStr "os" (pobOs v)
	, maybeToAttr toAttrFrStr "revision" (pobRevision v)
	, maybeToAttr toAttrFrStr "security" (pobSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (pobUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (pobVendor v)
	, maybeToAttr toAttrFrStr "role" (pobRole v)
	]
instance XmlContent Pob_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Pob_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Pob_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Pob_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Pob_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Pob_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Pob_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Pob_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Pob_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Pob_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Pob_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Pob_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Pob_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Pob_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Pob_Str a) = toText a
    toElem (Pob_Link a) = toElem a
    toElem (Pob_Olink a) = toElem a
    toElem (Pob_Ulink a) = toElem a
    toElem (Pob_Emphasis a) = toElem a
    toElem (Pob_Trademark a) = toElem a
    toElem (Pob_Replaceable a) = toElem a
    toElem (Pob_Remark a) = toElem a
    toElem (Pob_Subscript a) = toElem a
    toElem (Pob_Superscript a) = toElem a
    toElem (Pob_Inlinegraphic a) = toElem a
    toElem (Pob_Inlinemediaobject a) = toElem a
    toElem (Pob_Indexterm a) = toElem a
instance XmlAttrType Pob_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Pob_Revisionflag_Changed
	    translate "added" = Just Pob_Revisionflag_Added
	    translate "deleted" = Just Pob_Revisionflag_Deleted
	    translate "off" = Just Pob_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Pob_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Pob_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Pob_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Pob_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Postcode where
    fromElem (CElem (Elem "postcode" as c0):rest) =
	(\(a,ca)->
	   (Just (Postcode (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Postcode as a) =
	[CElem (Elem "postcode" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Postcode_Attrs where
    fromAttrs as =
	Postcode_Attrs
	  { postcodeId = possibleA fromAttrToStr "id" as
	  , postcodeLang = possibleA fromAttrToStr "lang" as
	  , postcodeRemap = possibleA fromAttrToStr "remap" as
	  , postcodeXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , postcodeRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , postcodeArch = possibleA fromAttrToStr "arch" as
	  , postcodeCondition = possibleA fromAttrToStr "condition" as
	  , postcodeConformance = possibleA fromAttrToStr "conformance" as
	  , postcodeOs = possibleA fromAttrToStr "os" as
	  , postcodeRevision = possibleA fromAttrToStr "revision" as
	  , postcodeSecurity = possibleA fromAttrToStr "security" as
	  , postcodeUserlevel = possibleA fromAttrToStr "userlevel" as
	  , postcodeVendor = possibleA fromAttrToStr "vendor" as
	  , postcodeRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (postcodeId v)
	, maybeToAttr toAttrFrStr "lang" (postcodeLang v)
	, maybeToAttr toAttrFrStr "remap" (postcodeRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (postcodeXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (postcodeRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (postcodeArch v)
	, maybeToAttr toAttrFrStr "condition" (postcodeCondition v)
	, maybeToAttr toAttrFrStr "conformance" (postcodeConformance v)
	, maybeToAttr toAttrFrStr "os" (postcodeOs v)
	, maybeToAttr toAttrFrStr "revision" (postcodeRevision v)
	, maybeToAttr toAttrFrStr "security" (postcodeSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (postcodeUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (postcodeVendor v)
	, maybeToAttr toAttrFrStr "role" (postcodeRole v)
	]
instance XmlContent Postcode_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Postcode_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Postcode_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Postcode_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Postcode_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Postcode_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Postcode_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Postcode_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Postcode_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Postcode_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Postcode_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Postcode_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Postcode_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Postcode_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Postcode_Str a) = toText a
    toElem (Postcode_Link a) = toElem a
    toElem (Postcode_Olink a) = toElem a
    toElem (Postcode_Ulink a) = toElem a
    toElem (Postcode_Emphasis a) = toElem a
    toElem (Postcode_Trademark a) = toElem a
    toElem (Postcode_Replaceable a) = toElem a
    toElem (Postcode_Remark a) = toElem a
    toElem (Postcode_Subscript a) = toElem a
    toElem (Postcode_Superscript a) = toElem a
    toElem (Postcode_Inlinegraphic a) = toElem a
    toElem (Postcode_Inlinemediaobject a) = toElem a
    toElem (Postcode_Indexterm a) = toElem a
instance XmlAttrType Postcode_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Postcode_Revisionflag_Changed
	    translate "added" = Just Postcode_Revisionflag_Added
	    translate "deleted" = Just Postcode_Revisionflag_Deleted
	    translate "off" = Just Postcode_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Postcode_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Postcode_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Postcode_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Postcode_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent City where
    fromElem (CElem (Elem "city" as c0):rest) =
	(\(a,ca)->
	   (Just (City (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (City as a) =
	[CElem (Elem "city" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes City_Attrs where
    fromAttrs as =
	City_Attrs
	  { cityId = possibleA fromAttrToStr "id" as
	  , cityLang = possibleA fromAttrToStr "lang" as
	  , cityRemap = possibleA fromAttrToStr "remap" as
	  , cityXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , cityRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , cityArch = possibleA fromAttrToStr "arch" as
	  , cityCondition = possibleA fromAttrToStr "condition" as
	  , cityConformance = possibleA fromAttrToStr "conformance" as
	  , cityOs = possibleA fromAttrToStr "os" as
	  , cityRevision = possibleA fromAttrToStr "revision" as
	  , citySecurity = possibleA fromAttrToStr "security" as
	  , cityUserlevel = possibleA fromAttrToStr "userlevel" as
	  , cityVendor = possibleA fromAttrToStr "vendor" as
	  , cityRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (cityId v)
	, maybeToAttr toAttrFrStr "lang" (cityLang v)
	, maybeToAttr toAttrFrStr "remap" (cityRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (cityXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (cityRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (cityArch v)
	, maybeToAttr toAttrFrStr "condition" (cityCondition v)
	, maybeToAttr toAttrFrStr "conformance" (cityConformance v)
	, maybeToAttr toAttrFrStr "os" (cityOs v)
	, maybeToAttr toAttrFrStr "revision" (cityRevision v)
	, maybeToAttr toAttrFrStr "security" (citySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (cityUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (cityVendor v)
	, maybeToAttr toAttrFrStr "role" (cityRole v)
	]
instance XmlContent City_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (City_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (City_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (City_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (City_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (City_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (City_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (City_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (City_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (City_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (City_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (City_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (City_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (City_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (City_Str a) = toText a
    toElem (City_Link a) = toElem a
    toElem (City_Olink a) = toElem a
    toElem (City_Ulink a) = toElem a
    toElem (City_Emphasis a) = toElem a
    toElem (City_Trademark a) = toElem a
    toElem (City_Replaceable a) = toElem a
    toElem (City_Remark a) = toElem a
    toElem (City_Subscript a) = toElem a
    toElem (City_Superscript a) = toElem a
    toElem (City_Inlinegraphic a) = toElem a
    toElem (City_Inlinemediaobject a) = toElem a
    toElem (City_Indexterm a) = toElem a
instance XmlAttrType City_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just City_Revisionflag_Changed
	    translate "added" = Just City_Revisionflag_Added
	    translate "deleted" = Just City_Revisionflag_Deleted
	    translate "off" = Just City_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n City_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n City_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n City_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n City_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent State where
    fromElem (CElem (Elem "state" as c0):rest) =
	(\(a,ca)->
	   (Just (State (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (State as a) =
	[CElem (Elem "state" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes State_Attrs where
    fromAttrs as =
	State_Attrs
	  { stateId = possibleA fromAttrToStr "id" as
	  , stateLang = possibleA fromAttrToStr "lang" as
	  , stateRemap = possibleA fromAttrToStr "remap" as
	  , stateXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , stateRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , stateArch = possibleA fromAttrToStr "arch" as
	  , stateCondition = possibleA fromAttrToStr "condition" as
	  , stateConformance = possibleA fromAttrToStr "conformance" as
	  , stateOs = possibleA fromAttrToStr "os" as
	  , stateRevision = possibleA fromAttrToStr "revision" as
	  , stateSecurity = possibleA fromAttrToStr "security" as
	  , stateUserlevel = possibleA fromAttrToStr "userlevel" as
	  , stateVendor = possibleA fromAttrToStr "vendor" as
	  , stateRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (stateId v)
	, maybeToAttr toAttrFrStr "lang" (stateLang v)
	, maybeToAttr toAttrFrStr "remap" (stateRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (stateXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (stateRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (stateArch v)
	, maybeToAttr toAttrFrStr "condition" (stateCondition v)
	, maybeToAttr toAttrFrStr "conformance" (stateConformance v)
	, maybeToAttr toAttrFrStr "os" (stateOs v)
	, maybeToAttr toAttrFrStr "revision" (stateRevision v)
	, maybeToAttr toAttrFrStr "security" (stateSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (stateUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (stateVendor v)
	, maybeToAttr toAttrFrStr "role" (stateRole v)
	]
instance XmlContent State_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (State_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (State_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (State_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (State_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (State_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (State_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (State_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (State_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (State_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (State_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (State_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (State_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (State_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (State_Str a) = toText a
    toElem (State_Link a) = toElem a
    toElem (State_Olink a) = toElem a
    toElem (State_Ulink a) = toElem a
    toElem (State_Emphasis a) = toElem a
    toElem (State_Trademark a) = toElem a
    toElem (State_Replaceable a) = toElem a
    toElem (State_Remark a) = toElem a
    toElem (State_Subscript a) = toElem a
    toElem (State_Superscript a) = toElem a
    toElem (State_Inlinegraphic a) = toElem a
    toElem (State_Inlinemediaobject a) = toElem a
    toElem (State_Indexterm a) = toElem a
instance XmlAttrType State_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just State_Revisionflag_Changed
	    translate "added" = Just State_Revisionflag_Added
	    translate "deleted" = Just State_Revisionflag_Deleted
	    translate "off" = Just State_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n State_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n State_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n State_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n State_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Country where
    fromElem (CElem (Elem "country" as c0):rest) =
	(\(a,ca)->
	   (Just (Country (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Country as a) =
	[CElem (Elem "country" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Country_Attrs where
    fromAttrs as =
	Country_Attrs
	  { countryId = possibleA fromAttrToStr "id" as
	  , countryLang = possibleA fromAttrToStr "lang" as
	  , countryRemap = possibleA fromAttrToStr "remap" as
	  , countryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , countryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , countryArch = possibleA fromAttrToStr "arch" as
	  , countryCondition = possibleA fromAttrToStr "condition" as
	  , countryConformance = possibleA fromAttrToStr "conformance" as
	  , countryOs = possibleA fromAttrToStr "os" as
	  , countryRevision = possibleA fromAttrToStr "revision" as
	  , countrySecurity = possibleA fromAttrToStr "security" as
	  , countryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , countryVendor = possibleA fromAttrToStr "vendor" as
	  , countryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (countryId v)
	, maybeToAttr toAttrFrStr "lang" (countryLang v)
	, maybeToAttr toAttrFrStr "remap" (countryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (countryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (countryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (countryArch v)
	, maybeToAttr toAttrFrStr "condition" (countryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (countryConformance v)
	, maybeToAttr toAttrFrStr "os" (countryOs v)
	, maybeToAttr toAttrFrStr "revision" (countryRevision v)
	, maybeToAttr toAttrFrStr "security" (countrySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (countryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (countryVendor v)
	, maybeToAttr toAttrFrStr "role" (countryRole v)
	]
instance XmlContent Country_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Country_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Country_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Country_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Country_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Country_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Country_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Country_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Country_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Country_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Country_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Country_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Country_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Country_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Country_Str a) = toText a
    toElem (Country_Link a) = toElem a
    toElem (Country_Olink a) = toElem a
    toElem (Country_Ulink a) = toElem a
    toElem (Country_Emphasis a) = toElem a
    toElem (Country_Trademark a) = toElem a
    toElem (Country_Replaceable a) = toElem a
    toElem (Country_Remark a) = toElem a
    toElem (Country_Subscript a) = toElem a
    toElem (Country_Superscript a) = toElem a
    toElem (Country_Inlinegraphic a) = toElem a
    toElem (Country_Inlinemediaobject a) = toElem a
    toElem (Country_Indexterm a) = toElem a
instance XmlAttrType Country_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Country_Revisionflag_Changed
	    translate "added" = Just Country_Revisionflag_Added
	    translate "deleted" = Just Country_Revisionflag_Deleted
	    translate "off" = Just Country_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Country_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Country_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Country_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Country_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Phone where
    fromElem (CElem (Elem "phone" as c0):rest) =
	(\(a,ca)->
	   (Just (Phone (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Phone as a) =
	[CElem (Elem "phone" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Phone_Attrs where
    fromAttrs as =
	Phone_Attrs
	  { phoneId = possibleA fromAttrToStr "id" as
	  , phoneLang = possibleA fromAttrToStr "lang" as
	  , phoneRemap = possibleA fromAttrToStr "remap" as
	  , phoneXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , phoneRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , phoneArch = possibleA fromAttrToStr "arch" as
	  , phoneCondition = possibleA fromAttrToStr "condition" as
	  , phoneConformance = possibleA fromAttrToStr "conformance" as
	  , phoneOs = possibleA fromAttrToStr "os" as
	  , phoneRevision = possibleA fromAttrToStr "revision" as
	  , phoneSecurity = possibleA fromAttrToStr "security" as
	  , phoneUserlevel = possibleA fromAttrToStr "userlevel" as
	  , phoneVendor = possibleA fromAttrToStr "vendor" as
	  , phoneRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (phoneId v)
	, maybeToAttr toAttrFrStr "lang" (phoneLang v)
	, maybeToAttr toAttrFrStr "remap" (phoneRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (phoneXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (phoneRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (phoneArch v)
	, maybeToAttr toAttrFrStr "condition" (phoneCondition v)
	, maybeToAttr toAttrFrStr "conformance" (phoneConformance v)
	, maybeToAttr toAttrFrStr "os" (phoneOs v)
	, maybeToAttr toAttrFrStr "revision" (phoneRevision v)
	, maybeToAttr toAttrFrStr "security" (phoneSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (phoneUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (phoneVendor v)
	, maybeToAttr toAttrFrStr "role" (phoneRole v)
	]
instance XmlContent Phone_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Phone_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Phone_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Phone_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Phone_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Phone_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Phone_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Phone_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Phone_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Phone_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Phone_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Phone_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Phone_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Phone_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Phone_Str a) = toText a
    toElem (Phone_Link a) = toElem a
    toElem (Phone_Olink a) = toElem a
    toElem (Phone_Ulink a) = toElem a
    toElem (Phone_Emphasis a) = toElem a
    toElem (Phone_Trademark a) = toElem a
    toElem (Phone_Replaceable a) = toElem a
    toElem (Phone_Remark a) = toElem a
    toElem (Phone_Subscript a) = toElem a
    toElem (Phone_Superscript a) = toElem a
    toElem (Phone_Inlinegraphic a) = toElem a
    toElem (Phone_Inlinemediaobject a) = toElem a
    toElem (Phone_Indexterm a) = toElem a
instance XmlAttrType Phone_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Phone_Revisionflag_Changed
	    translate "added" = Just Phone_Revisionflag_Added
	    translate "deleted" = Just Phone_Revisionflag_Deleted
	    translate "off" = Just Phone_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Phone_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Phone_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Phone_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Phone_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Fax where
    fromElem (CElem (Elem "fax" as c0):rest) =
	(\(a,ca)->
	   (Just (Fax (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Fax as a) =
	[CElem (Elem "fax" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Fax_Attrs where
    fromAttrs as =
	Fax_Attrs
	  { faxId = possibleA fromAttrToStr "id" as
	  , faxLang = possibleA fromAttrToStr "lang" as
	  , faxRemap = possibleA fromAttrToStr "remap" as
	  , faxXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , faxRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , faxArch = possibleA fromAttrToStr "arch" as
	  , faxCondition = possibleA fromAttrToStr "condition" as
	  , faxConformance = possibleA fromAttrToStr "conformance" as
	  , faxOs = possibleA fromAttrToStr "os" as
	  , faxRevision = possibleA fromAttrToStr "revision" as
	  , faxSecurity = possibleA fromAttrToStr "security" as
	  , faxUserlevel = possibleA fromAttrToStr "userlevel" as
	  , faxVendor = possibleA fromAttrToStr "vendor" as
	  , faxRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (faxId v)
	, maybeToAttr toAttrFrStr "lang" (faxLang v)
	, maybeToAttr toAttrFrStr "remap" (faxRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (faxXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (faxRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (faxArch v)
	, maybeToAttr toAttrFrStr "condition" (faxCondition v)
	, maybeToAttr toAttrFrStr "conformance" (faxConformance v)
	, maybeToAttr toAttrFrStr "os" (faxOs v)
	, maybeToAttr toAttrFrStr "revision" (faxRevision v)
	, maybeToAttr toAttrFrStr "security" (faxSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (faxUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (faxVendor v)
	, maybeToAttr toAttrFrStr "role" (faxRole v)
	]
instance XmlContent Fax_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Fax_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Fax_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Fax_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Fax_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Fax_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Fax_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Fax_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Fax_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Fax_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Fax_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Fax_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Fax_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Fax_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Fax_Str a) = toText a
    toElem (Fax_Link a) = toElem a
    toElem (Fax_Olink a) = toElem a
    toElem (Fax_Ulink a) = toElem a
    toElem (Fax_Emphasis a) = toElem a
    toElem (Fax_Trademark a) = toElem a
    toElem (Fax_Replaceable a) = toElem a
    toElem (Fax_Remark a) = toElem a
    toElem (Fax_Subscript a) = toElem a
    toElem (Fax_Superscript a) = toElem a
    toElem (Fax_Inlinegraphic a) = toElem a
    toElem (Fax_Inlinemediaobject a) = toElem a
    toElem (Fax_Indexterm a) = toElem a
instance XmlAttrType Fax_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Fax_Revisionflag_Changed
	    translate "added" = Just Fax_Revisionflag_Added
	    translate "deleted" = Just Fax_Revisionflag_Deleted
	    translate "off" = Just Fax_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Fax_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Fax_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Fax_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Fax_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Otheraddr where
    fromElem (CElem (Elem "otheraddr" as c0):rest) =
	(\(a,ca)->
	   (Just (Otheraddr (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Otheraddr as a) =
	[CElem (Elem "otheraddr" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Otheraddr_Attrs where
    fromAttrs as =
	Otheraddr_Attrs
	  { otheraddrId = possibleA fromAttrToStr "id" as
	  , otheraddrLang = possibleA fromAttrToStr "lang" as
	  , otheraddrRemap = possibleA fromAttrToStr "remap" as
	  , otheraddrXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , otheraddrRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , otheraddrArch = possibleA fromAttrToStr "arch" as
	  , otheraddrCondition = possibleA fromAttrToStr "condition" as
	  , otheraddrConformance = possibleA fromAttrToStr "conformance" as
	  , otheraddrOs = possibleA fromAttrToStr "os" as
	  , otheraddrRevision = possibleA fromAttrToStr "revision" as
	  , otheraddrSecurity = possibleA fromAttrToStr "security" as
	  , otheraddrUserlevel = possibleA fromAttrToStr "userlevel" as
	  , otheraddrVendor = possibleA fromAttrToStr "vendor" as
	  , otheraddrRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (otheraddrId v)
	, maybeToAttr toAttrFrStr "lang" (otheraddrLang v)
	, maybeToAttr toAttrFrStr "remap" (otheraddrRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (otheraddrXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (otheraddrRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (otheraddrArch v)
	, maybeToAttr toAttrFrStr "condition" (otheraddrCondition v)
	, maybeToAttr toAttrFrStr "conformance" (otheraddrConformance v)
	, maybeToAttr toAttrFrStr "os" (otheraddrOs v)
	, maybeToAttr toAttrFrStr "revision" (otheraddrRevision v)
	, maybeToAttr toAttrFrStr "security" (otheraddrSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (otheraddrUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (otheraddrVendor v)
	, maybeToAttr toAttrFrStr "role" (otheraddrRole v)
	]
instance XmlContent Otheraddr_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Otheraddr_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Otheraddr_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Otheraddr_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Otheraddr_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Otheraddr_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Otheraddr_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Otheraddr_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Otheraddr_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Otheraddr_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Otheraddr_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Otheraddr_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Otheraddr_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Otheraddr_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Otheraddr_Str a) = toText a
    toElem (Otheraddr_Link a) = toElem a
    toElem (Otheraddr_Olink a) = toElem a
    toElem (Otheraddr_Ulink a) = toElem a
    toElem (Otheraddr_Emphasis a) = toElem a
    toElem (Otheraddr_Trademark a) = toElem a
    toElem (Otheraddr_Replaceable a) = toElem a
    toElem (Otheraddr_Remark a) = toElem a
    toElem (Otheraddr_Subscript a) = toElem a
    toElem (Otheraddr_Superscript a) = toElem a
    toElem (Otheraddr_Inlinegraphic a) = toElem a
    toElem (Otheraddr_Inlinemediaobject a) = toElem a
    toElem (Otheraddr_Indexterm a) = toElem a
instance XmlAttrType Otheraddr_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Otheraddr_Revisionflag_Changed
	    translate "added" = Just Otheraddr_Revisionflag_Added
	    translate "deleted" = Just Otheraddr_Revisionflag_Deleted
	    translate "off" = Just Otheraddr_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Otheraddr_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Otheraddr_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Otheraddr_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Otheraddr_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Affiliation where
    fromElem (CElem (Elem "affiliation" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (Just (Affiliation (fromAttrs as) a b c d e), rest))
		    (many fromElem cd))
		 (many fromElem cc))
	      (fromElem cb))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Affiliation as a b c d e) =
	[CElem (Elem "affiliation" (toAttrs as) (maybe [] toElem a ++
						 concatMap toElem b ++ maybe [] toElem c ++
						 concatMap toElem d ++ concatMap toElem e))]
instance XmlAttributes Affiliation_Attrs where
    fromAttrs as =
	Affiliation_Attrs
	  { affiliationId = possibleA fromAttrToStr "id" as
	  , affiliationLang = possibleA fromAttrToStr "lang" as
	  , affiliationRemap = possibleA fromAttrToStr "remap" as
	  , affiliationXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , affiliationRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , affiliationArch = possibleA fromAttrToStr "arch" as
	  , affiliationCondition = possibleA fromAttrToStr "condition" as
	  , affiliationConformance = possibleA fromAttrToStr "conformance" as
	  , affiliationOs = possibleA fromAttrToStr "os" as
	  , affiliationRevision = possibleA fromAttrToStr "revision" as
	  , affiliationSecurity = possibleA fromAttrToStr "security" as
	  , affiliationUserlevel = possibleA fromAttrToStr "userlevel" as
	  , affiliationVendor = possibleA fromAttrToStr "vendor" as
	  , affiliationRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (affiliationId v)
	, maybeToAttr toAttrFrStr "lang" (affiliationLang v)
	, maybeToAttr toAttrFrStr "remap" (affiliationRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (affiliationXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (affiliationRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (affiliationArch v)
	, maybeToAttr toAttrFrStr "condition" (affiliationCondition v)
	, maybeToAttr toAttrFrStr "conformance" (affiliationConformance v)
	, maybeToAttr toAttrFrStr "os" (affiliationOs v)
	, maybeToAttr toAttrFrStr "revision" (affiliationRevision v)
	, maybeToAttr toAttrFrStr "security" (affiliationSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (affiliationUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (affiliationVendor v)
	, maybeToAttr toAttrFrStr "role" (affiliationRole v)
	]
instance XmlAttrType Affiliation_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Affiliation_Revisionflag_Changed
	    translate "added" = Just Affiliation_Revisionflag_Added
	    translate "deleted" = Just Affiliation_Revisionflag_Deleted
	    translate "off" = Just Affiliation_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Affiliation_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Affiliation_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Affiliation_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Affiliation_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Shortaffil where
    fromElem (CElem (Elem "shortaffil" as c0):rest) =
	(\(a,ca)->
	   (Just (Shortaffil (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Shortaffil as a) =
	[CElem (Elem "shortaffil" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Shortaffil_Attrs where
    fromAttrs as =
	Shortaffil_Attrs
	  { shortaffilId = possibleA fromAttrToStr "id" as
	  , shortaffilLang = possibleA fromAttrToStr "lang" as
	  , shortaffilRemap = possibleA fromAttrToStr "remap" as
	  , shortaffilXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , shortaffilRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , shortaffilArch = possibleA fromAttrToStr "arch" as
	  , shortaffilCondition = possibleA fromAttrToStr "condition" as
	  , shortaffilConformance = possibleA fromAttrToStr "conformance" as
	  , shortaffilOs = possibleA fromAttrToStr "os" as
	  , shortaffilRevision = possibleA fromAttrToStr "revision" as
	  , shortaffilSecurity = possibleA fromAttrToStr "security" as
	  , shortaffilUserlevel = possibleA fromAttrToStr "userlevel" as
	  , shortaffilVendor = possibleA fromAttrToStr "vendor" as
	  , shortaffilRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (shortaffilId v)
	, maybeToAttr toAttrFrStr "lang" (shortaffilLang v)
	, maybeToAttr toAttrFrStr "remap" (shortaffilRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (shortaffilXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (shortaffilRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (shortaffilArch v)
	, maybeToAttr toAttrFrStr "condition" (shortaffilCondition v)
	, maybeToAttr toAttrFrStr "conformance" (shortaffilConformance v)
	, maybeToAttr toAttrFrStr "os" (shortaffilOs v)
	, maybeToAttr toAttrFrStr "revision" (shortaffilRevision v)
	, maybeToAttr toAttrFrStr "security" (shortaffilSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (shortaffilUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (shortaffilVendor v)
	, maybeToAttr toAttrFrStr "role" (shortaffilRole v)
	]
instance XmlContent Shortaffil_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Shortaffil_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Shortaffil_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Shortaffil_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Shortaffil_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Shortaffil_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Shortaffil_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Shortaffil_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Shortaffil_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Shortaffil_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Shortaffil_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Shortaffil_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Shortaffil_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Shortaffil_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Shortaffil_Str a) = toText a
    toElem (Shortaffil_Link a) = toElem a
    toElem (Shortaffil_Olink a) = toElem a
    toElem (Shortaffil_Ulink a) = toElem a
    toElem (Shortaffil_Emphasis a) = toElem a
    toElem (Shortaffil_Trademark a) = toElem a
    toElem (Shortaffil_Replaceable a) = toElem a
    toElem (Shortaffil_Remark a) = toElem a
    toElem (Shortaffil_Subscript a) = toElem a
    toElem (Shortaffil_Superscript a) = toElem a
    toElem (Shortaffil_Inlinegraphic a) = toElem a
    toElem (Shortaffil_Inlinemediaobject a) = toElem a
    toElem (Shortaffil_Indexterm a) = toElem a
instance XmlAttrType Shortaffil_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Shortaffil_Revisionflag_Changed
	    translate "added" = Just Shortaffil_Revisionflag_Added
	    translate "deleted" = Just Shortaffil_Revisionflag_Deleted
	    translate "off" = Just Shortaffil_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Shortaffil_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Shortaffil_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Shortaffil_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Shortaffil_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Jobtitle where
    fromElem (CElem (Elem "jobtitle" as c0):rest) =
	(\(a,ca)->
	   (Just (Jobtitle (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Jobtitle as a) =
	[CElem (Elem "jobtitle" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Jobtitle_Attrs where
    fromAttrs as =
	Jobtitle_Attrs
	  { jobtitleId = possibleA fromAttrToStr "id" as
	  , jobtitleLang = possibleA fromAttrToStr "lang" as
	  , jobtitleRemap = possibleA fromAttrToStr "remap" as
	  , jobtitleXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , jobtitleRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , jobtitleArch = possibleA fromAttrToStr "arch" as
	  , jobtitleCondition = possibleA fromAttrToStr "condition" as
	  , jobtitleConformance = possibleA fromAttrToStr "conformance" as
	  , jobtitleOs = possibleA fromAttrToStr "os" as
	  , jobtitleRevision = possibleA fromAttrToStr "revision" as
	  , jobtitleSecurity = possibleA fromAttrToStr "security" as
	  , jobtitleUserlevel = possibleA fromAttrToStr "userlevel" as
	  , jobtitleVendor = possibleA fromAttrToStr "vendor" as
	  , jobtitleRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (jobtitleId v)
	, maybeToAttr toAttrFrStr "lang" (jobtitleLang v)
	, maybeToAttr toAttrFrStr "remap" (jobtitleRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (jobtitleXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (jobtitleRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (jobtitleArch v)
	, maybeToAttr toAttrFrStr "condition" (jobtitleCondition v)
	, maybeToAttr toAttrFrStr "conformance" (jobtitleConformance v)
	, maybeToAttr toAttrFrStr "os" (jobtitleOs v)
	, maybeToAttr toAttrFrStr "revision" (jobtitleRevision v)
	, maybeToAttr toAttrFrStr "security" (jobtitleSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (jobtitleUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (jobtitleVendor v)
	, maybeToAttr toAttrFrStr "role" (jobtitleRole v)
	]
instance XmlContent Jobtitle_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Jobtitle_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Jobtitle_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Jobtitle_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Jobtitle_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Jobtitle_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Jobtitle_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Jobtitle_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Jobtitle_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Jobtitle_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Jobtitle_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Jobtitle_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Jobtitle_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Jobtitle_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Jobtitle_Str a) = toText a
    toElem (Jobtitle_Link a) = toElem a
    toElem (Jobtitle_Olink a) = toElem a
    toElem (Jobtitle_Ulink a) = toElem a
    toElem (Jobtitle_Emphasis a) = toElem a
    toElem (Jobtitle_Trademark a) = toElem a
    toElem (Jobtitle_Replaceable a) = toElem a
    toElem (Jobtitle_Remark a) = toElem a
    toElem (Jobtitle_Subscript a) = toElem a
    toElem (Jobtitle_Superscript a) = toElem a
    toElem (Jobtitle_Inlinegraphic a) = toElem a
    toElem (Jobtitle_Inlinemediaobject a) = toElem a
    toElem (Jobtitle_Indexterm a) = toElem a
instance XmlAttrType Jobtitle_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Jobtitle_Revisionflag_Changed
	    translate "added" = Just Jobtitle_Revisionflag_Added
	    translate "deleted" = Just Jobtitle_Revisionflag_Deleted
	    translate "off" = Just Jobtitle_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Jobtitle_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Jobtitle_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Jobtitle_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Jobtitle_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Orgdiv where
    fromElem (CElem (Elem "orgdiv" as c0):rest) =
	(\(a,ca)->
	   (Just (Orgdiv (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Orgdiv as a) =
	[CElem (Elem "orgdiv" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Orgdiv_Attrs where
    fromAttrs as =
	Orgdiv_Attrs
	  { orgdivId = possibleA fromAttrToStr "id" as
	  , orgdivLang = possibleA fromAttrToStr "lang" as
	  , orgdivRemap = possibleA fromAttrToStr "remap" as
	  , orgdivXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , orgdivRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , orgdivArch = possibleA fromAttrToStr "arch" as
	  , orgdivCondition = possibleA fromAttrToStr "condition" as
	  , orgdivConformance = possibleA fromAttrToStr "conformance" as
	  , orgdivOs = possibleA fromAttrToStr "os" as
	  , orgdivRevision = possibleA fromAttrToStr "revision" as
	  , orgdivSecurity = possibleA fromAttrToStr "security" as
	  , orgdivUserlevel = possibleA fromAttrToStr "userlevel" as
	  , orgdivVendor = possibleA fromAttrToStr "vendor" as
	  , orgdivRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (orgdivId v)
	, maybeToAttr toAttrFrStr "lang" (orgdivLang v)
	, maybeToAttr toAttrFrStr "remap" (orgdivRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (orgdivXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (orgdivRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (orgdivArch v)
	, maybeToAttr toAttrFrStr "condition" (orgdivCondition v)
	, maybeToAttr toAttrFrStr "conformance" (orgdivConformance v)
	, maybeToAttr toAttrFrStr "os" (orgdivOs v)
	, maybeToAttr toAttrFrStr "revision" (orgdivRevision v)
	, maybeToAttr toAttrFrStr "security" (orgdivSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (orgdivUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (orgdivVendor v)
	, maybeToAttr toAttrFrStr "role" (orgdivRole v)
	]
instance XmlContent Orgdiv_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Orgdiv_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Orgdiv_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Orgdiv_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Orgdiv_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Orgdiv_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Orgdiv_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Orgdiv_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Orgdiv_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Orgdiv_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Orgdiv_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Orgdiv_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Orgdiv_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Orgdiv_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Orgdiv_Str a) = toText a
    toElem (Orgdiv_Link a) = toElem a
    toElem (Orgdiv_Olink a) = toElem a
    toElem (Orgdiv_Ulink a) = toElem a
    toElem (Orgdiv_Emphasis a) = toElem a
    toElem (Orgdiv_Trademark a) = toElem a
    toElem (Orgdiv_Replaceable a) = toElem a
    toElem (Orgdiv_Remark a) = toElem a
    toElem (Orgdiv_Subscript a) = toElem a
    toElem (Orgdiv_Superscript a) = toElem a
    toElem (Orgdiv_Inlinegraphic a) = toElem a
    toElem (Orgdiv_Inlinemediaobject a) = toElem a
    toElem (Orgdiv_Indexterm a) = toElem a
instance XmlAttrType Orgdiv_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Orgdiv_Revisionflag_Changed
	    translate "added" = Just Orgdiv_Revisionflag_Added
	    translate "deleted" = Just Orgdiv_Revisionflag_Deleted
	    translate "off" = Just Orgdiv_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Orgdiv_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Orgdiv_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Orgdiv_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Orgdiv_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Artpagenums where
    fromElem (CElem (Elem "artpagenums" as c0):rest) =
	(\(a,ca)->
	   (Just (Artpagenums (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Artpagenums as a) =
	[CElem (Elem "artpagenums" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Artpagenums_Attrs where
    fromAttrs as =
	Artpagenums_Attrs
	  { artpagenumsId = possibleA fromAttrToStr "id" as
	  , artpagenumsLang = possibleA fromAttrToStr "lang" as
	  , artpagenumsRemap = possibleA fromAttrToStr "remap" as
	  , artpagenumsXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , artpagenumsRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , artpagenumsArch = possibleA fromAttrToStr "arch" as
	  , artpagenumsCondition = possibleA fromAttrToStr "condition" as
	  , artpagenumsConformance = possibleA fromAttrToStr "conformance" as
	  , artpagenumsOs = possibleA fromAttrToStr "os" as
	  , artpagenumsRevision = possibleA fromAttrToStr "revision" as
	  , artpagenumsSecurity = possibleA fromAttrToStr "security" as
	  , artpagenumsUserlevel = possibleA fromAttrToStr "userlevel" as
	  , artpagenumsVendor = possibleA fromAttrToStr "vendor" as
	  , artpagenumsRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (artpagenumsId v)
	, maybeToAttr toAttrFrStr "lang" (artpagenumsLang v)
	, maybeToAttr toAttrFrStr "remap" (artpagenumsRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (artpagenumsXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (artpagenumsRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (artpagenumsArch v)
	, maybeToAttr toAttrFrStr "condition" (artpagenumsCondition v)
	, maybeToAttr toAttrFrStr "conformance" (artpagenumsConformance v)
	, maybeToAttr toAttrFrStr "os" (artpagenumsOs v)
	, maybeToAttr toAttrFrStr "revision" (artpagenumsRevision v)
	, maybeToAttr toAttrFrStr "security" (artpagenumsSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (artpagenumsUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (artpagenumsVendor v)
	, maybeToAttr toAttrFrStr "role" (artpagenumsRole v)
	]
instance XmlContent Artpagenums_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Artpagenums_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Artpagenums_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Artpagenums_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Artpagenums_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Artpagenums_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Artpagenums_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Artpagenums_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Artpagenums_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Artpagenums_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Artpagenums_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Artpagenums_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Artpagenums_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Artpagenums_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Artpagenums_Str a) = toText a
    toElem (Artpagenums_Link a) = toElem a
    toElem (Artpagenums_Olink a) = toElem a
    toElem (Artpagenums_Ulink a) = toElem a
    toElem (Artpagenums_Emphasis a) = toElem a
    toElem (Artpagenums_Trademark a) = toElem a
    toElem (Artpagenums_Replaceable a) = toElem a
    toElem (Artpagenums_Remark a) = toElem a
    toElem (Artpagenums_Subscript a) = toElem a
    toElem (Artpagenums_Superscript a) = toElem a
    toElem (Artpagenums_Inlinegraphic a) = toElem a
    toElem (Artpagenums_Inlinemediaobject a) = toElem a
    toElem (Artpagenums_Indexterm a) = toElem a
instance XmlAttrType Artpagenums_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Artpagenums_Revisionflag_Changed
	    translate "added" = Just Artpagenums_Revisionflag_Added
	    translate "deleted" = Just Artpagenums_Revisionflag_Deleted
	    translate "off" = Just Artpagenums_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Artpagenums_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Artpagenums_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Artpagenums_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Artpagenums_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Personname where
    fromElem (CElem (Elem "personname" as c0):rest) =
	(\(a,ca)->
	   (Just (Personname (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Personname as a) =
	[CElem (Elem "personname" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Personname_Attrs where
    fromAttrs as =
	Personname_Attrs
	  { personnameId = possibleA fromAttrToStr "id" as
	  , personnameLang = possibleA fromAttrToStr "lang" as
	  , personnameRemap = possibleA fromAttrToStr "remap" as
	  , personnameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , personnameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , personnameArch = possibleA fromAttrToStr "arch" as
	  , personnameCondition = possibleA fromAttrToStr "condition" as
	  , personnameConformance = possibleA fromAttrToStr "conformance" as
	  , personnameOs = possibleA fromAttrToStr "os" as
	  , personnameRevision = possibleA fromAttrToStr "revision" as
	  , personnameSecurity = possibleA fromAttrToStr "security" as
	  , personnameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , personnameVendor = possibleA fromAttrToStr "vendor" as
	  , personnameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (personnameId v)
	, maybeToAttr toAttrFrStr "lang" (personnameLang v)
	, maybeToAttr toAttrFrStr "remap" (personnameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (personnameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (personnameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (personnameArch v)
	, maybeToAttr toAttrFrStr "condition" (personnameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (personnameConformance v)
	, maybeToAttr toAttrFrStr "os" (personnameOs v)
	, maybeToAttr toAttrFrStr "revision" (personnameRevision v)
	, maybeToAttr toAttrFrStr "security" (personnameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (personnameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (personnameVendor v)
	, maybeToAttr toAttrFrStr "role" (personnameRole v)
	]
instance XmlAttrType Personname_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Personname_Revisionflag_Changed
	    translate "added" = Just Personname_Revisionflag_Added
	    translate "deleted" = Just Personname_Revisionflag_Deleted
	    translate "off" = Just Personname_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Personname_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Personname_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Personname_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Personname_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Author where
    fromElem (CElem (Elem "author" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Author (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(definite fromElem "OneOf" "author" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Author as a b) =
	[CElem (Elem "author" (toAttrs as) (toElem a ++
					    concatMap toElem b))]
instance XmlAttributes Author_Attrs where
    fromAttrs as =
	Author_Attrs
	  { authorId = possibleA fromAttrToStr "id" as
	  , authorLang = possibleA fromAttrToStr "lang" as
	  , authorRemap = possibleA fromAttrToStr "remap" as
	  , authorXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , authorRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , authorArch = possibleA fromAttrToStr "arch" as
	  , authorCondition = possibleA fromAttrToStr "condition" as
	  , authorConformance = possibleA fromAttrToStr "conformance" as
	  , authorOs = possibleA fromAttrToStr "os" as
	  , authorRevision = possibleA fromAttrToStr "revision" as
	  , authorSecurity = possibleA fromAttrToStr "security" as
	  , authorUserlevel = possibleA fromAttrToStr "userlevel" as
	  , authorVendor = possibleA fromAttrToStr "vendor" as
	  , authorRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (authorId v)
	, maybeToAttr toAttrFrStr "lang" (authorLang v)
	, maybeToAttr toAttrFrStr "remap" (authorRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (authorXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (authorRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (authorArch v)
	, maybeToAttr toAttrFrStr "condition" (authorCondition v)
	, maybeToAttr toAttrFrStr "conformance" (authorConformance v)
	, maybeToAttr toAttrFrStr "os" (authorOs v)
	, maybeToAttr toAttrFrStr "revision" (authorRevision v)
	, maybeToAttr toAttrFrStr "security" (authorSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (authorUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (authorVendor v)
	, maybeToAttr toAttrFrStr "role" (authorRole v)
	]
instance XmlAttrType Author_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Author_Revisionflag_Changed
	    translate "added" = Just Author_Revisionflag_Added
	    translate "deleted" = Just Author_Revisionflag_Deleted
	    translate "off" = Just Author_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Author_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Author_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Author_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Author_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Authorgroup where
    fromElem (CElem (Elem "authorgroup" as c0):rest) =
	(\(a,ca)->
	   (Just (Authorgroup (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Authorgroup as a) =
	[CElem (Elem "authorgroup" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Authorgroup_Attrs where
    fromAttrs as =
	Authorgroup_Attrs
	  { authorgroupId = possibleA fromAttrToStr "id" as
	  , authorgroupLang = possibleA fromAttrToStr "lang" as
	  , authorgroupRemap = possibleA fromAttrToStr "remap" as
	  , authorgroupXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , authorgroupRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , authorgroupArch = possibleA fromAttrToStr "arch" as
	  , authorgroupCondition = possibleA fromAttrToStr "condition" as
	  , authorgroupConformance = possibleA fromAttrToStr "conformance" as
	  , authorgroupOs = possibleA fromAttrToStr "os" as
	  , authorgroupRevision = possibleA fromAttrToStr "revision" as
	  , authorgroupSecurity = possibleA fromAttrToStr "security" as
	  , authorgroupUserlevel = possibleA fromAttrToStr "userlevel" as
	  , authorgroupVendor = possibleA fromAttrToStr "vendor" as
	  , authorgroupRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (authorgroupId v)
	, maybeToAttr toAttrFrStr "lang" (authorgroupLang v)
	, maybeToAttr toAttrFrStr "remap" (authorgroupRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (authorgroupXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (authorgroupRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (authorgroupArch v)
	, maybeToAttr toAttrFrStr "condition" (authorgroupCondition v)
	, maybeToAttr toAttrFrStr "conformance" (authorgroupConformance v)
	, maybeToAttr toAttrFrStr "os" (authorgroupOs v)
	, maybeToAttr toAttrFrStr "revision" (authorgroupRevision v)
	, maybeToAttr toAttrFrStr "security" (authorgroupSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (authorgroupUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (authorgroupVendor v)
	, maybeToAttr toAttrFrStr "role" (authorgroupRole v)
	]
instance XmlAttrType Authorgroup_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Authorgroup_Revisionflag_Changed
	    translate "added" = Just Authorgroup_Revisionflag_Added
	    translate "deleted" = Just Authorgroup_Revisionflag_Deleted
	    translate "off" = Just Authorgroup_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Authorgroup_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Authorgroup_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Authorgroup_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Authorgroup_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Collab where
    fromElem (CElem (Elem "collab" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Collab (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(definite fromElem "<collabname>" "collab" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Collab as a b) =
	[CElem (Elem "collab" (toAttrs as) (toElem a ++
					    concatMap toElem b))]
instance XmlAttributes Collab_Attrs where
    fromAttrs as =
	Collab_Attrs
	  { collabId = possibleA fromAttrToStr "id" as
	  , collabLang = possibleA fromAttrToStr "lang" as
	  , collabRemap = possibleA fromAttrToStr "remap" as
	  , collabXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , collabRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , collabArch = possibleA fromAttrToStr "arch" as
	  , collabCondition = possibleA fromAttrToStr "condition" as
	  , collabConformance = possibleA fromAttrToStr "conformance" as
	  , collabOs = possibleA fromAttrToStr "os" as
	  , collabRevision = possibleA fromAttrToStr "revision" as
	  , collabSecurity = possibleA fromAttrToStr "security" as
	  , collabUserlevel = possibleA fromAttrToStr "userlevel" as
	  , collabVendor = possibleA fromAttrToStr "vendor" as
	  , collabRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (collabId v)
	, maybeToAttr toAttrFrStr "lang" (collabLang v)
	, maybeToAttr toAttrFrStr "remap" (collabRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (collabXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (collabRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (collabArch v)
	, maybeToAttr toAttrFrStr "condition" (collabCondition v)
	, maybeToAttr toAttrFrStr "conformance" (collabConformance v)
	, maybeToAttr toAttrFrStr "os" (collabOs v)
	, maybeToAttr toAttrFrStr "revision" (collabRevision v)
	, maybeToAttr toAttrFrStr "security" (collabSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (collabUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (collabVendor v)
	, maybeToAttr toAttrFrStr "role" (collabRole v)
	]
instance XmlAttrType Collab_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Collab_Revisionflag_Changed
	    translate "added" = Just Collab_Revisionflag_Added
	    translate "deleted" = Just Collab_Revisionflag_Deleted
	    translate "off" = Just Collab_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Collab_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Collab_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Collab_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Collab_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Collabname where
    fromElem (CElem (Elem "collabname" as c0):rest) =
	(\(a,ca)->
	   (Just (Collabname (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Collabname as a) =
	[CElem (Elem "collabname" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Collabname_Attrs where
    fromAttrs as =
	Collabname_Attrs
	  { collabnameId = possibleA fromAttrToStr "id" as
	  , collabnameLang = possibleA fromAttrToStr "lang" as
	  , collabnameRemap = possibleA fromAttrToStr "remap" as
	  , collabnameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , collabnameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , collabnameArch = possibleA fromAttrToStr "arch" as
	  , collabnameCondition = possibleA fromAttrToStr "condition" as
	  , collabnameConformance = possibleA fromAttrToStr "conformance" as
	  , collabnameOs = possibleA fromAttrToStr "os" as
	  , collabnameRevision = possibleA fromAttrToStr "revision" as
	  , collabnameSecurity = possibleA fromAttrToStr "security" as
	  , collabnameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , collabnameVendor = possibleA fromAttrToStr "vendor" as
	  , collabnameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (collabnameId v)
	, maybeToAttr toAttrFrStr "lang" (collabnameLang v)
	, maybeToAttr toAttrFrStr "remap" (collabnameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (collabnameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (collabnameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (collabnameArch v)
	, maybeToAttr toAttrFrStr "condition" (collabnameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (collabnameConformance v)
	, maybeToAttr toAttrFrStr "os" (collabnameOs v)
	, maybeToAttr toAttrFrStr "revision" (collabnameRevision v)
	, maybeToAttr toAttrFrStr "security" (collabnameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (collabnameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (collabnameVendor v)
	, maybeToAttr toAttrFrStr "role" (collabnameRole v)
	]
instance XmlContent Collabname_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Collabname_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Collabname_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Collabname_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Collabname_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Collabname_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Collabname_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Collabname_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Collabname_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Collabname_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Collabname_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Collabname_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Collabname_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Collabname_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Collabname_Str a) = toText a
    toElem (Collabname_Link a) = toElem a
    toElem (Collabname_Olink a) = toElem a
    toElem (Collabname_Ulink a) = toElem a
    toElem (Collabname_Emphasis a) = toElem a
    toElem (Collabname_Trademark a) = toElem a
    toElem (Collabname_Replaceable a) = toElem a
    toElem (Collabname_Remark a) = toElem a
    toElem (Collabname_Subscript a) = toElem a
    toElem (Collabname_Superscript a) = toElem a
    toElem (Collabname_Inlinegraphic a) = toElem a
    toElem (Collabname_Inlinemediaobject a) = toElem a
    toElem (Collabname_Indexterm a) = toElem a
instance XmlAttrType Collabname_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Collabname_Revisionflag_Changed
	    translate "added" = Just Collabname_Revisionflag_Added
	    translate "deleted" = Just Collabname_Revisionflag_Deleted
	    translate "off" = Just Collabname_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Collabname_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Collabname_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Collabname_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Collabname_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Authorinitials where
    fromElem (CElem (Elem "authorinitials" as c0):rest) =
	(\(a,ca)->
	   (Just (Authorinitials (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Authorinitials as a) =
	[CElem (Elem "authorinitials" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Authorinitials_Attrs where
    fromAttrs as =
	Authorinitials_Attrs
	  { authorinitialsId = possibleA fromAttrToStr "id" as
	  , authorinitialsLang = possibleA fromAttrToStr "lang" as
	  , authorinitialsRemap = possibleA fromAttrToStr "remap" as
	  , authorinitialsXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , authorinitialsRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , authorinitialsArch = possibleA fromAttrToStr "arch" as
	  , authorinitialsCondition = possibleA fromAttrToStr "condition" as
	  , authorinitialsConformance = possibleA fromAttrToStr "conformance" as
	  , authorinitialsOs = possibleA fromAttrToStr "os" as
	  , authorinitialsRevision = possibleA fromAttrToStr "revision" as
	  , authorinitialsSecurity = possibleA fromAttrToStr "security" as
	  , authorinitialsUserlevel = possibleA fromAttrToStr "userlevel" as
	  , authorinitialsVendor = possibleA fromAttrToStr "vendor" as
	  , authorinitialsRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (authorinitialsId v)
	, maybeToAttr toAttrFrStr "lang" (authorinitialsLang v)
	, maybeToAttr toAttrFrStr "remap" (authorinitialsRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (authorinitialsXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (authorinitialsRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (authorinitialsArch v)
	, maybeToAttr toAttrFrStr "condition" (authorinitialsCondition v)
	, maybeToAttr toAttrFrStr "conformance" (authorinitialsConformance v)
	, maybeToAttr toAttrFrStr "os" (authorinitialsOs v)
	, maybeToAttr toAttrFrStr "revision" (authorinitialsRevision v)
	, maybeToAttr toAttrFrStr "security" (authorinitialsSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (authorinitialsUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (authorinitialsVendor v)
	, maybeToAttr toAttrFrStr "role" (authorinitialsRole v)
	]
instance XmlContent Authorinitials_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Authorinitials_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Authorinitials_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Authorinitials_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Authorinitials_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Authorinitials_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Authorinitials_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Authorinitials_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Authorinitials_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Authorinitials_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Authorinitials_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Authorinitials_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Authorinitials_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Authorinitials_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Authorinitials_Str a) = toText a
    toElem (Authorinitials_Link a) = toElem a
    toElem (Authorinitials_Olink a) = toElem a
    toElem (Authorinitials_Ulink a) = toElem a
    toElem (Authorinitials_Emphasis a) = toElem a
    toElem (Authorinitials_Trademark a) = toElem a
    toElem (Authorinitials_Replaceable a) = toElem a
    toElem (Authorinitials_Remark a) = toElem a
    toElem (Authorinitials_Subscript a) = toElem a
    toElem (Authorinitials_Superscript a) = toElem a
    toElem (Authorinitials_Inlinegraphic a) = toElem a
    toElem (Authorinitials_Inlinemediaobject a) = toElem a
    toElem (Authorinitials_Indexterm a) = toElem a
instance XmlAttrType Authorinitials_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Authorinitials_Revisionflag_Changed
	    translate "added" = Just Authorinitials_Revisionflag_Added
	    translate "deleted" = Just Authorinitials_Revisionflag_Deleted
	    translate "off" = Just Authorinitials_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Authorinitials_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Authorinitials_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Authorinitials_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Authorinitials_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Confgroup where
    fromElem (CElem (Elem "confgroup" as c0):rest) =
	(\(a,ca)->
	   (Just (Confgroup (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Confgroup as a) =
	[CElem (Elem "confgroup" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Confgroup_Attrs where
    fromAttrs as =
	Confgroup_Attrs
	  { confgroupId = possibleA fromAttrToStr "id" as
	  , confgroupLang = possibleA fromAttrToStr "lang" as
	  , confgroupRemap = possibleA fromAttrToStr "remap" as
	  , confgroupXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , confgroupRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , confgroupArch = possibleA fromAttrToStr "arch" as
	  , confgroupCondition = possibleA fromAttrToStr "condition" as
	  , confgroupConformance = possibleA fromAttrToStr "conformance" as
	  , confgroupOs = possibleA fromAttrToStr "os" as
	  , confgroupRevision = possibleA fromAttrToStr "revision" as
	  , confgroupSecurity = possibleA fromAttrToStr "security" as
	  , confgroupUserlevel = possibleA fromAttrToStr "userlevel" as
	  , confgroupVendor = possibleA fromAttrToStr "vendor" as
	  , confgroupRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (confgroupId v)
	, maybeToAttr toAttrFrStr "lang" (confgroupLang v)
	, maybeToAttr toAttrFrStr "remap" (confgroupRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (confgroupXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (confgroupRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (confgroupArch v)
	, maybeToAttr toAttrFrStr "condition" (confgroupCondition v)
	, maybeToAttr toAttrFrStr "conformance" (confgroupConformance v)
	, maybeToAttr toAttrFrStr "os" (confgroupOs v)
	, maybeToAttr toAttrFrStr "revision" (confgroupRevision v)
	, maybeToAttr toAttrFrStr "security" (confgroupSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (confgroupUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (confgroupVendor v)
	, maybeToAttr toAttrFrStr "role" (confgroupRole v)
	]
instance XmlAttrType Confgroup_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Confgroup_Revisionflag_Changed
	    translate "added" = Just Confgroup_Revisionflag_Added
	    translate "deleted" = Just Confgroup_Revisionflag_Deleted
	    translate "off" = Just Confgroup_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Confgroup_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Confgroup_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Confgroup_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Confgroup_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Confdates where
    fromElem (CElem (Elem "confdates" as c0):rest) =
	(\(a,ca)->
	   (Just (Confdates (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Confdates as a) =
	[CElem (Elem "confdates" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Confdates_Attrs where
    fromAttrs as =
	Confdates_Attrs
	  { confdatesId = possibleA fromAttrToStr "id" as
	  , confdatesLang = possibleA fromAttrToStr "lang" as
	  , confdatesRemap = possibleA fromAttrToStr "remap" as
	  , confdatesXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , confdatesRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , confdatesArch = possibleA fromAttrToStr "arch" as
	  , confdatesCondition = possibleA fromAttrToStr "condition" as
	  , confdatesConformance = possibleA fromAttrToStr "conformance" as
	  , confdatesOs = possibleA fromAttrToStr "os" as
	  , confdatesRevision = possibleA fromAttrToStr "revision" as
	  , confdatesSecurity = possibleA fromAttrToStr "security" as
	  , confdatesUserlevel = possibleA fromAttrToStr "userlevel" as
	  , confdatesVendor = possibleA fromAttrToStr "vendor" as
	  , confdatesRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (confdatesId v)
	, maybeToAttr toAttrFrStr "lang" (confdatesLang v)
	, maybeToAttr toAttrFrStr "remap" (confdatesRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (confdatesXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (confdatesRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (confdatesArch v)
	, maybeToAttr toAttrFrStr "condition" (confdatesCondition v)
	, maybeToAttr toAttrFrStr "conformance" (confdatesConformance v)
	, maybeToAttr toAttrFrStr "os" (confdatesOs v)
	, maybeToAttr toAttrFrStr "revision" (confdatesRevision v)
	, maybeToAttr toAttrFrStr "security" (confdatesSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (confdatesUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (confdatesVendor v)
	, maybeToAttr toAttrFrStr "role" (confdatesRole v)
	]
instance XmlContent Confdates_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Confdates_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Confdates_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Confdates_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Confdates_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Confdates_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Confdates_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Confdates_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Confdates_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Confdates_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Confdates_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Confdates_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Confdates_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Confdates_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Confdates_Str a) = toText a
    toElem (Confdates_Link a) = toElem a
    toElem (Confdates_Olink a) = toElem a
    toElem (Confdates_Ulink a) = toElem a
    toElem (Confdates_Emphasis a) = toElem a
    toElem (Confdates_Trademark a) = toElem a
    toElem (Confdates_Replaceable a) = toElem a
    toElem (Confdates_Remark a) = toElem a
    toElem (Confdates_Subscript a) = toElem a
    toElem (Confdates_Superscript a) = toElem a
    toElem (Confdates_Inlinegraphic a) = toElem a
    toElem (Confdates_Inlinemediaobject a) = toElem a
    toElem (Confdates_Indexterm a) = toElem a
instance XmlAttrType Confdates_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Confdates_Revisionflag_Changed
	    translate "added" = Just Confdates_Revisionflag_Added
	    translate "deleted" = Just Confdates_Revisionflag_Deleted
	    translate "off" = Just Confdates_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Confdates_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Confdates_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Confdates_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Confdates_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Conftitle where
    fromElem (CElem (Elem "conftitle" as c0):rest) =
	(\(a,ca)->
	   (Just (Conftitle (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Conftitle as a) =
	[CElem (Elem "conftitle" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Conftitle_Attrs where
    fromAttrs as =
	Conftitle_Attrs
	  { conftitleId = possibleA fromAttrToStr "id" as
	  , conftitleLang = possibleA fromAttrToStr "lang" as
	  , conftitleRemap = possibleA fromAttrToStr "remap" as
	  , conftitleXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , conftitleRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , conftitleArch = possibleA fromAttrToStr "arch" as
	  , conftitleCondition = possibleA fromAttrToStr "condition" as
	  , conftitleConformance = possibleA fromAttrToStr "conformance" as
	  , conftitleOs = possibleA fromAttrToStr "os" as
	  , conftitleRevision = possibleA fromAttrToStr "revision" as
	  , conftitleSecurity = possibleA fromAttrToStr "security" as
	  , conftitleUserlevel = possibleA fromAttrToStr "userlevel" as
	  , conftitleVendor = possibleA fromAttrToStr "vendor" as
	  , conftitleRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (conftitleId v)
	, maybeToAttr toAttrFrStr "lang" (conftitleLang v)
	, maybeToAttr toAttrFrStr "remap" (conftitleRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (conftitleXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (conftitleRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (conftitleArch v)
	, maybeToAttr toAttrFrStr "condition" (conftitleCondition v)
	, maybeToAttr toAttrFrStr "conformance" (conftitleConformance v)
	, maybeToAttr toAttrFrStr "os" (conftitleOs v)
	, maybeToAttr toAttrFrStr "revision" (conftitleRevision v)
	, maybeToAttr toAttrFrStr "security" (conftitleSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (conftitleUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (conftitleVendor v)
	, maybeToAttr toAttrFrStr "role" (conftitleRole v)
	]
instance XmlContent Conftitle_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Conftitle_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Conftitle_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Conftitle_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Conftitle_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Conftitle_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Conftitle_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Conftitle_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Conftitle_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Conftitle_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Conftitle_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Conftitle_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Conftitle_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Conftitle_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Conftitle_Str a) = toText a
    toElem (Conftitle_Link a) = toElem a
    toElem (Conftitle_Olink a) = toElem a
    toElem (Conftitle_Ulink a) = toElem a
    toElem (Conftitle_Emphasis a) = toElem a
    toElem (Conftitle_Trademark a) = toElem a
    toElem (Conftitle_Replaceable a) = toElem a
    toElem (Conftitle_Remark a) = toElem a
    toElem (Conftitle_Subscript a) = toElem a
    toElem (Conftitle_Superscript a) = toElem a
    toElem (Conftitle_Inlinegraphic a) = toElem a
    toElem (Conftitle_Inlinemediaobject a) = toElem a
    toElem (Conftitle_Indexterm a) = toElem a
instance XmlAttrType Conftitle_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Conftitle_Revisionflag_Changed
	    translate "added" = Just Conftitle_Revisionflag_Added
	    translate "deleted" = Just Conftitle_Revisionflag_Deleted
	    translate "off" = Just Conftitle_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Conftitle_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Conftitle_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Conftitle_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Conftitle_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Confnum where
    fromElem (CElem (Elem "confnum" as c0):rest) =
	(\(a,ca)->
	   (Just (Confnum (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Confnum as a) =
	[CElem (Elem "confnum" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Confnum_Attrs where
    fromAttrs as =
	Confnum_Attrs
	  { confnumId = possibleA fromAttrToStr "id" as
	  , confnumLang = possibleA fromAttrToStr "lang" as
	  , confnumRemap = possibleA fromAttrToStr "remap" as
	  , confnumXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , confnumRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , confnumArch = possibleA fromAttrToStr "arch" as
	  , confnumCondition = possibleA fromAttrToStr "condition" as
	  , confnumConformance = possibleA fromAttrToStr "conformance" as
	  , confnumOs = possibleA fromAttrToStr "os" as
	  , confnumRevision = possibleA fromAttrToStr "revision" as
	  , confnumSecurity = possibleA fromAttrToStr "security" as
	  , confnumUserlevel = possibleA fromAttrToStr "userlevel" as
	  , confnumVendor = possibleA fromAttrToStr "vendor" as
	  , confnumRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (confnumId v)
	, maybeToAttr toAttrFrStr "lang" (confnumLang v)
	, maybeToAttr toAttrFrStr "remap" (confnumRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (confnumXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (confnumRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (confnumArch v)
	, maybeToAttr toAttrFrStr "condition" (confnumCondition v)
	, maybeToAttr toAttrFrStr "conformance" (confnumConformance v)
	, maybeToAttr toAttrFrStr "os" (confnumOs v)
	, maybeToAttr toAttrFrStr "revision" (confnumRevision v)
	, maybeToAttr toAttrFrStr "security" (confnumSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (confnumUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (confnumVendor v)
	, maybeToAttr toAttrFrStr "role" (confnumRole v)
	]
instance XmlContent Confnum_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Confnum_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Confnum_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Confnum_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Confnum_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Confnum_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Confnum_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Confnum_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Confnum_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Confnum_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Confnum_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Confnum_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Confnum_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Confnum_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Confnum_Str a) = toText a
    toElem (Confnum_Link a) = toElem a
    toElem (Confnum_Olink a) = toElem a
    toElem (Confnum_Ulink a) = toElem a
    toElem (Confnum_Emphasis a) = toElem a
    toElem (Confnum_Trademark a) = toElem a
    toElem (Confnum_Replaceable a) = toElem a
    toElem (Confnum_Remark a) = toElem a
    toElem (Confnum_Subscript a) = toElem a
    toElem (Confnum_Superscript a) = toElem a
    toElem (Confnum_Inlinegraphic a) = toElem a
    toElem (Confnum_Inlinemediaobject a) = toElem a
    toElem (Confnum_Indexterm a) = toElem a
instance XmlAttrType Confnum_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Confnum_Revisionflag_Changed
	    translate "added" = Just Confnum_Revisionflag_Added
	    translate "deleted" = Just Confnum_Revisionflag_Deleted
	    translate "off" = Just Confnum_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Confnum_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Confnum_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Confnum_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Confnum_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Confsponsor where
    fromElem (CElem (Elem "confsponsor" as c0):rest) =
	(\(a,ca)->
	   (Just (Confsponsor (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Confsponsor as a) =
	[CElem (Elem "confsponsor" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Confsponsor_Attrs where
    fromAttrs as =
	Confsponsor_Attrs
	  { confsponsorId = possibleA fromAttrToStr "id" as
	  , confsponsorLang = possibleA fromAttrToStr "lang" as
	  , confsponsorRemap = possibleA fromAttrToStr "remap" as
	  , confsponsorXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , confsponsorRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , confsponsorArch = possibleA fromAttrToStr "arch" as
	  , confsponsorCondition = possibleA fromAttrToStr "condition" as
	  , confsponsorConformance = possibleA fromAttrToStr "conformance" as
	  , confsponsorOs = possibleA fromAttrToStr "os" as
	  , confsponsorRevision = possibleA fromAttrToStr "revision" as
	  , confsponsorSecurity = possibleA fromAttrToStr "security" as
	  , confsponsorUserlevel = possibleA fromAttrToStr "userlevel" as
	  , confsponsorVendor = possibleA fromAttrToStr "vendor" as
	  , confsponsorRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (confsponsorId v)
	, maybeToAttr toAttrFrStr "lang" (confsponsorLang v)
	, maybeToAttr toAttrFrStr "remap" (confsponsorRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (confsponsorXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (confsponsorRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (confsponsorArch v)
	, maybeToAttr toAttrFrStr "condition" (confsponsorCondition v)
	, maybeToAttr toAttrFrStr "conformance" (confsponsorConformance v)
	, maybeToAttr toAttrFrStr "os" (confsponsorOs v)
	, maybeToAttr toAttrFrStr "revision" (confsponsorRevision v)
	, maybeToAttr toAttrFrStr "security" (confsponsorSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (confsponsorUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (confsponsorVendor v)
	, maybeToAttr toAttrFrStr "role" (confsponsorRole v)
	]
instance XmlContent Confsponsor_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Confsponsor_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Confsponsor_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Confsponsor_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Confsponsor_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Confsponsor_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Confsponsor_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Confsponsor_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Confsponsor_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Confsponsor_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Confsponsor_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Confsponsor_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Confsponsor_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Confsponsor_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Confsponsor_Str a) = toText a
    toElem (Confsponsor_Link a) = toElem a
    toElem (Confsponsor_Olink a) = toElem a
    toElem (Confsponsor_Ulink a) = toElem a
    toElem (Confsponsor_Emphasis a) = toElem a
    toElem (Confsponsor_Trademark a) = toElem a
    toElem (Confsponsor_Replaceable a) = toElem a
    toElem (Confsponsor_Remark a) = toElem a
    toElem (Confsponsor_Subscript a) = toElem a
    toElem (Confsponsor_Superscript a) = toElem a
    toElem (Confsponsor_Inlinegraphic a) = toElem a
    toElem (Confsponsor_Inlinemediaobject a) = toElem a
    toElem (Confsponsor_Indexterm a) = toElem a
instance XmlAttrType Confsponsor_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Confsponsor_Revisionflag_Changed
	    translate "added" = Just Confsponsor_Revisionflag_Added
	    translate "deleted" = Just Confsponsor_Revisionflag_Deleted
	    translate "off" = Just Confsponsor_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Confsponsor_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Confsponsor_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Confsponsor_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Confsponsor_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Contractnum where
    fromElem (CElem (Elem "contractnum" as c0):rest) =
	(\(a,ca)->
	   (Just (Contractnum (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Contractnum as a) =
	[CElem (Elem "contractnum" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Contractnum_Attrs where
    fromAttrs as =
	Contractnum_Attrs
	  { contractnumId = possibleA fromAttrToStr "id" as
	  , contractnumLang = possibleA fromAttrToStr "lang" as
	  , contractnumRemap = possibleA fromAttrToStr "remap" as
	  , contractnumXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , contractnumRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , contractnumArch = possibleA fromAttrToStr "arch" as
	  , contractnumCondition = possibleA fromAttrToStr "condition" as
	  , contractnumConformance = possibleA fromAttrToStr "conformance" as
	  , contractnumOs = possibleA fromAttrToStr "os" as
	  , contractnumRevision = possibleA fromAttrToStr "revision" as
	  , contractnumSecurity = possibleA fromAttrToStr "security" as
	  , contractnumUserlevel = possibleA fromAttrToStr "userlevel" as
	  , contractnumVendor = possibleA fromAttrToStr "vendor" as
	  , contractnumRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (contractnumId v)
	, maybeToAttr toAttrFrStr "lang" (contractnumLang v)
	, maybeToAttr toAttrFrStr "remap" (contractnumRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (contractnumXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (contractnumRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (contractnumArch v)
	, maybeToAttr toAttrFrStr "condition" (contractnumCondition v)
	, maybeToAttr toAttrFrStr "conformance" (contractnumConformance v)
	, maybeToAttr toAttrFrStr "os" (contractnumOs v)
	, maybeToAttr toAttrFrStr "revision" (contractnumRevision v)
	, maybeToAttr toAttrFrStr "security" (contractnumSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (contractnumUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (contractnumVendor v)
	, maybeToAttr toAttrFrStr "role" (contractnumRole v)
	]
instance XmlContent Contractnum_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Contractnum_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Contractnum_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Contractnum_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Contractnum_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Contractnum_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Contractnum_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Contractnum_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Contractnum_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Contractnum_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Contractnum_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Contractnum_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Contractnum_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Contractnum_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Contractnum_Str a) = toText a
    toElem (Contractnum_Link a) = toElem a
    toElem (Contractnum_Olink a) = toElem a
    toElem (Contractnum_Ulink a) = toElem a
    toElem (Contractnum_Emphasis a) = toElem a
    toElem (Contractnum_Trademark a) = toElem a
    toElem (Contractnum_Replaceable a) = toElem a
    toElem (Contractnum_Remark a) = toElem a
    toElem (Contractnum_Subscript a) = toElem a
    toElem (Contractnum_Superscript a) = toElem a
    toElem (Contractnum_Inlinegraphic a) = toElem a
    toElem (Contractnum_Inlinemediaobject a) = toElem a
    toElem (Contractnum_Indexterm a) = toElem a
instance XmlAttrType Contractnum_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Contractnum_Revisionflag_Changed
	    translate "added" = Just Contractnum_Revisionflag_Added
	    translate "deleted" = Just Contractnum_Revisionflag_Deleted
	    translate "off" = Just Contractnum_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Contractnum_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Contractnum_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Contractnum_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Contractnum_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Contractsponsor where
    fromElem (CElem (Elem "contractsponsor" as c0):rest) =
	(\(a,ca)->
	   (Just (Contractsponsor (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Contractsponsor as a) =
	[CElem (Elem "contractsponsor" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Contractsponsor_Attrs where
    fromAttrs as =
	Contractsponsor_Attrs
	  { contractsponsorId = possibleA fromAttrToStr "id" as
	  , contractsponsorLang = possibleA fromAttrToStr "lang" as
	  , contractsponsorRemap = possibleA fromAttrToStr "remap" as
	  , contractsponsorXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , contractsponsorRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , contractsponsorArch = possibleA fromAttrToStr "arch" as
	  , contractsponsorCondition = possibleA fromAttrToStr "condition" as
	  , contractsponsorConformance = possibleA fromAttrToStr "conformance" as
	  , contractsponsorOs = possibleA fromAttrToStr "os" as
	  , contractsponsorRevision = possibleA fromAttrToStr "revision" as
	  , contractsponsorSecurity = possibleA fromAttrToStr "security" as
	  , contractsponsorUserlevel = possibleA fromAttrToStr "userlevel" as
	  , contractsponsorVendor = possibleA fromAttrToStr "vendor" as
	  , contractsponsorRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (contractsponsorId v)
	, maybeToAttr toAttrFrStr "lang" (contractsponsorLang v)
	, maybeToAttr toAttrFrStr "remap" (contractsponsorRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (contractsponsorXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (contractsponsorRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (contractsponsorArch v)
	, maybeToAttr toAttrFrStr "condition" (contractsponsorCondition v)
	, maybeToAttr toAttrFrStr "conformance" (contractsponsorConformance v)
	, maybeToAttr toAttrFrStr "os" (contractsponsorOs v)
	, maybeToAttr toAttrFrStr "revision" (contractsponsorRevision v)
	, maybeToAttr toAttrFrStr "security" (contractsponsorSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (contractsponsorUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (contractsponsorVendor v)
	, maybeToAttr toAttrFrStr "role" (contractsponsorRole v)
	]
instance XmlContent Contractsponsor_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Contractsponsor_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Contractsponsor_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Contractsponsor_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Contractsponsor_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Contractsponsor_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Contractsponsor_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Contractsponsor_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Contractsponsor_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Contractsponsor_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Contractsponsor_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Contractsponsor_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Contractsponsor_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Contractsponsor_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Contractsponsor_Str a) = toText a
    toElem (Contractsponsor_Link a) = toElem a
    toElem (Contractsponsor_Olink a) = toElem a
    toElem (Contractsponsor_Ulink a) = toElem a
    toElem (Contractsponsor_Emphasis a) = toElem a
    toElem (Contractsponsor_Trademark a) = toElem a
    toElem (Contractsponsor_Replaceable a) = toElem a
    toElem (Contractsponsor_Remark a) = toElem a
    toElem (Contractsponsor_Subscript a) = toElem a
    toElem (Contractsponsor_Superscript a) = toElem a
    toElem (Contractsponsor_Inlinegraphic a) = toElem a
    toElem (Contractsponsor_Inlinemediaobject a) = toElem a
    toElem (Contractsponsor_Indexterm a) = toElem a
instance XmlAttrType Contractsponsor_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Contractsponsor_Revisionflag_Changed
	    translate "added" = Just Contractsponsor_Revisionflag_Added
	    translate "deleted" = Just Contractsponsor_Revisionflag_Deleted
	    translate "off" = Just Contractsponsor_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Contractsponsor_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Contractsponsor_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Contractsponsor_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Contractsponsor_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Copyright where
    fromElem (CElem (Elem "copyright" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Copyright (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Copyright as a b) =
	[CElem (Elem "copyright" (toAttrs as) (concatMap toElem a ++
					       concatMap toElem b))]
instance XmlAttributes Copyright_Attrs where
    fromAttrs as =
	Copyright_Attrs
	  { copyrightId = possibleA fromAttrToStr "id" as
	  , copyrightLang = possibleA fromAttrToStr "lang" as
	  , copyrightRemap = possibleA fromAttrToStr "remap" as
	  , copyrightXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , copyrightRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , copyrightArch = possibleA fromAttrToStr "arch" as
	  , copyrightCondition = possibleA fromAttrToStr "condition" as
	  , copyrightConformance = possibleA fromAttrToStr "conformance" as
	  , copyrightOs = possibleA fromAttrToStr "os" as
	  , copyrightRevision = possibleA fromAttrToStr "revision" as
	  , copyrightSecurity = possibleA fromAttrToStr "security" as
	  , copyrightUserlevel = possibleA fromAttrToStr "userlevel" as
	  , copyrightVendor = possibleA fromAttrToStr "vendor" as
	  , copyrightRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (copyrightId v)
	, maybeToAttr toAttrFrStr "lang" (copyrightLang v)
	, maybeToAttr toAttrFrStr "remap" (copyrightRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (copyrightXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (copyrightRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (copyrightArch v)
	, maybeToAttr toAttrFrStr "condition" (copyrightCondition v)
	, maybeToAttr toAttrFrStr "conformance" (copyrightConformance v)
	, maybeToAttr toAttrFrStr "os" (copyrightOs v)
	, maybeToAttr toAttrFrStr "revision" (copyrightRevision v)
	, maybeToAttr toAttrFrStr "security" (copyrightSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (copyrightUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (copyrightVendor v)
	, maybeToAttr toAttrFrStr "role" (copyrightRole v)
	]
instance XmlAttrType Copyright_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Copyright_Revisionflag_Changed
	    translate "added" = Just Copyright_Revisionflag_Added
	    translate "deleted" = Just Copyright_Revisionflag_Deleted
	    translate "off" = Just Copyright_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Copyright_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Copyright_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Copyright_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Copyright_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Year where
    fromElem (CElem (Elem "year" as c0):rest) =
	(\(a,ca)->
	   (Just (Year (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Year as a) =
	[CElem (Elem "year" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Year_Attrs where
    fromAttrs as =
	Year_Attrs
	  { yearId = possibleA fromAttrToStr "id" as
	  , yearLang = possibleA fromAttrToStr "lang" as
	  , yearRemap = possibleA fromAttrToStr "remap" as
	  , yearXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , yearRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , yearArch = possibleA fromAttrToStr "arch" as
	  , yearCondition = possibleA fromAttrToStr "condition" as
	  , yearConformance = possibleA fromAttrToStr "conformance" as
	  , yearOs = possibleA fromAttrToStr "os" as
	  , yearRevision = possibleA fromAttrToStr "revision" as
	  , yearSecurity = possibleA fromAttrToStr "security" as
	  , yearUserlevel = possibleA fromAttrToStr "userlevel" as
	  , yearVendor = possibleA fromAttrToStr "vendor" as
	  , yearRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (yearId v)
	, maybeToAttr toAttrFrStr "lang" (yearLang v)
	, maybeToAttr toAttrFrStr "remap" (yearRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (yearXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (yearRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (yearArch v)
	, maybeToAttr toAttrFrStr "condition" (yearCondition v)
	, maybeToAttr toAttrFrStr "conformance" (yearConformance v)
	, maybeToAttr toAttrFrStr "os" (yearOs v)
	, maybeToAttr toAttrFrStr "revision" (yearRevision v)
	, maybeToAttr toAttrFrStr "security" (yearSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (yearUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (yearVendor v)
	, maybeToAttr toAttrFrStr "role" (yearRole v)
	]
instance XmlContent Year_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Year_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Year_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Year_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Year_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Year_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Year_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Year_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Year_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Year_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Year_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Year_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Year_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Year_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Year_Str a) = toText a
    toElem (Year_Link a) = toElem a
    toElem (Year_Olink a) = toElem a
    toElem (Year_Ulink a) = toElem a
    toElem (Year_Emphasis a) = toElem a
    toElem (Year_Trademark a) = toElem a
    toElem (Year_Replaceable a) = toElem a
    toElem (Year_Remark a) = toElem a
    toElem (Year_Subscript a) = toElem a
    toElem (Year_Superscript a) = toElem a
    toElem (Year_Inlinegraphic a) = toElem a
    toElem (Year_Inlinemediaobject a) = toElem a
    toElem (Year_Indexterm a) = toElem a
instance XmlAttrType Year_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Year_Revisionflag_Changed
	    translate "added" = Just Year_Revisionflag_Added
	    translate "deleted" = Just Year_Revisionflag_Deleted
	    translate "off" = Just Year_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Year_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Year_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Year_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Year_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Holder where
    fromElem (CElem (Elem "holder" as c0):rest) =
	(\(a,ca)->
	   (Just (Holder (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Holder as a) =
	[CElem (Elem "holder" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Holder_Attrs where
    fromAttrs as =
	Holder_Attrs
	  { holderId = possibleA fromAttrToStr "id" as
	  , holderLang = possibleA fromAttrToStr "lang" as
	  , holderRemap = possibleA fromAttrToStr "remap" as
	  , holderXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , holderRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , holderArch = possibleA fromAttrToStr "arch" as
	  , holderCondition = possibleA fromAttrToStr "condition" as
	  , holderConformance = possibleA fromAttrToStr "conformance" as
	  , holderOs = possibleA fromAttrToStr "os" as
	  , holderRevision = possibleA fromAttrToStr "revision" as
	  , holderSecurity = possibleA fromAttrToStr "security" as
	  , holderUserlevel = possibleA fromAttrToStr "userlevel" as
	  , holderVendor = possibleA fromAttrToStr "vendor" as
	  , holderRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (holderId v)
	, maybeToAttr toAttrFrStr "lang" (holderLang v)
	, maybeToAttr toAttrFrStr "remap" (holderRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (holderXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (holderRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (holderArch v)
	, maybeToAttr toAttrFrStr "condition" (holderCondition v)
	, maybeToAttr toAttrFrStr "conformance" (holderConformance v)
	, maybeToAttr toAttrFrStr "os" (holderOs v)
	, maybeToAttr toAttrFrStr "revision" (holderRevision v)
	, maybeToAttr toAttrFrStr "security" (holderSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (holderUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (holderVendor v)
	, maybeToAttr toAttrFrStr "role" (holderRole v)
	]
instance XmlContent Holder_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Holder_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Holder_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Holder_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Holder_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Holder_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Holder_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Holder_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Holder_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Holder_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Holder_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Holder_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Holder_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Holder_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Holder_Str a) = toText a
    toElem (Holder_Link a) = toElem a
    toElem (Holder_Olink a) = toElem a
    toElem (Holder_Ulink a) = toElem a
    toElem (Holder_Emphasis a) = toElem a
    toElem (Holder_Trademark a) = toElem a
    toElem (Holder_Replaceable a) = toElem a
    toElem (Holder_Remark a) = toElem a
    toElem (Holder_Subscript a) = toElem a
    toElem (Holder_Superscript a) = toElem a
    toElem (Holder_Inlinegraphic a) = toElem a
    toElem (Holder_Inlinemediaobject a) = toElem a
    toElem (Holder_Indexterm a) = toElem a
instance XmlAttrType Holder_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Holder_Revisionflag_Changed
	    translate "added" = Just Holder_Revisionflag_Added
	    translate "deleted" = Just Holder_Revisionflag_Deleted
	    translate "off" = Just Holder_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Holder_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Holder_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Holder_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Holder_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Corpauthor where
    fromElem (CElem (Elem "corpauthor" as c0):rest) =
	(\(a,ca)->
	   (Just (Corpauthor (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Corpauthor as a) =
	[CElem (Elem "corpauthor" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Corpauthor_Attrs where
    fromAttrs as =
	Corpauthor_Attrs
	  { corpauthorId = possibleA fromAttrToStr "id" as
	  , corpauthorLang = possibleA fromAttrToStr "lang" as
	  , corpauthorRemap = possibleA fromAttrToStr "remap" as
	  , corpauthorXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , corpauthorRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , corpauthorArch = possibleA fromAttrToStr "arch" as
	  , corpauthorCondition = possibleA fromAttrToStr "condition" as
	  , corpauthorConformance = possibleA fromAttrToStr "conformance" as
	  , corpauthorOs = possibleA fromAttrToStr "os" as
	  , corpauthorRevision = possibleA fromAttrToStr "revision" as
	  , corpauthorSecurity = possibleA fromAttrToStr "security" as
	  , corpauthorUserlevel = possibleA fromAttrToStr "userlevel" as
	  , corpauthorVendor = possibleA fromAttrToStr "vendor" as
	  , corpauthorRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (corpauthorId v)
	, maybeToAttr toAttrFrStr "lang" (corpauthorLang v)
	, maybeToAttr toAttrFrStr "remap" (corpauthorRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (corpauthorXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (corpauthorRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (corpauthorArch v)
	, maybeToAttr toAttrFrStr "condition" (corpauthorCondition v)
	, maybeToAttr toAttrFrStr "conformance" (corpauthorConformance v)
	, maybeToAttr toAttrFrStr "os" (corpauthorOs v)
	, maybeToAttr toAttrFrStr "revision" (corpauthorRevision v)
	, maybeToAttr toAttrFrStr "security" (corpauthorSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (corpauthorUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (corpauthorVendor v)
	, maybeToAttr toAttrFrStr "role" (corpauthorRole v)
	]
instance XmlContent Corpauthor_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Corpauthor_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Corpauthor_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Corpauthor_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Corpauthor_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Corpauthor_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Corpauthor_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Corpauthor_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Corpauthor_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Corpauthor_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Corpauthor_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Corpauthor_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Corpauthor_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Corpauthor_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Corpauthor_Str a) = toText a
    toElem (Corpauthor_Link a) = toElem a
    toElem (Corpauthor_Olink a) = toElem a
    toElem (Corpauthor_Ulink a) = toElem a
    toElem (Corpauthor_Emphasis a) = toElem a
    toElem (Corpauthor_Trademark a) = toElem a
    toElem (Corpauthor_Replaceable a) = toElem a
    toElem (Corpauthor_Remark a) = toElem a
    toElem (Corpauthor_Subscript a) = toElem a
    toElem (Corpauthor_Superscript a) = toElem a
    toElem (Corpauthor_Inlinegraphic a) = toElem a
    toElem (Corpauthor_Inlinemediaobject a) = toElem a
    toElem (Corpauthor_Indexterm a) = toElem a
instance XmlAttrType Corpauthor_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Corpauthor_Revisionflag_Changed
	    translate "added" = Just Corpauthor_Revisionflag_Added
	    translate "deleted" = Just Corpauthor_Revisionflag_Deleted
	    translate "off" = Just Corpauthor_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Corpauthor_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Corpauthor_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Corpauthor_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Corpauthor_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Corpname where
    fromElem (CElem (Elem "corpname" as c0):rest) =
	(\(a,ca)->
	   (Just (Corpname (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Corpname as a) =
	[CElem (Elem "corpname" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Corpname_Attrs where
    fromAttrs as =
	Corpname_Attrs
	  { corpnameId = possibleA fromAttrToStr "id" as
	  , corpnameLang = possibleA fromAttrToStr "lang" as
	  , corpnameRemap = possibleA fromAttrToStr "remap" as
	  , corpnameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , corpnameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , corpnameArch = possibleA fromAttrToStr "arch" as
	  , corpnameCondition = possibleA fromAttrToStr "condition" as
	  , corpnameConformance = possibleA fromAttrToStr "conformance" as
	  , corpnameOs = possibleA fromAttrToStr "os" as
	  , corpnameRevision = possibleA fromAttrToStr "revision" as
	  , corpnameSecurity = possibleA fromAttrToStr "security" as
	  , corpnameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , corpnameVendor = possibleA fromAttrToStr "vendor" as
	  , corpnameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (corpnameId v)
	, maybeToAttr toAttrFrStr "lang" (corpnameLang v)
	, maybeToAttr toAttrFrStr "remap" (corpnameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (corpnameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (corpnameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (corpnameArch v)
	, maybeToAttr toAttrFrStr "condition" (corpnameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (corpnameConformance v)
	, maybeToAttr toAttrFrStr "os" (corpnameOs v)
	, maybeToAttr toAttrFrStr "revision" (corpnameRevision v)
	, maybeToAttr toAttrFrStr "security" (corpnameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (corpnameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (corpnameVendor v)
	, maybeToAttr toAttrFrStr "role" (corpnameRole v)
	]
instance XmlContent Corpname_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Corpname_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Corpname_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Corpname_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Corpname_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Corpname_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Corpname_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Corpname_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Corpname_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Corpname_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Corpname_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Corpname_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Corpname_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Corpname_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Corpname_Str a) = toText a
    toElem (Corpname_Link a) = toElem a
    toElem (Corpname_Olink a) = toElem a
    toElem (Corpname_Ulink a) = toElem a
    toElem (Corpname_Emphasis a) = toElem a
    toElem (Corpname_Trademark a) = toElem a
    toElem (Corpname_Replaceable a) = toElem a
    toElem (Corpname_Remark a) = toElem a
    toElem (Corpname_Subscript a) = toElem a
    toElem (Corpname_Superscript a) = toElem a
    toElem (Corpname_Inlinegraphic a) = toElem a
    toElem (Corpname_Inlinemediaobject a) = toElem a
    toElem (Corpname_Indexterm a) = toElem a
instance XmlAttrType Corpname_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Corpname_Revisionflag_Changed
	    translate "added" = Just Corpname_Revisionflag_Added
	    translate "deleted" = Just Corpname_Revisionflag_Deleted
	    translate "off" = Just Corpname_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Corpname_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Corpname_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Corpname_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Corpname_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Date where
    fromElem (CElem (Elem "date" as c0):rest) =
	(\(a,ca)->
	   (Just (Date (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Date as a) =
	[CElem (Elem "date" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Date_Attrs where
    fromAttrs as =
	Date_Attrs
	  { dateId = possibleA fromAttrToStr "id" as
	  , dateLang = possibleA fromAttrToStr "lang" as
	  , dateRemap = possibleA fromAttrToStr "remap" as
	  , dateXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , dateRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , dateArch = possibleA fromAttrToStr "arch" as
	  , dateCondition = possibleA fromAttrToStr "condition" as
	  , dateConformance = possibleA fromAttrToStr "conformance" as
	  , dateOs = possibleA fromAttrToStr "os" as
	  , dateRevision = possibleA fromAttrToStr "revision" as
	  , dateSecurity = possibleA fromAttrToStr "security" as
	  , dateUserlevel = possibleA fromAttrToStr "userlevel" as
	  , dateVendor = possibleA fromAttrToStr "vendor" as
	  , dateRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (dateId v)
	, maybeToAttr toAttrFrStr "lang" (dateLang v)
	, maybeToAttr toAttrFrStr "remap" (dateRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (dateXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (dateRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (dateArch v)
	, maybeToAttr toAttrFrStr "condition" (dateCondition v)
	, maybeToAttr toAttrFrStr "conformance" (dateConformance v)
	, maybeToAttr toAttrFrStr "os" (dateOs v)
	, maybeToAttr toAttrFrStr "revision" (dateRevision v)
	, maybeToAttr toAttrFrStr "security" (dateSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (dateUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (dateVendor v)
	, maybeToAttr toAttrFrStr "role" (dateRole v)
	]
instance XmlContent Date_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Date_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Date_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Date_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Date_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Date_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Date_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Date_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Date_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Date_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Date_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Date_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Date_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Date_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Date_Str a) = toText a
    toElem (Date_Link a) = toElem a
    toElem (Date_Olink a) = toElem a
    toElem (Date_Ulink a) = toElem a
    toElem (Date_Emphasis a) = toElem a
    toElem (Date_Trademark a) = toElem a
    toElem (Date_Replaceable a) = toElem a
    toElem (Date_Remark a) = toElem a
    toElem (Date_Subscript a) = toElem a
    toElem (Date_Superscript a) = toElem a
    toElem (Date_Inlinegraphic a) = toElem a
    toElem (Date_Inlinemediaobject a) = toElem a
    toElem (Date_Indexterm a) = toElem a
instance XmlAttrType Date_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Date_Revisionflag_Changed
	    translate "added" = Just Date_Revisionflag_Added
	    translate "deleted" = Just Date_Revisionflag_Deleted
	    translate "off" = Just Date_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Date_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Date_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Date_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Date_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Edition where
    fromElem (CElem (Elem "edition" as c0):rest) =
	(\(a,ca)->
	   (Just (Edition (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Edition as a) =
	[CElem (Elem "edition" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Edition_Attrs where
    fromAttrs as =
	Edition_Attrs
	  { editionId = possibleA fromAttrToStr "id" as
	  , editionLang = possibleA fromAttrToStr "lang" as
	  , editionRemap = possibleA fromAttrToStr "remap" as
	  , editionXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , editionRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , editionArch = possibleA fromAttrToStr "arch" as
	  , editionCondition = possibleA fromAttrToStr "condition" as
	  , editionConformance = possibleA fromAttrToStr "conformance" as
	  , editionOs = possibleA fromAttrToStr "os" as
	  , editionRevision = possibleA fromAttrToStr "revision" as
	  , editionSecurity = possibleA fromAttrToStr "security" as
	  , editionUserlevel = possibleA fromAttrToStr "userlevel" as
	  , editionVendor = possibleA fromAttrToStr "vendor" as
	  , editionRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (editionId v)
	, maybeToAttr toAttrFrStr "lang" (editionLang v)
	, maybeToAttr toAttrFrStr "remap" (editionRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (editionXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (editionRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (editionArch v)
	, maybeToAttr toAttrFrStr "condition" (editionCondition v)
	, maybeToAttr toAttrFrStr "conformance" (editionConformance v)
	, maybeToAttr toAttrFrStr "os" (editionOs v)
	, maybeToAttr toAttrFrStr "revision" (editionRevision v)
	, maybeToAttr toAttrFrStr "security" (editionSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (editionUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (editionVendor v)
	, maybeToAttr toAttrFrStr "role" (editionRole v)
	]
instance XmlContent Edition_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Edition_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Edition_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Edition_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Edition_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Edition_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Edition_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Edition_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Edition_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Edition_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Edition_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Edition_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Edition_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Edition_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Edition_Str a) = toText a
    toElem (Edition_Link a) = toElem a
    toElem (Edition_Olink a) = toElem a
    toElem (Edition_Ulink a) = toElem a
    toElem (Edition_Emphasis a) = toElem a
    toElem (Edition_Trademark a) = toElem a
    toElem (Edition_Replaceable a) = toElem a
    toElem (Edition_Remark a) = toElem a
    toElem (Edition_Subscript a) = toElem a
    toElem (Edition_Superscript a) = toElem a
    toElem (Edition_Inlinegraphic a) = toElem a
    toElem (Edition_Inlinemediaobject a) = toElem a
    toElem (Edition_Indexterm a) = toElem a
instance XmlAttrType Edition_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Edition_Revisionflag_Changed
	    translate "added" = Just Edition_Revisionflag_Added
	    translate "deleted" = Just Edition_Revisionflag_Deleted
	    translate "off" = Just Edition_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Edition_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Edition_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Edition_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Edition_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Editor where
    fromElem (CElem (Elem "editor" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Editor (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(definite fromElem "OneOf" "editor" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Editor as a b) =
	[CElem (Elem "editor" (toAttrs as) (toElem a ++
					    concatMap toElem b))]
instance XmlAttributes Editor_Attrs where
    fromAttrs as =
	Editor_Attrs
	  { editorId = possibleA fromAttrToStr "id" as
	  , editorLang = possibleA fromAttrToStr "lang" as
	  , editorRemap = possibleA fromAttrToStr "remap" as
	  , editorXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , editorRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , editorArch = possibleA fromAttrToStr "arch" as
	  , editorCondition = possibleA fromAttrToStr "condition" as
	  , editorConformance = possibleA fromAttrToStr "conformance" as
	  , editorOs = possibleA fromAttrToStr "os" as
	  , editorRevision = possibleA fromAttrToStr "revision" as
	  , editorSecurity = possibleA fromAttrToStr "security" as
	  , editorUserlevel = possibleA fromAttrToStr "userlevel" as
	  , editorVendor = possibleA fromAttrToStr "vendor" as
	  , editorRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (editorId v)
	, maybeToAttr toAttrFrStr "lang" (editorLang v)
	, maybeToAttr toAttrFrStr "remap" (editorRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (editorXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (editorRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (editorArch v)
	, maybeToAttr toAttrFrStr "condition" (editorCondition v)
	, maybeToAttr toAttrFrStr "conformance" (editorConformance v)
	, maybeToAttr toAttrFrStr "os" (editorOs v)
	, maybeToAttr toAttrFrStr "revision" (editorRevision v)
	, maybeToAttr toAttrFrStr "security" (editorSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (editorUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (editorVendor v)
	, maybeToAttr toAttrFrStr "role" (editorRole v)
	]
instance XmlAttrType Editor_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Editor_Revisionflag_Changed
	    translate "added" = Just Editor_Revisionflag_Added
	    translate "deleted" = Just Editor_Revisionflag_Deleted
	    translate "off" = Just Editor_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Editor_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Editor_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Editor_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Editor_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Isbn where
    fromElem (CElem (Elem "isbn" as c0):rest) =
	(\(a,ca)->
	   (Just (Isbn (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Isbn as a) =
	[CElem (Elem "isbn" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Isbn_Attrs where
    fromAttrs as =
	Isbn_Attrs
	  { isbnId = possibleA fromAttrToStr "id" as
	  , isbnLang = possibleA fromAttrToStr "lang" as
	  , isbnRemap = possibleA fromAttrToStr "remap" as
	  , isbnXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , isbnRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , isbnArch = possibleA fromAttrToStr "arch" as
	  , isbnCondition = possibleA fromAttrToStr "condition" as
	  , isbnConformance = possibleA fromAttrToStr "conformance" as
	  , isbnOs = possibleA fromAttrToStr "os" as
	  , isbnRevision = possibleA fromAttrToStr "revision" as
	  , isbnSecurity = possibleA fromAttrToStr "security" as
	  , isbnUserlevel = possibleA fromAttrToStr "userlevel" as
	  , isbnVendor = possibleA fromAttrToStr "vendor" as
	  , isbnRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (isbnId v)
	, maybeToAttr toAttrFrStr "lang" (isbnLang v)
	, maybeToAttr toAttrFrStr "remap" (isbnRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (isbnXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (isbnRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (isbnArch v)
	, maybeToAttr toAttrFrStr "condition" (isbnCondition v)
	, maybeToAttr toAttrFrStr "conformance" (isbnConformance v)
	, maybeToAttr toAttrFrStr "os" (isbnOs v)
	, maybeToAttr toAttrFrStr "revision" (isbnRevision v)
	, maybeToAttr toAttrFrStr "security" (isbnSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (isbnUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (isbnVendor v)
	, maybeToAttr toAttrFrStr "role" (isbnRole v)
	]
instance XmlContent Isbn_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Isbn_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Isbn_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Isbn_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Isbn_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Isbn_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Isbn_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Isbn_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Isbn_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Isbn_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Isbn_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Isbn_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Isbn_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Isbn_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Isbn_Str a) = toText a
    toElem (Isbn_Link a) = toElem a
    toElem (Isbn_Olink a) = toElem a
    toElem (Isbn_Ulink a) = toElem a
    toElem (Isbn_Emphasis a) = toElem a
    toElem (Isbn_Trademark a) = toElem a
    toElem (Isbn_Replaceable a) = toElem a
    toElem (Isbn_Remark a) = toElem a
    toElem (Isbn_Subscript a) = toElem a
    toElem (Isbn_Superscript a) = toElem a
    toElem (Isbn_Inlinegraphic a) = toElem a
    toElem (Isbn_Inlinemediaobject a) = toElem a
    toElem (Isbn_Indexterm a) = toElem a
instance XmlAttrType Isbn_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Isbn_Revisionflag_Changed
	    translate "added" = Just Isbn_Revisionflag_Added
	    translate "deleted" = Just Isbn_Revisionflag_Deleted
	    translate "off" = Just Isbn_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Isbn_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Isbn_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Isbn_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Isbn_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Issn where
    fromElem (CElem (Elem "issn" as c0):rest) =
	(\(a,ca)->
	   (Just (Issn (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Issn as a) =
	[CElem (Elem "issn" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Issn_Attrs where
    fromAttrs as =
	Issn_Attrs
	  { issnId = possibleA fromAttrToStr "id" as
	  , issnLang = possibleA fromAttrToStr "lang" as
	  , issnRemap = possibleA fromAttrToStr "remap" as
	  , issnXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , issnRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , issnArch = possibleA fromAttrToStr "arch" as
	  , issnCondition = possibleA fromAttrToStr "condition" as
	  , issnConformance = possibleA fromAttrToStr "conformance" as
	  , issnOs = possibleA fromAttrToStr "os" as
	  , issnRevision = possibleA fromAttrToStr "revision" as
	  , issnSecurity = possibleA fromAttrToStr "security" as
	  , issnUserlevel = possibleA fromAttrToStr "userlevel" as
	  , issnVendor = possibleA fromAttrToStr "vendor" as
	  , issnRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (issnId v)
	, maybeToAttr toAttrFrStr "lang" (issnLang v)
	, maybeToAttr toAttrFrStr "remap" (issnRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (issnXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (issnRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (issnArch v)
	, maybeToAttr toAttrFrStr "condition" (issnCondition v)
	, maybeToAttr toAttrFrStr "conformance" (issnConformance v)
	, maybeToAttr toAttrFrStr "os" (issnOs v)
	, maybeToAttr toAttrFrStr "revision" (issnRevision v)
	, maybeToAttr toAttrFrStr "security" (issnSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (issnUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (issnVendor v)
	, maybeToAttr toAttrFrStr "role" (issnRole v)
	]
instance XmlContent Issn_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Issn_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Issn_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Issn_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Issn_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Issn_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Issn_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Issn_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Issn_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Issn_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Issn_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Issn_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Issn_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Issn_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Issn_Str a) = toText a
    toElem (Issn_Link a) = toElem a
    toElem (Issn_Olink a) = toElem a
    toElem (Issn_Ulink a) = toElem a
    toElem (Issn_Emphasis a) = toElem a
    toElem (Issn_Trademark a) = toElem a
    toElem (Issn_Replaceable a) = toElem a
    toElem (Issn_Remark a) = toElem a
    toElem (Issn_Subscript a) = toElem a
    toElem (Issn_Superscript a) = toElem a
    toElem (Issn_Inlinegraphic a) = toElem a
    toElem (Issn_Inlinemediaobject a) = toElem a
    toElem (Issn_Indexterm a) = toElem a
instance XmlAttrType Issn_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Issn_Revisionflag_Changed
	    translate "added" = Just Issn_Revisionflag_Added
	    translate "deleted" = Just Issn_Revisionflag_Deleted
	    translate "off" = Just Issn_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Issn_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Issn_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Issn_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Issn_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Biblioid where
    fromElem (CElem (Elem "biblioid" as c0):rest) =
	(\(a,ca)->
	   (Just (Biblioid (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Biblioid as a) =
	[CElem (Elem "biblioid" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Biblioid_Attrs where
    fromAttrs as =
	Biblioid_Attrs
	  { biblioidClass = possibleA fromAttrToTyp "class" as
	  , biblioidOtherclass = possibleA fromAttrToStr "otherclass" as
	  , biblioidId = possibleA fromAttrToStr "id" as
	  , biblioidLang = possibleA fromAttrToStr "lang" as
	  , biblioidRemap = possibleA fromAttrToStr "remap" as
	  , biblioidXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , biblioidRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , biblioidArch = possibleA fromAttrToStr "arch" as
	  , biblioidCondition = possibleA fromAttrToStr "condition" as
	  , biblioidConformance = possibleA fromAttrToStr "conformance" as
	  , biblioidOs = possibleA fromAttrToStr "os" as
	  , biblioidRevision = possibleA fromAttrToStr "revision" as
	  , biblioidSecurity = possibleA fromAttrToStr "security" as
	  , biblioidUserlevel = possibleA fromAttrToStr "userlevel" as
	  , biblioidVendor = possibleA fromAttrToStr "vendor" as
	  , biblioidRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "class" (biblioidClass v)
	, maybeToAttr toAttrFrStr "otherclass" (biblioidOtherclass v)
	, maybeToAttr toAttrFrStr "id" (biblioidId v)
	, maybeToAttr toAttrFrStr "lang" (biblioidLang v)
	, maybeToAttr toAttrFrStr "remap" (biblioidRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (biblioidXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (biblioidRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (biblioidArch v)
	, maybeToAttr toAttrFrStr "condition" (biblioidCondition v)
	, maybeToAttr toAttrFrStr "conformance" (biblioidConformance v)
	, maybeToAttr toAttrFrStr "os" (biblioidOs v)
	, maybeToAttr toAttrFrStr "revision" (biblioidRevision v)
	, maybeToAttr toAttrFrStr "security" (biblioidSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (biblioidUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (biblioidVendor v)
	, maybeToAttr toAttrFrStr "role" (biblioidRole v)
	]
instance XmlContent Biblioid_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Biblioid_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Biblioid_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Biblioid_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Biblioid_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Biblioid_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Biblioid_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Biblioid_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Biblioid_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Biblioid_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Biblioid_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Biblioid_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Biblioid_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Biblioid_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Biblioid_Str a) = toText a
    toElem (Biblioid_Link a) = toElem a
    toElem (Biblioid_Olink a) = toElem a
    toElem (Biblioid_Ulink a) = toElem a
    toElem (Biblioid_Emphasis a) = toElem a
    toElem (Biblioid_Trademark a) = toElem a
    toElem (Biblioid_Replaceable a) = toElem a
    toElem (Biblioid_Remark a) = toElem a
    toElem (Biblioid_Subscript a) = toElem a
    toElem (Biblioid_Superscript a) = toElem a
    toElem (Biblioid_Inlinegraphic a) = toElem a
    toElem (Biblioid_Inlinemediaobject a) = toElem a
    toElem (Biblioid_Indexterm a) = toElem a
instance XmlAttrType Biblioid_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "uri" = Just Biblioid_Class_Uri
	    translate "doi" = Just Biblioid_Class_Doi
	    translate "isbn" = Just Biblioid_Class_Isbn
	    translate "issn" = Just Biblioid_Class_Issn
	    translate "libraryofcongress" = Just Biblioid_Class_Libraryofcongress
	    translate "pubnumber" = Just Biblioid_Class_Pubnumber
	    translate "other" = Just Biblioid_Class_Other
	    translate _ = Nothing
    toAttrFrTyp n Biblioid_Class_Uri = Just (n, str2attr "uri")
    toAttrFrTyp n Biblioid_Class_Doi = Just (n, str2attr "doi")
    toAttrFrTyp n Biblioid_Class_Isbn = Just (n, str2attr "isbn")
    toAttrFrTyp n Biblioid_Class_Issn = Just (n, str2attr "issn")
    toAttrFrTyp n Biblioid_Class_Libraryofcongress = Just (n, str2attr "libraryofcongress")
    toAttrFrTyp n Biblioid_Class_Pubnumber = Just (n, str2attr "pubnumber")
    toAttrFrTyp n Biblioid_Class_Other = Just (n, str2attr "other")
instance XmlAttrType Biblioid_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Biblioid_Revisionflag_Changed
	    translate "added" = Just Biblioid_Revisionflag_Added
	    translate "deleted" = Just Biblioid_Revisionflag_Deleted
	    translate "off" = Just Biblioid_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Biblioid_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Biblioid_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Biblioid_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Biblioid_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Citebiblioid where
    fromElem (CElem (Elem "citebiblioid" as c0):rest) =
	(\(a,ca)->
	   (Just (Citebiblioid (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Citebiblioid as a) =
	[CElem (Elem "citebiblioid" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Citebiblioid_Attrs where
    fromAttrs as =
	Citebiblioid_Attrs
	  { citebiblioidClass = possibleA fromAttrToTyp "class" as
	  , citebiblioidOtherclass = possibleA fromAttrToStr "otherclass" as
	  , citebiblioidId = possibleA fromAttrToStr "id" as
	  , citebiblioidLang = possibleA fromAttrToStr "lang" as
	  , citebiblioidRemap = possibleA fromAttrToStr "remap" as
	  , citebiblioidXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , citebiblioidRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , citebiblioidArch = possibleA fromAttrToStr "arch" as
	  , citebiblioidCondition = possibleA fromAttrToStr "condition" as
	  , citebiblioidConformance = possibleA fromAttrToStr "conformance" as
	  , citebiblioidOs = possibleA fromAttrToStr "os" as
	  , citebiblioidRevision = possibleA fromAttrToStr "revision" as
	  , citebiblioidSecurity = possibleA fromAttrToStr "security" as
	  , citebiblioidUserlevel = possibleA fromAttrToStr "userlevel" as
	  , citebiblioidVendor = possibleA fromAttrToStr "vendor" as
	  , citebiblioidRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "class" (citebiblioidClass v)
	, maybeToAttr toAttrFrStr "otherclass" (citebiblioidOtherclass v)
	, maybeToAttr toAttrFrStr "id" (citebiblioidId v)
	, maybeToAttr toAttrFrStr "lang" (citebiblioidLang v)
	, maybeToAttr toAttrFrStr "remap" (citebiblioidRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (citebiblioidXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (citebiblioidRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (citebiblioidArch v)
	, maybeToAttr toAttrFrStr "condition" (citebiblioidCondition v)
	, maybeToAttr toAttrFrStr "conformance" (citebiblioidConformance v)
	, maybeToAttr toAttrFrStr "os" (citebiblioidOs v)
	, maybeToAttr toAttrFrStr "revision" (citebiblioidRevision v)
	, maybeToAttr toAttrFrStr "security" (citebiblioidSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (citebiblioidUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (citebiblioidVendor v)
	, maybeToAttr toAttrFrStr "role" (citebiblioidRole v)
	]
instance XmlContent Citebiblioid_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Citebiblioid_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Citebiblioid_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Citebiblioid_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Citebiblioid_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Citebiblioid_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Citebiblioid_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Citebiblioid_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Citebiblioid_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Citebiblioid_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Citebiblioid_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Citebiblioid_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Citebiblioid_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Citebiblioid_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Citebiblioid_Str a) = toText a
    toElem (Citebiblioid_Link a) = toElem a
    toElem (Citebiblioid_Olink a) = toElem a
    toElem (Citebiblioid_Ulink a) = toElem a
    toElem (Citebiblioid_Emphasis a) = toElem a
    toElem (Citebiblioid_Trademark a) = toElem a
    toElem (Citebiblioid_Replaceable a) = toElem a
    toElem (Citebiblioid_Remark a) = toElem a
    toElem (Citebiblioid_Subscript a) = toElem a
    toElem (Citebiblioid_Superscript a) = toElem a
    toElem (Citebiblioid_Inlinegraphic a) = toElem a
    toElem (Citebiblioid_Inlinemediaobject a) = toElem a
    toElem (Citebiblioid_Indexterm a) = toElem a
instance XmlAttrType Citebiblioid_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "uri" = Just Citebiblioid_Class_Uri
	    translate "doi" = Just Citebiblioid_Class_Doi
	    translate "isbn" = Just Citebiblioid_Class_Isbn
	    translate "issn" = Just Citebiblioid_Class_Issn
	    translate "libraryofcongress" = Just Citebiblioid_Class_Libraryofcongress
	    translate "pubnumber" = Just Citebiblioid_Class_Pubnumber
	    translate "other" = Just Citebiblioid_Class_Other
	    translate _ = Nothing
    toAttrFrTyp n Citebiblioid_Class_Uri = Just (n, str2attr "uri")
    toAttrFrTyp n Citebiblioid_Class_Doi = Just (n, str2attr "doi")
    toAttrFrTyp n Citebiblioid_Class_Isbn = Just (n, str2attr "isbn")
    toAttrFrTyp n Citebiblioid_Class_Issn = Just (n, str2attr "issn")
    toAttrFrTyp n Citebiblioid_Class_Libraryofcongress = Just (n, str2attr "libraryofcongress")
    toAttrFrTyp n Citebiblioid_Class_Pubnumber = Just (n, str2attr "pubnumber")
    toAttrFrTyp n Citebiblioid_Class_Other = Just (n, str2attr "other")
instance XmlAttrType Citebiblioid_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Citebiblioid_Revisionflag_Changed
	    translate "added" = Just Citebiblioid_Revisionflag_Added
	    translate "deleted" = Just Citebiblioid_Revisionflag_Deleted
	    translate "off" = Just Citebiblioid_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Citebiblioid_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Citebiblioid_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Citebiblioid_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Citebiblioid_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Bibliosource where
    fromElem (CElem (Elem "bibliosource" as c0):rest) =
	(\(a,ca)->
	   (Just (Bibliosource (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bibliosource as a) =
	[CElem (Elem "bibliosource" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Bibliosource_Attrs where
    fromAttrs as =
	Bibliosource_Attrs
	  { bibliosourceClass = possibleA fromAttrToTyp "class" as
	  , bibliosourceOtherclass = possibleA fromAttrToStr "otherclass" as
	  , bibliosourceId = possibleA fromAttrToStr "id" as
	  , bibliosourceLang = possibleA fromAttrToStr "lang" as
	  , bibliosourceRemap = possibleA fromAttrToStr "remap" as
	  , bibliosourceXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , bibliosourceRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , bibliosourceArch = possibleA fromAttrToStr "arch" as
	  , bibliosourceCondition = possibleA fromAttrToStr "condition" as
	  , bibliosourceConformance = possibleA fromAttrToStr "conformance" as
	  , bibliosourceOs = possibleA fromAttrToStr "os" as
	  , bibliosourceRevision = possibleA fromAttrToStr "revision" as
	  , bibliosourceSecurity = possibleA fromAttrToStr "security" as
	  , bibliosourceUserlevel = possibleA fromAttrToStr "userlevel" as
	  , bibliosourceVendor = possibleA fromAttrToStr "vendor" as
	  , bibliosourceRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "class" (bibliosourceClass v)
	, maybeToAttr toAttrFrStr "otherclass" (bibliosourceOtherclass v)
	, maybeToAttr toAttrFrStr "id" (bibliosourceId v)
	, maybeToAttr toAttrFrStr "lang" (bibliosourceLang v)
	, maybeToAttr toAttrFrStr "remap" (bibliosourceRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (bibliosourceXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (bibliosourceRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (bibliosourceArch v)
	, maybeToAttr toAttrFrStr "condition" (bibliosourceCondition v)
	, maybeToAttr toAttrFrStr "conformance" (bibliosourceConformance v)
	, maybeToAttr toAttrFrStr "os" (bibliosourceOs v)
	, maybeToAttr toAttrFrStr "revision" (bibliosourceRevision v)
	, maybeToAttr toAttrFrStr "security" (bibliosourceSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (bibliosourceUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (bibliosourceVendor v)
	, maybeToAttr toAttrFrStr "role" (bibliosourceRole v)
	]
instance XmlContent Bibliosource_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Bibliosource_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Bibliosource_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Bibliosource_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Bibliosource_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Bibliosource_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Bibliosource_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Bibliosource_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Bibliosource_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Bibliosource_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Bibliosource_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Bibliosource_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Bibliosource_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Bibliosource_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bibliosource_Str a) = toText a
    toElem (Bibliosource_Link a) = toElem a
    toElem (Bibliosource_Olink a) = toElem a
    toElem (Bibliosource_Ulink a) = toElem a
    toElem (Bibliosource_Emphasis a) = toElem a
    toElem (Bibliosource_Trademark a) = toElem a
    toElem (Bibliosource_Replaceable a) = toElem a
    toElem (Bibliosource_Remark a) = toElem a
    toElem (Bibliosource_Subscript a) = toElem a
    toElem (Bibliosource_Superscript a) = toElem a
    toElem (Bibliosource_Inlinegraphic a) = toElem a
    toElem (Bibliosource_Inlinemediaobject a) = toElem a
    toElem (Bibliosource_Indexterm a) = toElem a
instance XmlAttrType Bibliosource_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "uri" = Just Bibliosource_Class_Uri
	    translate "doi" = Just Bibliosource_Class_Doi
	    translate "isbn" = Just Bibliosource_Class_Isbn
	    translate "issn" = Just Bibliosource_Class_Issn
	    translate "libraryofcongress" = Just Bibliosource_Class_Libraryofcongress
	    translate "pubnumber" = Just Bibliosource_Class_Pubnumber
	    translate "other" = Just Bibliosource_Class_Other
	    translate _ = Nothing
    toAttrFrTyp n Bibliosource_Class_Uri = Just (n, str2attr "uri")
    toAttrFrTyp n Bibliosource_Class_Doi = Just (n, str2attr "doi")
    toAttrFrTyp n Bibliosource_Class_Isbn = Just (n, str2attr "isbn")
    toAttrFrTyp n Bibliosource_Class_Issn = Just (n, str2attr "issn")
    toAttrFrTyp n Bibliosource_Class_Libraryofcongress = Just (n, str2attr "libraryofcongress")
    toAttrFrTyp n Bibliosource_Class_Pubnumber = Just (n, str2attr "pubnumber")
    toAttrFrTyp n Bibliosource_Class_Other = Just (n, str2attr "other")
instance XmlAttrType Bibliosource_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Bibliosource_Revisionflag_Changed
	    translate "added" = Just Bibliosource_Revisionflag_Added
	    translate "deleted" = Just Bibliosource_Revisionflag_Deleted
	    translate "off" = Just Bibliosource_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Bibliosource_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Bibliosource_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Bibliosource_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Bibliosource_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Bibliorelation where
    fromElem (CElem (Elem "bibliorelation" as c0):rest) =
	(\(a,ca)->
	   (Just (Bibliorelation (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bibliorelation as a) =
	[CElem (Elem "bibliorelation" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Bibliorelation_Attrs where
    fromAttrs as =
	Bibliorelation_Attrs
	  { bibliorelationClass = possibleA fromAttrToTyp "class" as
	  , bibliorelationOtherclass = possibleA fromAttrToStr "otherclass" as
	  , bibliorelationType = possibleA fromAttrToTyp "type" as
	  , bibliorelationOthertype = possibleA fromAttrToStr "othertype" as
	  , bibliorelationId = possibleA fromAttrToStr "id" as
	  , bibliorelationLang = possibleA fromAttrToStr "lang" as
	  , bibliorelationRemap = possibleA fromAttrToStr "remap" as
	  , bibliorelationXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , bibliorelationRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , bibliorelationArch = possibleA fromAttrToStr "arch" as
	  , bibliorelationCondition = possibleA fromAttrToStr "condition" as
	  , bibliorelationConformance = possibleA fromAttrToStr "conformance" as
	  , bibliorelationOs = possibleA fromAttrToStr "os" as
	  , bibliorelationRevision = possibleA fromAttrToStr "revision" as
	  , bibliorelationSecurity = possibleA fromAttrToStr "security" as
	  , bibliorelationUserlevel = possibleA fromAttrToStr "userlevel" as
	  , bibliorelationVendor = possibleA fromAttrToStr "vendor" as
	  , bibliorelationRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "class" (bibliorelationClass v)
	, maybeToAttr toAttrFrStr "otherclass" (bibliorelationOtherclass v)
	, maybeToAttr toAttrFrTyp "type" (bibliorelationType v)
	, maybeToAttr toAttrFrStr "othertype" (bibliorelationOthertype v)
	, maybeToAttr toAttrFrStr "id" (bibliorelationId v)
	, maybeToAttr toAttrFrStr "lang" (bibliorelationLang v)
	, maybeToAttr toAttrFrStr "remap" (bibliorelationRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (bibliorelationXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (bibliorelationRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (bibliorelationArch v)
	, maybeToAttr toAttrFrStr "condition" (bibliorelationCondition v)
	, maybeToAttr toAttrFrStr "conformance" (bibliorelationConformance v)
	, maybeToAttr toAttrFrStr "os" (bibliorelationOs v)
	, maybeToAttr toAttrFrStr "revision" (bibliorelationRevision v)
	, maybeToAttr toAttrFrStr "security" (bibliorelationSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (bibliorelationUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (bibliorelationVendor v)
	, maybeToAttr toAttrFrStr "role" (bibliorelationRole v)
	]
instance XmlContent Bibliorelation_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Bibliorelation_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Bibliorelation_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Bibliorelation_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Bibliorelation_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Bibliorelation_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Bibliorelation_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Bibliorelation_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Bibliorelation_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Bibliorelation_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Bibliorelation_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Bibliorelation_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Bibliorelation_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Bibliorelation_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bibliorelation_Str a) = toText a
    toElem (Bibliorelation_Link a) = toElem a
    toElem (Bibliorelation_Olink a) = toElem a
    toElem (Bibliorelation_Ulink a) = toElem a
    toElem (Bibliorelation_Emphasis a) = toElem a
    toElem (Bibliorelation_Trademark a) = toElem a
    toElem (Bibliorelation_Replaceable a) = toElem a
    toElem (Bibliorelation_Remark a) = toElem a
    toElem (Bibliorelation_Subscript a) = toElem a
    toElem (Bibliorelation_Superscript a) = toElem a
    toElem (Bibliorelation_Inlinegraphic a) = toElem a
    toElem (Bibliorelation_Inlinemediaobject a) = toElem a
    toElem (Bibliorelation_Indexterm a) = toElem a
instance XmlAttrType Bibliorelation_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "uri" = Just Bibliorelation_Class_Uri
	    translate "doi" = Just Bibliorelation_Class_Doi
	    translate "isbn" = Just Bibliorelation_Class_Isbn
	    translate "issn" = Just Bibliorelation_Class_Issn
	    translate "libraryofcongress" = Just Bibliorelation_Class_Libraryofcongress
	    translate "pubnumber" = Just Bibliorelation_Class_Pubnumber
	    translate "other" = Just Bibliorelation_Class_Other
	    translate _ = Nothing
    toAttrFrTyp n Bibliorelation_Class_Uri = Just (n, str2attr "uri")
    toAttrFrTyp n Bibliorelation_Class_Doi = Just (n, str2attr "doi")
    toAttrFrTyp n Bibliorelation_Class_Isbn = Just (n, str2attr "isbn")
    toAttrFrTyp n Bibliorelation_Class_Issn = Just (n, str2attr "issn")
    toAttrFrTyp n Bibliorelation_Class_Libraryofcongress = Just (n, str2attr "libraryofcongress")
    toAttrFrTyp n Bibliorelation_Class_Pubnumber = Just (n, str2attr "pubnumber")
    toAttrFrTyp n Bibliorelation_Class_Other = Just (n, str2attr "other")
instance XmlAttrType Bibliorelation_Type where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "isversionof" = Just Bibliorelation_Type_Isversionof
	    translate "hasversion" = Just Bibliorelation_Type_Hasversion
	    translate "isreplacedby" = Just Bibliorelation_Type_Isreplacedby
	    translate "replaces" = Just Bibliorelation_Type_Replaces
	    translate "isrequiredby" = Just Bibliorelation_Type_Isrequiredby
	    translate "requires" = Just Bibliorelation_Type_Requires
	    translate "ispartof" = Just Bibliorelation_Type_Ispartof
	    translate "haspart" = Just Bibliorelation_Type_Haspart
	    translate "isreferencedby" = Just Bibliorelation_Type_Isreferencedby
	    translate "references" = Just Bibliorelation_Type_References
	    translate "isformatof" = Just Bibliorelation_Type_Isformatof
	    translate "hasformat" = Just Bibliorelation_Type_Hasformat
	    translate "othertype" = Just Bibliorelation_Type_Othertype
	    translate _ = Nothing
    toAttrFrTyp n Bibliorelation_Type_Isversionof = Just (n, str2attr "isversionof")
    toAttrFrTyp n Bibliorelation_Type_Hasversion = Just (n, str2attr "hasversion")
    toAttrFrTyp n Bibliorelation_Type_Isreplacedby = Just (n, str2attr "isreplacedby")
    toAttrFrTyp n Bibliorelation_Type_Replaces = Just (n, str2attr "replaces")
    toAttrFrTyp n Bibliorelation_Type_Isrequiredby = Just (n, str2attr "isrequiredby")
    toAttrFrTyp n Bibliorelation_Type_Requires = Just (n, str2attr "requires")
    toAttrFrTyp n Bibliorelation_Type_Ispartof = Just (n, str2attr "ispartof")
    toAttrFrTyp n Bibliorelation_Type_Haspart = Just (n, str2attr "haspart")
    toAttrFrTyp n Bibliorelation_Type_Isreferencedby = Just (n, str2attr "isreferencedby")
    toAttrFrTyp n Bibliorelation_Type_References = Just (n, str2attr "references")
    toAttrFrTyp n Bibliorelation_Type_Isformatof = Just (n, str2attr "isformatof")
    toAttrFrTyp n Bibliorelation_Type_Hasformat = Just (n, str2attr "hasformat")
    toAttrFrTyp n Bibliorelation_Type_Othertype = Just (n, str2attr "othertype")
instance XmlAttrType Bibliorelation_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Bibliorelation_Revisionflag_Changed
	    translate "added" = Just Bibliorelation_Revisionflag_Added
	    translate "deleted" = Just Bibliorelation_Revisionflag_Deleted
	    translate "off" = Just Bibliorelation_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Bibliorelation_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Bibliorelation_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Bibliorelation_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Bibliorelation_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Bibliocoverage where
    fromElem (CElem (Elem "bibliocoverage" as c0):rest) =
	(\(a,ca)->
	   (Just (Bibliocoverage (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bibliocoverage as a) =
	[CElem (Elem "bibliocoverage" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Bibliocoverage_Attrs where
    fromAttrs as =
	Bibliocoverage_Attrs
	  { bibliocoverageSpatial = possibleA fromAttrToTyp "spatial" as
	  , bibliocoverageOtherspatial = possibleA fromAttrToStr "otherspatial" as
	  , bibliocoverageTemporal = possibleA fromAttrToTyp "temporal" as
	  , bibliocoverageOthertemporal = possibleA fromAttrToStr "othertemporal" as
	  , bibliocoverageId = possibleA fromAttrToStr "id" as
	  , bibliocoverageLang = possibleA fromAttrToStr "lang" as
	  , bibliocoverageRemap = possibleA fromAttrToStr "remap" as
	  , bibliocoverageXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , bibliocoverageRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , bibliocoverageArch = possibleA fromAttrToStr "arch" as
	  , bibliocoverageCondition = possibleA fromAttrToStr "condition" as
	  , bibliocoverageConformance = possibleA fromAttrToStr "conformance" as
	  , bibliocoverageOs = possibleA fromAttrToStr "os" as
	  , bibliocoverageRevision = possibleA fromAttrToStr "revision" as
	  , bibliocoverageSecurity = possibleA fromAttrToStr "security" as
	  , bibliocoverageUserlevel = possibleA fromAttrToStr "userlevel" as
	  , bibliocoverageVendor = possibleA fromAttrToStr "vendor" as
	  , bibliocoverageRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "spatial" (bibliocoverageSpatial v)
	, maybeToAttr toAttrFrStr "otherspatial" (bibliocoverageOtherspatial v)
	, maybeToAttr toAttrFrTyp "temporal" (bibliocoverageTemporal v)
	, maybeToAttr toAttrFrStr "othertemporal" (bibliocoverageOthertemporal v)
	, maybeToAttr toAttrFrStr "id" (bibliocoverageId v)
	, maybeToAttr toAttrFrStr "lang" (bibliocoverageLang v)
	, maybeToAttr toAttrFrStr "remap" (bibliocoverageRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (bibliocoverageXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (bibliocoverageRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (bibliocoverageArch v)
	, maybeToAttr toAttrFrStr "condition" (bibliocoverageCondition v)
	, maybeToAttr toAttrFrStr "conformance" (bibliocoverageConformance v)
	, maybeToAttr toAttrFrStr "os" (bibliocoverageOs v)
	, maybeToAttr toAttrFrStr "revision" (bibliocoverageRevision v)
	, maybeToAttr toAttrFrStr "security" (bibliocoverageSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (bibliocoverageUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (bibliocoverageVendor v)
	, maybeToAttr toAttrFrStr "role" (bibliocoverageRole v)
	]
instance XmlContent Bibliocoverage_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Bibliocoverage_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Bibliocoverage_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Bibliocoverage_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Bibliocoverage_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Bibliocoverage_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Bibliocoverage_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Bibliocoverage_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Bibliocoverage_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Bibliocoverage_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Bibliocoverage_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Bibliocoverage_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Bibliocoverage_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Bibliocoverage_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bibliocoverage_Str a) = toText a
    toElem (Bibliocoverage_Link a) = toElem a
    toElem (Bibliocoverage_Olink a) = toElem a
    toElem (Bibliocoverage_Ulink a) = toElem a
    toElem (Bibliocoverage_Emphasis a) = toElem a
    toElem (Bibliocoverage_Trademark a) = toElem a
    toElem (Bibliocoverage_Replaceable a) = toElem a
    toElem (Bibliocoverage_Remark a) = toElem a
    toElem (Bibliocoverage_Subscript a) = toElem a
    toElem (Bibliocoverage_Superscript a) = toElem a
    toElem (Bibliocoverage_Inlinegraphic a) = toElem a
    toElem (Bibliocoverage_Inlinemediaobject a) = toElem a
    toElem (Bibliocoverage_Indexterm a) = toElem a
instance XmlAttrType Bibliocoverage_Spatial where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "dcmipoint" = Just Bibliocoverage_Spatial_Dcmipoint
	    translate "iso3166" = Just Bibliocoverage_Spatial_Iso3166
	    translate "dcmibox" = Just Bibliocoverage_Spatial_Dcmibox
	    translate "tgn" = Just Bibliocoverage_Spatial_Tgn
	    translate "otherspatial" = Just Bibliocoverage_Spatial_Otherspatial
	    translate _ = Nothing
    toAttrFrTyp n Bibliocoverage_Spatial_Dcmipoint = Just (n, str2attr "dcmipoint")
    toAttrFrTyp n Bibliocoverage_Spatial_Iso3166 = Just (n, str2attr "iso3166")
    toAttrFrTyp n Bibliocoverage_Spatial_Dcmibox = Just (n, str2attr "dcmibox")
    toAttrFrTyp n Bibliocoverage_Spatial_Tgn = Just (n, str2attr "tgn")
    toAttrFrTyp n Bibliocoverage_Spatial_Otherspatial = Just (n, str2attr "otherspatial")
instance XmlAttrType Bibliocoverage_Temporal where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "dcmiperiod" = Just Bibliocoverage_Temporal_Dcmiperiod
	    translate "w3c-dtf" = Just Bibliocoverage_Temporal_W3c_dtf
	    translate "othertemporal" = Just Bibliocoverage_Temporal_Othertemporal
	    translate _ = Nothing
    toAttrFrTyp n Bibliocoverage_Temporal_Dcmiperiod = Just (n, str2attr "dcmiperiod")
    toAttrFrTyp n Bibliocoverage_Temporal_W3c_dtf = Just (n, str2attr "w3c-dtf")
    toAttrFrTyp n Bibliocoverage_Temporal_Othertemporal = Just (n, str2attr "othertemporal")
instance XmlAttrType Bibliocoverage_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Bibliocoverage_Revisionflag_Changed
	    translate "added" = Just Bibliocoverage_Revisionflag_Added
	    translate "deleted" = Just Bibliocoverage_Revisionflag_Deleted
	    translate "off" = Just Bibliocoverage_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Bibliocoverage_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Bibliocoverage_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Bibliocoverage_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Bibliocoverage_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Invpartnumber where
    fromElem (CElem (Elem "invpartnumber" as c0):rest) =
	(\(a,ca)->
	   (Just (Invpartnumber (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Invpartnumber as a) =
	[CElem (Elem "invpartnumber" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Invpartnumber_Attrs where
    fromAttrs as =
	Invpartnumber_Attrs
	  { invpartnumberId = possibleA fromAttrToStr "id" as
	  , invpartnumberLang = possibleA fromAttrToStr "lang" as
	  , invpartnumberRemap = possibleA fromAttrToStr "remap" as
	  , invpartnumberXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , invpartnumberRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , invpartnumberArch = possibleA fromAttrToStr "arch" as
	  , invpartnumberCondition = possibleA fromAttrToStr "condition" as
	  , invpartnumberConformance = possibleA fromAttrToStr "conformance" as
	  , invpartnumberOs = possibleA fromAttrToStr "os" as
	  , invpartnumberRevision = possibleA fromAttrToStr "revision" as
	  , invpartnumberSecurity = possibleA fromAttrToStr "security" as
	  , invpartnumberUserlevel = possibleA fromAttrToStr "userlevel" as
	  , invpartnumberVendor = possibleA fromAttrToStr "vendor" as
	  , invpartnumberRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (invpartnumberId v)
	, maybeToAttr toAttrFrStr "lang" (invpartnumberLang v)
	, maybeToAttr toAttrFrStr "remap" (invpartnumberRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (invpartnumberXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (invpartnumberRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (invpartnumberArch v)
	, maybeToAttr toAttrFrStr "condition" (invpartnumberCondition v)
	, maybeToAttr toAttrFrStr "conformance" (invpartnumberConformance v)
	, maybeToAttr toAttrFrStr "os" (invpartnumberOs v)
	, maybeToAttr toAttrFrStr "revision" (invpartnumberRevision v)
	, maybeToAttr toAttrFrStr "security" (invpartnumberSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (invpartnumberUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (invpartnumberVendor v)
	, maybeToAttr toAttrFrStr "role" (invpartnumberRole v)
	]
instance XmlContent Invpartnumber_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Invpartnumber_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Invpartnumber_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Invpartnumber_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Invpartnumber_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Invpartnumber_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Invpartnumber_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Invpartnumber_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Invpartnumber_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Invpartnumber_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Invpartnumber_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Invpartnumber_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Invpartnumber_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Invpartnumber_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Invpartnumber_Str a) = toText a
    toElem (Invpartnumber_Link a) = toElem a
    toElem (Invpartnumber_Olink a) = toElem a
    toElem (Invpartnumber_Ulink a) = toElem a
    toElem (Invpartnumber_Emphasis a) = toElem a
    toElem (Invpartnumber_Trademark a) = toElem a
    toElem (Invpartnumber_Replaceable a) = toElem a
    toElem (Invpartnumber_Remark a) = toElem a
    toElem (Invpartnumber_Subscript a) = toElem a
    toElem (Invpartnumber_Superscript a) = toElem a
    toElem (Invpartnumber_Inlinegraphic a) = toElem a
    toElem (Invpartnumber_Inlinemediaobject a) = toElem a
    toElem (Invpartnumber_Indexterm a) = toElem a
instance XmlAttrType Invpartnumber_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Invpartnumber_Revisionflag_Changed
	    translate "added" = Just Invpartnumber_Revisionflag_Added
	    translate "deleted" = Just Invpartnumber_Revisionflag_Deleted
	    translate "off" = Just Invpartnumber_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Invpartnumber_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Invpartnumber_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Invpartnumber_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Invpartnumber_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Issuenum where
    fromElem (CElem (Elem "issuenum" as c0):rest) =
	(\(a,ca)->
	   (Just (Issuenum (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Issuenum as a) =
	[CElem (Elem "issuenum" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Issuenum_Attrs where
    fromAttrs as =
	Issuenum_Attrs
	  { issuenumId = possibleA fromAttrToStr "id" as
	  , issuenumLang = possibleA fromAttrToStr "lang" as
	  , issuenumRemap = possibleA fromAttrToStr "remap" as
	  , issuenumXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , issuenumRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , issuenumArch = possibleA fromAttrToStr "arch" as
	  , issuenumCondition = possibleA fromAttrToStr "condition" as
	  , issuenumConformance = possibleA fromAttrToStr "conformance" as
	  , issuenumOs = possibleA fromAttrToStr "os" as
	  , issuenumRevision = possibleA fromAttrToStr "revision" as
	  , issuenumSecurity = possibleA fromAttrToStr "security" as
	  , issuenumUserlevel = possibleA fromAttrToStr "userlevel" as
	  , issuenumVendor = possibleA fromAttrToStr "vendor" as
	  , issuenumRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (issuenumId v)
	, maybeToAttr toAttrFrStr "lang" (issuenumLang v)
	, maybeToAttr toAttrFrStr "remap" (issuenumRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (issuenumXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (issuenumRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (issuenumArch v)
	, maybeToAttr toAttrFrStr "condition" (issuenumCondition v)
	, maybeToAttr toAttrFrStr "conformance" (issuenumConformance v)
	, maybeToAttr toAttrFrStr "os" (issuenumOs v)
	, maybeToAttr toAttrFrStr "revision" (issuenumRevision v)
	, maybeToAttr toAttrFrStr "security" (issuenumSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (issuenumUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (issuenumVendor v)
	, maybeToAttr toAttrFrStr "role" (issuenumRole v)
	]
instance XmlContent Issuenum_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Issuenum_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Issuenum_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Issuenum_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Issuenum_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Issuenum_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Issuenum_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Issuenum_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Issuenum_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Issuenum_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Issuenum_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Issuenum_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Issuenum_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Issuenum_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Issuenum_Str a) = toText a
    toElem (Issuenum_Link a) = toElem a
    toElem (Issuenum_Olink a) = toElem a
    toElem (Issuenum_Ulink a) = toElem a
    toElem (Issuenum_Emphasis a) = toElem a
    toElem (Issuenum_Trademark a) = toElem a
    toElem (Issuenum_Replaceable a) = toElem a
    toElem (Issuenum_Remark a) = toElem a
    toElem (Issuenum_Subscript a) = toElem a
    toElem (Issuenum_Superscript a) = toElem a
    toElem (Issuenum_Inlinegraphic a) = toElem a
    toElem (Issuenum_Inlinemediaobject a) = toElem a
    toElem (Issuenum_Indexterm a) = toElem a
instance XmlAttrType Issuenum_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Issuenum_Revisionflag_Changed
	    translate "added" = Just Issuenum_Revisionflag_Added
	    translate "deleted" = Just Issuenum_Revisionflag_Deleted
	    translate "off" = Just Issuenum_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Issuenum_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Issuenum_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Issuenum_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Issuenum_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Legalnotice where
    fromElem (CElem (Elem "legalnotice" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Legalnotice (fromAttrs as) a b c), rest))
	      (many fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Legalnotice as a b c) =
	[CElem (Elem "legalnotice" (toAttrs as) (maybe [] toElem a ++
						 maybe [] toElem b ++ concatMap toElem c))]
instance XmlAttributes Legalnotice_Attrs where
    fromAttrs as =
	Legalnotice_Attrs
	  { legalnoticeId = possibleA fromAttrToStr "id" as
	  , legalnoticeLang = possibleA fromAttrToStr "lang" as
	  , legalnoticeRemap = possibleA fromAttrToStr "remap" as
	  , legalnoticeXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , legalnoticeRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , legalnoticeArch = possibleA fromAttrToStr "arch" as
	  , legalnoticeCondition = possibleA fromAttrToStr "condition" as
	  , legalnoticeConformance = possibleA fromAttrToStr "conformance" as
	  , legalnoticeOs = possibleA fromAttrToStr "os" as
	  , legalnoticeRevision = possibleA fromAttrToStr "revision" as
	  , legalnoticeSecurity = possibleA fromAttrToStr "security" as
	  , legalnoticeUserlevel = possibleA fromAttrToStr "userlevel" as
	  , legalnoticeVendor = possibleA fromAttrToStr "vendor" as
	  , legalnoticeRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (legalnoticeId v)
	, maybeToAttr toAttrFrStr "lang" (legalnoticeLang v)
	, maybeToAttr toAttrFrStr "remap" (legalnoticeRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (legalnoticeXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (legalnoticeRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (legalnoticeArch v)
	, maybeToAttr toAttrFrStr "condition" (legalnoticeCondition v)
	, maybeToAttr toAttrFrStr "conformance" (legalnoticeConformance v)
	, maybeToAttr toAttrFrStr "os" (legalnoticeOs v)
	, maybeToAttr toAttrFrStr "revision" (legalnoticeRevision v)
	, maybeToAttr toAttrFrStr "security" (legalnoticeSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (legalnoticeUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (legalnoticeVendor v)
	, maybeToAttr toAttrFrStr "role" (legalnoticeRole v)
	]
instance XmlAttrType Legalnotice_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Legalnotice_Revisionflag_Changed
	    translate "added" = Just Legalnotice_Revisionflag_Added
	    translate "deleted" = Just Legalnotice_Revisionflag_Deleted
	    translate "off" = Just Legalnotice_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Legalnotice_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Legalnotice_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Legalnotice_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Legalnotice_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Modespec where
    fromElem (CElem (Elem "modespec" as c0):rest) =
	(\(a,ca)->
	   (Just (Modespec (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Modespec as a) =
	[CElem (Elem "modespec" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Modespec_Attrs where
    fromAttrs as =
	Modespec_Attrs
	  { modespecApplication = possibleA fromAttrToTyp "application" as
	  , modespecId = possibleA fromAttrToStr "id" as
	  , modespecLang = possibleA fromAttrToStr "lang" as
	  , modespecRemap = possibleA fromAttrToStr "remap" as
	  , modespecXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , modespecRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , modespecArch = possibleA fromAttrToStr "arch" as
	  , modespecCondition = possibleA fromAttrToStr "condition" as
	  , modespecConformance = possibleA fromAttrToStr "conformance" as
	  , modespecOs = possibleA fromAttrToStr "os" as
	  , modespecRevision = possibleA fromAttrToStr "revision" as
	  , modespecSecurity = possibleA fromAttrToStr "security" as
	  , modespecUserlevel = possibleA fromAttrToStr "userlevel" as
	  , modespecVendor = possibleA fromAttrToStr "vendor" as
	  , modespecRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "application" (modespecApplication v)
	, maybeToAttr toAttrFrStr "id" (modespecId v)
	, maybeToAttr toAttrFrStr "lang" (modespecLang v)
	, maybeToAttr toAttrFrStr "remap" (modespecRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (modespecXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (modespecRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (modespecArch v)
	, maybeToAttr toAttrFrStr "condition" (modespecCondition v)
	, maybeToAttr toAttrFrStr "conformance" (modespecConformance v)
	, maybeToAttr toAttrFrStr "os" (modespecOs v)
	, maybeToAttr toAttrFrStr "revision" (modespecRevision v)
	, maybeToAttr toAttrFrStr "security" (modespecSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (modespecUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (modespecVendor v)
	, maybeToAttr toAttrFrStr "role" (modespecRole v)
	]
instance XmlContent Modespec_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Modespec_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Modespec_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Modespec_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Modespec_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Modespec_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Modespec_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Modespec_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Modespec_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Modespec_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Modespec_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Modespec_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Modespec_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Modespec_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Modespec_Str a) = toText a
    toElem (Modespec_Link a) = toElem a
    toElem (Modespec_Olink a) = toElem a
    toElem (Modespec_Ulink a) = toElem a
    toElem (Modespec_Emphasis a) = toElem a
    toElem (Modespec_Trademark a) = toElem a
    toElem (Modespec_Replaceable a) = toElem a
    toElem (Modespec_Remark a) = toElem a
    toElem (Modespec_Subscript a) = toElem a
    toElem (Modespec_Superscript a) = toElem a
    toElem (Modespec_Inlinegraphic a) = toElem a
    toElem (Modespec_Inlinemediaobject a) = toElem a
    toElem (Modespec_Indexterm a) = toElem a
instance XmlAttrType Modespec_Application where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "BMP" = Just Modespec_Application_BMP
	    translate "CGM-CHAR" = Just Modespec_Application_CGM_CHAR
	    translate "CGM-BINARY" = Just Modespec_Application_CGM_BINARY
	    translate "CGM-CLEAR" = Just Modespec_Application_CGM_CLEAR
	    translate "DITROFF" = Just Modespec_Application_DITROFF
	    translate "DVI" = Just Modespec_Application_DVI
	    translate "EPS" = Just Modespec_Application_EPS
	    translate "EQN" = Just Modespec_Application_EQN
	    translate "FAX" = Just Modespec_Application_FAX
	    translate "GIF" = Just Modespec_Application_GIF
	    translate "GIF87a" = Just Modespec_Application_GIF87a
	    translate "GIF89a" = Just Modespec_Application_GIF89a
	    translate "JPG" = Just Modespec_Application_JPG
	    translate "JPEG" = Just Modespec_Application_JPEG
	    translate "IGES" = Just Modespec_Application_IGES
	    translate "PCX" = Just Modespec_Application_PCX
	    translate "PIC" = Just Modespec_Application_PIC
	    translate "PNG" = Just Modespec_Application_PNG
	    translate "PS" = Just Modespec_Application_PS
	    translate "SGML" = Just Modespec_Application_SGML
	    translate "TBL" = Just Modespec_Application_TBL
	    translate "TEX" = Just Modespec_Application_TEX
	    translate "TIFF" = Just Modespec_Application_TIFF
	    translate "WMF" = Just Modespec_Application_WMF
	    translate "WPG" = Just Modespec_Application_WPG
	    translate "SVG" = Just Modespec_Application_SVG
	    translate "linespecific" = Just Modespec_Application_Linespecific
	    translate _ = Nothing
    toAttrFrTyp n Modespec_Application_BMP = Just (n, str2attr "BMP")
    toAttrFrTyp n Modespec_Application_CGM_CHAR = Just (n, str2attr "CGM-CHAR")
    toAttrFrTyp n Modespec_Application_CGM_BINARY = Just (n, str2attr "CGM-BINARY")
    toAttrFrTyp n Modespec_Application_CGM_CLEAR = Just (n, str2attr "CGM-CLEAR")
    toAttrFrTyp n Modespec_Application_DITROFF = Just (n, str2attr "DITROFF")
    toAttrFrTyp n Modespec_Application_DVI = Just (n, str2attr "DVI")
    toAttrFrTyp n Modespec_Application_EPS = Just (n, str2attr "EPS")
    toAttrFrTyp n Modespec_Application_EQN = Just (n, str2attr "EQN")
    toAttrFrTyp n Modespec_Application_FAX = Just (n, str2attr "FAX")
    toAttrFrTyp n Modespec_Application_GIF = Just (n, str2attr "GIF")
    toAttrFrTyp n Modespec_Application_GIF87a = Just (n, str2attr "GIF87a")
    toAttrFrTyp n Modespec_Application_GIF89a = Just (n, str2attr "GIF89a")
    toAttrFrTyp n Modespec_Application_JPG = Just (n, str2attr "JPG")
    toAttrFrTyp n Modespec_Application_JPEG = Just (n, str2attr "JPEG")
    toAttrFrTyp n Modespec_Application_IGES = Just (n, str2attr "IGES")
    toAttrFrTyp n Modespec_Application_PCX = Just (n, str2attr "PCX")
    toAttrFrTyp n Modespec_Application_PIC = Just (n, str2attr "PIC")
    toAttrFrTyp n Modespec_Application_PNG = Just (n, str2attr "PNG")
    toAttrFrTyp n Modespec_Application_PS = Just (n, str2attr "PS")
    toAttrFrTyp n Modespec_Application_SGML = Just (n, str2attr "SGML")
    toAttrFrTyp n Modespec_Application_TBL = Just (n, str2attr "TBL")
    toAttrFrTyp n Modespec_Application_TEX = Just (n, str2attr "TEX")
    toAttrFrTyp n Modespec_Application_TIFF = Just (n, str2attr "TIFF")
    toAttrFrTyp n Modespec_Application_WMF = Just (n, str2attr "WMF")
    toAttrFrTyp n Modespec_Application_WPG = Just (n, str2attr "WPG")
    toAttrFrTyp n Modespec_Application_SVG = Just (n, str2attr "SVG")
    toAttrFrTyp n Modespec_Application_Linespecific = Just (n, str2attr "linespecific")
instance XmlAttrType Modespec_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Modespec_Revisionflag_Changed
	    translate "added" = Just Modespec_Revisionflag_Added
	    translate "deleted" = Just Modespec_Revisionflag_Deleted
	    translate "off" = Just Modespec_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Modespec_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Modespec_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Modespec_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Modespec_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Orgname where
    fromElem (CElem (Elem "orgname" as c0):rest) =
	(\(a,ca)->
	   (Just (Orgname (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Orgname as a) =
	[CElem (Elem "orgname" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Orgname_Attrs where
    fromAttrs as =
	Orgname_Attrs
	  { orgnameId = possibleA fromAttrToStr "id" as
	  , orgnameLang = possibleA fromAttrToStr "lang" as
	  , orgnameRemap = possibleA fromAttrToStr "remap" as
	  , orgnameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , orgnameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , orgnameArch = possibleA fromAttrToStr "arch" as
	  , orgnameCondition = possibleA fromAttrToStr "condition" as
	  , orgnameConformance = possibleA fromAttrToStr "conformance" as
	  , orgnameOs = possibleA fromAttrToStr "os" as
	  , orgnameRevision = possibleA fromAttrToStr "revision" as
	  , orgnameSecurity = possibleA fromAttrToStr "security" as
	  , orgnameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , orgnameVendor = possibleA fromAttrToStr "vendor" as
	  , orgnameClass = possibleA fromAttrToTyp "class" as
	  , orgnameOtherclass = possibleA fromAttrToStr "otherclass" as
	  , orgnameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (orgnameId v)
	, maybeToAttr toAttrFrStr "lang" (orgnameLang v)
	, maybeToAttr toAttrFrStr "remap" (orgnameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (orgnameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (orgnameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (orgnameArch v)
	, maybeToAttr toAttrFrStr "condition" (orgnameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (orgnameConformance v)
	, maybeToAttr toAttrFrStr "os" (orgnameOs v)
	, maybeToAttr toAttrFrStr "revision" (orgnameRevision v)
	, maybeToAttr toAttrFrStr "security" (orgnameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (orgnameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (orgnameVendor v)
	, maybeToAttr toAttrFrTyp "class" (orgnameClass v)
	, maybeToAttr toAttrFrStr "otherclass" (orgnameOtherclass v)
	, maybeToAttr toAttrFrStr "role" (orgnameRole v)
	]
instance XmlContent Orgname_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Orgname_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Orgname_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Orgname_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Orgname_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Orgname_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Orgname_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Orgname_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Orgname_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Orgname_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Orgname_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Orgname_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Orgname_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Orgname_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Orgname_Str a) = toText a
    toElem (Orgname_Link a) = toElem a
    toElem (Orgname_Olink a) = toElem a
    toElem (Orgname_Ulink a) = toElem a
    toElem (Orgname_Emphasis a) = toElem a
    toElem (Orgname_Trademark a) = toElem a
    toElem (Orgname_Replaceable a) = toElem a
    toElem (Orgname_Remark a) = toElem a
    toElem (Orgname_Subscript a) = toElem a
    toElem (Orgname_Superscript a) = toElem a
    toElem (Orgname_Inlinegraphic a) = toElem a
    toElem (Orgname_Inlinemediaobject a) = toElem a
    toElem (Orgname_Indexterm a) = toElem a
instance XmlAttrType Orgname_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Orgname_Revisionflag_Changed
	    translate "added" = Just Orgname_Revisionflag_Added
	    translate "deleted" = Just Orgname_Revisionflag_Deleted
	    translate "off" = Just Orgname_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Orgname_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Orgname_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Orgname_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Orgname_Revisionflag_Off = Just (n, str2attr "off")
instance XmlAttrType Orgname_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "corporation" = Just Orgname_Class_Corporation
	    translate "nonprofit" = Just Orgname_Class_Nonprofit
	    translate "consortium" = Just Orgname_Class_Consortium
	    translate "informal" = Just Orgname_Class_Informal
	    translate "other" = Just Orgname_Class_Other
	    translate _ = Nothing
    toAttrFrTyp n Orgname_Class_Corporation = Just (n, str2attr "corporation")
    toAttrFrTyp n Orgname_Class_Nonprofit = Just (n, str2attr "nonprofit")
    toAttrFrTyp n Orgname_Class_Consortium = Just (n, str2attr "consortium")
    toAttrFrTyp n Orgname_Class_Informal = Just (n, str2attr "informal")
    toAttrFrTyp n Orgname_Class_Other = Just (n, str2attr "other")
instance XmlContent Othercredit where
    fromElem (CElem (Elem "othercredit" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Othercredit (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(definite fromElem "OneOf" "othercredit" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Othercredit as a b) =
	[CElem (Elem "othercredit" (toAttrs as) (toElem a ++
						 concatMap toElem b))]
instance XmlAttributes Othercredit_Attrs where
    fromAttrs as =
	Othercredit_Attrs
	  { othercreditId = possibleA fromAttrToStr "id" as
	  , othercreditLang = possibleA fromAttrToStr "lang" as
	  , othercreditRemap = possibleA fromAttrToStr "remap" as
	  , othercreditXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , othercreditRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , othercreditArch = possibleA fromAttrToStr "arch" as
	  , othercreditCondition = possibleA fromAttrToStr "condition" as
	  , othercreditConformance = possibleA fromAttrToStr "conformance" as
	  , othercreditOs = possibleA fromAttrToStr "os" as
	  , othercreditRevision = possibleA fromAttrToStr "revision" as
	  , othercreditSecurity = possibleA fromAttrToStr "security" as
	  , othercreditUserlevel = possibleA fromAttrToStr "userlevel" as
	  , othercreditVendor = possibleA fromAttrToStr "vendor" as
	  , othercreditRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (othercreditId v)
	, maybeToAttr toAttrFrStr "lang" (othercreditLang v)
	, maybeToAttr toAttrFrStr "remap" (othercreditRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (othercreditXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (othercreditRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (othercreditArch v)
	, maybeToAttr toAttrFrStr "condition" (othercreditCondition v)
	, maybeToAttr toAttrFrStr "conformance" (othercreditConformance v)
	, maybeToAttr toAttrFrStr "os" (othercreditOs v)
	, maybeToAttr toAttrFrStr "revision" (othercreditRevision v)
	, maybeToAttr toAttrFrStr "security" (othercreditSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (othercreditUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (othercreditVendor v)
	, maybeToAttr toAttrFrStr "role" (othercreditRole v)
	]
instance XmlAttrType Othercredit_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Othercredit_Revisionflag_Changed
	    translate "added" = Just Othercredit_Revisionflag_Added
	    translate "deleted" = Just Othercredit_Revisionflag_Deleted
	    translate "off" = Just Othercredit_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Othercredit_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Othercredit_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Othercredit_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Othercredit_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Pagenums where
    fromElem (CElem (Elem "pagenums" as c0):rest) =
	(\(a,ca)->
	   (Just (Pagenums (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Pagenums as a) =
	[CElem (Elem "pagenums" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Pagenums_Attrs where
    fromAttrs as =
	Pagenums_Attrs
	  { pagenumsId = possibleA fromAttrToStr "id" as
	  , pagenumsLang = possibleA fromAttrToStr "lang" as
	  , pagenumsRemap = possibleA fromAttrToStr "remap" as
	  , pagenumsXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , pagenumsRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , pagenumsArch = possibleA fromAttrToStr "arch" as
	  , pagenumsCondition = possibleA fromAttrToStr "condition" as
	  , pagenumsConformance = possibleA fromAttrToStr "conformance" as
	  , pagenumsOs = possibleA fromAttrToStr "os" as
	  , pagenumsRevision = possibleA fromAttrToStr "revision" as
	  , pagenumsSecurity = possibleA fromAttrToStr "security" as
	  , pagenumsUserlevel = possibleA fromAttrToStr "userlevel" as
	  , pagenumsVendor = possibleA fromAttrToStr "vendor" as
	  , pagenumsRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (pagenumsId v)
	, maybeToAttr toAttrFrStr "lang" (pagenumsLang v)
	, maybeToAttr toAttrFrStr "remap" (pagenumsRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (pagenumsXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (pagenumsRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (pagenumsArch v)
	, maybeToAttr toAttrFrStr "condition" (pagenumsCondition v)
	, maybeToAttr toAttrFrStr "conformance" (pagenumsConformance v)
	, maybeToAttr toAttrFrStr "os" (pagenumsOs v)
	, maybeToAttr toAttrFrStr "revision" (pagenumsRevision v)
	, maybeToAttr toAttrFrStr "security" (pagenumsSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (pagenumsUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (pagenumsVendor v)
	, maybeToAttr toAttrFrStr "role" (pagenumsRole v)
	]
instance XmlContent Pagenums_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Pagenums_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Pagenums_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Pagenums_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Pagenums_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Pagenums_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Pagenums_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Pagenums_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Pagenums_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Pagenums_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Pagenums_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Pagenums_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Pagenums_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Pagenums_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Pagenums_Str a) = toText a
    toElem (Pagenums_Link a) = toElem a
    toElem (Pagenums_Olink a) = toElem a
    toElem (Pagenums_Ulink a) = toElem a
    toElem (Pagenums_Emphasis a) = toElem a
    toElem (Pagenums_Trademark a) = toElem a
    toElem (Pagenums_Replaceable a) = toElem a
    toElem (Pagenums_Remark a) = toElem a
    toElem (Pagenums_Subscript a) = toElem a
    toElem (Pagenums_Superscript a) = toElem a
    toElem (Pagenums_Inlinegraphic a) = toElem a
    toElem (Pagenums_Inlinemediaobject a) = toElem a
    toElem (Pagenums_Indexterm a) = toElem a
instance XmlAttrType Pagenums_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Pagenums_Revisionflag_Changed
	    translate "added" = Just Pagenums_Revisionflag_Added
	    translate "deleted" = Just Pagenums_Revisionflag_Deleted
	    translate "off" = Just Pagenums_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Pagenums_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Pagenums_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Pagenums_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Pagenums_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Contrib where
    fromElem (CElem (Elem "contrib" as c0):rest) =
	(\(a,ca)->
	   (Just (Contrib (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Contrib as a) =
	[CElem (Elem "contrib" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Contrib_Attrs where
    fromAttrs as =
	Contrib_Attrs
	  { contribId = possibleA fromAttrToStr "id" as
	  , contribLang = possibleA fromAttrToStr "lang" as
	  , contribRemap = possibleA fromAttrToStr "remap" as
	  , contribXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , contribRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , contribArch = possibleA fromAttrToStr "arch" as
	  , contribCondition = possibleA fromAttrToStr "condition" as
	  , contribConformance = possibleA fromAttrToStr "conformance" as
	  , contribOs = possibleA fromAttrToStr "os" as
	  , contribRevision = possibleA fromAttrToStr "revision" as
	  , contribSecurity = possibleA fromAttrToStr "security" as
	  , contribUserlevel = possibleA fromAttrToStr "userlevel" as
	  , contribVendor = possibleA fromAttrToStr "vendor" as
	  , contribRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (contribId v)
	, maybeToAttr toAttrFrStr "lang" (contribLang v)
	, maybeToAttr toAttrFrStr "remap" (contribRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (contribXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (contribRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (contribArch v)
	, maybeToAttr toAttrFrStr "condition" (contribCondition v)
	, maybeToAttr toAttrFrStr "conformance" (contribConformance v)
	, maybeToAttr toAttrFrStr "os" (contribOs v)
	, maybeToAttr toAttrFrStr "revision" (contribRevision v)
	, maybeToAttr toAttrFrStr "security" (contribSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (contribUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (contribVendor v)
	, maybeToAttr toAttrFrStr "role" (contribRole v)
	]
instance XmlContent Contrib_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Contrib_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Contrib_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Contrib_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Contrib_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Contrib_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Contrib_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Contrib_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Contrib_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Contrib_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Contrib_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Contrib_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Contrib_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Contrib_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Contrib_Str a) = toText a
    toElem (Contrib_Link a) = toElem a
    toElem (Contrib_Olink a) = toElem a
    toElem (Contrib_Ulink a) = toElem a
    toElem (Contrib_Emphasis a) = toElem a
    toElem (Contrib_Trademark a) = toElem a
    toElem (Contrib_Replaceable a) = toElem a
    toElem (Contrib_Remark a) = toElem a
    toElem (Contrib_Subscript a) = toElem a
    toElem (Contrib_Superscript a) = toElem a
    toElem (Contrib_Inlinegraphic a) = toElem a
    toElem (Contrib_Inlinemediaobject a) = toElem a
    toElem (Contrib_Indexterm a) = toElem a
instance XmlAttrType Contrib_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Contrib_Revisionflag_Changed
	    translate "added" = Just Contrib_Revisionflag_Added
	    translate "deleted" = Just Contrib_Revisionflag_Deleted
	    translate "off" = Just Contrib_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Contrib_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Contrib_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Contrib_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Contrib_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Firstname where
    fromElem (CElem (Elem "firstname" as c0):rest) =
	(\(a,ca)->
	   (Just (Firstname (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Firstname as a) =
	[CElem (Elem "firstname" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Firstname_Attrs where
    fromAttrs as =
	Firstname_Attrs
	  { firstnameId = possibleA fromAttrToStr "id" as
	  , firstnameLang = possibleA fromAttrToStr "lang" as
	  , firstnameRemap = possibleA fromAttrToStr "remap" as
	  , firstnameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , firstnameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , firstnameArch = possibleA fromAttrToStr "arch" as
	  , firstnameCondition = possibleA fromAttrToStr "condition" as
	  , firstnameConformance = possibleA fromAttrToStr "conformance" as
	  , firstnameOs = possibleA fromAttrToStr "os" as
	  , firstnameRevision = possibleA fromAttrToStr "revision" as
	  , firstnameSecurity = possibleA fromAttrToStr "security" as
	  , firstnameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , firstnameVendor = possibleA fromAttrToStr "vendor" as
	  , firstnameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (firstnameId v)
	, maybeToAttr toAttrFrStr "lang" (firstnameLang v)
	, maybeToAttr toAttrFrStr "remap" (firstnameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (firstnameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (firstnameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (firstnameArch v)
	, maybeToAttr toAttrFrStr "condition" (firstnameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (firstnameConformance v)
	, maybeToAttr toAttrFrStr "os" (firstnameOs v)
	, maybeToAttr toAttrFrStr "revision" (firstnameRevision v)
	, maybeToAttr toAttrFrStr "security" (firstnameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (firstnameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (firstnameVendor v)
	, maybeToAttr toAttrFrStr "role" (firstnameRole v)
	]
instance XmlContent Firstname_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Firstname_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Firstname_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Firstname_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Firstname_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Firstname_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Firstname_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Firstname_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Firstname_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Firstname_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Firstname_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Firstname_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Firstname_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Firstname_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Firstname_Str a) = toText a
    toElem (Firstname_Link a) = toElem a
    toElem (Firstname_Olink a) = toElem a
    toElem (Firstname_Ulink a) = toElem a
    toElem (Firstname_Emphasis a) = toElem a
    toElem (Firstname_Trademark a) = toElem a
    toElem (Firstname_Replaceable a) = toElem a
    toElem (Firstname_Remark a) = toElem a
    toElem (Firstname_Subscript a) = toElem a
    toElem (Firstname_Superscript a) = toElem a
    toElem (Firstname_Inlinegraphic a) = toElem a
    toElem (Firstname_Inlinemediaobject a) = toElem a
    toElem (Firstname_Indexterm a) = toElem a
instance XmlAttrType Firstname_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Firstname_Revisionflag_Changed
	    translate "added" = Just Firstname_Revisionflag_Added
	    translate "deleted" = Just Firstname_Revisionflag_Deleted
	    translate "off" = Just Firstname_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Firstname_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Firstname_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Firstname_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Firstname_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Honorific where
    fromElem (CElem (Elem "honorific" as c0):rest) =
	(\(a,ca)->
	   (Just (Honorific (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Honorific as a) =
	[CElem (Elem "honorific" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Honorific_Attrs where
    fromAttrs as =
	Honorific_Attrs
	  { honorificId = possibleA fromAttrToStr "id" as
	  , honorificLang = possibleA fromAttrToStr "lang" as
	  , honorificRemap = possibleA fromAttrToStr "remap" as
	  , honorificXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , honorificRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , honorificArch = possibleA fromAttrToStr "arch" as
	  , honorificCondition = possibleA fromAttrToStr "condition" as
	  , honorificConformance = possibleA fromAttrToStr "conformance" as
	  , honorificOs = possibleA fromAttrToStr "os" as
	  , honorificRevision = possibleA fromAttrToStr "revision" as
	  , honorificSecurity = possibleA fromAttrToStr "security" as
	  , honorificUserlevel = possibleA fromAttrToStr "userlevel" as
	  , honorificVendor = possibleA fromAttrToStr "vendor" as
	  , honorificRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (honorificId v)
	, maybeToAttr toAttrFrStr "lang" (honorificLang v)
	, maybeToAttr toAttrFrStr "remap" (honorificRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (honorificXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (honorificRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (honorificArch v)
	, maybeToAttr toAttrFrStr "condition" (honorificCondition v)
	, maybeToAttr toAttrFrStr "conformance" (honorificConformance v)
	, maybeToAttr toAttrFrStr "os" (honorificOs v)
	, maybeToAttr toAttrFrStr "revision" (honorificRevision v)
	, maybeToAttr toAttrFrStr "security" (honorificSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (honorificUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (honorificVendor v)
	, maybeToAttr toAttrFrStr "role" (honorificRole v)
	]
instance XmlContent Honorific_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Honorific_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Honorific_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Honorific_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Honorific_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Honorific_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Honorific_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Honorific_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Honorific_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Honorific_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Honorific_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Honorific_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Honorific_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Honorific_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Honorific_Str a) = toText a
    toElem (Honorific_Link a) = toElem a
    toElem (Honorific_Olink a) = toElem a
    toElem (Honorific_Ulink a) = toElem a
    toElem (Honorific_Emphasis a) = toElem a
    toElem (Honorific_Trademark a) = toElem a
    toElem (Honorific_Replaceable a) = toElem a
    toElem (Honorific_Remark a) = toElem a
    toElem (Honorific_Subscript a) = toElem a
    toElem (Honorific_Superscript a) = toElem a
    toElem (Honorific_Inlinegraphic a) = toElem a
    toElem (Honorific_Inlinemediaobject a) = toElem a
    toElem (Honorific_Indexterm a) = toElem a
instance XmlAttrType Honorific_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Honorific_Revisionflag_Changed
	    translate "added" = Just Honorific_Revisionflag_Added
	    translate "deleted" = Just Honorific_Revisionflag_Deleted
	    translate "off" = Just Honorific_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Honorific_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Honorific_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Honorific_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Honorific_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Lineage where
    fromElem (CElem (Elem "lineage" as c0):rest) =
	(\(a,ca)->
	   (Just (Lineage (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Lineage as a) =
	[CElem (Elem "lineage" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Lineage_Attrs where
    fromAttrs as =
	Lineage_Attrs
	  { lineageId = possibleA fromAttrToStr "id" as
	  , lineageLang = possibleA fromAttrToStr "lang" as
	  , lineageRemap = possibleA fromAttrToStr "remap" as
	  , lineageXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , lineageRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , lineageArch = possibleA fromAttrToStr "arch" as
	  , lineageCondition = possibleA fromAttrToStr "condition" as
	  , lineageConformance = possibleA fromAttrToStr "conformance" as
	  , lineageOs = possibleA fromAttrToStr "os" as
	  , lineageRevision = possibleA fromAttrToStr "revision" as
	  , lineageSecurity = possibleA fromAttrToStr "security" as
	  , lineageUserlevel = possibleA fromAttrToStr "userlevel" as
	  , lineageVendor = possibleA fromAttrToStr "vendor" as
	  , lineageRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (lineageId v)
	, maybeToAttr toAttrFrStr "lang" (lineageLang v)
	, maybeToAttr toAttrFrStr "remap" (lineageRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (lineageXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (lineageRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (lineageArch v)
	, maybeToAttr toAttrFrStr "condition" (lineageCondition v)
	, maybeToAttr toAttrFrStr "conformance" (lineageConformance v)
	, maybeToAttr toAttrFrStr "os" (lineageOs v)
	, maybeToAttr toAttrFrStr "revision" (lineageRevision v)
	, maybeToAttr toAttrFrStr "security" (lineageSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (lineageUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (lineageVendor v)
	, maybeToAttr toAttrFrStr "role" (lineageRole v)
	]
instance XmlContent Lineage_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Lineage_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Lineage_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Lineage_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Lineage_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Lineage_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Lineage_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Lineage_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Lineage_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Lineage_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Lineage_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Lineage_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Lineage_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Lineage_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Lineage_Str a) = toText a
    toElem (Lineage_Link a) = toElem a
    toElem (Lineage_Olink a) = toElem a
    toElem (Lineage_Ulink a) = toElem a
    toElem (Lineage_Emphasis a) = toElem a
    toElem (Lineage_Trademark a) = toElem a
    toElem (Lineage_Replaceable a) = toElem a
    toElem (Lineage_Remark a) = toElem a
    toElem (Lineage_Subscript a) = toElem a
    toElem (Lineage_Superscript a) = toElem a
    toElem (Lineage_Inlinegraphic a) = toElem a
    toElem (Lineage_Inlinemediaobject a) = toElem a
    toElem (Lineage_Indexterm a) = toElem a
instance XmlAttrType Lineage_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Lineage_Revisionflag_Changed
	    translate "added" = Just Lineage_Revisionflag_Added
	    translate "deleted" = Just Lineage_Revisionflag_Deleted
	    translate "off" = Just Lineage_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Lineage_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Lineage_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Lineage_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Lineage_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Othername where
    fromElem (CElem (Elem "othername" as c0):rest) =
	(\(a,ca)->
	   (Just (Othername (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Othername as a) =
	[CElem (Elem "othername" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Othername_Attrs where
    fromAttrs as =
	Othername_Attrs
	  { othernameId = possibleA fromAttrToStr "id" as
	  , othernameLang = possibleA fromAttrToStr "lang" as
	  , othernameRemap = possibleA fromAttrToStr "remap" as
	  , othernameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , othernameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , othernameArch = possibleA fromAttrToStr "arch" as
	  , othernameCondition = possibleA fromAttrToStr "condition" as
	  , othernameConformance = possibleA fromAttrToStr "conformance" as
	  , othernameOs = possibleA fromAttrToStr "os" as
	  , othernameRevision = possibleA fromAttrToStr "revision" as
	  , othernameSecurity = possibleA fromAttrToStr "security" as
	  , othernameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , othernameVendor = possibleA fromAttrToStr "vendor" as
	  , othernameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (othernameId v)
	, maybeToAttr toAttrFrStr "lang" (othernameLang v)
	, maybeToAttr toAttrFrStr "remap" (othernameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (othernameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (othernameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (othernameArch v)
	, maybeToAttr toAttrFrStr "condition" (othernameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (othernameConformance v)
	, maybeToAttr toAttrFrStr "os" (othernameOs v)
	, maybeToAttr toAttrFrStr "revision" (othernameRevision v)
	, maybeToAttr toAttrFrStr "security" (othernameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (othernameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (othernameVendor v)
	, maybeToAttr toAttrFrStr "role" (othernameRole v)
	]
instance XmlContent Othername_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Othername_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Othername_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Othername_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Othername_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Othername_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Othername_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Othername_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Othername_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Othername_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Othername_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Othername_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Othername_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Othername_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Othername_Str a) = toText a
    toElem (Othername_Link a) = toElem a
    toElem (Othername_Olink a) = toElem a
    toElem (Othername_Ulink a) = toElem a
    toElem (Othername_Emphasis a) = toElem a
    toElem (Othername_Trademark a) = toElem a
    toElem (Othername_Replaceable a) = toElem a
    toElem (Othername_Remark a) = toElem a
    toElem (Othername_Subscript a) = toElem a
    toElem (Othername_Superscript a) = toElem a
    toElem (Othername_Inlinegraphic a) = toElem a
    toElem (Othername_Inlinemediaobject a) = toElem a
    toElem (Othername_Indexterm a) = toElem a
instance XmlAttrType Othername_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Othername_Revisionflag_Changed
	    translate "added" = Just Othername_Revisionflag_Added
	    translate "deleted" = Just Othername_Revisionflag_Deleted
	    translate "off" = Just Othername_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Othername_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Othername_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Othername_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Othername_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Surname where
    fromElem (CElem (Elem "surname" as c0):rest) =
	(\(a,ca)->
	   (Just (Surname (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Surname as a) =
	[CElem (Elem "surname" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Surname_Attrs where
    fromAttrs as =
	Surname_Attrs
	  { surnameId = possibleA fromAttrToStr "id" as
	  , surnameLang = possibleA fromAttrToStr "lang" as
	  , surnameRemap = possibleA fromAttrToStr "remap" as
	  , surnameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , surnameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , surnameArch = possibleA fromAttrToStr "arch" as
	  , surnameCondition = possibleA fromAttrToStr "condition" as
	  , surnameConformance = possibleA fromAttrToStr "conformance" as
	  , surnameOs = possibleA fromAttrToStr "os" as
	  , surnameRevision = possibleA fromAttrToStr "revision" as
	  , surnameSecurity = possibleA fromAttrToStr "security" as
	  , surnameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , surnameVendor = possibleA fromAttrToStr "vendor" as
	  , surnameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (surnameId v)
	, maybeToAttr toAttrFrStr "lang" (surnameLang v)
	, maybeToAttr toAttrFrStr "remap" (surnameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (surnameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (surnameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (surnameArch v)
	, maybeToAttr toAttrFrStr "condition" (surnameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (surnameConformance v)
	, maybeToAttr toAttrFrStr "os" (surnameOs v)
	, maybeToAttr toAttrFrStr "revision" (surnameRevision v)
	, maybeToAttr toAttrFrStr "security" (surnameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (surnameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (surnameVendor v)
	, maybeToAttr toAttrFrStr "role" (surnameRole v)
	]
instance XmlContent Surname_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Surname_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Surname_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Surname_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Surname_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Surname_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Surname_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Surname_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Surname_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Surname_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Surname_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Surname_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Surname_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Surname_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Surname_Str a) = toText a
    toElem (Surname_Link a) = toElem a
    toElem (Surname_Olink a) = toElem a
    toElem (Surname_Ulink a) = toElem a
    toElem (Surname_Emphasis a) = toElem a
    toElem (Surname_Trademark a) = toElem a
    toElem (Surname_Replaceable a) = toElem a
    toElem (Surname_Remark a) = toElem a
    toElem (Surname_Subscript a) = toElem a
    toElem (Surname_Superscript a) = toElem a
    toElem (Surname_Inlinegraphic a) = toElem a
    toElem (Surname_Inlinemediaobject a) = toElem a
    toElem (Surname_Indexterm a) = toElem a
instance XmlAttrType Surname_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Surname_Revisionflag_Changed
	    translate "added" = Just Surname_Revisionflag_Added
	    translate "deleted" = Just Surname_Revisionflag_Deleted
	    translate "off" = Just Surname_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Surname_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Surname_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Surname_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Surname_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Printhistory where
    fromElem (CElem (Elem "printhistory" as c0):rest) =
	(\(a,ca)->
	   (Just (Printhistory (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Printhistory as a) =
	[CElem (Elem "printhistory" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Printhistory_Attrs where
    fromAttrs as =
	Printhistory_Attrs
	  { printhistoryId = possibleA fromAttrToStr "id" as
	  , printhistoryLang = possibleA fromAttrToStr "lang" as
	  , printhistoryRemap = possibleA fromAttrToStr "remap" as
	  , printhistoryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , printhistoryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , printhistoryArch = possibleA fromAttrToStr "arch" as
	  , printhistoryCondition = possibleA fromAttrToStr "condition" as
	  , printhistoryConformance = possibleA fromAttrToStr "conformance" as
	  , printhistoryOs = possibleA fromAttrToStr "os" as
	  , printhistoryRevision = possibleA fromAttrToStr "revision" as
	  , printhistorySecurity = possibleA fromAttrToStr "security" as
	  , printhistoryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , printhistoryVendor = possibleA fromAttrToStr "vendor" as
	  , printhistoryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (printhistoryId v)
	, maybeToAttr toAttrFrStr "lang" (printhistoryLang v)
	, maybeToAttr toAttrFrStr "remap" (printhistoryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (printhistoryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (printhistoryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (printhistoryArch v)
	, maybeToAttr toAttrFrStr "condition" (printhistoryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (printhistoryConformance v)
	, maybeToAttr toAttrFrStr "os" (printhistoryOs v)
	, maybeToAttr toAttrFrStr "revision" (printhistoryRevision v)
	, maybeToAttr toAttrFrStr "security" (printhistorySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (printhistoryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (printhistoryVendor v)
	, maybeToAttr toAttrFrStr "role" (printhistoryRole v)
	]
instance XmlAttrType Printhistory_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Printhistory_Revisionflag_Changed
	    translate "added" = Just Printhistory_Revisionflag_Added
	    translate "deleted" = Just Printhistory_Revisionflag_Deleted
	    translate "off" = Just Printhistory_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Printhistory_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Printhistory_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Printhistory_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Printhistory_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Productname where
    fromElem (CElem (Elem "productname" as c0):rest) =
	(\(a,ca)->
	   (Just (Productname (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Productname as a) =
	[CElem (Elem "productname" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Productname_Attrs where
    fromAttrs as =
	Productname_Attrs
	  { productnameClass = defaultA fromAttrToTyp Productname_Class_Trade "class" as
	  , productnameId = possibleA fromAttrToStr "id" as
	  , productnameLang = possibleA fromAttrToStr "lang" as
	  , productnameRemap = possibleA fromAttrToStr "remap" as
	  , productnameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , productnameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , productnameArch = possibleA fromAttrToStr "arch" as
	  , productnameCondition = possibleA fromAttrToStr "condition" as
	  , productnameConformance = possibleA fromAttrToStr "conformance" as
	  , productnameOs = possibleA fromAttrToStr "os" as
	  , productnameRevision = possibleA fromAttrToStr "revision" as
	  , productnameSecurity = possibleA fromAttrToStr "security" as
	  , productnameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , productnameVendor = possibleA fromAttrToStr "vendor" as
	  , productnameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "class" (productnameClass v)
	, maybeToAttr toAttrFrStr "id" (productnameId v)
	, maybeToAttr toAttrFrStr "lang" (productnameLang v)
	, maybeToAttr toAttrFrStr "remap" (productnameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (productnameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (productnameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (productnameArch v)
	, maybeToAttr toAttrFrStr "condition" (productnameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (productnameConformance v)
	, maybeToAttr toAttrFrStr "os" (productnameOs v)
	, maybeToAttr toAttrFrStr "revision" (productnameRevision v)
	, maybeToAttr toAttrFrStr "security" (productnameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (productnameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (productnameVendor v)
	, maybeToAttr toAttrFrStr "role" (productnameRole v)
	]
instance XmlContent Productname_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Productname_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Productname_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Productname_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Productname_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Productname_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Productname_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Productname_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Productname_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Productname_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Productname_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Productname_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Productname_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Productname_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Productname_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Productname_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Productname_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Productname_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Productname_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Productname_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Productname_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Productname_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Productname_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Productname_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Productname_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Productname_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Productname_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Productname_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Productname_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Productname_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Productname_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Productname_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Productname_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Productname_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Productname_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Productname_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Productname_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Productname_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Productname_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Productname_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Productname_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Productname_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Productname_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Productname_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Productname_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Productname_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Productname_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Productname_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Productname_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Productname_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Productname_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Productname_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Productname_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Productname_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Productname_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Productname_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Productname_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Productname_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Productname_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Productname_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Productname_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Productname_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Productname_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Productname_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Productname_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Productname_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Productname_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Productname_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Productname_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Productname_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Productname_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Productname_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Productname_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Productname_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Productname_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Productname_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Productname_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Productname_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Productname_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Productname_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Productname_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Productname_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Productname_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Productname_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Productname_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Productname_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Productname_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Productname_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Productname_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Productname_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Productname_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Productname_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Productname_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Productname_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Productname_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Productname_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Productname_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Productname_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Productname_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Productname_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Productname_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Productname_Str a) = toText a
    toElem (Productname_Footnoteref a) = toElem a
    toElem (Productname_Xref a) = toElem a
    toElem (Productname_Abbrev a) = toElem a
    toElem (Productname_Acronym a) = toElem a
    toElem (Productname_Citation a) = toElem a
    toElem (Productname_Citerefentry a) = toElem a
    toElem (Productname_Citetitle a) = toElem a
    toElem (Productname_Emphasis a) = toElem a
    toElem (Productname_Firstterm a) = toElem a
    toElem (Productname_Foreignphrase a) = toElem a
    toElem (Productname_Glossterm a) = toElem a
    toElem (Productname_Footnote a) = toElem a
    toElem (Productname_Phrase a) = toElem a
    toElem (Productname_Quote a) = toElem a
    toElem (Productname_Trademark a) = toElem a
    toElem (Productname_Wordasword a) = toElem a
    toElem (Productname_Personname a) = toElem a
    toElem (Productname_Link a) = toElem a
    toElem (Productname_Olink a) = toElem a
    toElem (Productname_Ulink a) = toElem a
    toElem (Productname_Action a) = toElem a
    toElem (Productname_Application a) = toElem a
    toElem (Productname_Classname a) = toElem a
    toElem (Productname_Methodname a) = toElem a
    toElem (Productname_Interfacename a) = toElem a
    toElem (Productname_Exceptionname a) = toElem a
    toElem (Productname_Ooclass a) = toElem a
    toElem (Productname_Oointerface a) = toElem a
    toElem (Productname_Ooexception a) = toElem a
    toElem (Productname_Command a) = toElem a
    toElem (Productname_Computeroutput a) = toElem a
    toElem (Productname_Database a) = toElem a
    toElem (Productname_Email a) = toElem a
    toElem (Productname_Envar a) = toElem a
    toElem (Productname_Errorcode a) = toElem a
    toElem (Productname_Errorname a) = toElem a
    toElem (Productname_Errortype a) = toElem a
    toElem (Productname_Errortext a) = toElem a
    toElem (Productname_Filename a) = toElem a
    toElem (Productname_Function a) = toElem a
    toElem (Productname_Guibutton a) = toElem a
    toElem (Productname_Guiicon a) = toElem a
    toElem (Productname_Guilabel a) = toElem a
    toElem (Productname_Guimenu a) = toElem a
    toElem (Productname_Guimenuitem a) = toElem a
    toElem (Productname_Guisubmenu a) = toElem a
    toElem (Productname_Hardware a) = toElem a
    toElem (Productname_Interface a) = toElem a
    toElem (Productname_Keycap a) = toElem a
    toElem (Productname_Keycode a) = toElem a
    toElem (Productname_Keycombo a) = toElem a
    toElem (Productname_Keysym a) = toElem a
    toElem (Productname_Literal a) = toElem a
    toElem (Productname_Constant a) = toElem a
    toElem (Productname_Markup a) = toElem a
    toElem (Productname_Medialabel a) = toElem a
    toElem (Productname_Menuchoice a) = toElem a
    toElem (Productname_Mousebutton a) = toElem a
    toElem (Productname_Option a) = toElem a
    toElem (Productname_Optional a) = toElem a
    toElem (Productname_Parameter a) = toElem a
    toElem (Productname_Prompt a) = toElem a
    toElem (Productname_Property a) = toElem a
    toElem (Productname_Replaceable a) = toElem a
    toElem (Productname_Returnvalue a) = toElem a
    toElem (Productname_Sgmltag a) = toElem a
    toElem (Productname_Structfield a) = toElem a
    toElem (Productname_Structname a) = toElem a
    toElem (Productname_Symbol a) = toElem a
    toElem (Productname_Systemitem a) = toElem a
    toElem (Productname_Token a) = toElem a
    toElem (Productname_Type a) = toElem a
    toElem (Productname_Userinput a) = toElem a
    toElem (Productname_Varname a) = toElem a
    toElem (Productname_Anchor a) = toElem a
    toElem (Productname_Author a) = toElem a
    toElem (Productname_Authorinitials a) = toElem a
    toElem (Productname_Corpauthor a) = toElem a
    toElem (Productname_Modespec a) = toElem a
    toElem (Productname_Othercredit a) = toElem a
    toElem (Productname_Productname a) = toElem a
    toElem (Productname_Productnumber a) = toElem a
    toElem (Productname_Revhistory a) = toElem a
    toElem (Productname_Remark a) = toElem a
    toElem (Productname_Subscript a) = toElem a
    toElem (Productname_Superscript a) = toElem a
    toElem (Productname_Inlinegraphic a) = toElem a
    toElem (Productname_Inlinemediaobject a) = toElem a
    toElem (Productname_Inlineequation a) = toElem a
    toElem (Productname_Synopsis a) = toElem a
    toElem (Productname_Cmdsynopsis a) = toElem a
    toElem (Productname_Funcsynopsis a) = toElem a
    toElem (Productname_Classsynopsis a) = toElem a
    toElem (Productname_Fieldsynopsis a) = toElem a
    toElem (Productname_Constructorsynopsis a) = toElem a
    toElem (Productname_Destructorsynopsis a) = toElem a
    toElem (Productname_Methodsynopsis a) = toElem a
    toElem (Productname_Indexterm a) = toElem a
    toElem (Productname_Beginpage a) = toElem a
instance XmlAttrType Productname_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "service" = Just Productname_Class_Service
	    translate "trade" = Just Productname_Class_Trade
	    translate "registered" = Just Productname_Class_Registered
	    translate "copyright" = Just Productname_Class_Copyright
	    translate _ = Nothing
    toAttrFrTyp n Productname_Class_Service = Just (n, str2attr "service")
    toAttrFrTyp n Productname_Class_Trade = Just (n, str2attr "trade")
    toAttrFrTyp n Productname_Class_Registered = Just (n, str2attr "registered")
    toAttrFrTyp n Productname_Class_Copyright = Just (n, str2attr "copyright")
instance XmlAttrType Productname_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Productname_Revisionflag_Changed
	    translate "added" = Just Productname_Revisionflag_Added
	    translate "deleted" = Just Productname_Revisionflag_Deleted
	    translate "off" = Just Productname_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Productname_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Productname_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Productname_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Productname_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Productnumber where
    fromElem (CElem (Elem "productnumber" as c0):rest) =
	(\(a,ca)->
	   (Just (Productnumber (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Productnumber as a) =
	[CElem (Elem "productnumber" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Productnumber_Attrs where
    fromAttrs as =
	Productnumber_Attrs
	  { productnumberId = possibleA fromAttrToStr "id" as
	  , productnumberLang = possibleA fromAttrToStr "lang" as
	  , productnumberRemap = possibleA fromAttrToStr "remap" as
	  , productnumberXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , productnumberRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , productnumberArch = possibleA fromAttrToStr "arch" as
	  , productnumberCondition = possibleA fromAttrToStr "condition" as
	  , productnumberConformance = possibleA fromAttrToStr "conformance" as
	  , productnumberOs = possibleA fromAttrToStr "os" as
	  , productnumberRevision = possibleA fromAttrToStr "revision" as
	  , productnumberSecurity = possibleA fromAttrToStr "security" as
	  , productnumberUserlevel = possibleA fromAttrToStr "userlevel" as
	  , productnumberVendor = possibleA fromAttrToStr "vendor" as
	  , productnumberRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (productnumberId v)
	, maybeToAttr toAttrFrStr "lang" (productnumberLang v)
	, maybeToAttr toAttrFrStr "remap" (productnumberRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (productnumberXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (productnumberRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (productnumberArch v)
	, maybeToAttr toAttrFrStr "condition" (productnumberCondition v)
	, maybeToAttr toAttrFrStr "conformance" (productnumberConformance v)
	, maybeToAttr toAttrFrStr "os" (productnumberOs v)
	, maybeToAttr toAttrFrStr "revision" (productnumberRevision v)
	, maybeToAttr toAttrFrStr "security" (productnumberSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (productnumberUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (productnumberVendor v)
	, maybeToAttr toAttrFrStr "role" (productnumberRole v)
	]
instance XmlContent Productnumber_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Productnumber_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Productnumber_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Productnumber_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Productnumber_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Productnumber_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Productnumber_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Productnumber_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Productnumber_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Productnumber_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Productnumber_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Productnumber_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Productnumber_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Productnumber_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Productnumber_Str a) = toText a
    toElem (Productnumber_Link a) = toElem a
    toElem (Productnumber_Olink a) = toElem a
    toElem (Productnumber_Ulink a) = toElem a
    toElem (Productnumber_Emphasis a) = toElem a
    toElem (Productnumber_Trademark a) = toElem a
    toElem (Productnumber_Replaceable a) = toElem a
    toElem (Productnumber_Remark a) = toElem a
    toElem (Productnumber_Subscript a) = toElem a
    toElem (Productnumber_Superscript a) = toElem a
    toElem (Productnumber_Inlinegraphic a) = toElem a
    toElem (Productnumber_Inlinemediaobject a) = toElem a
    toElem (Productnumber_Indexterm a) = toElem a
instance XmlAttrType Productnumber_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Productnumber_Revisionflag_Changed
	    translate "added" = Just Productnumber_Revisionflag_Added
	    translate "deleted" = Just Productnumber_Revisionflag_Deleted
	    translate "off" = Just Productnumber_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Productnumber_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Productnumber_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Productnumber_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Productnumber_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Pubdate where
    fromElem (CElem (Elem "pubdate" as c0):rest) =
	(\(a,ca)->
	   (Just (Pubdate (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Pubdate as a) =
	[CElem (Elem "pubdate" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Pubdate_Attrs where
    fromAttrs as =
	Pubdate_Attrs
	  { pubdateId = possibleA fromAttrToStr "id" as
	  , pubdateLang = possibleA fromAttrToStr "lang" as
	  , pubdateRemap = possibleA fromAttrToStr "remap" as
	  , pubdateXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , pubdateRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , pubdateArch = possibleA fromAttrToStr "arch" as
	  , pubdateCondition = possibleA fromAttrToStr "condition" as
	  , pubdateConformance = possibleA fromAttrToStr "conformance" as
	  , pubdateOs = possibleA fromAttrToStr "os" as
	  , pubdateRevision = possibleA fromAttrToStr "revision" as
	  , pubdateSecurity = possibleA fromAttrToStr "security" as
	  , pubdateUserlevel = possibleA fromAttrToStr "userlevel" as
	  , pubdateVendor = possibleA fromAttrToStr "vendor" as
	  , pubdateRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (pubdateId v)
	, maybeToAttr toAttrFrStr "lang" (pubdateLang v)
	, maybeToAttr toAttrFrStr "remap" (pubdateRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (pubdateXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (pubdateRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (pubdateArch v)
	, maybeToAttr toAttrFrStr "condition" (pubdateCondition v)
	, maybeToAttr toAttrFrStr "conformance" (pubdateConformance v)
	, maybeToAttr toAttrFrStr "os" (pubdateOs v)
	, maybeToAttr toAttrFrStr "revision" (pubdateRevision v)
	, maybeToAttr toAttrFrStr "security" (pubdateSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (pubdateUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (pubdateVendor v)
	, maybeToAttr toAttrFrStr "role" (pubdateRole v)
	]
instance XmlContent Pubdate_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Pubdate_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Pubdate_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Pubdate_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Pubdate_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Pubdate_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Pubdate_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Pubdate_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Pubdate_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Pubdate_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Pubdate_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Pubdate_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Pubdate_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Pubdate_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Pubdate_Str a) = toText a
    toElem (Pubdate_Link a) = toElem a
    toElem (Pubdate_Olink a) = toElem a
    toElem (Pubdate_Ulink a) = toElem a
    toElem (Pubdate_Emphasis a) = toElem a
    toElem (Pubdate_Trademark a) = toElem a
    toElem (Pubdate_Replaceable a) = toElem a
    toElem (Pubdate_Remark a) = toElem a
    toElem (Pubdate_Subscript a) = toElem a
    toElem (Pubdate_Superscript a) = toElem a
    toElem (Pubdate_Inlinegraphic a) = toElem a
    toElem (Pubdate_Inlinemediaobject a) = toElem a
    toElem (Pubdate_Indexterm a) = toElem a
instance XmlAttrType Pubdate_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Pubdate_Revisionflag_Changed
	    translate "added" = Just Pubdate_Revisionflag_Added
	    translate "deleted" = Just Pubdate_Revisionflag_Deleted
	    translate "off" = Just Pubdate_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Pubdate_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Pubdate_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Pubdate_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Pubdate_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Publisher where
    fromElem (CElem (Elem "publisher" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Publisher (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(definite fromElem "<publishername>" "publisher" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Publisher as a b) =
	[CElem (Elem "publisher" (toAttrs as) (toElem a ++
					       concatMap toElem b))]
instance XmlAttributes Publisher_Attrs where
    fromAttrs as =
	Publisher_Attrs
	  { publisherId = possibleA fromAttrToStr "id" as
	  , publisherLang = possibleA fromAttrToStr "lang" as
	  , publisherRemap = possibleA fromAttrToStr "remap" as
	  , publisherXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , publisherRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , publisherArch = possibleA fromAttrToStr "arch" as
	  , publisherCondition = possibleA fromAttrToStr "condition" as
	  , publisherConformance = possibleA fromAttrToStr "conformance" as
	  , publisherOs = possibleA fromAttrToStr "os" as
	  , publisherRevision = possibleA fromAttrToStr "revision" as
	  , publisherSecurity = possibleA fromAttrToStr "security" as
	  , publisherUserlevel = possibleA fromAttrToStr "userlevel" as
	  , publisherVendor = possibleA fromAttrToStr "vendor" as
	  , publisherRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (publisherId v)
	, maybeToAttr toAttrFrStr "lang" (publisherLang v)
	, maybeToAttr toAttrFrStr "remap" (publisherRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (publisherXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (publisherRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (publisherArch v)
	, maybeToAttr toAttrFrStr "condition" (publisherCondition v)
	, maybeToAttr toAttrFrStr "conformance" (publisherConformance v)
	, maybeToAttr toAttrFrStr "os" (publisherOs v)
	, maybeToAttr toAttrFrStr "revision" (publisherRevision v)
	, maybeToAttr toAttrFrStr "security" (publisherSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (publisherUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (publisherVendor v)
	, maybeToAttr toAttrFrStr "role" (publisherRole v)
	]
instance XmlAttrType Publisher_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Publisher_Revisionflag_Changed
	    translate "added" = Just Publisher_Revisionflag_Added
	    translate "deleted" = Just Publisher_Revisionflag_Deleted
	    translate "off" = Just Publisher_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Publisher_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Publisher_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Publisher_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Publisher_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Publishername where
    fromElem (CElem (Elem "publishername" as c0):rest) =
	(\(a,ca)->
	   (Just (Publishername (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Publishername as a) =
	[CElem (Elem "publishername" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Publishername_Attrs where
    fromAttrs as =
	Publishername_Attrs
	  { publishernameId = possibleA fromAttrToStr "id" as
	  , publishernameLang = possibleA fromAttrToStr "lang" as
	  , publishernameRemap = possibleA fromAttrToStr "remap" as
	  , publishernameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , publishernameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , publishernameArch = possibleA fromAttrToStr "arch" as
	  , publishernameCondition = possibleA fromAttrToStr "condition" as
	  , publishernameConformance = possibleA fromAttrToStr "conformance" as
	  , publishernameOs = possibleA fromAttrToStr "os" as
	  , publishernameRevision = possibleA fromAttrToStr "revision" as
	  , publishernameSecurity = possibleA fromAttrToStr "security" as
	  , publishernameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , publishernameVendor = possibleA fromAttrToStr "vendor" as
	  , publishernameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (publishernameId v)
	, maybeToAttr toAttrFrStr "lang" (publishernameLang v)
	, maybeToAttr toAttrFrStr "remap" (publishernameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (publishernameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (publishernameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (publishernameArch v)
	, maybeToAttr toAttrFrStr "condition" (publishernameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (publishernameConformance v)
	, maybeToAttr toAttrFrStr "os" (publishernameOs v)
	, maybeToAttr toAttrFrStr "revision" (publishernameRevision v)
	, maybeToAttr toAttrFrStr "security" (publishernameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (publishernameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (publishernameVendor v)
	, maybeToAttr toAttrFrStr "role" (publishernameRole v)
	]
instance XmlContent Publishername_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Publishername_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Publishername_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Publishername_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Publishername_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Publishername_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Publishername_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Publishername_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Publishername_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Publishername_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Publishername_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Publishername_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Publishername_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Publishername_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Publishername_Str a) = toText a
    toElem (Publishername_Link a) = toElem a
    toElem (Publishername_Olink a) = toElem a
    toElem (Publishername_Ulink a) = toElem a
    toElem (Publishername_Emphasis a) = toElem a
    toElem (Publishername_Trademark a) = toElem a
    toElem (Publishername_Replaceable a) = toElem a
    toElem (Publishername_Remark a) = toElem a
    toElem (Publishername_Subscript a) = toElem a
    toElem (Publishername_Superscript a) = toElem a
    toElem (Publishername_Inlinegraphic a) = toElem a
    toElem (Publishername_Inlinemediaobject a) = toElem a
    toElem (Publishername_Indexterm a) = toElem a
instance XmlAttrType Publishername_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Publishername_Revisionflag_Changed
	    translate "added" = Just Publishername_Revisionflag_Added
	    translate "deleted" = Just Publishername_Revisionflag_Deleted
	    translate "off" = Just Publishername_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Publishername_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Publishername_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Publishername_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Publishername_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Pubsnumber where
    fromElem (CElem (Elem "pubsnumber" as c0):rest) =
	(\(a,ca)->
	   (Just (Pubsnumber (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Pubsnumber as a) =
	[CElem (Elem "pubsnumber" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Pubsnumber_Attrs where
    fromAttrs as =
	Pubsnumber_Attrs
	  { pubsnumberId = possibleA fromAttrToStr "id" as
	  , pubsnumberLang = possibleA fromAttrToStr "lang" as
	  , pubsnumberRemap = possibleA fromAttrToStr "remap" as
	  , pubsnumberXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , pubsnumberRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , pubsnumberArch = possibleA fromAttrToStr "arch" as
	  , pubsnumberCondition = possibleA fromAttrToStr "condition" as
	  , pubsnumberConformance = possibleA fromAttrToStr "conformance" as
	  , pubsnumberOs = possibleA fromAttrToStr "os" as
	  , pubsnumberRevision = possibleA fromAttrToStr "revision" as
	  , pubsnumberSecurity = possibleA fromAttrToStr "security" as
	  , pubsnumberUserlevel = possibleA fromAttrToStr "userlevel" as
	  , pubsnumberVendor = possibleA fromAttrToStr "vendor" as
	  , pubsnumberRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (pubsnumberId v)
	, maybeToAttr toAttrFrStr "lang" (pubsnumberLang v)
	, maybeToAttr toAttrFrStr "remap" (pubsnumberRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (pubsnumberXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (pubsnumberRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (pubsnumberArch v)
	, maybeToAttr toAttrFrStr "condition" (pubsnumberCondition v)
	, maybeToAttr toAttrFrStr "conformance" (pubsnumberConformance v)
	, maybeToAttr toAttrFrStr "os" (pubsnumberOs v)
	, maybeToAttr toAttrFrStr "revision" (pubsnumberRevision v)
	, maybeToAttr toAttrFrStr "security" (pubsnumberSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (pubsnumberUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (pubsnumberVendor v)
	, maybeToAttr toAttrFrStr "role" (pubsnumberRole v)
	]
instance XmlContent Pubsnumber_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Pubsnumber_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Pubsnumber_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Pubsnumber_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Pubsnumber_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Pubsnumber_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Pubsnumber_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Pubsnumber_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Pubsnumber_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Pubsnumber_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Pubsnumber_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Pubsnumber_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Pubsnumber_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Pubsnumber_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Pubsnumber_Str a) = toText a
    toElem (Pubsnumber_Link a) = toElem a
    toElem (Pubsnumber_Olink a) = toElem a
    toElem (Pubsnumber_Ulink a) = toElem a
    toElem (Pubsnumber_Emphasis a) = toElem a
    toElem (Pubsnumber_Trademark a) = toElem a
    toElem (Pubsnumber_Replaceable a) = toElem a
    toElem (Pubsnumber_Remark a) = toElem a
    toElem (Pubsnumber_Subscript a) = toElem a
    toElem (Pubsnumber_Superscript a) = toElem a
    toElem (Pubsnumber_Inlinegraphic a) = toElem a
    toElem (Pubsnumber_Inlinemediaobject a) = toElem a
    toElem (Pubsnumber_Indexterm a) = toElem a
instance XmlAttrType Pubsnumber_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Pubsnumber_Revisionflag_Changed
	    translate "added" = Just Pubsnumber_Revisionflag_Added
	    translate "deleted" = Just Pubsnumber_Revisionflag_Deleted
	    translate "off" = Just Pubsnumber_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Pubsnumber_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Pubsnumber_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Pubsnumber_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Pubsnumber_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Releaseinfo where
    fromElem (CElem (Elem "releaseinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Releaseinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Releaseinfo as a) =
	[CElem (Elem "releaseinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Releaseinfo_Attrs where
    fromAttrs as =
	Releaseinfo_Attrs
	  { releaseinfoId = possibleA fromAttrToStr "id" as
	  , releaseinfoLang = possibleA fromAttrToStr "lang" as
	  , releaseinfoRemap = possibleA fromAttrToStr "remap" as
	  , releaseinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , releaseinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , releaseinfoArch = possibleA fromAttrToStr "arch" as
	  , releaseinfoCondition = possibleA fromAttrToStr "condition" as
	  , releaseinfoConformance = possibleA fromAttrToStr "conformance" as
	  , releaseinfoOs = possibleA fromAttrToStr "os" as
	  , releaseinfoRevision = possibleA fromAttrToStr "revision" as
	  , releaseinfoSecurity = possibleA fromAttrToStr "security" as
	  , releaseinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , releaseinfoVendor = possibleA fromAttrToStr "vendor" as
	  , releaseinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (releaseinfoId v)
	, maybeToAttr toAttrFrStr "lang" (releaseinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (releaseinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (releaseinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (releaseinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (releaseinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (releaseinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (releaseinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (releaseinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (releaseinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (releaseinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (releaseinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (releaseinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (releaseinfoRole v)
	]
instance XmlContent Releaseinfo_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Releaseinfo_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Releaseinfo_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Releaseinfo_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Releaseinfo_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Releaseinfo_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Releaseinfo_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Releaseinfo_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Releaseinfo_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Releaseinfo_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Releaseinfo_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Releaseinfo_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Releaseinfo_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Releaseinfo_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Releaseinfo_Str a) = toText a
    toElem (Releaseinfo_Link a) = toElem a
    toElem (Releaseinfo_Olink a) = toElem a
    toElem (Releaseinfo_Ulink a) = toElem a
    toElem (Releaseinfo_Emphasis a) = toElem a
    toElem (Releaseinfo_Trademark a) = toElem a
    toElem (Releaseinfo_Replaceable a) = toElem a
    toElem (Releaseinfo_Remark a) = toElem a
    toElem (Releaseinfo_Subscript a) = toElem a
    toElem (Releaseinfo_Superscript a) = toElem a
    toElem (Releaseinfo_Inlinegraphic a) = toElem a
    toElem (Releaseinfo_Inlinemediaobject a) = toElem a
    toElem (Releaseinfo_Indexterm a) = toElem a
instance XmlAttrType Releaseinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Releaseinfo_Revisionflag_Changed
	    translate "added" = Just Releaseinfo_Revisionflag_Added
	    translate "deleted" = Just Releaseinfo_Revisionflag_Deleted
	    translate "off" = Just Releaseinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Releaseinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Releaseinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Releaseinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Releaseinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Revhistory where
    fromElem (CElem (Elem "revhistory" as c0):rest) =
	(\(a,ca)->
	   (Just (Revhistory (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Revhistory as a) =
	[CElem (Elem "revhistory" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Revhistory_Attrs where
    fromAttrs as =
	Revhistory_Attrs
	  { revhistoryId = possibleA fromAttrToStr "id" as
	  , revhistoryLang = possibleA fromAttrToStr "lang" as
	  , revhistoryRemap = possibleA fromAttrToStr "remap" as
	  , revhistoryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , revhistoryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , revhistoryArch = possibleA fromAttrToStr "arch" as
	  , revhistoryCondition = possibleA fromAttrToStr "condition" as
	  , revhistoryConformance = possibleA fromAttrToStr "conformance" as
	  , revhistoryOs = possibleA fromAttrToStr "os" as
	  , revhistoryRevision = possibleA fromAttrToStr "revision" as
	  , revhistorySecurity = possibleA fromAttrToStr "security" as
	  , revhistoryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , revhistoryVendor = possibleA fromAttrToStr "vendor" as
	  , revhistoryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (revhistoryId v)
	, maybeToAttr toAttrFrStr "lang" (revhistoryLang v)
	, maybeToAttr toAttrFrStr "remap" (revhistoryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (revhistoryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (revhistoryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (revhistoryArch v)
	, maybeToAttr toAttrFrStr "condition" (revhistoryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (revhistoryConformance v)
	, maybeToAttr toAttrFrStr "os" (revhistoryOs v)
	, maybeToAttr toAttrFrStr "revision" (revhistoryRevision v)
	, maybeToAttr toAttrFrStr "security" (revhistorySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (revhistoryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (revhistoryVendor v)
	, maybeToAttr toAttrFrStr "role" (revhistoryRole v)
	]
instance XmlAttrType Revhistory_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Revhistory_Revisionflag_Changed
	    translate "added" = Just Revhistory_Revisionflag_Added
	    translate "deleted" = Just Revhistory_Revisionflag_Deleted
	    translate "off" = Just Revhistory_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Revhistory_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Revhistory_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Revhistory_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Revhistory_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Revision where
    fromElem (CElem (Elem "revision" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Revision (fromAttrs as) a b c d), rest))
		 (fromElem cc))
	      (many fromElem cb))
	   (definite fromElem "<date>" "revision" ca))
	(definite fromElem "<revnumber>" "revision" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Revision as a b c d) =
	[CElem (Elem "revision" (toAttrs as) (toElem a ++ toElem b ++
					      concatMap toElem c ++ maybe [] toElem d))]
instance XmlAttributes Revision_Attrs where
    fromAttrs as =
	Revision_Attrs
	  { revisionId = possibleA fromAttrToStr "id" as
	  , revisionLang = possibleA fromAttrToStr "lang" as
	  , revisionRemap = possibleA fromAttrToStr "remap" as
	  , revisionXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , revisionRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , revisionArch = possibleA fromAttrToStr "arch" as
	  , revisionCondition = possibleA fromAttrToStr "condition" as
	  , revisionConformance = possibleA fromAttrToStr "conformance" as
	  , revisionOs = possibleA fromAttrToStr "os" as
	  , revisionRevision = possibleA fromAttrToStr "revision" as
	  , revisionSecurity = possibleA fromAttrToStr "security" as
	  , revisionUserlevel = possibleA fromAttrToStr "userlevel" as
	  , revisionVendor = possibleA fromAttrToStr "vendor" as
	  , revisionRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (revisionId v)
	, maybeToAttr toAttrFrStr "lang" (revisionLang v)
	, maybeToAttr toAttrFrStr "remap" (revisionRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (revisionXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (revisionRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (revisionArch v)
	, maybeToAttr toAttrFrStr "condition" (revisionCondition v)
	, maybeToAttr toAttrFrStr "conformance" (revisionConformance v)
	, maybeToAttr toAttrFrStr "os" (revisionOs v)
	, maybeToAttr toAttrFrStr "revision" (revisionRevision v)
	, maybeToAttr toAttrFrStr "security" (revisionSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (revisionUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (revisionVendor v)
	, maybeToAttr toAttrFrStr "role" (revisionRole v)
	]
instance XmlAttrType Revision_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Revision_Revisionflag_Changed
	    translate "added" = Just Revision_Revisionflag_Added
	    translate "deleted" = Just Revision_Revisionflag_Deleted
	    translate "off" = Just Revision_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Revision_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Revision_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Revision_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Revision_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Revnumber where
    fromElem (CElem (Elem "revnumber" as c0):rest) =
	(\(a,ca)->
	   (Just (Revnumber (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Revnumber as a) =
	[CElem (Elem "revnumber" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Revnumber_Attrs where
    fromAttrs as =
	Revnumber_Attrs
	  { revnumberId = possibleA fromAttrToStr "id" as
	  , revnumberLang = possibleA fromAttrToStr "lang" as
	  , revnumberRemap = possibleA fromAttrToStr "remap" as
	  , revnumberXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , revnumberRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , revnumberArch = possibleA fromAttrToStr "arch" as
	  , revnumberCondition = possibleA fromAttrToStr "condition" as
	  , revnumberConformance = possibleA fromAttrToStr "conformance" as
	  , revnumberOs = possibleA fromAttrToStr "os" as
	  , revnumberRevision = possibleA fromAttrToStr "revision" as
	  , revnumberSecurity = possibleA fromAttrToStr "security" as
	  , revnumberUserlevel = possibleA fromAttrToStr "userlevel" as
	  , revnumberVendor = possibleA fromAttrToStr "vendor" as
	  , revnumberRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (revnumberId v)
	, maybeToAttr toAttrFrStr "lang" (revnumberLang v)
	, maybeToAttr toAttrFrStr "remap" (revnumberRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (revnumberXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (revnumberRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (revnumberArch v)
	, maybeToAttr toAttrFrStr "condition" (revnumberCondition v)
	, maybeToAttr toAttrFrStr "conformance" (revnumberConformance v)
	, maybeToAttr toAttrFrStr "os" (revnumberOs v)
	, maybeToAttr toAttrFrStr "revision" (revnumberRevision v)
	, maybeToAttr toAttrFrStr "security" (revnumberSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (revnumberUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (revnumberVendor v)
	, maybeToAttr toAttrFrStr "role" (revnumberRole v)
	]
instance XmlContent Revnumber_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Revnumber_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Revnumber_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Revnumber_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Revnumber_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Revnumber_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Revnumber_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Revnumber_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Revnumber_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Revnumber_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Revnumber_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Revnumber_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Revnumber_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Revnumber_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Revnumber_Str a) = toText a
    toElem (Revnumber_Link a) = toElem a
    toElem (Revnumber_Olink a) = toElem a
    toElem (Revnumber_Ulink a) = toElem a
    toElem (Revnumber_Emphasis a) = toElem a
    toElem (Revnumber_Trademark a) = toElem a
    toElem (Revnumber_Replaceable a) = toElem a
    toElem (Revnumber_Remark a) = toElem a
    toElem (Revnumber_Subscript a) = toElem a
    toElem (Revnumber_Superscript a) = toElem a
    toElem (Revnumber_Inlinegraphic a) = toElem a
    toElem (Revnumber_Inlinemediaobject a) = toElem a
    toElem (Revnumber_Indexterm a) = toElem a
instance XmlAttrType Revnumber_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Revnumber_Revisionflag_Changed
	    translate "added" = Just Revnumber_Revisionflag_Added
	    translate "deleted" = Just Revnumber_Revisionflag_Deleted
	    translate "off" = Just Revnumber_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Revnumber_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Revnumber_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Revnumber_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Revnumber_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Revremark where
    fromElem (CElem (Elem "revremark" as c0):rest) =
	(\(a,ca)->
	   (Just (Revremark (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Revremark as a) =
	[CElem (Elem "revremark" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Revremark_Attrs where
    fromAttrs as =
	Revremark_Attrs
	  { revremarkId = possibleA fromAttrToStr "id" as
	  , revremarkLang = possibleA fromAttrToStr "lang" as
	  , revremarkRemap = possibleA fromAttrToStr "remap" as
	  , revremarkXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , revremarkRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , revremarkArch = possibleA fromAttrToStr "arch" as
	  , revremarkCondition = possibleA fromAttrToStr "condition" as
	  , revremarkConformance = possibleA fromAttrToStr "conformance" as
	  , revremarkOs = possibleA fromAttrToStr "os" as
	  , revremarkRevision = possibleA fromAttrToStr "revision" as
	  , revremarkSecurity = possibleA fromAttrToStr "security" as
	  , revremarkUserlevel = possibleA fromAttrToStr "userlevel" as
	  , revremarkVendor = possibleA fromAttrToStr "vendor" as
	  , revremarkRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (revremarkId v)
	, maybeToAttr toAttrFrStr "lang" (revremarkLang v)
	, maybeToAttr toAttrFrStr "remap" (revremarkRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (revremarkXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (revremarkRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (revremarkArch v)
	, maybeToAttr toAttrFrStr "condition" (revremarkCondition v)
	, maybeToAttr toAttrFrStr "conformance" (revremarkConformance v)
	, maybeToAttr toAttrFrStr "os" (revremarkOs v)
	, maybeToAttr toAttrFrStr "revision" (revremarkRevision v)
	, maybeToAttr toAttrFrStr "security" (revremarkSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (revremarkUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (revremarkVendor v)
	, maybeToAttr toAttrFrStr "role" (revremarkRole v)
	]
instance XmlContent Revremark_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Revremark_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Revremark_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Revremark_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Revremark_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Revremark_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Revremark_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Revremark_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Revremark_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Revremark_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Revremark_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Revremark_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Revremark_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Revremark_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Revremark_Str a) = toText a
    toElem (Revremark_Link a) = toElem a
    toElem (Revremark_Olink a) = toElem a
    toElem (Revremark_Ulink a) = toElem a
    toElem (Revremark_Emphasis a) = toElem a
    toElem (Revremark_Trademark a) = toElem a
    toElem (Revremark_Replaceable a) = toElem a
    toElem (Revremark_Remark a) = toElem a
    toElem (Revremark_Subscript a) = toElem a
    toElem (Revremark_Superscript a) = toElem a
    toElem (Revremark_Inlinegraphic a) = toElem a
    toElem (Revremark_Inlinemediaobject a) = toElem a
    toElem (Revremark_Indexterm a) = toElem a
instance XmlAttrType Revremark_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Revremark_Revisionflag_Changed
	    translate "added" = Just Revremark_Revisionflag_Added
	    translate "deleted" = Just Revremark_Revisionflag_Deleted
	    translate "off" = Just Revremark_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Revremark_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Revremark_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Revremark_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Revremark_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Revdescription where
    fromElem (CElem (Elem "revdescription" as c0):rest) =
	(\(a,ca)->
	   (Just (Revdescription (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Revdescription as a) =
	[CElem (Elem "revdescription" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Revdescription_Attrs where
    fromAttrs as =
	Revdescription_Attrs
	  { revdescriptionId = possibleA fromAttrToStr "id" as
	  , revdescriptionLang = possibleA fromAttrToStr "lang" as
	  , revdescriptionRemap = possibleA fromAttrToStr "remap" as
	  , revdescriptionXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , revdescriptionRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , revdescriptionArch = possibleA fromAttrToStr "arch" as
	  , revdescriptionCondition = possibleA fromAttrToStr "condition" as
	  , revdescriptionConformance = possibleA fromAttrToStr "conformance" as
	  , revdescriptionOs = possibleA fromAttrToStr "os" as
	  , revdescriptionRevision = possibleA fromAttrToStr "revision" as
	  , revdescriptionSecurity = possibleA fromAttrToStr "security" as
	  , revdescriptionUserlevel = possibleA fromAttrToStr "userlevel" as
	  , revdescriptionVendor = possibleA fromAttrToStr "vendor" as
	  , revdescriptionRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (revdescriptionId v)
	, maybeToAttr toAttrFrStr "lang" (revdescriptionLang v)
	, maybeToAttr toAttrFrStr "remap" (revdescriptionRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (revdescriptionXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (revdescriptionRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (revdescriptionArch v)
	, maybeToAttr toAttrFrStr "condition" (revdescriptionCondition v)
	, maybeToAttr toAttrFrStr "conformance" (revdescriptionConformance v)
	, maybeToAttr toAttrFrStr "os" (revdescriptionOs v)
	, maybeToAttr toAttrFrStr "revision" (revdescriptionRevision v)
	, maybeToAttr toAttrFrStr "security" (revdescriptionSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (revdescriptionUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (revdescriptionVendor v)
	, maybeToAttr toAttrFrStr "role" (revdescriptionRole v)
	]
instance XmlAttrType Revdescription_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Revdescription_Revisionflag_Changed
	    translate "added" = Just Revdescription_Revisionflag_Added
	    translate "deleted" = Just Revdescription_Revisionflag_Deleted
	    translate "off" = Just Revdescription_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Revdescription_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Revdescription_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Revdescription_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Revdescription_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Seriesvolnums where
    fromElem (CElem (Elem "seriesvolnums" as c0):rest) =
	(\(a,ca)->
	   (Just (Seriesvolnums (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Seriesvolnums as a) =
	[CElem (Elem "seriesvolnums" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Seriesvolnums_Attrs where
    fromAttrs as =
	Seriesvolnums_Attrs
	  { seriesvolnumsId = possibleA fromAttrToStr "id" as
	  , seriesvolnumsLang = possibleA fromAttrToStr "lang" as
	  , seriesvolnumsRemap = possibleA fromAttrToStr "remap" as
	  , seriesvolnumsXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , seriesvolnumsRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , seriesvolnumsArch = possibleA fromAttrToStr "arch" as
	  , seriesvolnumsCondition = possibleA fromAttrToStr "condition" as
	  , seriesvolnumsConformance = possibleA fromAttrToStr "conformance" as
	  , seriesvolnumsOs = possibleA fromAttrToStr "os" as
	  , seriesvolnumsRevision = possibleA fromAttrToStr "revision" as
	  , seriesvolnumsSecurity = possibleA fromAttrToStr "security" as
	  , seriesvolnumsUserlevel = possibleA fromAttrToStr "userlevel" as
	  , seriesvolnumsVendor = possibleA fromAttrToStr "vendor" as
	  , seriesvolnumsRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (seriesvolnumsId v)
	, maybeToAttr toAttrFrStr "lang" (seriesvolnumsLang v)
	, maybeToAttr toAttrFrStr "remap" (seriesvolnumsRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (seriesvolnumsXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (seriesvolnumsRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (seriesvolnumsArch v)
	, maybeToAttr toAttrFrStr "condition" (seriesvolnumsCondition v)
	, maybeToAttr toAttrFrStr "conformance" (seriesvolnumsConformance v)
	, maybeToAttr toAttrFrStr "os" (seriesvolnumsOs v)
	, maybeToAttr toAttrFrStr "revision" (seriesvolnumsRevision v)
	, maybeToAttr toAttrFrStr "security" (seriesvolnumsSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (seriesvolnumsUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (seriesvolnumsVendor v)
	, maybeToAttr toAttrFrStr "role" (seriesvolnumsRole v)
	]
instance XmlContent Seriesvolnums_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Seriesvolnums_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Seriesvolnums_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Seriesvolnums_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Seriesvolnums_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Seriesvolnums_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Seriesvolnums_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Seriesvolnums_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Seriesvolnums_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Seriesvolnums_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Seriesvolnums_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Seriesvolnums_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Seriesvolnums_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Seriesvolnums_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Seriesvolnums_Str a) = toText a
    toElem (Seriesvolnums_Link a) = toElem a
    toElem (Seriesvolnums_Olink a) = toElem a
    toElem (Seriesvolnums_Ulink a) = toElem a
    toElem (Seriesvolnums_Emphasis a) = toElem a
    toElem (Seriesvolnums_Trademark a) = toElem a
    toElem (Seriesvolnums_Replaceable a) = toElem a
    toElem (Seriesvolnums_Remark a) = toElem a
    toElem (Seriesvolnums_Subscript a) = toElem a
    toElem (Seriesvolnums_Superscript a) = toElem a
    toElem (Seriesvolnums_Inlinegraphic a) = toElem a
    toElem (Seriesvolnums_Inlinemediaobject a) = toElem a
    toElem (Seriesvolnums_Indexterm a) = toElem a
instance XmlAttrType Seriesvolnums_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Seriesvolnums_Revisionflag_Changed
	    translate "added" = Just Seriesvolnums_Revisionflag_Added
	    translate "deleted" = Just Seriesvolnums_Revisionflag_Deleted
	    translate "off" = Just Seriesvolnums_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Seriesvolnums_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Seriesvolnums_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Seriesvolnums_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Seriesvolnums_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Volumenum where
    fromElem (CElem (Elem "volumenum" as c0):rest) =
	(\(a,ca)->
	   (Just (Volumenum (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Volumenum as a) =
	[CElem (Elem "volumenum" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Volumenum_Attrs where
    fromAttrs as =
	Volumenum_Attrs
	  { volumenumId = possibleA fromAttrToStr "id" as
	  , volumenumLang = possibleA fromAttrToStr "lang" as
	  , volumenumRemap = possibleA fromAttrToStr "remap" as
	  , volumenumXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , volumenumRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , volumenumArch = possibleA fromAttrToStr "arch" as
	  , volumenumCondition = possibleA fromAttrToStr "condition" as
	  , volumenumConformance = possibleA fromAttrToStr "conformance" as
	  , volumenumOs = possibleA fromAttrToStr "os" as
	  , volumenumRevision = possibleA fromAttrToStr "revision" as
	  , volumenumSecurity = possibleA fromAttrToStr "security" as
	  , volumenumUserlevel = possibleA fromAttrToStr "userlevel" as
	  , volumenumVendor = possibleA fromAttrToStr "vendor" as
	  , volumenumRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (volumenumId v)
	, maybeToAttr toAttrFrStr "lang" (volumenumLang v)
	, maybeToAttr toAttrFrStr "remap" (volumenumRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (volumenumXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (volumenumRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (volumenumArch v)
	, maybeToAttr toAttrFrStr "condition" (volumenumCondition v)
	, maybeToAttr toAttrFrStr "conformance" (volumenumConformance v)
	, maybeToAttr toAttrFrStr "os" (volumenumOs v)
	, maybeToAttr toAttrFrStr "revision" (volumenumRevision v)
	, maybeToAttr toAttrFrStr "security" (volumenumSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (volumenumUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (volumenumVendor v)
	, maybeToAttr toAttrFrStr "role" (volumenumRole v)
	]
instance XmlContent Volumenum_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Volumenum_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Volumenum_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Volumenum_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Volumenum_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Volumenum_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Volumenum_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Volumenum_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Volumenum_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Volumenum_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Volumenum_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Volumenum_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Volumenum_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Volumenum_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Volumenum_Str a) = toText a
    toElem (Volumenum_Link a) = toElem a
    toElem (Volumenum_Olink a) = toElem a
    toElem (Volumenum_Ulink a) = toElem a
    toElem (Volumenum_Emphasis a) = toElem a
    toElem (Volumenum_Trademark a) = toElem a
    toElem (Volumenum_Replaceable a) = toElem a
    toElem (Volumenum_Remark a) = toElem a
    toElem (Volumenum_Subscript a) = toElem a
    toElem (Volumenum_Superscript a) = toElem a
    toElem (Volumenum_Inlinegraphic a) = toElem a
    toElem (Volumenum_Inlinemediaobject a) = toElem a
    toElem (Volumenum_Indexterm a) = toElem a
instance XmlAttrType Volumenum_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Volumenum_Revisionflag_Changed
	    translate "added" = Just Volumenum_Revisionflag_Added
	    translate "deleted" = Just Volumenum_Revisionflag_Deleted
	    translate "off" = Just Volumenum_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Volumenum_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Volumenum_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Volumenum_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Volumenum_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Accel where
    fromElem (CElem (Elem "accel" as c0):rest) =
	(\(a,ca)->
	   (Just (Accel (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Accel as a) =
	[CElem (Elem "accel" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Accel_Attrs where
    fromAttrs as =
	Accel_Attrs
	  { accelId = possibleA fromAttrToStr "id" as
	  , accelLang = possibleA fromAttrToStr "lang" as
	  , accelRemap = possibleA fromAttrToStr "remap" as
	  , accelXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , accelRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , accelArch = possibleA fromAttrToStr "arch" as
	  , accelCondition = possibleA fromAttrToStr "condition" as
	  , accelConformance = possibleA fromAttrToStr "conformance" as
	  , accelOs = possibleA fromAttrToStr "os" as
	  , accelRevision = possibleA fromAttrToStr "revision" as
	  , accelSecurity = possibleA fromAttrToStr "security" as
	  , accelUserlevel = possibleA fromAttrToStr "userlevel" as
	  , accelVendor = possibleA fromAttrToStr "vendor" as
	  , accelRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (accelId v)
	, maybeToAttr toAttrFrStr "lang" (accelLang v)
	, maybeToAttr toAttrFrStr "remap" (accelRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (accelXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (accelRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (accelArch v)
	, maybeToAttr toAttrFrStr "condition" (accelCondition v)
	, maybeToAttr toAttrFrStr "conformance" (accelConformance v)
	, maybeToAttr toAttrFrStr "os" (accelOs v)
	, maybeToAttr toAttrFrStr "revision" (accelRevision v)
	, maybeToAttr toAttrFrStr "security" (accelSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (accelUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (accelVendor v)
	, maybeToAttr toAttrFrStr "role" (accelRole v)
	]
instance XmlContent Accel_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Accel_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Accel_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Accel_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Accel_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Accel_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Accel_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Accel_Str a) = toText a
    toElem (Accel_Replaceable a) = toElem a
    toElem (Accel_Inlinegraphic a) = toElem a
    toElem (Accel_Inlinemediaobject a) = toElem a
    toElem (Accel_Indexterm a) = toElem a
    toElem (Accel_Beginpage a) = toElem a
instance XmlAttrType Accel_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Accel_Revisionflag_Changed
	    translate "added" = Just Accel_Revisionflag_Added
	    translate "deleted" = Just Accel_Revisionflag_Deleted
	    translate "off" = Just Accel_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Accel_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Accel_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Accel_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Accel_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Action where
    fromElem (CElem (Elem "action" as c0):rest) =
	(\(a,ca)->
	   (Just (Action (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Action as a) =
	[CElem (Elem "action" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Action_Attrs where
    fromAttrs as =
	Action_Attrs
	  { actionMoreinfo = defaultA fromAttrToTyp Action_Moreinfo_None "moreinfo" as
	  , actionId = possibleA fromAttrToStr "id" as
	  , actionLang = possibleA fromAttrToStr "lang" as
	  , actionRemap = possibleA fromAttrToStr "remap" as
	  , actionXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , actionRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , actionArch = possibleA fromAttrToStr "arch" as
	  , actionCondition = possibleA fromAttrToStr "condition" as
	  , actionConformance = possibleA fromAttrToStr "conformance" as
	  , actionOs = possibleA fromAttrToStr "os" as
	  , actionRevision = possibleA fromAttrToStr "revision" as
	  , actionSecurity = possibleA fromAttrToStr "security" as
	  , actionUserlevel = possibleA fromAttrToStr "userlevel" as
	  , actionVendor = possibleA fromAttrToStr "vendor" as
	  , actionRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (actionMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (actionId v)
	, maybeToAttr toAttrFrStr "lang" (actionLang v)
	, maybeToAttr toAttrFrStr "remap" (actionRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (actionXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (actionRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (actionArch v)
	, maybeToAttr toAttrFrStr "condition" (actionCondition v)
	, maybeToAttr toAttrFrStr "conformance" (actionConformance v)
	, maybeToAttr toAttrFrStr "os" (actionOs v)
	, maybeToAttr toAttrFrStr "revision" (actionRevision v)
	, maybeToAttr toAttrFrStr "security" (actionSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (actionUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (actionVendor v)
	, maybeToAttr toAttrFrStr "role" (actionRole v)
	]
instance XmlContent Action_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Action_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Action_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Action_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Action_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Action_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Action_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Action_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Action_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Action_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Action_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Action_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Action_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Action_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Action_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Action_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Action_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Action_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Action_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Action_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Action_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Action_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Action_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Action_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Action_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Action_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Action_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Action_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Action_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Action_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Action_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Action_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Action_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Action_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Action_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Action_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Action_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Action_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Action_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Action_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Action_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Action_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Action_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Action_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Action_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Action_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Action_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Action_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Action_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Action_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Action_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Action_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Action_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Action_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Action_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Action_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Action_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Action_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Action_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Action_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Action_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Action_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Action_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Action_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Action_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Action_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Action_Beginpage a), rest)
																																																																		(_,_) ->
																																																																		    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Action_Str a) = toText a
    toElem (Action_Link a) = toElem a
    toElem (Action_Olink a) = toElem a
    toElem (Action_Ulink a) = toElem a
    toElem (Action_Action a) = toElem a
    toElem (Action_Application a) = toElem a
    toElem (Action_Classname a) = toElem a
    toElem (Action_Methodname a) = toElem a
    toElem (Action_Interfacename a) = toElem a
    toElem (Action_Exceptionname a) = toElem a
    toElem (Action_Ooclass a) = toElem a
    toElem (Action_Oointerface a) = toElem a
    toElem (Action_Ooexception a) = toElem a
    toElem (Action_Command a) = toElem a
    toElem (Action_Computeroutput a) = toElem a
    toElem (Action_Database a) = toElem a
    toElem (Action_Email a) = toElem a
    toElem (Action_Envar a) = toElem a
    toElem (Action_Errorcode a) = toElem a
    toElem (Action_Errorname a) = toElem a
    toElem (Action_Errortype a) = toElem a
    toElem (Action_Errortext a) = toElem a
    toElem (Action_Filename a) = toElem a
    toElem (Action_Function a) = toElem a
    toElem (Action_Guibutton a) = toElem a
    toElem (Action_Guiicon a) = toElem a
    toElem (Action_Guilabel a) = toElem a
    toElem (Action_Guimenu a) = toElem a
    toElem (Action_Guimenuitem a) = toElem a
    toElem (Action_Guisubmenu a) = toElem a
    toElem (Action_Hardware a) = toElem a
    toElem (Action_Interface a) = toElem a
    toElem (Action_Keycap a) = toElem a
    toElem (Action_Keycode a) = toElem a
    toElem (Action_Keycombo a) = toElem a
    toElem (Action_Keysym a) = toElem a
    toElem (Action_Literal a) = toElem a
    toElem (Action_Constant a) = toElem a
    toElem (Action_Markup a) = toElem a
    toElem (Action_Medialabel a) = toElem a
    toElem (Action_Menuchoice a) = toElem a
    toElem (Action_Mousebutton a) = toElem a
    toElem (Action_Option a) = toElem a
    toElem (Action_Optional a) = toElem a
    toElem (Action_Parameter a) = toElem a
    toElem (Action_Prompt a) = toElem a
    toElem (Action_Property a) = toElem a
    toElem (Action_Replaceable a) = toElem a
    toElem (Action_Returnvalue a) = toElem a
    toElem (Action_Sgmltag a) = toElem a
    toElem (Action_Structfield a) = toElem a
    toElem (Action_Structname a) = toElem a
    toElem (Action_Symbol a) = toElem a
    toElem (Action_Systemitem a) = toElem a
    toElem (Action_Token a) = toElem a
    toElem (Action_Type a) = toElem a
    toElem (Action_Userinput a) = toElem a
    toElem (Action_Varname a) = toElem a
    toElem (Action_Anchor a) = toElem a
    toElem (Action_Remark a) = toElem a
    toElem (Action_Subscript a) = toElem a
    toElem (Action_Superscript a) = toElem a
    toElem (Action_Inlinegraphic a) = toElem a
    toElem (Action_Inlinemediaobject a) = toElem a
    toElem (Action_Indexterm a) = toElem a
    toElem (Action_Beginpage a) = toElem a
instance XmlAttrType Action_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Action_Moreinfo_Refentry
	    translate "none" = Just Action_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Action_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Action_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Action_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Action_Revisionflag_Changed
	    translate "added" = Just Action_Revisionflag_Added
	    translate "deleted" = Just Action_Revisionflag_Deleted
	    translate "off" = Just Action_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Action_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Action_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Action_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Action_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Application where
    fromElem (CElem (Elem "application" as c0):rest) =
	(\(a,ca)->
	   (Just (Application (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Application as a) =
	[CElem (Elem "application" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Application_Attrs where
    fromAttrs as =
	Application_Attrs
	  { applicationClass = possibleA fromAttrToTyp "class" as
	  , applicationMoreinfo = defaultA fromAttrToTyp Application_Moreinfo_None "moreinfo" as
	  , applicationId = possibleA fromAttrToStr "id" as
	  , applicationLang = possibleA fromAttrToStr "lang" as
	  , applicationRemap = possibleA fromAttrToStr "remap" as
	  , applicationXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , applicationRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , applicationArch = possibleA fromAttrToStr "arch" as
	  , applicationCondition = possibleA fromAttrToStr "condition" as
	  , applicationConformance = possibleA fromAttrToStr "conformance" as
	  , applicationOs = possibleA fromAttrToStr "os" as
	  , applicationRevision = possibleA fromAttrToStr "revision" as
	  , applicationSecurity = possibleA fromAttrToStr "security" as
	  , applicationUserlevel = possibleA fromAttrToStr "userlevel" as
	  , applicationVendor = possibleA fromAttrToStr "vendor" as
	  , applicationRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "class" (applicationClass v)
	, defaultToAttr toAttrFrTyp "moreinfo" (applicationMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (applicationId v)
	, maybeToAttr toAttrFrStr "lang" (applicationLang v)
	, maybeToAttr toAttrFrStr "remap" (applicationRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (applicationXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (applicationRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (applicationArch v)
	, maybeToAttr toAttrFrStr "condition" (applicationCondition v)
	, maybeToAttr toAttrFrStr "conformance" (applicationConformance v)
	, maybeToAttr toAttrFrStr "os" (applicationOs v)
	, maybeToAttr toAttrFrStr "revision" (applicationRevision v)
	, maybeToAttr toAttrFrStr "security" (applicationSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (applicationUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (applicationVendor v)
	, maybeToAttr toAttrFrStr "role" (applicationRole v)
	]
instance XmlContent Application_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Application_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Application_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Application_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Application_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Application_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Application_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Application_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Application_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Application_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Application_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Application_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Application_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Application_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Application_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Application_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Application_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Application_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Application_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Application_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Application_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Application_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Application_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Application_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Application_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Application_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Application_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Application_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Application_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Application_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Application_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Application_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Application_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Application_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Application_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Application_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Application_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Application_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Application_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Application_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Application_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Application_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Application_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Application_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Application_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Application_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Application_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Application_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Application_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Application_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Application_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Application_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Application_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Application_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Application_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Application_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Application_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Application_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Application_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Application_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Application_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Application_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Application_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Application_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Application_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Application_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Application_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Application_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Application_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Application_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Application_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Application_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Application_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Application_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Application_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Application_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Application_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Application_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Application_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Application_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Application_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Application_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Application_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Application_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Application_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Application_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Application_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Application_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Application_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Application_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Application_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Application_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Application_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Application_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Application_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Application_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Application_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Application_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Application_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Application_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Application_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Application_Str a) = toText a
    toElem (Application_Footnoteref a) = toElem a
    toElem (Application_Xref a) = toElem a
    toElem (Application_Abbrev a) = toElem a
    toElem (Application_Acronym a) = toElem a
    toElem (Application_Citation a) = toElem a
    toElem (Application_Citerefentry a) = toElem a
    toElem (Application_Citetitle a) = toElem a
    toElem (Application_Emphasis a) = toElem a
    toElem (Application_Firstterm a) = toElem a
    toElem (Application_Foreignphrase a) = toElem a
    toElem (Application_Glossterm a) = toElem a
    toElem (Application_Footnote a) = toElem a
    toElem (Application_Phrase a) = toElem a
    toElem (Application_Quote a) = toElem a
    toElem (Application_Trademark a) = toElem a
    toElem (Application_Wordasword a) = toElem a
    toElem (Application_Personname a) = toElem a
    toElem (Application_Link a) = toElem a
    toElem (Application_Olink a) = toElem a
    toElem (Application_Ulink a) = toElem a
    toElem (Application_Action a) = toElem a
    toElem (Application_Application a) = toElem a
    toElem (Application_Classname a) = toElem a
    toElem (Application_Methodname a) = toElem a
    toElem (Application_Interfacename a) = toElem a
    toElem (Application_Exceptionname a) = toElem a
    toElem (Application_Ooclass a) = toElem a
    toElem (Application_Oointerface a) = toElem a
    toElem (Application_Ooexception a) = toElem a
    toElem (Application_Command a) = toElem a
    toElem (Application_Computeroutput a) = toElem a
    toElem (Application_Database a) = toElem a
    toElem (Application_Email a) = toElem a
    toElem (Application_Envar a) = toElem a
    toElem (Application_Errorcode a) = toElem a
    toElem (Application_Errorname a) = toElem a
    toElem (Application_Errortype a) = toElem a
    toElem (Application_Errortext a) = toElem a
    toElem (Application_Filename a) = toElem a
    toElem (Application_Function a) = toElem a
    toElem (Application_Guibutton a) = toElem a
    toElem (Application_Guiicon a) = toElem a
    toElem (Application_Guilabel a) = toElem a
    toElem (Application_Guimenu a) = toElem a
    toElem (Application_Guimenuitem a) = toElem a
    toElem (Application_Guisubmenu a) = toElem a
    toElem (Application_Hardware a) = toElem a
    toElem (Application_Interface a) = toElem a
    toElem (Application_Keycap a) = toElem a
    toElem (Application_Keycode a) = toElem a
    toElem (Application_Keycombo a) = toElem a
    toElem (Application_Keysym a) = toElem a
    toElem (Application_Literal a) = toElem a
    toElem (Application_Constant a) = toElem a
    toElem (Application_Markup a) = toElem a
    toElem (Application_Medialabel a) = toElem a
    toElem (Application_Menuchoice a) = toElem a
    toElem (Application_Mousebutton a) = toElem a
    toElem (Application_Option a) = toElem a
    toElem (Application_Optional a) = toElem a
    toElem (Application_Parameter a) = toElem a
    toElem (Application_Prompt a) = toElem a
    toElem (Application_Property a) = toElem a
    toElem (Application_Replaceable a) = toElem a
    toElem (Application_Returnvalue a) = toElem a
    toElem (Application_Sgmltag a) = toElem a
    toElem (Application_Structfield a) = toElem a
    toElem (Application_Structname a) = toElem a
    toElem (Application_Symbol a) = toElem a
    toElem (Application_Systemitem a) = toElem a
    toElem (Application_Token a) = toElem a
    toElem (Application_Type a) = toElem a
    toElem (Application_Userinput a) = toElem a
    toElem (Application_Varname a) = toElem a
    toElem (Application_Anchor a) = toElem a
    toElem (Application_Author a) = toElem a
    toElem (Application_Authorinitials a) = toElem a
    toElem (Application_Corpauthor a) = toElem a
    toElem (Application_Modespec a) = toElem a
    toElem (Application_Othercredit a) = toElem a
    toElem (Application_Productname a) = toElem a
    toElem (Application_Productnumber a) = toElem a
    toElem (Application_Revhistory a) = toElem a
    toElem (Application_Remark a) = toElem a
    toElem (Application_Subscript a) = toElem a
    toElem (Application_Superscript a) = toElem a
    toElem (Application_Inlinegraphic a) = toElem a
    toElem (Application_Inlinemediaobject a) = toElem a
    toElem (Application_Inlineequation a) = toElem a
    toElem (Application_Synopsis a) = toElem a
    toElem (Application_Cmdsynopsis a) = toElem a
    toElem (Application_Funcsynopsis a) = toElem a
    toElem (Application_Classsynopsis a) = toElem a
    toElem (Application_Fieldsynopsis a) = toElem a
    toElem (Application_Constructorsynopsis a) = toElem a
    toElem (Application_Destructorsynopsis a) = toElem a
    toElem (Application_Methodsynopsis a) = toElem a
    toElem (Application_Indexterm a) = toElem a
    toElem (Application_Beginpage a) = toElem a
instance XmlAttrType Application_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "hardware" = Just Application_Class_Hardware
	    translate "software" = Just Application_Class_Software
	    translate _ = Nothing
    toAttrFrTyp n Application_Class_Hardware = Just (n, str2attr "hardware")
    toAttrFrTyp n Application_Class_Software = Just (n, str2attr "software")
instance XmlAttrType Application_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Application_Moreinfo_Refentry
	    translate "none" = Just Application_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Application_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Application_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Application_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Application_Revisionflag_Changed
	    translate "added" = Just Application_Revisionflag_Added
	    translate "deleted" = Just Application_Revisionflag_Deleted
	    translate "off" = Just Application_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Application_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Application_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Application_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Application_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Classname where
    fromElem (CElem (Elem "classname" as c0):rest) =
	(\(a,ca)->
	   (Just (Classname (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Classname as a) =
	[CElem (Elem "classname" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Classname_Attrs where
    fromAttrs as =
	Classname_Attrs
	  { classnameId = possibleA fromAttrToStr "id" as
	  , classnameLang = possibleA fromAttrToStr "lang" as
	  , classnameRemap = possibleA fromAttrToStr "remap" as
	  , classnameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , classnameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , classnameArch = possibleA fromAttrToStr "arch" as
	  , classnameCondition = possibleA fromAttrToStr "condition" as
	  , classnameConformance = possibleA fromAttrToStr "conformance" as
	  , classnameOs = possibleA fromAttrToStr "os" as
	  , classnameRevision = possibleA fromAttrToStr "revision" as
	  , classnameSecurity = possibleA fromAttrToStr "security" as
	  , classnameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , classnameVendor = possibleA fromAttrToStr "vendor" as
	  , classnameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (classnameId v)
	, maybeToAttr toAttrFrStr "lang" (classnameLang v)
	, maybeToAttr toAttrFrStr "remap" (classnameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (classnameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (classnameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (classnameArch v)
	, maybeToAttr toAttrFrStr "condition" (classnameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (classnameConformance v)
	, maybeToAttr toAttrFrStr "os" (classnameOs v)
	, maybeToAttr toAttrFrStr "revision" (classnameRevision v)
	, maybeToAttr toAttrFrStr "security" (classnameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (classnameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (classnameVendor v)
	, maybeToAttr toAttrFrStr "role" (classnameRole v)
	]
instance XmlContent Classname_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Classname_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Classname_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Classname_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Classname_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Classname_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Classname_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Classname_Str a) = toText a
    toElem (Classname_Replaceable a) = toElem a
    toElem (Classname_Inlinegraphic a) = toElem a
    toElem (Classname_Inlinemediaobject a) = toElem a
    toElem (Classname_Indexterm a) = toElem a
    toElem (Classname_Beginpage a) = toElem a
instance XmlAttrType Classname_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Classname_Revisionflag_Changed
	    translate "added" = Just Classname_Revisionflag_Added
	    translate "deleted" = Just Classname_Revisionflag_Deleted
	    translate "off" = Just Classname_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Classname_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Classname_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Classname_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Classname_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Co where
    fromElem (CElem (Elem "co" as []):rest) =
	(Just (fromAttrs as), rest)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem as =
	[CElem (Elem "co" (toAttrs as) [])]
instance XmlAttributes Co where
    fromAttrs as =
	Co
	  { coLabel = possibleA fromAttrToStr "label" as
	  , coLinkends = possibleA fromAttrToStr "linkends" as
	  , coId = definiteA fromAttrToStr "co" "id" as
	  , coLang = possibleA fromAttrToStr "lang" as
	  , coRemap = possibleA fromAttrToStr "remap" as
	  , coXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , coRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , coArch = possibleA fromAttrToStr "arch" as
	  , coCondition = possibleA fromAttrToStr "condition" as
	  , coConformance = possibleA fromAttrToStr "conformance" as
	  , coOs = possibleA fromAttrToStr "os" as
	  , coRevision = possibleA fromAttrToStr "revision" as
	  , coSecurity = possibleA fromAttrToStr "security" as
	  , coUserlevel = possibleA fromAttrToStr "userlevel" as
	  , coVendor = possibleA fromAttrToStr "vendor" as
	  , coRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (coLabel v)
	, maybeToAttr toAttrFrStr "linkends" (coLinkends v)
	, toAttrFrStr "id" (coId v)
	, maybeToAttr toAttrFrStr "lang" (coLang v)
	, maybeToAttr toAttrFrStr "remap" (coRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (coXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (coRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (coArch v)
	, maybeToAttr toAttrFrStr "condition" (coCondition v)
	, maybeToAttr toAttrFrStr "conformance" (coConformance v)
	, maybeToAttr toAttrFrStr "os" (coOs v)
	, maybeToAttr toAttrFrStr "revision" (coRevision v)
	, maybeToAttr toAttrFrStr "security" (coSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (coUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (coVendor v)
	, maybeToAttr toAttrFrStr "role" (coRole v)
	]
instance XmlAttrType Co_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Co_Revisionflag_Changed
	    translate "added" = Just Co_Revisionflag_Added
	    translate "deleted" = Just Co_Revisionflag_Deleted
	    translate "off" = Just Co_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Co_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Co_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Co_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Co_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Coref where
    fromElem (CElem (Elem "coref" as []):rest) =
	(Just (fromAttrs as), rest)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem as =
	[CElem (Elem "coref" (toAttrs as) [])]
instance XmlAttributes Coref where
    fromAttrs as =
	Coref
	  { corefLabel = possibleA fromAttrToStr "label" as
	  , corefLinkend = definiteA fromAttrToStr "coref" "linkend" as
	  , corefId = possibleA fromAttrToStr "id" as
	  , corefLang = possibleA fromAttrToStr "lang" as
	  , corefRemap = possibleA fromAttrToStr "remap" as
	  , corefXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , corefRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , corefArch = possibleA fromAttrToStr "arch" as
	  , corefCondition = possibleA fromAttrToStr "condition" as
	  , corefConformance = possibleA fromAttrToStr "conformance" as
	  , corefOs = possibleA fromAttrToStr "os" as
	  , corefRevision = possibleA fromAttrToStr "revision" as
	  , corefSecurity = possibleA fromAttrToStr "security" as
	  , corefUserlevel = possibleA fromAttrToStr "userlevel" as
	  , corefVendor = possibleA fromAttrToStr "vendor" as
	  , corefRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (corefLabel v)
	, toAttrFrStr "linkend" (corefLinkend v)
	, maybeToAttr toAttrFrStr "id" (corefId v)
	, maybeToAttr toAttrFrStr "lang" (corefLang v)
	, maybeToAttr toAttrFrStr "remap" (corefRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (corefXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (corefRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (corefArch v)
	, maybeToAttr toAttrFrStr "condition" (corefCondition v)
	, maybeToAttr toAttrFrStr "conformance" (corefConformance v)
	, maybeToAttr toAttrFrStr "os" (corefOs v)
	, maybeToAttr toAttrFrStr "revision" (corefRevision v)
	, maybeToAttr toAttrFrStr "security" (corefSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (corefUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (corefVendor v)
	, maybeToAttr toAttrFrStr "role" (corefRole v)
	]
instance XmlAttrType Coref_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Coref_Revisionflag_Changed
	    translate "added" = Just Coref_Revisionflag_Added
	    translate "deleted" = Just Coref_Revisionflag_Deleted
	    translate "off" = Just Coref_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Coref_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Coref_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Coref_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Coref_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Command where
    fromElem (CElem (Elem "command" as c0):rest) =
	(\(a,ca)->
	   (Just (Command (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Command as a) =
	[CElem (Elem "command" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Command_Attrs where
    fromAttrs as =
	Command_Attrs
	  { commandMoreinfo = defaultA fromAttrToTyp Command_Moreinfo_None "moreinfo" as
	  , commandId = possibleA fromAttrToStr "id" as
	  , commandLang = possibleA fromAttrToStr "lang" as
	  , commandRemap = possibleA fromAttrToStr "remap" as
	  , commandXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , commandRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , commandArch = possibleA fromAttrToStr "arch" as
	  , commandCondition = possibleA fromAttrToStr "condition" as
	  , commandConformance = possibleA fromAttrToStr "conformance" as
	  , commandOs = possibleA fromAttrToStr "os" as
	  , commandRevision = possibleA fromAttrToStr "revision" as
	  , commandSecurity = possibleA fromAttrToStr "security" as
	  , commandUserlevel = possibleA fromAttrToStr "userlevel" as
	  , commandVendor = possibleA fromAttrToStr "vendor" as
	  , commandRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (commandMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (commandId v)
	, maybeToAttr toAttrFrStr "lang" (commandLang v)
	, maybeToAttr toAttrFrStr "remap" (commandRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (commandXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (commandRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (commandArch v)
	, maybeToAttr toAttrFrStr "condition" (commandCondition v)
	, maybeToAttr toAttrFrStr "conformance" (commandConformance v)
	, maybeToAttr toAttrFrStr "os" (commandOs v)
	, maybeToAttr toAttrFrStr "revision" (commandRevision v)
	, maybeToAttr toAttrFrStr "security" (commandSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (commandUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (commandVendor v)
	, maybeToAttr toAttrFrStr "role" (commandRole v)
	]
instance XmlContent Command_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Command_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Command_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Command_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Command_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Command_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Command_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Command_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Command_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Command_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Command_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Command_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Command_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Command_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Command_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Command_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Command_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Command_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Command_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Command_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Command_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Command_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Command_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Command_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Command_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Command_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Command_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Command_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Command_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Command_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Command_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Command_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Command_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Command_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Command_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Command_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Command_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Command_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Command_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Command_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Command_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Command_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Command_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Command_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Command_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Command_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Command_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Command_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Command_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Command_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Command_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Command_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Command_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Command_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Command_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Command_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Command_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Command_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Command_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Command_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Command_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Command_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Command_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Command_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Command_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Command_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Command_Beginpage a), rest)
																																																																		(_,_) ->
																																																																		    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Command_Str a) = toText a
    toElem (Command_Link a) = toElem a
    toElem (Command_Olink a) = toElem a
    toElem (Command_Ulink a) = toElem a
    toElem (Command_Action a) = toElem a
    toElem (Command_Application a) = toElem a
    toElem (Command_Classname a) = toElem a
    toElem (Command_Methodname a) = toElem a
    toElem (Command_Interfacename a) = toElem a
    toElem (Command_Exceptionname a) = toElem a
    toElem (Command_Ooclass a) = toElem a
    toElem (Command_Oointerface a) = toElem a
    toElem (Command_Ooexception a) = toElem a
    toElem (Command_Command a) = toElem a
    toElem (Command_Computeroutput a) = toElem a
    toElem (Command_Database a) = toElem a
    toElem (Command_Email a) = toElem a
    toElem (Command_Envar a) = toElem a
    toElem (Command_Errorcode a) = toElem a
    toElem (Command_Errorname a) = toElem a
    toElem (Command_Errortype a) = toElem a
    toElem (Command_Errortext a) = toElem a
    toElem (Command_Filename a) = toElem a
    toElem (Command_Function a) = toElem a
    toElem (Command_Guibutton a) = toElem a
    toElem (Command_Guiicon a) = toElem a
    toElem (Command_Guilabel a) = toElem a
    toElem (Command_Guimenu a) = toElem a
    toElem (Command_Guimenuitem a) = toElem a
    toElem (Command_Guisubmenu a) = toElem a
    toElem (Command_Hardware a) = toElem a
    toElem (Command_Interface a) = toElem a
    toElem (Command_Keycap a) = toElem a
    toElem (Command_Keycode a) = toElem a
    toElem (Command_Keycombo a) = toElem a
    toElem (Command_Keysym a) = toElem a
    toElem (Command_Literal a) = toElem a
    toElem (Command_Constant a) = toElem a
    toElem (Command_Markup a) = toElem a
    toElem (Command_Medialabel a) = toElem a
    toElem (Command_Menuchoice a) = toElem a
    toElem (Command_Mousebutton a) = toElem a
    toElem (Command_Option a) = toElem a
    toElem (Command_Optional a) = toElem a
    toElem (Command_Parameter a) = toElem a
    toElem (Command_Prompt a) = toElem a
    toElem (Command_Property a) = toElem a
    toElem (Command_Replaceable a) = toElem a
    toElem (Command_Returnvalue a) = toElem a
    toElem (Command_Sgmltag a) = toElem a
    toElem (Command_Structfield a) = toElem a
    toElem (Command_Structname a) = toElem a
    toElem (Command_Symbol a) = toElem a
    toElem (Command_Systemitem a) = toElem a
    toElem (Command_Token a) = toElem a
    toElem (Command_Type a) = toElem a
    toElem (Command_Userinput a) = toElem a
    toElem (Command_Varname a) = toElem a
    toElem (Command_Anchor a) = toElem a
    toElem (Command_Remark a) = toElem a
    toElem (Command_Subscript a) = toElem a
    toElem (Command_Superscript a) = toElem a
    toElem (Command_Inlinegraphic a) = toElem a
    toElem (Command_Inlinemediaobject a) = toElem a
    toElem (Command_Indexterm a) = toElem a
    toElem (Command_Beginpage a) = toElem a
instance XmlAttrType Command_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Command_Moreinfo_Refentry
	    translate "none" = Just Command_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Command_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Command_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Command_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Command_Revisionflag_Changed
	    translate "added" = Just Command_Revisionflag_Added
	    translate "deleted" = Just Command_Revisionflag_Deleted
	    translate "off" = Just Command_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Command_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Command_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Command_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Command_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Computeroutput where
    fromElem (CElem (Elem "computeroutput" as c0):rest) =
	(\(a,ca)->
	   (Just (Computeroutput (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Computeroutput as a) =
	[CElem (Elem "computeroutput" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Computeroutput_Attrs where
    fromAttrs as =
	Computeroutput_Attrs
	  { computeroutputMoreinfo = defaultA fromAttrToTyp Computeroutput_Moreinfo_None "moreinfo" as
	  , computeroutputId = possibleA fromAttrToStr "id" as
	  , computeroutputLang = possibleA fromAttrToStr "lang" as
	  , computeroutputRemap = possibleA fromAttrToStr "remap" as
	  , computeroutputXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , computeroutputRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , computeroutputArch = possibleA fromAttrToStr "arch" as
	  , computeroutputCondition = possibleA fromAttrToStr "condition" as
	  , computeroutputConformance = possibleA fromAttrToStr "conformance" as
	  , computeroutputOs = possibleA fromAttrToStr "os" as
	  , computeroutputRevision = possibleA fromAttrToStr "revision" as
	  , computeroutputSecurity = possibleA fromAttrToStr "security" as
	  , computeroutputUserlevel = possibleA fromAttrToStr "userlevel" as
	  , computeroutputVendor = possibleA fromAttrToStr "vendor" as
	  , computeroutputRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (computeroutputMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (computeroutputId v)
	, maybeToAttr toAttrFrStr "lang" (computeroutputLang v)
	, maybeToAttr toAttrFrStr "remap" (computeroutputRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (computeroutputXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (computeroutputRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (computeroutputArch v)
	, maybeToAttr toAttrFrStr "condition" (computeroutputCondition v)
	, maybeToAttr toAttrFrStr "conformance" (computeroutputConformance v)
	, maybeToAttr toAttrFrStr "os" (computeroutputOs v)
	, maybeToAttr toAttrFrStr "revision" (computeroutputRevision v)
	, maybeToAttr toAttrFrStr "security" (computeroutputSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (computeroutputUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (computeroutputVendor v)
	, maybeToAttr toAttrFrStr "role" (computeroutputRole v)
	]
instance XmlContent Computeroutput_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Computeroutput_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Computeroutput_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Computeroutput_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Computeroutput_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Computeroutput_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Computeroutput_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Computeroutput_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Computeroutput_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Computeroutput_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Computeroutput_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Computeroutput_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Computeroutput_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Computeroutput_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Computeroutput_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Computeroutput_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Computeroutput_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Computeroutput_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Computeroutput_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Computeroutput_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Computeroutput_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Computeroutput_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Computeroutput_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Computeroutput_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Computeroutput_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Computeroutput_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Computeroutput_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Computeroutput_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Computeroutput_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Computeroutput_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Computeroutput_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Computeroutput_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Computeroutput_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Computeroutput_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Computeroutput_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Computeroutput_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Computeroutput_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Computeroutput_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Computeroutput_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Computeroutput_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Computeroutput_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Computeroutput_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Computeroutput_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Computeroutput_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Computeroutput_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Computeroutput_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Computeroutput_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Computeroutput_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Computeroutput_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Computeroutput_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Computeroutput_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Computeroutput_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Computeroutput_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Computeroutput_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Computeroutput_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Computeroutput_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Computeroutput_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Computeroutput_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Computeroutput_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Computeroutput_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Computeroutput_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Computeroutput_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Computeroutput_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Computeroutput_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Computeroutput_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Computeroutput_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Computeroutput_Beginpage a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Computeroutput_Co a), rest)
																																																																			(_,_) ->
																																																																			    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Computeroutput_Str a) = toText a
    toElem (Computeroutput_Link a) = toElem a
    toElem (Computeroutput_Olink a) = toElem a
    toElem (Computeroutput_Ulink a) = toElem a
    toElem (Computeroutput_Action a) = toElem a
    toElem (Computeroutput_Application a) = toElem a
    toElem (Computeroutput_Classname a) = toElem a
    toElem (Computeroutput_Methodname a) = toElem a
    toElem (Computeroutput_Interfacename a) = toElem a
    toElem (Computeroutput_Exceptionname a) = toElem a
    toElem (Computeroutput_Ooclass a) = toElem a
    toElem (Computeroutput_Oointerface a) = toElem a
    toElem (Computeroutput_Ooexception a) = toElem a
    toElem (Computeroutput_Command a) = toElem a
    toElem (Computeroutput_Computeroutput a) = toElem a
    toElem (Computeroutput_Database a) = toElem a
    toElem (Computeroutput_Email a) = toElem a
    toElem (Computeroutput_Envar a) = toElem a
    toElem (Computeroutput_Errorcode a) = toElem a
    toElem (Computeroutput_Errorname a) = toElem a
    toElem (Computeroutput_Errortype a) = toElem a
    toElem (Computeroutput_Errortext a) = toElem a
    toElem (Computeroutput_Filename a) = toElem a
    toElem (Computeroutput_Function a) = toElem a
    toElem (Computeroutput_Guibutton a) = toElem a
    toElem (Computeroutput_Guiicon a) = toElem a
    toElem (Computeroutput_Guilabel a) = toElem a
    toElem (Computeroutput_Guimenu a) = toElem a
    toElem (Computeroutput_Guimenuitem a) = toElem a
    toElem (Computeroutput_Guisubmenu a) = toElem a
    toElem (Computeroutput_Hardware a) = toElem a
    toElem (Computeroutput_Interface a) = toElem a
    toElem (Computeroutput_Keycap a) = toElem a
    toElem (Computeroutput_Keycode a) = toElem a
    toElem (Computeroutput_Keycombo a) = toElem a
    toElem (Computeroutput_Keysym a) = toElem a
    toElem (Computeroutput_Literal a) = toElem a
    toElem (Computeroutput_Constant a) = toElem a
    toElem (Computeroutput_Markup a) = toElem a
    toElem (Computeroutput_Medialabel a) = toElem a
    toElem (Computeroutput_Menuchoice a) = toElem a
    toElem (Computeroutput_Mousebutton a) = toElem a
    toElem (Computeroutput_Option a) = toElem a
    toElem (Computeroutput_Optional a) = toElem a
    toElem (Computeroutput_Parameter a) = toElem a
    toElem (Computeroutput_Prompt a) = toElem a
    toElem (Computeroutput_Property a) = toElem a
    toElem (Computeroutput_Replaceable a) = toElem a
    toElem (Computeroutput_Returnvalue a) = toElem a
    toElem (Computeroutput_Sgmltag a) = toElem a
    toElem (Computeroutput_Structfield a) = toElem a
    toElem (Computeroutput_Structname a) = toElem a
    toElem (Computeroutput_Symbol a) = toElem a
    toElem (Computeroutput_Systemitem a) = toElem a
    toElem (Computeroutput_Token a) = toElem a
    toElem (Computeroutput_Type a) = toElem a
    toElem (Computeroutput_Userinput a) = toElem a
    toElem (Computeroutput_Varname a) = toElem a
    toElem (Computeroutput_Anchor a) = toElem a
    toElem (Computeroutput_Remark a) = toElem a
    toElem (Computeroutput_Subscript a) = toElem a
    toElem (Computeroutput_Superscript a) = toElem a
    toElem (Computeroutput_Inlinegraphic a) = toElem a
    toElem (Computeroutput_Inlinemediaobject a) = toElem a
    toElem (Computeroutput_Indexterm a) = toElem a
    toElem (Computeroutput_Beginpage a) = toElem a
    toElem (Computeroutput_Co a) = toElem a
instance XmlAttrType Computeroutput_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Computeroutput_Moreinfo_Refentry
	    translate "none" = Just Computeroutput_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Computeroutput_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Computeroutput_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Computeroutput_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Computeroutput_Revisionflag_Changed
	    translate "added" = Just Computeroutput_Revisionflag_Added
	    translate "deleted" = Just Computeroutput_Revisionflag_Deleted
	    translate "off" = Just Computeroutput_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Computeroutput_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Computeroutput_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Computeroutput_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Computeroutput_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Database where
    fromElem (CElem (Elem "database" as c0):rest) =
	(\(a,ca)->
	   (Just (Database (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Database as a) =
	[CElem (Elem "database" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Database_Attrs where
    fromAttrs as =
	Database_Attrs
	  { databaseClass = possibleA fromAttrToTyp "class" as
	  , databaseMoreinfo = defaultA fromAttrToTyp Database_Moreinfo_None "moreinfo" as
	  , databaseId = possibleA fromAttrToStr "id" as
	  , databaseLang = possibleA fromAttrToStr "lang" as
	  , databaseRemap = possibleA fromAttrToStr "remap" as
	  , databaseXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , databaseRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , databaseArch = possibleA fromAttrToStr "arch" as
	  , databaseCondition = possibleA fromAttrToStr "condition" as
	  , databaseConformance = possibleA fromAttrToStr "conformance" as
	  , databaseOs = possibleA fromAttrToStr "os" as
	  , databaseRevision = possibleA fromAttrToStr "revision" as
	  , databaseSecurity = possibleA fromAttrToStr "security" as
	  , databaseUserlevel = possibleA fromAttrToStr "userlevel" as
	  , databaseVendor = possibleA fromAttrToStr "vendor" as
	  , databaseRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "class" (databaseClass v)
	, defaultToAttr toAttrFrTyp "moreinfo" (databaseMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (databaseId v)
	, maybeToAttr toAttrFrStr "lang" (databaseLang v)
	, maybeToAttr toAttrFrStr "remap" (databaseRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (databaseXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (databaseRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (databaseArch v)
	, maybeToAttr toAttrFrStr "condition" (databaseCondition v)
	, maybeToAttr toAttrFrStr "conformance" (databaseConformance v)
	, maybeToAttr toAttrFrStr "os" (databaseOs v)
	, maybeToAttr toAttrFrStr "revision" (databaseRevision v)
	, maybeToAttr toAttrFrStr "security" (databaseSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (databaseUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (databaseVendor v)
	, maybeToAttr toAttrFrStr "role" (databaseRole v)
	]
instance XmlContent Database_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Database_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Database_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Database_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Database_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Database_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Database_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Database_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Database_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Database_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Database_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Database_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Database_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Database_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Database_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Database_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Database_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Database_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Database_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Database_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Database_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Database_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Database_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Database_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Database_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Database_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Database_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Database_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Database_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Database_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Database_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Database_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Database_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Database_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Database_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Database_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Database_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Database_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Database_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Database_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Database_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Database_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Database_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Database_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Database_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Database_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Database_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Database_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Database_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Database_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Database_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Database_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Database_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Database_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Database_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Database_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Database_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Database_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Database_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Database_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Database_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Database_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Database_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Database_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Database_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Database_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Database_Beginpage a), rest)
																																																																		(_,_) ->
																																																																		    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Database_Str a) = toText a
    toElem (Database_Link a) = toElem a
    toElem (Database_Olink a) = toElem a
    toElem (Database_Ulink a) = toElem a
    toElem (Database_Action a) = toElem a
    toElem (Database_Application a) = toElem a
    toElem (Database_Classname a) = toElem a
    toElem (Database_Methodname a) = toElem a
    toElem (Database_Interfacename a) = toElem a
    toElem (Database_Exceptionname a) = toElem a
    toElem (Database_Ooclass a) = toElem a
    toElem (Database_Oointerface a) = toElem a
    toElem (Database_Ooexception a) = toElem a
    toElem (Database_Command a) = toElem a
    toElem (Database_Computeroutput a) = toElem a
    toElem (Database_Database a) = toElem a
    toElem (Database_Email a) = toElem a
    toElem (Database_Envar a) = toElem a
    toElem (Database_Errorcode a) = toElem a
    toElem (Database_Errorname a) = toElem a
    toElem (Database_Errortype a) = toElem a
    toElem (Database_Errortext a) = toElem a
    toElem (Database_Filename a) = toElem a
    toElem (Database_Function a) = toElem a
    toElem (Database_Guibutton a) = toElem a
    toElem (Database_Guiicon a) = toElem a
    toElem (Database_Guilabel a) = toElem a
    toElem (Database_Guimenu a) = toElem a
    toElem (Database_Guimenuitem a) = toElem a
    toElem (Database_Guisubmenu a) = toElem a
    toElem (Database_Hardware a) = toElem a
    toElem (Database_Interface a) = toElem a
    toElem (Database_Keycap a) = toElem a
    toElem (Database_Keycode a) = toElem a
    toElem (Database_Keycombo a) = toElem a
    toElem (Database_Keysym a) = toElem a
    toElem (Database_Literal a) = toElem a
    toElem (Database_Constant a) = toElem a
    toElem (Database_Markup a) = toElem a
    toElem (Database_Medialabel a) = toElem a
    toElem (Database_Menuchoice a) = toElem a
    toElem (Database_Mousebutton a) = toElem a
    toElem (Database_Option a) = toElem a
    toElem (Database_Optional a) = toElem a
    toElem (Database_Parameter a) = toElem a
    toElem (Database_Prompt a) = toElem a
    toElem (Database_Property a) = toElem a
    toElem (Database_Replaceable a) = toElem a
    toElem (Database_Returnvalue a) = toElem a
    toElem (Database_Sgmltag a) = toElem a
    toElem (Database_Structfield a) = toElem a
    toElem (Database_Structname a) = toElem a
    toElem (Database_Symbol a) = toElem a
    toElem (Database_Systemitem a) = toElem a
    toElem (Database_Token a) = toElem a
    toElem (Database_Type a) = toElem a
    toElem (Database_Userinput a) = toElem a
    toElem (Database_Varname a) = toElem a
    toElem (Database_Anchor a) = toElem a
    toElem (Database_Remark a) = toElem a
    toElem (Database_Subscript a) = toElem a
    toElem (Database_Superscript a) = toElem a
    toElem (Database_Inlinegraphic a) = toElem a
    toElem (Database_Inlinemediaobject a) = toElem a
    toElem (Database_Indexterm a) = toElem a
    toElem (Database_Beginpage a) = toElem a
instance XmlAttrType Database_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "name" = Just Database_Class_Name
	    translate "table" = Just Database_Class_Table
	    translate "field" = Just Database_Class_Field
	    translate "key1" = Just Database_Class_Key1
	    translate "key2" = Just Database_Class_Key2
	    translate "record" = Just Database_Class_Record
	    translate _ = Nothing
    toAttrFrTyp n Database_Class_Name = Just (n, str2attr "name")
    toAttrFrTyp n Database_Class_Table = Just (n, str2attr "table")
    toAttrFrTyp n Database_Class_Field = Just (n, str2attr "field")
    toAttrFrTyp n Database_Class_Key1 = Just (n, str2attr "key1")
    toAttrFrTyp n Database_Class_Key2 = Just (n, str2attr "key2")
    toAttrFrTyp n Database_Class_Record = Just (n, str2attr "record")
instance XmlAttrType Database_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Database_Moreinfo_Refentry
	    translate "none" = Just Database_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Database_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Database_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Database_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Database_Revisionflag_Changed
	    translate "added" = Just Database_Revisionflag_Added
	    translate "deleted" = Just Database_Revisionflag_Deleted
	    translate "off" = Just Database_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Database_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Database_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Database_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Database_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Email where
    fromElem (CElem (Elem "email" as c0):rest) =
	(\(a,ca)->
	   (Just (Email (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Email as a) =
	[CElem (Elem "email" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Email_Attrs where
    fromAttrs as =
	Email_Attrs
	  { emailId = possibleA fromAttrToStr "id" as
	  , emailLang = possibleA fromAttrToStr "lang" as
	  , emailRemap = possibleA fromAttrToStr "remap" as
	  , emailXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , emailRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , emailArch = possibleA fromAttrToStr "arch" as
	  , emailCondition = possibleA fromAttrToStr "condition" as
	  , emailConformance = possibleA fromAttrToStr "conformance" as
	  , emailOs = possibleA fromAttrToStr "os" as
	  , emailRevision = possibleA fromAttrToStr "revision" as
	  , emailSecurity = possibleA fromAttrToStr "security" as
	  , emailUserlevel = possibleA fromAttrToStr "userlevel" as
	  , emailVendor = possibleA fromAttrToStr "vendor" as
	  , emailRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (emailId v)
	, maybeToAttr toAttrFrStr "lang" (emailLang v)
	, maybeToAttr toAttrFrStr "remap" (emailRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (emailXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (emailRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (emailArch v)
	, maybeToAttr toAttrFrStr "condition" (emailCondition v)
	, maybeToAttr toAttrFrStr "conformance" (emailConformance v)
	, maybeToAttr toAttrFrStr "os" (emailOs v)
	, maybeToAttr toAttrFrStr "revision" (emailRevision v)
	, maybeToAttr toAttrFrStr "security" (emailSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (emailUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (emailVendor v)
	, maybeToAttr toAttrFrStr "role" (emailRole v)
	]
instance XmlContent Email_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Email_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Email_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Email_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Email_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Email_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Email_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Email_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Email_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Email_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Email_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Email_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Email_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Email_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Email_Str a) = toText a
    toElem (Email_Link a) = toElem a
    toElem (Email_Olink a) = toElem a
    toElem (Email_Ulink a) = toElem a
    toElem (Email_Emphasis a) = toElem a
    toElem (Email_Trademark a) = toElem a
    toElem (Email_Replaceable a) = toElem a
    toElem (Email_Remark a) = toElem a
    toElem (Email_Subscript a) = toElem a
    toElem (Email_Superscript a) = toElem a
    toElem (Email_Inlinegraphic a) = toElem a
    toElem (Email_Inlinemediaobject a) = toElem a
    toElem (Email_Indexterm a) = toElem a
instance XmlAttrType Email_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Email_Revisionflag_Changed
	    translate "added" = Just Email_Revisionflag_Added
	    translate "deleted" = Just Email_Revisionflag_Deleted
	    translate "off" = Just Email_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Email_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Email_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Email_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Email_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Envar where
    fromElem (CElem (Elem "envar" as c0):rest) =
	(\(a,ca)->
	   (Just (Envar (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Envar as a) =
	[CElem (Elem "envar" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Envar_Attrs where
    fromAttrs as =
	Envar_Attrs
	  { envarId = possibleA fromAttrToStr "id" as
	  , envarLang = possibleA fromAttrToStr "lang" as
	  , envarRemap = possibleA fromAttrToStr "remap" as
	  , envarXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , envarRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , envarArch = possibleA fromAttrToStr "arch" as
	  , envarCondition = possibleA fromAttrToStr "condition" as
	  , envarConformance = possibleA fromAttrToStr "conformance" as
	  , envarOs = possibleA fromAttrToStr "os" as
	  , envarRevision = possibleA fromAttrToStr "revision" as
	  , envarSecurity = possibleA fromAttrToStr "security" as
	  , envarUserlevel = possibleA fromAttrToStr "userlevel" as
	  , envarVendor = possibleA fromAttrToStr "vendor" as
	  , envarRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (envarId v)
	, maybeToAttr toAttrFrStr "lang" (envarLang v)
	, maybeToAttr toAttrFrStr "remap" (envarRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (envarXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (envarRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (envarArch v)
	, maybeToAttr toAttrFrStr "condition" (envarCondition v)
	, maybeToAttr toAttrFrStr "conformance" (envarConformance v)
	, maybeToAttr toAttrFrStr "os" (envarOs v)
	, maybeToAttr toAttrFrStr "revision" (envarRevision v)
	, maybeToAttr toAttrFrStr "security" (envarSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (envarUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (envarVendor v)
	, maybeToAttr toAttrFrStr "role" (envarRole v)
	]
instance XmlContent Envar_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Envar_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Envar_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Envar_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Envar_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Envar_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Envar_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Envar_Str a) = toText a
    toElem (Envar_Replaceable a) = toElem a
    toElem (Envar_Inlinegraphic a) = toElem a
    toElem (Envar_Inlinemediaobject a) = toElem a
    toElem (Envar_Indexterm a) = toElem a
    toElem (Envar_Beginpage a) = toElem a
instance XmlAttrType Envar_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Envar_Revisionflag_Changed
	    translate "added" = Just Envar_Revisionflag_Added
	    translate "deleted" = Just Envar_Revisionflag_Deleted
	    translate "off" = Just Envar_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Envar_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Envar_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Envar_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Envar_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Errorcode where
    fromElem (CElem (Elem "errorcode" as c0):rest) =
	(\(a,ca)->
	   (Just (Errorcode (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Errorcode as a) =
	[CElem (Elem "errorcode" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Errorcode_Attrs where
    fromAttrs as =
	Errorcode_Attrs
	  { errorcodeMoreinfo = defaultA fromAttrToTyp Errorcode_Moreinfo_None "moreinfo" as
	  , errorcodeId = possibleA fromAttrToStr "id" as
	  , errorcodeLang = possibleA fromAttrToStr "lang" as
	  , errorcodeRemap = possibleA fromAttrToStr "remap" as
	  , errorcodeXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , errorcodeRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , errorcodeArch = possibleA fromAttrToStr "arch" as
	  , errorcodeCondition = possibleA fromAttrToStr "condition" as
	  , errorcodeConformance = possibleA fromAttrToStr "conformance" as
	  , errorcodeOs = possibleA fromAttrToStr "os" as
	  , errorcodeRevision = possibleA fromAttrToStr "revision" as
	  , errorcodeSecurity = possibleA fromAttrToStr "security" as
	  , errorcodeUserlevel = possibleA fromAttrToStr "userlevel" as
	  , errorcodeVendor = possibleA fromAttrToStr "vendor" as
	  , errorcodeRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (errorcodeMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (errorcodeId v)
	, maybeToAttr toAttrFrStr "lang" (errorcodeLang v)
	, maybeToAttr toAttrFrStr "remap" (errorcodeRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (errorcodeXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (errorcodeRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (errorcodeArch v)
	, maybeToAttr toAttrFrStr "condition" (errorcodeCondition v)
	, maybeToAttr toAttrFrStr "conformance" (errorcodeConformance v)
	, maybeToAttr toAttrFrStr "os" (errorcodeOs v)
	, maybeToAttr toAttrFrStr "revision" (errorcodeRevision v)
	, maybeToAttr toAttrFrStr "security" (errorcodeSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (errorcodeUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (errorcodeVendor v)
	, maybeToAttr toAttrFrStr "role" (errorcodeRole v)
	]
instance XmlContent Errorcode_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Errorcode_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Errorcode_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Errorcode_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Errorcode_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Errorcode_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Errorcode_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Errorcode_Str a) = toText a
    toElem (Errorcode_Replaceable a) = toElem a
    toElem (Errorcode_Inlinegraphic a) = toElem a
    toElem (Errorcode_Inlinemediaobject a) = toElem a
    toElem (Errorcode_Indexterm a) = toElem a
    toElem (Errorcode_Beginpage a) = toElem a
instance XmlAttrType Errorcode_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Errorcode_Moreinfo_Refentry
	    translate "none" = Just Errorcode_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Errorcode_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Errorcode_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Errorcode_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Errorcode_Revisionflag_Changed
	    translate "added" = Just Errorcode_Revisionflag_Added
	    translate "deleted" = Just Errorcode_Revisionflag_Deleted
	    translate "off" = Just Errorcode_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Errorcode_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Errorcode_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Errorcode_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Errorcode_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Errorname where
    fromElem (CElem (Elem "errorname" as c0):rest) =
	(\(a,ca)->
	   (Just (Errorname (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Errorname as a) =
	[CElem (Elem "errorname" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Errorname_Attrs where
    fromAttrs as =
	Errorname_Attrs
	  { errornameId = possibleA fromAttrToStr "id" as
	  , errornameLang = possibleA fromAttrToStr "lang" as
	  , errornameRemap = possibleA fromAttrToStr "remap" as
	  , errornameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , errornameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , errornameArch = possibleA fromAttrToStr "arch" as
	  , errornameCondition = possibleA fromAttrToStr "condition" as
	  , errornameConformance = possibleA fromAttrToStr "conformance" as
	  , errornameOs = possibleA fromAttrToStr "os" as
	  , errornameRevision = possibleA fromAttrToStr "revision" as
	  , errornameSecurity = possibleA fromAttrToStr "security" as
	  , errornameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , errornameVendor = possibleA fromAttrToStr "vendor" as
	  , errornameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (errornameId v)
	, maybeToAttr toAttrFrStr "lang" (errornameLang v)
	, maybeToAttr toAttrFrStr "remap" (errornameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (errornameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (errornameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (errornameArch v)
	, maybeToAttr toAttrFrStr "condition" (errornameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (errornameConformance v)
	, maybeToAttr toAttrFrStr "os" (errornameOs v)
	, maybeToAttr toAttrFrStr "revision" (errornameRevision v)
	, maybeToAttr toAttrFrStr "security" (errornameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (errornameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (errornameVendor v)
	, maybeToAttr toAttrFrStr "role" (errornameRole v)
	]
instance XmlContent Errorname_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Errorname_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Errorname_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Errorname_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Errorname_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Errorname_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Errorname_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Errorname_Str a) = toText a
    toElem (Errorname_Replaceable a) = toElem a
    toElem (Errorname_Inlinegraphic a) = toElem a
    toElem (Errorname_Inlinemediaobject a) = toElem a
    toElem (Errorname_Indexterm a) = toElem a
    toElem (Errorname_Beginpage a) = toElem a
instance XmlAttrType Errorname_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Errorname_Revisionflag_Changed
	    translate "added" = Just Errorname_Revisionflag_Added
	    translate "deleted" = Just Errorname_Revisionflag_Deleted
	    translate "off" = Just Errorname_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Errorname_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Errorname_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Errorname_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Errorname_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Errortext where
    fromElem (CElem (Elem "errortext" as c0):rest) =
	(\(a,ca)->
	   (Just (Errortext (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Errortext as a) =
	[CElem (Elem "errortext" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Errortext_Attrs where
    fromAttrs as =
	Errortext_Attrs
	  { errortextId = possibleA fromAttrToStr "id" as
	  , errortextLang = possibleA fromAttrToStr "lang" as
	  , errortextRemap = possibleA fromAttrToStr "remap" as
	  , errortextXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , errortextRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , errortextArch = possibleA fromAttrToStr "arch" as
	  , errortextCondition = possibleA fromAttrToStr "condition" as
	  , errortextConformance = possibleA fromAttrToStr "conformance" as
	  , errortextOs = possibleA fromAttrToStr "os" as
	  , errortextRevision = possibleA fromAttrToStr "revision" as
	  , errortextSecurity = possibleA fromAttrToStr "security" as
	  , errortextUserlevel = possibleA fromAttrToStr "userlevel" as
	  , errortextVendor = possibleA fromAttrToStr "vendor" as
	  , errortextRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (errortextId v)
	, maybeToAttr toAttrFrStr "lang" (errortextLang v)
	, maybeToAttr toAttrFrStr "remap" (errortextRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (errortextXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (errortextRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (errortextArch v)
	, maybeToAttr toAttrFrStr "condition" (errortextCondition v)
	, maybeToAttr toAttrFrStr "conformance" (errortextConformance v)
	, maybeToAttr toAttrFrStr "os" (errortextOs v)
	, maybeToAttr toAttrFrStr "revision" (errortextRevision v)
	, maybeToAttr toAttrFrStr "security" (errortextSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (errortextUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (errortextVendor v)
	, maybeToAttr toAttrFrStr "role" (errortextRole v)
	]
instance XmlContent Errortext_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Errortext_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Errortext_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Errortext_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Errortext_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Errortext_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Errortext_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Errortext_Str a) = toText a
    toElem (Errortext_Replaceable a) = toElem a
    toElem (Errortext_Inlinegraphic a) = toElem a
    toElem (Errortext_Inlinemediaobject a) = toElem a
    toElem (Errortext_Indexterm a) = toElem a
    toElem (Errortext_Beginpage a) = toElem a
instance XmlAttrType Errortext_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Errortext_Revisionflag_Changed
	    translate "added" = Just Errortext_Revisionflag_Added
	    translate "deleted" = Just Errortext_Revisionflag_Deleted
	    translate "off" = Just Errortext_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Errortext_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Errortext_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Errortext_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Errortext_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Errortype where
    fromElem (CElem (Elem "errortype" as c0):rest) =
	(\(a,ca)->
	   (Just (Errortype (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Errortype as a) =
	[CElem (Elem "errortype" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Errortype_Attrs where
    fromAttrs as =
	Errortype_Attrs
	  { errortypeId = possibleA fromAttrToStr "id" as
	  , errortypeLang = possibleA fromAttrToStr "lang" as
	  , errortypeRemap = possibleA fromAttrToStr "remap" as
	  , errortypeXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , errortypeRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , errortypeArch = possibleA fromAttrToStr "arch" as
	  , errortypeCondition = possibleA fromAttrToStr "condition" as
	  , errortypeConformance = possibleA fromAttrToStr "conformance" as
	  , errortypeOs = possibleA fromAttrToStr "os" as
	  , errortypeRevision = possibleA fromAttrToStr "revision" as
	  , errortypeSecurity = possibleA fromAttrToStr "security" as
	  , errortypeUserlevel = possibleA fromAttrToStr "userlevel" as
	  , errortypeVendor = possibleA fromAttrToStr "vendor" as
	  , errortypeRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (errortypeId v)
	, maybeToAttr toAttrFrStr "lang" (errortypeLang v)
	, maybeToAttr toAttrFrStr "remap" (errortypeRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (errortypeXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (errortypeRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (errortypeArch v)
	, maybeToAttr toAttrFrStr "condition" (errortypeCondition v)
	, maybeToAttr toAttrFrStr "conformance" (errortypeConformance v)
	, maybeToAttr toAttrFrStr "os" (errortypeOs v)
	, maybeToAttr toAttrFrStr "revision" (errortypeRevision v)
	, maybeToAttr toAttrFrStr "security" (errortypeSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (errortypeUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (errortypeVendor v)
	, maybeToAttr toAttrFrStr "role" (errortypeRole v)
	]
instance XmlContent Errortype_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Errortype_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Errortype_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Errortype_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Errortype_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Errortype_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Errortype_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Errortype_Str a) = toText a
    toElem (Errortype_Replaceable a) = toElem a
    toElem (Errortype_Inlinegraphic a) = toElem a
    toElem (Errortype_Inlinemediaobject a) = toElem a
    toElem (Errortype_Indexterm a) = toElem a
    toElem (Errortype_Beginpage a) = toElem a
instance XmlAttrType Errortype_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Errortype_Revisionflag_Changed
	    translate "added" = Just Errortype_Revisionflag_Added
	    translate "deleted" = Just Errortype_Revisionflag_Deleted
	    translate "off" = Just Errortype_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Errortype_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Errortype_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Errortype_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Errortype_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Filename where
    fromElem (CElem (Elem "filename" as c0):rest) =
	(\(a,ca)->
	   (Just (Filename (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Filename as a) =
	[CElem (Elem "filename" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Filename_Attrs where
    fromAttrs as =
	Filename_Attrs
	  { filenameClass = possibleA fromAttrToTyp "class" as
	  , filenamePath = possibleA fromAttrToStr "path" as
	  , filenameMoreinfo = defaultA fromAttrToTyp Filename_Moreinfo_None "moreinfo" as
	  , filenameId = possibleA fromAttrToStr "id" as
	  , filenameLang = possibleA fromAttrToStr "lang" as
	  , filenameRemap = possibleA fromAttrToStr "remap" as
	  , filenameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , filenameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , filenameArch = possibleA fromAttrToStr "arch" as
	  , filenameCondition = possibleA fromAttrToStr "condition" as
	  , filenameConformance = possibleA fromAttrToStr "conformance" as
	  , filenameOs = possibleA fromAttrToStr "os" as
	  , filenameRevision = possibleA fromAttrToStr "revision" as
	  , filenameSecurity = possibleA fromAttrToStr "security" as
	  , filenameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , filenameVendor = possibleA fromAttrToStr "vendor" as
	  , filenameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "class" (filenameClass v)
	, maybeToAttr toAttrFrStr "path" (filenamePath v)
	, defaultToAttr toAttrFrTyp "moreinfo" (filenameMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (filenameId v)
	, maybeToAttr toAttrFrStr "lang" (filenameLang v)
	, maybeToAttr toAttrFrStr "remap" (filenameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (filenameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (filenameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (filenameArch v)
	, maybeToAttr toAttrFrStr "condition" (filenameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (filenameConformance v)
	, maybeToAttr toAttrFrStr "os" (filenameOs v)
	, maybeToAttr toAttrFrStr "revision" (filenameRevision v)
	, maybeToAttr toAttrFrStr "security" (filenameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (filenameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (filenameVendor v)
	, maybeToAttr toAttrFrStr "role" (filenameRole v)
	]
instance XmlContent Filename_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Filename_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Filename_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Filename_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Filename_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Filename_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Filename_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Filename_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Filename_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Filename_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Filename_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Filename_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Filename_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Filename_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Filename_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Filename_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Filename_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Filename_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Filename_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Filename_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Filename_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Filename_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Filename_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Filename_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Filename_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Filename_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Filename_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Filename_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Filename_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Filename_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Filename_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Filename_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Filename_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Filename_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Filename_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Filename_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Filename_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Filename_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Filename_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Filename_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Filename_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Filename_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Filename_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Filename_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Filename_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Filename_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Filename_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Filename_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Filename_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Filename_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Filename_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Filename_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Filename_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Filename_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Filename_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Filename_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Filename_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Filename_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Filename_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Filename_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Filename_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Filename_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Filename_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Filename_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Filename_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Filename_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Filename_Beginpage a), rest)
																																																																		(_,_) ->
																																																																		    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Filename_Str a) = toText a
    toElem (Filename_Link a) = toElem a
    toElem (Filename_Olink a) = toElem a
    toElem (Filename_Ulink a) = toElem a
    toElem (Filename_Action a) = toElem a
    toElem (Filename_Application a) = toElem a
    toElem (Filename_Classname a) = toElem a
    toElem (Filename_Methodname a) = toElem a
    toElem (Filename_Interfacename a) = toElem a
    toElem (Filename_Exceptionname a) = toElem a
    toElem (Filename_Ooclass a) = toElem a
    toElem (Filename_Oointerface a) = toElem a
    toElem (Filename_Ooexception a) = toElem a
    toElem (Filename_Command a) = toElem a
    toElem (Filename_Computeroutput a) = toElem a
    toElem (Filename_Database a) = toElem a
    toElem (Filename_Email a) = toElem a
    toElem (Filename_Envar a) = toElem a
    toElem (Filename_Errorcode a) = toElem a
    toElem (Filename_Errorname a) = toElem a
    toElem (Filename_Errortype a) = toElem a
    toElem (Filename_Errortext a) = toElem a
    toElem (Filename_Filename a) = toElem a
    toElem (Filename_Function a) = toElem a
    toElem (Filename_Guibutton a) = toElem a
    toElem (Filename_Guiicon a) = toElem a
    toElem (Filename_Guilabel a) = toElem a
    toElem (Filename_Guimenu a) = toElem a
    toElem (Filename_Guimenuitem a) = toElem a
    toElem (Filename_Guisubmenu a) = toElem a
    toElem (Filename_Hardware a) = toElem a
    toElem (Filename_Interface a) = toElem a
    toElem (Filename_Keycap a) = toElem a
    toElem (Filename_Keycode a) = toElem a
    toElem (Filename_Keycombo a) = toElem a
    toElem (Filename_Keysym a) = toElem a
    toElem (Filename_Literal a) = toElem a
    toElem (Filename_Constant a) = toElem a
    toElem (Filename_Markup a) = toElem a
    toElem (Filename_Medialabel a) = toElem a
    toElem (Filename_Menuchoice a) = toElem a
    toElem (Filename_Mousebutton a) = toElem a
    toElem (Filename_Option a) = toElem a
    toElem (Filename_Optional a) = toElem a
    toElem (Filename_Parameter a) = toElem a
    toElem (Filename_Prompt a) = toElem a
    toElem (Filename_Property a) = toElem a
    toElem (Filename_Replaceable a) = toElem a
    toElem (Filename_Returnvalue a) = toElem a
    toElem (Filename_Sgmltag a) = toElem a
    toElem (Filename_Structfield a) = toElem a
    toElem (Filename_Structname a) = toElem a
    toElem (Filename_Symbol a) = toElem a
    toElem (Filename_Systemitem a) = toElem a
    toElem (Filename_Token a) = toElem a
    toElem (Filename_Type a) = toElem a
    toElem (Filename_Userinput a) = toElem a
    toElem (Filename_Varname a) = toElem a
    toElem (Filename_Anchor a) = toElem a
    toElem (Filename_Remark a) = toElem a
    toElem (Filename_Subscript a) = toElem a
    toElem (Filename_Superscript a) = toElem a
    toElem (Filename_Inlinegraphic a) = toElem a
    toElem (Filename_Inlinemediaobject a) = toElem a
    toElem (Filename_Indexterm a) = toElem a
    toElem (Filename_Beginpage a) = toElem a
instance XmlAttrType Filename_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "headerfile" = Just Filename_Class_Headerfile
	    translate "partition" = Just Filename_Class_Partition
	    translate "devicefile" = Just Filename_Class_Devicefile
	    translate "libraryfile" = Just Filename_Class_Libraryfile
	    translate "directory" = Just Filename_Class_Directory
	    translate "extension" = Just Filename_Class_Extension
	    translate "symlink" = Just Filename_Class_Symlink
	    translate _ = Nothing
    toAttrFrTyp n Filename_Class_Headerfile = Just (n, str2attr "headerfile")
    toAttrFrTyp n Filename_Class_Partition = Just (n, str2attr "partition")
    toAttrFrTyp n Filename_Class_Devicefile = Just (n, str2attr "devicefile")
    toAttrFrTyp n Filename_Class_Libraryfile = Just (n, str2attr "libraryfile")
    toAttrFrTyp n Filename_Class_Directory = Just (n, str2attr "directory")
    toAttrFrTyp n Filename_Class_Extension = Just (n, str2attr "extension")
    toAttrFrTyp n Filename_Class_Symlink = Just (n, str2attr "symlink")
instance XmlAttrType Filename_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Filename_Moreinfo_Refentry
	    translate "none" = Just Filename_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Filename_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Filename_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Filename_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Filename_Revisionflag_Changed
	    translate "added" = Just Filename_Revisionflag_Added
	    translate "deleted" = Just Filename_Revisionflag_Deleted
	    translate "off" = Just Filename_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Filename_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Filename_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Filename_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Filename_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Function where
    fromElem (CElem (Elem "function" as c0):rest) =
	(\(a,ca)->
	   (Just (Function (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Function as a) =
	[CElem (Elem "function" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Function_Attrs where
    fromAttrs as =
	Function_Attrs
	  { functionMoreinfo = defaultA fromAttrToTyp Function_Moreinfo_None "moreinfo" as
	  , functionId = possibleA fromAttrToStr "id" as
	  , functionLang = possibleA fromAttrToStr "lang" as
	  , functionRemap = possibleA fromAttrToStr "remap" as
	  , functionXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , functionRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , functionArch = possibleA fromAttrToStr "arch" as
	  , functionCondition = possibleA fromAttrToStr "condition" as
	  , functionConformance = possibleA fromAttrToStr "conformance" as
	  , functionOs = possibleA fromAttrToStr "os" as
	  , functionRevision = possibleA fromAttrToStr "revision" as
	  , functionSecurity = possibleA fromAttrToStr "security" as
	  , functionUserlevel = possibleA fromAttrToStr "userlevel" as
	  , functionVendor = possibleA fromAttrToStr "vendor" as
	  , functionRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (functionMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (functionId v)
	, maybeToAttr toAttrFrStr "lang" (functionLang v)
	, maybeToAttr toAttrFrStr "remap" (functionRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (functionXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (functionRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (functionArch v)
	, maybeToAttr toAttrFrStr "condition" (functionCondition v)
	, maybeToAttr toAttrFrStr "conformance" (functionConformance v)
	, maybeToAttr toAttrFrStr "os" (functionOs v)
	, maybeToAttr toAttrFrStr "revision" (functionRevision v)
	, maybeToAttr toAttrFrStr "security" (functionSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (functionUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (functionVendor v)
	, maybeToAttr toAttrFrStr "role" (functionRole v)
	]
instance XmlContent Function_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Function_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Function_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Function_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Function_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Function_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Function_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Function_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Function_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Function_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Function_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Function_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Function_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Function_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Function_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Function_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Function_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Function_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Function_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Function_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Function_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Function_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Function_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Function_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Function_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Function_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Function_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Function_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Function_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Function_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Function_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Function_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Function_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Function_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Function_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Function_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Function_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Function_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Function_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Function_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Function_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Function_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Function_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Function_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Function_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Function_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Function_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Function_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Function_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Function_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Function_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Function_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Function_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Function_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Function_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Function_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Function_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Function_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Function_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Function_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Function_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Function_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Function_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Function_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Function_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Function_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Function_Beginpage a), rest)
																																																																		(_,_) ->
																																																																		    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Function_Str a) = toText a
    toElem (Function_Link a) = toElem a
    toElem (Function_Olink a) = toElem a
    toElem (Function_Ulink a) = toElem a
    toElem (Function_Action a) = toElem a
    toElem (Function_Application a) = toElem a
    toElem (Function_Classname a) = toElem a
    toElem (Function_Methodname a) = toElem a
    toElem (Function_Interfacename a) = toElem a
    toElem (Function_Exceptionname a) = toElem a
    toElem (Function_Ooclass a) = toElem a
    toElem (Function_Oointerface a) = toElem a
    toElem (Function_Ooexception a) = toElem a
    toElem (Function_Command a) = toElem a
    toElem (Function_Computeroutput a) = toElem a
    toElem (Function_Database a) = toElem a
    toElem (Function_Email a) = toElem a
    toElem (Function_Envar a) = toElem a
    toElem (Function_Errorcode a) = toElem a
    toElem (Function_Errorname a) = toElem a
    toElem (Function_Errortype a) = toElem a
    toElem (Function_Errortext a) = toElem a
    toElem (Function_Filename a) = toElem a
    toElem (Function_Function a) = toElem a
    toElem (Function_Guibutton a) = toElem a
    toElem (Function_Guiicon a) = toElem a
    toElem (Function_Guilabel a) = toElem a
    toElem (Function_Guimenu a) = toElem a
    toElem (Function_Guimenuitem a) = toElem a
    toElem (Function_Guisubmenu a) = toElem a
    toElem (Function_Hardware a) = toElem a
    toElem (Function_Interface a) = toElem a
    toElem (Function_Keycap a) = toElem a
    toElem (Function_Keycode a) = toElem a
    toElem (Function_Keycombo a) = toElem a
    toElem (Function_Keysym a) = toElem a
    toElem (Function_Literal a) = toElem a
    toElem (Function_Constant a) = toElem a
    toElem (Function_Markup a) = toElem a
    toElem (Function_Medialabel a) = toElem a
    toElem (Function_Menuchoice a) = toElem a
    toElem (Function_Mousebutton a) = toElem a
    toElem (Function_Option a) = toElem a
    toElem (Function_Optional a) = toElem a
    toElem (Function_Parameter a) = toElem a
    toElem (Function_Prompt a) = toElem a
    toElem (Function_Property a) = toElem a
    toElem (Function_Replaceable a) = toElem a
    toElem (Function_Returnvalue a) = toElem a
    toElem (Function_Sgmltag a) = toElem a
    toElem (Function_Structfield a) = toElem a
    toElem (Function_Structname a) = toElem a
    toElem (Function_Symbol a) = toElem a
    toElem (Function_Systemitem a) = toElem a
    toElem (Function_Token a) = toElem a
    toElem (Function_Type a) = toElem a
    toElem (Function_Userinput a) = toElem a
    toElem (Function_Varname a) = toElem a
    toElem (Function_Anchor a) = toElem a
    toElem (Function_Remark a) = toElem a
    toElem (Function_Subscript a) = toElem a
    toElem (Function_Superscript a) = toElem a
    toElem (Function_Inlinegraphic a) = toElem a
    toElem (Function_Inlinemediaobject a) = toElem a
    toElem (Function_Indexterm a) = toElem a
    toElem (Function_Beginpage a) = toElem a
instance XmlAttrType Function_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Function_Moreinfo_Refentry
	    translate "none" = Just Function_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Function_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Function_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Function_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Function_Revisionflag_Changed
	    translate "added" = Just Function_Revisionflag_Added
	    translate "deleted" = Just Function_Revisionflag_Deleted
	    translate "off" = Just Function_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Function_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Function_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Function_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Function_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Guibutton where
    fromElem (CElem (Elem "guibutton" as c0):rest) =
	(\(a,ca)->
	   (Just (Guibutton (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Guibutton as a) =
	[CElem (Elem "guibutton" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Guibutton_Attrs where
    fromAttrs as =
	Guibutton_Attrs
	  { guibuttonMoreinfo = defaultA fromAttrToTyp Guibutton_Moreinfo_None "moreinfo" as
	  , guibuttonId = possibleA fromAttrToStr "id" as
	  , guibuttonLang = possibleA fromAttrToStr "lang" as
	  , guibuttonRemap = possibleA fromAttrToStr "remap" as
	  , guibuttonXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , guibuttonRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , guibuttonArch = possibleA fromAttrToStr "arch" as
	  , guibuttonCondition = possibleA fromAttrToStr "condition" as
	  , guibuttonConformance = possibleA fromAttrToStr "conformance" as
	  , guibuttonOs = possibleA fromAttrToStr "os" as
	  , guibuttonRevision = possibleA fromAttrToStr "revision" as
	  , guibuttonSecurity = possibleA fromAttrToStr "security" as
	  , guibuttonUserlevel = possibleA fromAttrToStr "userlevel" as
	  , guibuttonVendor = possibleA fromAttrToStr "vendor" as
	  , guibuttonRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (guibuttonMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (guibuttonId v)
	, maybeToAttr toAttrFrStr "lang" (guibuttonLang v)
	, maybeToAttr toAttrFrStr "remap" (guibuttonRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (guibuttonXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (guibuttonRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (guibuttonArch v)
	, maybeToAttr toAttrFrStr "condition" (guibuttonCondition v)
	, maybeToAttr toAttrFrStr "conformance" (guibuttonConformance v)
	, maybeToAttr toAttrFrStr "os" (guibuttonOs v)
	, maybeToAttr toAttrFrStr "revision" (guibuttonRevision v)
	, maybeToAttr toAttrFrStr "security" (guibuttonSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (guibuttonUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (guibuttonVendor v)
	, maybeToAttr toAttrFrStr "role" (guibuttonRole v)
	]
instance XmlContent Guibutton_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Guibutton_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Guibutton_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Guibutton_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Guibutton_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Guibutton_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Guibutton_Beginpage a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Guibutton_Accel a), rest)
							(_,_) ->
							    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Guibutton_Str a) = toText a
    toElem (Guibutton_Replaceable a) = toElem a
    toElem (Guibutton_Inlinegraphic a) = toElem a
    toElem (Guibutton_Inlinemediaobject a) = toElem a
    toElem (Guibutton_Indexterm a) = toElem a
    toElem (Guibutton_Beginpage a) = toElem a
    toElem (Guibutton_Accel a) = toElem a
instance XmlAttrType Guibutton_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Guibutton_Moreinfo_Refentry
	    translate "none" = Just Guibutton_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Guibutton_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Guibutton_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Guibutton_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Guibutton_Revisionflag_Changed
	    translate "added" = Just Guibutton_Revisionflag_Added
	    translate "deleted" = Just Guibutton_Revisionflag_Deleted
	    translate "off" = Just Guibutton_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Guibutton_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Guibutton_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Guibutton_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Guibutton_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Guiicon where
    fromElem (CElem (Elem "guiicon" as c0):rest) =
	(\(a,ca)->
	   (Just (Guiicon (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Guiicon as a) =
	[CElem (Elem "guiicon" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Guiicon_Attrs where
    fromAttrs as =
	Guiicon_Attrs
	  { guiiconMoreinfo = defaultA fromAttrToTyp Guiicon_Moreinfo_None "moreinfo" as
	  , guiiconId = possibleA fromAttrToStr "id" as
	  , guiiconLang = possibleA fromAttrToStr "lang" as
	  , guiiconRemap = possibleA fromAttrToStr "remap" as
	  , guiiconXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , guiiconRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , guiiconArch = possibleA fromAttrToStr "arch" as
	  , guiiconCondition = possibleA fromAttrToStr "condition" as
	  , guiiconConformance = possibleA fromAttrToStr "conformance" as
	  , guiiconOs = possibleA fromAttrToStr "os" as
	  , guiiconRevision = possibleA fromAttrToStr "revision" as
	  , guiiconSecurity = possibleA fromAttrToStr "security" as
	  , guiiconUserlevel = possibleA fromAttrToStr "userlevel" as
	  , guiiconVendor = possibleA fromAttrToStr "vendor" as
	  , guiiconRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (guiiconMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (guiiconId v)
	, maybeToAttr toAttrFrStr "lang" (guiiconLang v)
	, maybeToAttr toAttrFrStr "remap" (guiiconRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (guiiconXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (guiiconRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (guiiconArch v)
	, maybeToAttr toAttrFrStr "condition" (guiiconCondition v)
	, maybeToAttr toAttrFrStr "conformance" (guiiconConformance v)
	, maybeToAttr toAttrFrStr "os" (guiiconOs v)
	, maybeToAttr toAttrFrStr "revision" (guiiconRevision v)
	, maybeToAttr toAttrFrStr "security" (guiiconSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (guiiconUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (guiiconVendor v)
	, maybeToAttr toAttrFrStr "role" (guiiconRole v)
	]
instance XmlContent Guiicon_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Guiicon_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Guiicon_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Guiicon_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Guiicon_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Guiicon_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Guiicon_Beginpage a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Guiicon_Accel a), rest)
							(_,_) ->
							    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Guiicon_Str a) = toText a
    toElem (Guiicon_Replaceable a) = toElem a
    toElem (Guiicon_Inlinegraphic a) = toElem a
    toElem (Guiicon_Inlinemediaobject a) = toElem a
    toElem (Guiicon_Indexterm a) = toElem a
    toElem (Guiicon_Beginpage a) = toElem a
    toElem (Guiicon_Accel a) = toElem a
instance XmlAttrType Guiicon_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Guiicon_Moreinfo_Refentry
	    translate "none" = Just Guiicon_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Guiicon_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Guiicon_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Guiicon_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Guiicon_Revisionflag_Changed
	    translate "added" = Just Guiicon_Revisionflag_Added
	    translate "deleted" = Just Guiicon_Revisionflag_Deleted
	    translate "off" = Just Guiicon_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Guiicon_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Guiicon_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Guiicon_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Guiicon_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Guilabel where
    fromElem (CElem (Elem "guilabel" as c0):rest) =
	(\(a,ca)->
	   (Just (Guilabel (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Guilabel as a) =
	[CElem (Elem "guilabel" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Guilabel_Attrs where
    fromAttrs as =
	Guilabel_Attrs
	  { guilabelMoreinfo = defaultA fromAttrToTyp Guilabel_Moreinfo_None "moreinfo" as
	  , guilabelId = possibleA fromAttrToStr "id" as
	  , guilabelLang = possibleA fromAttrToStr "lang" as
	  , guilabelRemap = possibleA fromAttrToStr "remap" as
	  , guilabelXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , guilabelRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , guilabelArch = possibleA fromAttrToStr "arch" as
	  , guilabelCondition = possibleA fromAttrToStr "condition" as
	  , guilabelConformance = possibleA fromAttrToStr "conformance" as
	  , guilabelOs = possibleA fromAttrToStr "os" as
	  , guilabelRevision = possibleA fromAttrToStr "revision" as
	  , guilabelSecurity = possibleA fromAttrToStr "security" as
	  , guilabelUserlevel = possibleA fromAttrToStr "userlevel" as
	  , guilabelVendor = possibleA fromAttrToStr "vendor" as
	  , guilabelRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (guilabelMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (guilabelId v)
	, maybeToAttr toAttrFrStr "lang" (guilabelLang v)
	, maybeToAttr toAttrFrStr "remap" (guilabelRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (guilabelXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (guilabelRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (guilabelArch v)
	, maybeToAttr toAttrFrStr "condition" (guilabelCondition v)
	, maybeToAttr toAttrFrStr "conformance" (guilabelConformance v)
	, maybeToAttr toAttrFrStr "os" (guilabelOs v)
	, maybeToAttr toAttrFrStr "revision" (guilabelRevision v)
	, maybeToAttr toAttrFrStr "security" (guilabelSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (guilabelUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (guilabelVendor v)
	, maybeToAttr toAttrFrStr "role" (guilabelRole v)
	]
instance XmlContent Guilabel_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Guilabel_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Guilabel_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Guilabel_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Guilabel_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Guilabel_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Guilabel_Beginpage a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Guilabel_Accel a), rest)
							(_,_) ->
							    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Guilabel_Str a) = toText a
    toElem (Guilabel_Replaceable a) = toElem a
    toElem (Guilabel_Inlinegraphic a) = toElem a
    toElem (Guilabel_Inlinemediaobject a) = toElem a
    toElem (Guilabel_Indexterm a) = toElem a
    toElem (Guilabel_Beginpage a) = toElem a
    toElem (Guilabel_Accel a) = toElem a
instance XmlAttrType Guilabel_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Guilabel_Moreinfo_Refentry
	    translate "none" = Just Guilabel_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Guilabel_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Guilabel_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Guilabel_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Guilabel_Revisionflag_Changed
	    translate "added" = Just Guilabel_Revisionflag_Added
	    translate "deleted" = Just Guilabel_Revisionflag_Deleted
	    translate "off" = Just Guilabel_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Guilabel_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Guilabel_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Guilabel_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Guilabel_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Guimenu where
    fromElem (CElem (Elem "guimenu" as c0):rest) =
	(\(a,ca)->
	   (Just (Guimenu (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Guimenu as a) =
	[CElem (Elem "guimenu" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Guimenu_Attrs where
    fromAttrs as =
	Guimenu_Attrs
	  { guimenuMoreinfo = defaultA fromAttrToTyp Guimenu_Moreinfo_None "moreinfo" as
	  , guimenuId = possibleA fromAttrToStr "id" as
	  , guimenuLang = possibleA fromAttrToStr "lang" as
	  , guimenuRemap = possibleA fromAttrToStr "remap" as
	  , guimenuXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , guimenuRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , guimenuArch = possibleA fromAttrToStr "arch" as
	  , guimenuCondition = possibleA fromAttrToStr "condition" as
	  , guimenuConformance = possibleA fromAttrToStr "conformance" as
	  , guimenuOs = possibleA fromAttrToStr "os" as
	  , guimenuRevision = possibleA fromAttrToStr "revision" as
	  , guimenuSecurity = possibleA fromAttrToStr "security" as
	  , guimenuUserlevel = possibleA fromAttrToStr "userlevel" as
	  , guimenuVendor = possibleA fromAttrToStr "vendor" as
	  , guimenuRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (guimenuMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (guimenuId v)
	, maybeToAttr toAttrFrStr "lang" (guimenuLang v)
	, maybeToAttr toAttrFrStr "remap" (guimenuRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (guimenuXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (guimenuRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (guimenuArch v)
	, maybeToAttr toAttrFrStr "condition" (guimenuCondition v)
	, maybeToAttr toAttrFrStr "conformance" (guimenuConformance v)
	, maybeToAttr toAttrFrStr "os" (guimenuOs v)
	, maybeToAttr toAttrFrStr "revision" (guimenuRevision v)
	, maybeToAttr toAttrFrStr "security" (guimenuSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (guimenuUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (guimenuVendor v)
	, maybeToAttr toAttrFrStr "role" (guimenuRole v)
	]
instance XmlContent Guimenu_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Guimenu_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Guimenu_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Guimenu_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Guimenu_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Guimenu_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Guimenu_Beginpage a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Guimenu_Accel a), rest)
							(_,_) ->
							    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Guimenu_Str a) = toText a
    toElem (Guimenu_Replaceable a) = toElem a
    toElem (Guimenu_Inlinegraphic a) = toElem a
    toElem (Guimenu_Inlinemediaobject a) = toElem a
    toElem (Guimenu_Indexterm a) = toElem a
    toElem (Guimenu_Beginpage a) = toElem a
    toElem (Guimenu_Accel a) = toElem a
instance XmlAttrType Guimenu_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Guimenu_Moreinfo_Refentry
	    translate "none" = Just Guimenu_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Guimenu_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Guimenu_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Guimenu_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Guimenu_Revisionflag_Changed
	    translate "added" = Just Guimenu_Revisionflag_Added
	    translate "deleted" = Just Guimenu_Revisionflag_Deleted
	    translate "off" = Just Guimenu_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Guimenu_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Guimenu_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Guimenu_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Guimenu_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Guimenuitem where
    fromElem (CElem (Elem "guimenuitem" as c0):rest) =
	(\(a,ca)->
	   (Just (Guimenuitem (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Guimenuitem as a) =
	[CElem (Elem "guimenuitem" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Guimenuitem_Attrs where
    fromAttrs as =
	Guimenuitem_Attrs
	  { guimenuitemMoreinfo = defaultA fromAttrToTyp Guimenuitem_Moreinfo_None "moreinfo" as
	  , guimenuitemId = possibleA fromAttrToStr "id" as
	  , guimenuitemLang = possibleA fromAttrToStr "lang" as
	  , guimenuitemRemap = possibleA fromAttrToStr "remap" as
	  , guimenuitemXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , guimenuitemRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , guimenuitemArch = possibleA fromAttrToStr "arch" as
	  , guimenuitemCondition = possibleA fromAttrToStr "condition" as
	  , guimenuitemConformance = possibleA fromAttrToStr "conformance" as
	  , guimenuitemOs = possibleA fromAttrToStr "os" as
	  , guimenuitemRevision = possibleA fromAttrToStr "revision" as
	  , guimenuitemSecurity = possibleA fromAttrToStr "security" as
	  , guimenuitemUserlevel = possibleA fromAttrToStr "userlevel" as
	  , guimenuitemVendor = possibleA fromAttrToStr "vendor" as
	  , guimenuitemRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (guimenuitemMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (guimenuitemId v)
	, maybeToAttr toAttrFrStr "lang" (guimenuitemLang v)
	, maybeToAttr toAttrFrStr "remap" (guimenuitemRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (guimenuitemXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (guimenuitemRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (guimenuitemArch v)
	, maybeToAttr toAttrFrStr "condition" (guimenuitemCondition v)
	, maybeToAttr toAttrFrStr "conformance" (guimenuitemConformance v)
	, maybeToAttr toAttrFrStr "os" (guimenuitemOs v)
	, maybeToAttr toAttrFrStr "revision" (guimenuitemRevision v)
	, maybeToAttr toAttrFrStr "security" (guimenuitemSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (guimenuitemUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (guimenuitemVendor v)
	, maybeToAttr toAttrFrStr "role" (guimenuitemRole v)
	]
instance XmlContent Guimenuitem_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Guimenuitem_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Guimenuitem_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Guimenuitem_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Guimenuitem_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Guimenuitem_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Guimenuitem_Beginpage a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Guimenuitem_Accel a), rest)
							(_,_) ->
							    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Guimenuitem_Str a) = toText a
    toElem (Guimenuitem_Replaceable a) = toElem a
    toElem (Guimenuitem_Inlinegraphic a) = toElem a
    toElem (Guimenuitem_Inlinemediaobject a) = toElem a
    toElem (Guimenuitem_Indexterm a) = toElem a
    toElem (Guimenuitem_Beginpage a) = toElem a
    toElem (Guimenuitem_Accel a) = toElem a
instance XmlAttrType Guimenuitem_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Guimenuitem_Moreinfo_Refentry
	    translate "none" = Just Guimenuitem_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Guimenuitem_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Guimenuitem_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Guimenuitem_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Guimenuitem_Revisionflag_Changed
	    translate "added" = Just Guimenuitem_Revisionflag_Added
	    translate "deleted" = Just Guimenuitem_Revisionflag_Deleted
	    translate "off" = Just Guimenuitem_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Guimenuitem_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Guimenuitem_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Guimenuitem_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Guimenuitem_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Guisubmenu where
    fromElem (CElem (Elem "guisubmenu" as c0):rest) =
	(\(a,ca)->
	   (Just (Guisubmenu (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Guisubmenu as a) =
	[CElem (Elem "guisubmenu" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Guisubmenu_Attrs where
    fromAttrs as =
	Guisubmenu_Attrs
	  { guisubmenuMoreinfo = defaultA fromAttrToTyp Guisubmenu_Moreinfo_None "moreinfo" as
	  , guisubmenuId = possibleA fromAttrToStr "id" as
	  , guisubmenuLang = possibleA fromAttrToStr "lang" as
	  , guisubmenuRemap = possibleA fromAttrToStr "remap" as
	  , guisubmenuXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , guisubmenuRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , guisubmenuArch = possibleA fromAttrToStr "arch" as
	  , guisubmenuCondition = possibleA fromAttrToStr "condition" as
	  , guisubmenuConformance = possibleA fromAttrToStr "conformance" as
	  , guisubmenuOs = possibleA fromAttrToStr "os" as
	  , guisubmenuRevision = possibleA fromAttrToStr "revision" as
	  , guisubmenuSecurity = possibleA fromAttrToStr "security" as
	  , guisubmenuUserlevel = possibleA fromAttrToStr "userlevel" as
	  , guisubmenuVendor = possibleA fromAttrToStr "vendor" as
	  , guisubmenuRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (guisubmenuMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (guisubmenuId v)
	, maybeToAttr toAttrFrStr "lang" (guisubmenuLang v)
	, maybeToAttr toAttrFrStr "remap" (guisubmenuRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (guisubmenuXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (guisubmenuRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (guisubmenuArch v)
	, maybeToAttr toAttrFrStr "condition" (guisubmenuCondition v)
	, maybeToAttr toAttrFrStr "conformance" (guisubmenuConformance v)
	, maybeToAttr toAttrFrStr "os" (guisubmenuOs v)
	, maybeToAttr toAttrFrStr "revision" (guisubmenuRevision v)
	, maybeToAttr toAttrFrStr "security" (guisubmenuSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (guisubmenuUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (guisubmenuVendor v)
	, maybeToAttr toAttrFrStr "role" (guisubmenuRole v)
	]
instance XmlContent Guisubmenu_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Guisubmenu_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Guisubmenu_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Guisubmenu_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Guisubmenu_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Guisubmenu_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Guisubmenu_Beginpage a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Guisubmenu_Accel a), rest)
							(_,_) ->
							    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Guisubmenu_Str a) = toText a
    toElem (Guisubmenu_Replaceable a) = toElem a
    toElem (Guisubmenu_Inlinegraphic a) = toElem a
    toElem (Guisubmenu_Inlinemediaobject a) = toElem a
    toElem (Guisubmenu_Indexterm a) = toElem a
    toElem (Guisubmenu_Beginpage a) = toElem a
    toElem (Guisubmenu_Accel a) = toElem a
instance XmlAttrType Guisubmenu_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Guisubmenu_Moreinfo_Refentry
	    translate "none" = Just Guisubmenu_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Guisubmenu_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Guisubmenu_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Guisubmenu_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Guisubmenu_Revisionflag_Changed
	    translate "added" = Just Guisubmenu_Revisionflag_Added
	    translate "deleted" = Just Guisubmenu_Revisionflag_Deleted
	    translate "off" = Just Guisubmenu_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Guisubmenu_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Guisubmenu_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Guisubmenu_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Guisubmenu_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Hardware where
    fromElem (CElem (Elem "hardware" as c0):rest) =
	(\(a,ca)->
	   (Just (Hardware (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Hardware as a) =
	[CElem (Elem "hardware" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Hardware_Attrs where
    fromAttrs as =
	Hardware_Attrs
	  { hardwareMoreinfo = defaultA fromAttrToTyp Hardware_Moreinfo_None "moreinfo" as
	  , hardwareId = possibleA fromAttrToStr "id" as
	  , hardwareLang = possibleA fromAttrToStr "lang" as
	  , hardwareRemap = possibleA fromAttrToStr "remap" as
	  , hardwareXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , hardwareRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , hardwareArch = possibleA fromAttrToStr "arch" as
	  , hardwareCondition = possibleA fromAttrToStr "condition" as
	  , hardwareConformance = possibleA fromAttrToStr "conformance" as
	  , hardwareOs = possibleA fromAttrToStr "os" as
	  , hardwareRevision = possibleA fromAttrToStr "revision" as
	  , hardwareSecurity = possibleA fromAttrToStr "security" as
	  , hardwareUserlevel = possibleA fromAttrToStr "userlevel" as
	  , hardwareVendor = possibleA fromAttrToStr "vendor" as
	  , hardwareRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (hardwareMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (hardwareId v)
	, maybeToAttr toAttrFrStr "lang" (hardwareLang v)
	, maybeToAttr toAttrFrStr "remap" (hardwareRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (hardwareXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (hardwareRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (hardwareArch v)
	, maybeToAttr toAttrFrStr "condition" (hardwareCondition v)
	, maybeToAttr toAttrFrStr "conformance" (hardwareConformance v)
	, maybeToAttr toAttrFrStr "os" (hardwareOs v)
	, maybeToAttr toAttrFrStr "revision" (hardwareRevision v)
	, maybeToAttr toAttrFrStr "security" (hardwareSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (hardwareUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (hardwareVendor v)
	, maybeToAttr toAttrFrStr "role" (hardwareRole v)
	]
instance XmlContent Hardware_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Hardware_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Hardware_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Hardware_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Hardware_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Hardware_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Hardware_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Hardware_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Hardware_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Hardware_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Hardware_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Hardware_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Hardware_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Hardware_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Hardware_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Hardware_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Hardware_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Hardware_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Hardware_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Hardware_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Hardware_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Hardware_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Hardware_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Hardware_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Hardware_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Hardware_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Hardware_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Hardware_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Hardware_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Hardware_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Hardware_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Hardware_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Hardware_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Hardware_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Hardware_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Hardware_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Hardware_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Hardware_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Hardware_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Hardware_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Hardware_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Hardware_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Hardware_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Hardware_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Hardware_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Hardware_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Hardware_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Hardware_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Hardware_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Hardware_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Hardware_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Hardware_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Hardware_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Hardware_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Hardware_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Hardware_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Hardware_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Hardware_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Hardware_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Hardware_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Hardware_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Hardware_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Hardware_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Hardware_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Hardware_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Hardware_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Hardware_Beginpage a), rest)
																																																																		(_,_) ->
																																																																		    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Hardware_Str a) = toText a
    toElem (Hardware_Link a) = toElem a
    toElem (Hardware_Olink a) = toElem a
    toElem (Hardware_Ulink a) = toElem a
    toElem (Hardware_Action a) = toElem a
    toElem (Hardware_Application a) = toElem a
    toElem (Hardware_Classname a) = toElem a
    toElem (Hardware_Methodname a) = toElem a
    toElem (Hardware_Interfacename a) = toElem a
    toElem (Hardware_Exceptionname a) = toElem a
    toElem (Hardware_Ooclass a) = toElem a
    toElem (Hardware_Oointerface a) = toElem a
    toElem (Hardware_Ooexception a) = toElem a
    toElem (Hardware_Command a) = toElem a
    toElem (Hardware_Computeroutput a) = toElem a
    toElem (Hardware_Database a) = toElem a
    toElem (Hardware_Email a) = toElem a
    toElem (Hardware_Envar a) = toElem a
    toElem (Hardware_Errorcode a) = toElem a
    toElem (Hardware_Errorname a) = toElem a
    toElem (Hardware_Errortype a) = toElem a
    toElem (Hardware_Errortext a) = toElem a
    toElem (Hardware_Filename a) = toElem a
    toElem (Hardware_Function a) = toElem a
    toElem (Hardware_Guibutton a) = toElem a
    toElem (Hardware_Guiicon a) = toElem a
    toElem (Hardware_Guilabel a) = toElem a
    toElem (Hardware_Guimenu a) = toElem a
    toElem (Hardware_Guimenuitem a) = toElem a
    toElem (Hardware_Guisubmenu a) = toElem a
    toElem (Hardware_Hardware a) = toElem a
    toElem (Hardware_Interface a) = toElem a
    toElem (Hardware_Keycap a) = toElem a
    toElem (Hardware_Keycode a) = toElem a
    toElem (Hardware_Keycombo a) = toElem a
    toElem (Hardware_Keysym a) = toElem a
    toElem (Hardware_Literal a) = toElem a
    toElem (Hardware_Constant a) = toElem a
    toElem (Hardware_Markup a) = toElem a
    toElem (Hardware_Medialabel a) = toElem a
    toElem (Hardware_Menuchoice a) = toElem a
    toElem (Hardware_Mousebutton a) = toElem a
    toElem (Hardware_Option a) = toElem a
    toElem (Hardware_Optional a) = toElem a
    toElem (Hardware_Parameter a) = toElem a
    toElem (Hardware_Prompt a) = toElem a
    toElem (Hardware_Property a) = toElem a
    toElem (Hardware_Replaceable a) = toElem a
    toElem (Hardware_Returnvalue a) = toElem a
    toElem (Hardware_Sgmltag a) = toElem a
    toElem (Hardware_Structfield a) = toElem a
    toElem (Hardware_Structname a) = toElem a
    toElem (Hardware_Symbol a) = toElem a
    toElem (Hardware_Systemitem a) = toElem a
    toElem (Hardware_Token a) = toElem a
    toElem (Hardware_Type a) = toElem a
    toElem (Hardware_Userinput a) = toElem a
    toElem (Hardware_Varname a) = toElem a
    toElem (Hardware_Anchor a) = toElem a
    toElem (Hardware_Remark a) = toElem a
    toElem (Hardware_Subscript a) = toElem a
    toElem (Hardware_Superscript a) = toElem a
    toElem (Hardware_Inlinegraphic a) = toElem a
    toElem (Hardware_Inlinemediaobject a) = toElem a
    toElem (Hardware_Indexterm a) = toElem a
    toElem (Hardware_Beginpage a) = toElem a
instance XmlAttrType Hardware_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Hardware_Moreinfo_Refentry
	    translate "none" = Just Hardware_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Hardware_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Hardware_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Hardware_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Hardware_Revisionflag_Changed
	    translate "added" = Just Hardware_Revisionflag_Added
	    translate "deleted" = Just Hardware_Revisionflag_Deleted
	    translate "off" = Just Hardware_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Hardware_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Hardware_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Hardware_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Hardware_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Interface where
    fromElem (CElem (Elem "interface" as c0):rest) =
	(\(a,ca)->
	   (Just (Interface (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Interface as a) =
	[CElem (Elem "interface" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Interface_Attrs where
    fromAttrs as =
	Interface_Attrs
	  { interfaceMoreinfo = defaultA fromAttrToTyp Interface_Moreinfo_None "moreinfo" as
	  , interfaceId = possibleA fromAttrToStr "id" as
	  , interfaceLang = possibleA fromAttrToStr "lang" as
	  , interfaceRemap = possibleA fromAttrToStr "remap" as
	  , interfaceXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , interfaceRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , interfaceArch = possibleA fromAttrToStr "arch" as
	  , interfaceCondition = possibleA fromAttrToStr "condition" as
	  , interfaceConformance = possibleA fromAttrToStr "conformance" as
	  , interfaceOs = possibleA fromAttrToStr "os" as
	  , interfaceRevision = possibleA fromAttrToStr "revision" as
	  , interfaceSecurity = possibleA fromAttrToStr "security" as
	  , interfaceUserlevel = possibleA fromAttrToStr "userlevel" as
	  , interfaceVendor = possibleA fromAttrToStr "vendor" as
	  , interfaceRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (interfaceMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (interfaceId v)
	, maybeToAttr toAttrFrStr "lang" (interfaceLang v)
	, maybeToAttr toAttrFrStr "remap" (interfaceRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (interfaceXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (interfaceRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (interfaceArch v)
	, maybeToAttr toAttrFrStr "condition" (interfaceCondition v)
	, maybeToAttr toAttrFrStr "conformance" (interfaceConformance v)
	, maybeToAttr toAttrFrStr "os" (interfaceOs v)
	, maybeToAttr toAttrFrStr "revision" (interfaceRevision v)
	, maybeToAttr toAttrFrStr "security" (interfaceSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (interfaceUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (interfaceVendor v)
	, maybeToAttr toAttrFrStr "role" (interfaceRole v)
	]
instance XmlContent Interface_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Interface_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Interface_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Interface_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Interface_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Interface_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Interface_Beginpage a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Interface_Accel a), rest)
							(_,_) ->
							    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Interface_Str a) = toText a
    toElem (Interface_Replaceable a) = toElem a
    toElem (Interface_Inlinegraphic a) = toElem a
    toElem (Interface_Inlinemediaobject a) = toElem a
    toElem (Interface_Indexterm a) = toElem a
    toElem (Interface_Beginpage a) = toElem a
    toElem (Interface_Accel a) = toElem a
instance XmlAttrType Interface_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Interface_Moreinfo_Refentry
	    translate "none" = Just Interface_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Interface_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Interface_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Interface_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Interface_Revisionflag_Changed
	    translate "added" = Just Interface_Revisionflag_Added
	    translate "deleted" = Just Interface_Revisionflag_Deleted
	    translate "off" = Just Interface_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Interface_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Interface_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Interface_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Interface_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Keycap where
    fromElem (CElem (Elem "keycap" as c0):rest) =
	(\(a,ca)->
	   (Just (Keycap (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Keycap as a) =
	[CElem (Elem "keycap" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Keycap_Attrs where
    fromAttrs as =
	Keycap_Attrs
	  { keycapMoreinfo = defaultA fromAttrToTyp Keycap_Moreinfo_None "moreinfo" as
	  , keycapId = possibleA fromAttrToStr "id" as
	  , keycapLang = possibleA fromAttrToStr "lang" as
	  , keycapRemap = possibleA fromAttrToStr "remap" as
	  , keycapXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , keycapRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , keycapArch = possibleA fromAttrToStr "arch" as
	  , keycapCondition = possibleA fromAttrToStr "condition" as
	  , keycapConformance = possibleA fromAttrToStr "conformance" as
	  , keycapOs = possibleA fromAttrToStr "os" as
	  , keycapRevision = possibleA fromAttrToStr "revision" as
	  , keycapSecurity = possibleA fromAttrToStr "security" as
	  , keycapUserlevel = possibleA fromAttrToStr "userlevel" as
	  , keycapVendor = possibleA fromAttrToStr "vendor" as
	  , keycapRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (keycapMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (keycapId v)
	, maybeToAttr toAttrFrStr "lang" (keycapLang v)
	, maybeToAttr toAttrFrStr "remap" (keycapRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (keycapXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (keycapRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (keycapArch v)
	, maybeToAttr toAttrFrStr "condition" (keycapCondition v)
	, maybeToAttr toAttrFrStr "conformance" (keycapConformance v)
	, maybeToAttr toAttrFrStr "os" (keycapOs v)
	, maybeToAttr toAttrFrStr "revision" (keycapRevision v)
	, maybeToAttr toAttrFrStr "security" (keycapSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (keycapUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (keycapVendor v)
	, maybeToAttr toAttrFrStr "role" (keycapRole v)
	]
instance XmlContent Keycap_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Keycap_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Keycap_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Keycap_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Keycap_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Keycap_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Keycap_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Keycap_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Keycap_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Keycap_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Keycap_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Keycap_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Keycap_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Keycap_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Keycap_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Keycap_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Keycap_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Keycap_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Keycap_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Keycap_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Keycap_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Keycap_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Keycap_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Keycap_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Keycap_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Keycap_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Keycap_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Keycap_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Keycap_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Keycap_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Keycap_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Keycap_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Keycap_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Keycap_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Keycap_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Keycap_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Keycap_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Keycap_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Keycap_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Keycap_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Keycap_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Keycap_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Keycap_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Keycap_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Keycap_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Keycap_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Keycap_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Keycap_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Keycap_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Keycap_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Keycap_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Keycap_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Keycap_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Keycap_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Keycap_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Keycap_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Keycap_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Keycap_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Keycap_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Keycap_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Keycap_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Keycap_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Keycap_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Keycap_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Keycap_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Keycap_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Keycap_Beginpage a), rest)
																																																																		(_,_) ->
																																																																		    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Keycap_Str a) = toText a
    toElem (Keycap_Link a) = toElem a
    toElem (Keycap_Olink a) = toElem a
    toElem (Keycap_Ulink a) = toElem a
    toElem (Keycap_Action a) = toElem a
    toElem (Keycap_Application a) = toElem a
    toElem (Keycap_Classname a) = toElem a
    toElem (Keycap_Methodname a) = toElem a
    toElem (Keycap_Interfacename a) = toElem a
    toElem (Keycap_Exceptionname a) = toElem a
    toElem (Keycap_Ooclass a) = toElem a
    toElem (Keycap_Oointerface a) = toElem a
    toElem (Keycap_Ooexception a) = toElem a
    toElem (Keycap_Command a) = toElem a
    toElem (Keycap_Computeroutput a) = toElem a
    toElem (Keycap_Database a) = toElem a
    toElem (Keycap_Email a) = toElem a
    toElem (Keycap_Envar a) = toElem a
    toElem (Keycap_Errorcode a) = toElem a
    toElem (Keycap_Errorname a) = toElem a
    toElem (Keycap_Errortype a) = toElem a
    toElem (Keycap_Errortext a) = toElem a
    toElem (Keycap_Filename a) = toElem a
    toElem (Keycap_Function a) = toElem a
    toElem (Keycap_Guibutton a) = toElem a
    toElem (Keycap_Guiicon a) = toElem a
    toElem (Keycap_Guilabel a) = toElem a
    toElem (Keycap_Guimenu a) = toElem a
    toElem (Keycap_Guimenuitem a) = toElem a
    toElem (Keycap_Guisubmenu a) = toElem a
    toElem (Keycap_Hardware a) = toElem a
    toElem (Keycap_Interface a) = toElem a
    toElem (Keycap_Keycap a) = toElem a
    toElem (Keycap_Keycode a) = toElem a
    toElem (Keycap_Keycombo a) = toElem a
    toElem (Keycap_Keysym a) = toElem a
    toElem (Keycap_Literal a) = toElem a
    toElem (Keycap_Constant a) = toElem a
    toElem (Keycap_Markup a) = toElem a
    toElem (Keycap_Medialabel a) = toElem a
    toElem (Keycap_Menuchoice a) = toElem a
    toElem (Keycap_Mousebutton a) = toElem a
    toElem (Keycap_Option a) = toElem a
    toElem (Keycap_Optional a) = toElem a
    toElem (Keycap_Parameter a) = toElem a
    toElem (Keycap_Prompt a) = toElem a
    toElem (Keycap_Property a) = toElem a
    toElem (Keycap_Replaceable a) = toElem a
    toElem (Keycap_Returnvalue a) = toElem a
    toElem (Keycap_Sgmltag a) = toElem a
    toElem (Keycap_Structfield a) = toElem a
    toElem (Keycap_Structname a) = toElem a
    toElem (Keycap_Symbol a) = toElem a
    toElem (Keycap_Systemitem a) = toElem a
    toElem (Keycap_Token a) = toElem a
    toElem (Keycap_Type a) = toElem a
    toElem (Keycap_Userinput a) = toElem a
    toElem (Keycap_Varname a) = toElem a
    toElem (Keycap_Anchor a) = toElem a
    toElem (Keycap_Remark a) = toElem a
    toElem (Keycap_Subscript a) = toElem a
    toElem (Keycap_Superscript a) = toElem a
    toElem (Keycap_Inlinegraphic a) = toElem a
    toElem (Keycap_Inlinemediaobject a) = toElem a
    toElem (Keycap_Indexterm a) = toElem a
    toElem (Keycap_Beginpage a) = toElem a
instance XmlAttrType Keycap_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Keycap_Moreinfo_Refentry
	    translate "none" = Just Keycap_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Keycap_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Keycap_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Keycap_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Keycap_Revisionflag_Changed
	    translate "added" = Just Keycap_Revisionflag_Added
	    translate "deleted" = Just Keycap_Revisionflag_Deleted
	    translate "off" = Just Keycap_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Keycap_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Keycap_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Keycap_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Keycap_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Keycode where
    fromElem (CElem (Elem "keycode" as c0):rest) =
	(\(a,ca)->
	   (Just (Keycode (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Keycode as a) =
	[CElem (Elem "keycode" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Keycode_Attrs where
    fromAttrs as =
	Keycode_Attrs
	  { keycodeId = possibleA fromAttrToStr "id" as
	  , keycodeLang = possibleA fromAttrToStr "lang" as
	  , keycodeRemap = possibleA fromAttrToStr "remap" as
	  , keycodeXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , keycodeRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , keycodeArch = possibleA fromAttrToStr "arch" as
	  , keycodeCondition = possibleA fromAttrToStr "condition" as
	  , keycodeConformance = possibleA fromAttrToStr "conformance" as
	  , keycodeOs = possibleA fromAttrToStr "os" as
	  , keycodeRevision = possibleA fromAttrToStr "revision" as
	  , keycodeSecurity = possibleA fromAttrToStr "security" as
	  , keycodeUserlevel = possibleA fromAttrToStr "userlevel" as
	  , keycodeVendor = possibleA fromAttrToStr "vendor" as
	  , keycodeRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (keycodeId v)
	, maybeToAttr toAttrFrStr "lang" (keycodeLang v)
	, maybeToAttr toAttrFrStr "remap" (keycodeRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (keycodeXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (keycodeRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (keycodeArch v)
	, maybeToAttr toAttrFrStr "condition" (keycodeCondition v)
	, maybeToAttr toAttrFrStr "conformance" (keycodeConformance v)
	, maybeToAttr toAttrFrStr "os" (keycodeOs v)
	, maybeToAttr toAttrFrStr "revision" (keycodeRevision v)
	, maybeToAttr toAttrFrStr "security" (keycodeSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (keycodeUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (keycodeVendor v)
	, maybeToAttr toAttrFrStr "role" (keycodeRole v)
	]
instance XmlContent Keycode_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Keycode_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Keycode_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Keycode_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Keycode_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Keycode_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Keycode_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Keycode_Str a) = toText a
    toElem (Keycode_Replaceable a) = toElem a
    toElem (Keycode_Inlinegraphic a) = toElem a
    toElem (Keycode_Inlinemediaobject a) = toElem a
    toElem (Keycode_Indexterm a) = toElem a
    toElem (Keycode_Beginpage a) = toElem a
instance XmlAttrType Keycode_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Keycode_Revisionflag_Changed
	    translate "added" = Just Keycode_Revisionflag_Added
	    translate "deleted" = Just Keycode_Revisionflag_Deleted
	    translate "off" = Just Keycode_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Keycode_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Keycode_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Keycode_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Keycode_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Keycombo where
    fromElem (CElem (Elem "keycombo" as c0):rest) =
	(\(a,ca)->
	   (Just (Keycombo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Keycombo as a) =
	[CElem (Elem "keycombo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Keycombo_Attrs where
    fromAttrs as =
	Keycombo_Attrs
	  { keycomboAction = possibleA fromAttrToTyp "action" as
	  , keycomboOtheraction = possibleA fromAttrToStr "otheraction" as
	  , keycomboMoreinfo = defaultA fromAttrToTyp Keycombo_Moreinfo_None "moreinfo" as
	  , keycomboId = possibleA fromAttrToStr "id" as
	  , keycomboLang = possibleA fromAttrToStr "lang" as
	  , keycomboRemap = possibleA fromAttrToStr "remap" as
	  , keycomboXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , keycomboRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , keycomboArch = possibleA fromAttrToStr "arch" as
	  , keycomboCondition = possibleA fromAttrToStr "condition" as
	  , keycomboConformance = possibleA fromAttrToStr "conformance" as
	  , keycomboOs = possibleA fromAttrToStr "os" as
	  , keycomboRevision = possibleA fromAttrToStr "revision" as
	  , keycomboSecurity = possibleA fromAttrToStr "security" as
	  , keycomboUserlevel = possibleA fromAttrToStr "userlevel" as
	  , keycomboVendor = possibleA fromAttrToStr "vendor" as
	  , keycomboRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "action" (keycomboAction v)
	, maybeToAttr toAttrFrStr "otheraction" (keycomboOtheraction v)
	, defaultToAttr toAttrFrTyp "moreinfo" (keycomboMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (keycomboId v)
	, maybeToAttr toAttrFrStr "lang" (keycomboLang v)
	, maybeToAttr toAttrFrStr "remap" (keycomboRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (keycomboXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (keycomboRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (keycomboArch v)
	, maybeToAttr toAttrFrStr "condition" (keycomboCondition v)
	, maybeToAttr toAttrFrStr "conformance" (keycomboConformance v)
	, maybeToAttr toAttrFrStr "os" (keycomboOs v)
	, maybeToAttr toAttrFrStr "revision" (keycomboRevision v)
	, maybeToAttr toAttrFrStr "security" (keycomboSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (keycomboUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (keycomboVendor v)
	, maybeToAttr toAttrFrStr "role" (keycomboRole v)
	]
instance XmlAttrType Keycombo_Action where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "click" = Just Keycombo_Action_Click
	    translate "double-click" = Just Keycombo_Action_Double_click
	    translate "press" = Just Keycombo_Action_Press
	    translate "seq" = Just Keycombo_Action_Seq
	    translate "simul" = Just Keycombo_Action_Simul
	    translate "other" = Just Keycombo_Action_Other
	    translate _ = Nothing
    toAttrFrTyp n Keycombo_Action_Click = Just (n, str2attr "click")
    toAttrFrTyp n Keycombo_Action_Double_click = Just (n, str2attr "double-click")
    toAttrFrTyp n Keycombo_Action_Press = Just (n, str2attr "press")
    toAttrFrTyp n Keycombo_Action_Seq = Just (n, str2attr "seq")
    toAttrFrTyp n Keycombo_Action_Simul = Just (n, str2attr "simul")
    toAttrFrTyp n Keycombo_Action_Other = Just (n, str2attr "other")
instance XmlAttrType Keycombo_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Keycombo_Moreinfo_Refentry
	    translate "none" = Just Keycombo_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Keycombo_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Keycombo_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Keycombo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Keycombo_Revisionflag_Changed
	    translate "added" = Just Keycombo_Revisionflag_Added
	    translate "deleted" = Just Keycombo_Revisionflag_Deleted
	    translate "off" = Just Keycombo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Keycombo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Keycombo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Keycombo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Keycombo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Keysym where
    fromElem (CElem (Elem "keysym" as c0):rest) =
	(\(a,ca)->
	   (Just (Keysym (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Keysym as a) =
	[CElem (Elem "keysym" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Keysym_Attrs where
    fromAttrs as =
	Keysym_Attrs
	  { keysymId = possibleA fromAttrToStr "id" as
	  , keysymLang = possibleA fromAttrToStr "lang" as
	  , keysymRemap = possibleA fromAttrToStr "remap" as
	  , keysymXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , keysymRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , keysymArch = possibleA fromAttrToStr "arch" as
	  , keysymCondition = possibleA fromAttrToStr "condition" as
	  , keysymConformance = possibleA fromAttrToStr "conformance" as
	  , keysymOs = possibleA fromAttrToStr "os" as
	  , keysymRevision = possibleA fromAttrToStr "revision" as
	  , keysymSecurity = possibleA fromAttrToStr "security" as
	  , keysymUserlevel = possibleA fromAttrToStr "userlevel" as
	  , keysymVendor = possibleA fromAttrToStr "vendor" as
	  , keysymRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (keysymId v)
	, maybeToAttr toAttrFrStr "lang" (keysymLang v)
	, maybeToAttr toAttrFrStr "remap" (keysymRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (keysymXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (keysymRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (keysymArch v)
	, maybeToAttr toAttrFrStr "condition" (keysymCondition v)
	, maybeToAttr toAttrFrStr "conformance" (keysymConformance v)
	, maybeToAttr toAttrFrStr "os" (keysymOs v)
	, maybeToAttr toAttrFrStr "revision" (keysymRevision v)
	, maybeToAttr toAttrFrStr "security" (keysymSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (keysymUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (keysymVendor v)
	, maybeToAttr toAttrFrStr "role" (keysymRole v)
	]
instance XmlContent Keysym_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Keysym_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Keysym_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Keysym_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Keysym_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Keysym_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Keysym_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Keysym_Str a) = toText a
    toElem (Keysym_Replaceable a) = toElem a
    toElem (Keysym_Inlinegraphic a) = toElem a
    toElem (Keysym_Inlinemediaobject a) = toElem a
    toElem (Keysym_Indexterm a) = toElem a
    toElem (Keysym_Beginpage a) = toElem a
instance XmlAttrType Keysym_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Keysym_Revisionflag_Changed
	    translate "added" = Just Keysym_Revisionflag_Added
	    translate "deleted" = Just Keysym_Revisionflag_Deleted
	    translate "off" = Just Keysym_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Keysym_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Keysym_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Keysym_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Keysym_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Lineannotation where
    fromElem (CElem (Elem "lineannotation" as c0):rest) =
	(\(a,ca)->
	   (Just (Lineannotation (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Lineannotation as a) =
	[CElem (Elem "lineannotation" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Lineannotation_Attrs where
    fromAttrs as =
	Lineannotation_Attrs
	  { lineannotationId = possibleA fromAttrToStr "id" as
	  , lineannotationLang = possibleA fromAttrToStr "lang" as
	  , lineannotationRemap = possibleA fromAttrToStr "remap" as
	  , lineannotationXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , lineannotationRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , lineannotationArch = possibleA fromAttrToStr "arch" as
	  , lineannotationCondition = possibleA fromAttrToStr "condition" as
	  , lineannotationConformance = possibleA fromAttrToStr "conformance" as
	  , lineannotationOs = possibleA fromAttrToStr "os" as
	  , lineannotationRevision = possibleA fromAttrToStr "revision" as
	  , lineannotationSecurity = possibleA fromAttrToStr "security" as
	  , lineannotationUserlevel = possibleA fromAttrToStr "userlevel" as
	  , lineannotationVendor = possibleA fromAttrToStr "vendor" as
	  , lineannotationRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (lineannotationId v)
	, maybeToAttr toAttrFrStr "lang" (lineannotationLang v)
	, maybeToAttr toAttrFrStr "remap" (lineannotationRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (lineannotationXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (lineannotationRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (lineannotationArch v)
	, maybeToAttr toAttrFrStr "condition" (lineannotationCondition v)
	, maybeToAttr toAttrFrStr "conformance" (lineannotationConformance v)
	, maybeToAttr toAttrFrStr "os" (lineannotationOs v)
	, maybeToAttr toAttrFrStr "revision" (lineannotationRevision v)
	, maybeToAttr toAttrFrStr "security" (lineannotationSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (lineannotationUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (lineannotationVendor v)
	, maybeToAttr toAttrFrStr "role" (lineannotationRole v)
	]
instance XmlContent Lineannotation_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Lineannotation_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Lineannotation_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Lineannotation_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Lineannotation_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Lineannotation_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Lineannotation_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Lineannotation_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Lineannotation_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Lineannotation_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Lineannotation_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Lineannotation_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Lineannotation_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Lineannotation_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Lineannotation_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Lineannotation_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Lineannotation_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Lineannotation_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Lineannotation_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Lineannotation_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Lineannotation_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Lineannotation_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Lineannotation_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Lineannotation_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Lineannotation_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Lineannotation_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Lineannotation_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Lineannotation_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Lineannotation_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Lineannotation_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Lineannotation_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Lineannotation_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Lineannotation_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Lineannotation_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Lineannotation_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Lineannotation_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Lineannotation_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Lineannotation_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Lineannotation_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Lineannotation_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Lineannotation_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Lineannotation_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Lineannotation_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Lineannotation_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Lineannotation_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Lineannotation_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Lineannotation_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Lineannotation_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Lineannotation_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Lineannotation_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Lineannotation_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Lineannotation_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Lineannotation_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Lineannotation_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Lineannotation_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Lineannotation_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Lineannotation_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Lineannotation_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Lineannotation_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Lineannotation_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Lineannotation_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Lineannotation_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Lineannotation_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Lineannotation_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Lineannotation_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Lineannotation_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Lineannotation_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Lineannotation_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Lineannotation_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Lineannotation_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Lineannotation_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Lineannotation_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Lineannotation_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Lineannotation_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Lineannotation_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Lineannotation_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Lineannotation_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Lineannotation_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Lineannotation_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Lineannotation_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Lineannotation_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Lineannotation_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Lineannotation_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Lineannotation_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Lineannotation_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Lineannotation_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Lineannotation_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Lineannotation_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Lineannotation_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Lineannotation_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Lineannotation_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Lineannotation_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Lineannotation_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Lineannotation_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Lineannotation_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Lineannotation_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Lineannotation_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Lineannotation_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Lineannotation_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Lineannotation_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Lineannotation_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Lineannotation_Str a) = toText a
    toElem (Lineannotation_Footnoteref a) = toElem a
    toElem (Lineannotation_Xref a) = toElem a
    toElem (Lineannotation_Abbrev a) = toElem a
    toElem (Lineannotation_Acronym a) = toElem a
    toElem (Lineannotation_Citation a) = toElem a
    toElem (Lineannotation_Citerefentry a) = toElem a
    toElem (Lineannotation_Citetitle a) = toElem a
    toElem (Lineannotation_Emphasis a) = toElem a
    toElem (Lineannotation_Firstterm a) = toElem a
    toElem (Lineannotation_Foreignphrase a) = toElem a
    toElem (Lineannotation_Glossterm a) = toElem a
    toElem (Lineannotation_Footnote a) = toElem a
    toElem (Lineannotation_Phrase a) = toElem a
    toElem (Lineannotation_Quote a) = toElem a
    toElem (Lineannotation_Trademark a) = toElem a
    toElem (Lineannotation_Wordasword a) = toElem a
    toElem (Lineannotation_Personname a) = toElem a
    toElem (Lineannotation_Link a) = toElem a
    toElem (Lineannotation_Olink a) = toElem a
    toElem (Lineannotation_Ulink a) = toElem a
    toElem (Lineannotation_Action a) = toElem a
    toElem (Lineannotation_Application a) = toElem a
    toElem (Lineannotation_Classname a) = toElem a
    toElem (Lineannotation_Methodname a) = toElem a
    toElem (Lineannotation_Interfacename a) = toElem a
    toElem (Lineannotation_Exceptionname a) = toElem a
    toElem (Lineannotation_Ooclass a) = toElem a
    toElem (Lineannotation_Oointerface a) = toElem a
    toElem (Lineannotation_Ooexception a) = toElem a
    toElem (Lineannotation_Command a) = toElem a
    toElem (Lineannotation_Computeroutput a) = toElem a
    toElem (Lineannotation_Database a) = toElem a
    toElem (Lineannotation_Email a) = toElem a
    toElem (Lineannotation_Envar a) = toElem a
    toElem (Lineannotation_Errorcode a) = toElem a
    toElem (Lineannotation_Errorname a) = toElem a
    toElem (Lineannotation_Errortype a) = toElem a
    toElem (Lineannotation_Errortext a) = toElem a
    toElem (Lineannotation_Filename a) = toElem a
    toElem (Lineannotation_Function a) = toElem a
    toElem (Lineannotation_Guibutton a) = toElem a
    toElem (Lineannotation_Guiicon a) = toElem a
    toElem (Lineannotation_Guilabel a) = toElem a
    toElem (Lineannotation_Guimenu a) = toElem a
    toElem (Lineannotation_Guimenuitem a) = toElem a
    toElem (Lineannotation_Guisubmenu a) = toElem a
    toElem (Lineannotation_Hardware a) = toElem a
    toElem (Lineannotation_Interface a) = toElem a
    toElem (Lineannotation_Keycap a) = toElem a
    toElem (Lineannotation_Keycode a) = toElem a
    toElem (Lineannotation_Keycombo a) = toElem a
    toElem (Lineannotation_Keysym a) = toElem a
    toElem (Lineannotation_Literal a) = toElem a
    toElem (Lineannotation_Constant a) = toElem a
    toElem (Lineannotation_Markup a) = toElem a
    toElem (Lineannotation_Medialabel a) = toElem a
    toElem (Lineannotation_Menuchoice a) = toElem a
    toElem (Lineannotation_Mousebutton a) = toElem a
    toElem (Lineannotation_Option a) = toElem a
    toElem (Lineannotation_Optional a) = toElem a
    toElem (Lineannotation_Parameter a) = toElem a
    toElem (Lineannotation_Prompt a) = toElem a
    toElem (Lineannotation_Property a) = toElem a
    toElem (Lineannotation_Replaceable a) = toElem a
    toElem (Lineannotation_Returnvalue a) = toElem a
    toElem (Lineannotation_Sgmltag a) = toElem a
    toElem (Lineannotation_Structfield a) = toElem a
    toElem (Lineannotation_Structname a) = toElem a
    toElem (Lineannotation_Symbol a) = toElem a
    toElem (Lineannotation_Systemitem a) = toElem a
    toElem (Lineannotation_Token a) = toElem a
    toElem (Lineannotation_Type a) = toElem a
    toElem (Lineannotation_Userinput a) = toElem a
    toElem (Lineannotation_Varname a) = toElem a
    toElem (Lineannotation_Anchor a) = toElem a
    toElem (Lineannotation_Author a) = toElem a
    toElem (Lineannotation_Authorinitials a) = toElem a
    toElem (Lineannotation_Corpauthor a) = toElem a
    toElem (Lineannotation_Modespec a) = toElem a
    toElem (Lineannotation_Othercredit a) = toElem a
    toElem (Lineannotation_Productname a) = toElem a
    toElem (Lineannotation_Productnumber a) = toElem a
    toElem (Lineannotation_Revhistory a) = toElem a
    toElem (Lineannotation_Remark a) = toElem a
    toElem (Lineannotation_Subscript a) = toElem a
    toElem (Lineannotation_Superscript a) = toElem a
    toElem (Lineannotation_Inlinegraphic a) = toElem a
    toElem (Lineannotation_Inlinemediaobject a) = toElem a
    toElem (Lineannotation_Inlineequation a) = toElem a
    toElem (Lineannotation_Synopsis a) = toElem a
    toElem (Lineannotation_Cmdsynopsis a) = toElem a
    toElem (Lineannotation_Funcsynopsis a) = toElem a
    toElem (Lineannotation_Classsynopsis a) = toElem a
    toElem (Lineannotation_Fieldsynopsis a) = toElem a
    toElem (Lineannotation_Constructorsynopsis a) = toElem a
    toElem (Lineannotation_Destructorsynopsis a) = toElem a
    toElem (Lineannotation_Methodsynopsis a) = toElem a
    toElem (Lineannotation_Indexterm a) = toElem a
    toElem (Lineannotation_Beginpage a) = toElem a
instance XmlAttrType Lineannotation_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Lineannotation_Revisionflag_Changed
	    translate "added" = Just Lineannotation_Revisionflag_Added
	    translate "deleted" = Just Lineannotation_Revisionflag_Deleted
	    translate "off" = Just Lineannotation_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Lineannotation_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Lineannotation_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Lineannotation_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Lineannotation_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Literal where
    fromElem (CElem (Elem "literal" as c0):rest) =
	(\(a,ca)->
	   (Just (Literal (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Literal as a) =
	[CElem (Elem "literal" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Literal_Attrs where
    fromAttrs as =
	Literal_Attrs
	  { literalMoreinfo = defaultA fromAttrToTyp Literal_Moreinfo_None "moreinfo" as
	  , literalId = possibleA fromAttrToStr "id" as
	  , literalLang = possibleA fromAttrToStr "lang" as
	  , literalRemap = possibleA fromAttrToStr "remap" as
	  , literalXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , literalRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , literalArch = possibleA fromAttrToStr "arch" as
	  , literalCondition = possibleA fromAttrToStr "condition" as
	  , literalConformance = possibleA fromAttrToStr "conformance" as
	  , literalOs = possibleA fromAttrToStr "os" as
	  , literalRevision = possibleA fromAttrToStr "revision" as
	  , literalSecurity = possibleA fromAttrToStr "security" as
	  , literalUserlevel = possibleA fromAttrToStr "userlevel" as
	  , literalVendor = possibleA fromAttrToStr "vendor" as
	  , literalRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (literalMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (literalId v)
	, maybeToAttr toAttrFrStr "lang" (literalLang v)
	, maybeToAttr toAttrFrStr "remap" (literalRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (literalXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (literalRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (literalArch v)
	, maybeToAttr toAttrFrStr "condition" (literalCondition v)
	, maybeToAttr toAttrFrStr "conformance" (literalConformance v)
	, maybeToAttr toAttrFrStr "os" (literalOs v)
	, maybeToAttr toAttrFrStr "revision" (literalRevision v)
	, maybeToAttr toAttrFrStr "security" (literalSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (literalUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (literalVendor v)
	, maybeToAttr toAttrFrStr "role" (literalRole v)
	]
instance XmlContent Literal_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Literal_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Literal_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Literal_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Literal_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Literal_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Literal_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Literal_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Literal_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Literal_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Literal_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Literal_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Literal_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Literal_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Literal_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Literal_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Literal_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Literal_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Literal_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Literal_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Literal_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Literal_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Literal_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Literal_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Literal_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Literal_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Literal_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Literal_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Literal_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Literal_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Literal_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Literal_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Literal_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Literal_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Literal_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Literal_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Literal_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Literal_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Literal_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Literal_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Literal_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Literal_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Literal_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Literal_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Literal_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Literal_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Literal_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Literal_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Literal_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Literal_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Literal_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Literal_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Literal_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Literal_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Literal_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Literal_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Literal_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Literal_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Literal_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Literal_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Literal_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Literal_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Literal_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Literal_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Literal_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Literal_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Literal_Beginpage a), rest)
																																																																		(_,_) ->
																																																																		    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Literal_Str a) = toText a
    toElem (Literal_Link a) = toElem a
    toElem (Literal_Olink a) = toElem a
    toElem (Literal_Ulink a) = toElem a
    toElem (Literal_Action a) = toElem a
    toElem (Literal_Application a) = toElem a
    toElem (Literal_Classname a) = toElem a
    toElem (Literal_Methodname a) = toElem a
    toElem (Literal_Interfacename a) = toElem a
    toElem (Literal_Exceptionname a) = toElem a
    toElem (Literal_Ooclass a) = toElem a
    toElem (Literal_Oointerface a) = toElem a
    toElem (Literal_Ooexception a) = toElem a
    toElem (Literal_Command a) = toElem a
    toElem (Literal_Computeroutput a) = toElem a
    toElem (Literal_Database a) = toElem a
    toElem (Literal_Email a) = toElem a
    toElem (Literal_Envar a) = toElem a
    toElem (Literal_Errorcode a) = toElem a
    toElem (Literal_Errorname a) = toElem a
    toElem (Literal_Errortype a) = toElem a
    toElem (Literal_Errortext a) = toElem a
    toElem (Literal_Filename a) = toElem a
    toElem (Literal_Function a) = toElem a
    toElem (Literal_Guibutton a) = toElem a
    toElem (Literal_Guiicon a) = toElem a
    toElem (Literal_Guilabel a) = toElem a
    toElem (Literal_Guimenu a) = toElem a
    toElem (Literal_Guimenuitem a) = toElem a
    toElem (Literal_Guisubmenu a) = toElem a
    toElem (Literal_Hardware a) = toElem a
    toElem (Literal_Interface a) = toElem a
    toElem (Literal_Keycap a) = toElem a
    toElem (Literal_Keycode a) = toElem a
    toElem (Literal_Keycombo a) = toElem a
    toElem (Literal_Keysym a) = toElem a
    toElem (Literal_Literal a) = toElem a
    toElem (Literal_Constant a) = toElem a
    toElem (Literal_Markup a) = toElem a
    toElem (Literal_Medialabel a) = toElem a
    toElem (Literal_Menuchoice a) = toElem a
    toElem (Literal_Mousebutton a) = toElem a
    toElem (Literal_Option a) = toElem a
    toElem (Literal_Optional a) = toElem a
    toElem (Literal_Parameter a) = toElem a
    toElem (Literal_Prompt a) = toElem a
    toElem (Literal_Property a) = toElem a
    toElem (Literal_Replaceable a) = toElem a
    toElem (Literal_Returnvalue a) = toElem a
    toElem (Literal_Sgmltag a) = toElem a
    toElem (Literal_Structfield a) = toElem a
    toElem (Literal_Structname a) = toElem a
    toElem (Literal_Symbol a) = toElem a
    toElem (Literal_Systemitem a) = toElem a
    toElem (Literal_Token a) = toElem a
    toElem (Literal_Type a) = toElem a
    toElem (Literal_Userinput a) = toElem a
    toElem (Literal_Varname a) = toElem a
    toElem (Literal_Anchor a) = toElem a
    toElem (Literal_Remark a) = toElem a
    toElem (Literal_Subscript a) = toElem a
    toElem (Literal_Superscript a) = toElem a
    toElem (Literal_Inlinegraphic a) = toElem a
    toElem (Literal_Inlinemediaobject a) = toElem a
    toElem (Literal_Indexterm a) = toElem a
    toElem (Literal_Beginpage a) = toElem a
instance XmlAttrType Literal_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Literal_Moreinfo_Refentry
	    translate "none" = Just Literal_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Literal_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Literal_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Literal_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Literal_Revisionflag_Changed
	    translate "added" = Just Literal_Revisionflag_Added
	    translate "deleted" = Just Literal_Revisionflag_Deleted
	    translate "off" = Just Literal_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Literal_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Literal_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Literal_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Literal_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Constant where
    fromElem (CElem (Elem "constant" as c0):rest) =
	(\(a,ca)->
	   (Just (Constant (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Constant as a) =
	[CElem (Elem "constant" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Constant_Attrs where
    fromAttrs as =
	Constant_Attrs
	  { constantClass = possibleA fromAttrToTyp "class" as
	  , constantId = possibleA fromAttrToStr "id" as
	  , constantLang = possibleA fromAttrToStr "lang" as
	  , constantRemap = possibleA fromAttrToStr "remap" as
	  , constantXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , constantRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , constantArch = possibleA fromAttrToStr "arch" as
	  , constantCondition = possibleA fromAttrToStr "condition" as
	  , constantConformance = possibleA fromAttrToStr "conformance" as
	  , constantOs = possibleA fromAttrToStr "os" as
	  , constantRevision = possibleA fromAttrToStr "revision" as
	  , constantSecurity = possibleA fromAttrToStr "security" as
	  , constantUserlevel = possibleA fromAttrToStr "userlevel" as
	  , constantVendor = possibleA fromAttrToStr "vendor" as
	  , constantRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "class" (constantClass v)
	, maybeToAttr toAttrFrStr "id" (constantId v)
	, maybeToAttr toAttrFrStr "lang" (constantLang v)
	, maybeToAttr toAttrFrStr "remap" (constantRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (constantXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (constantRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (constantArch v)
	, maybeToAttr toAttrFrStr "condition" (constantCondition v)
	, maybeToAttr toAttrFrStr "conformance" (constantConformance v)
	, maybeToAttr toAttrFrStr "os" (constantOs v)
	, maybeToAttr toAttrFrStr "revision" (constantRevision v)
	, maybeToAttr toAttrFrStr "security" (constantSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (constantUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (constantVendor v)
	, maybeToAttr toAttrFrStr "role" (constantRole v)
	]
instance XmlContent Constant_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Constant_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Constant_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Constant_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Constant_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Constant_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Constant_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Constant_Str a) = toText a
    toElem (Constant_Replaceable a) = toElem a
    toElem (Constant_Inlinegraphic a) = toElem a
    toElem (Constant_Inlinemediaobject a) = toElem a
    toElem (Constant_Indexterm a) = toElem a
    toElem (Constant_Beginpage a) = toElem a
instance XmlAttrType Constant_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "limit" = Just Constant_Class_Limit
	    translate _ = Nothing
    toAttrFrTyp n Constant_Class_Limit = Just (n, str2attr "limit")
instance XmlAttrType Constant_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Constant_Revisionflag_Changed
	    translate "added" = Just Constant_Revisionflag_Added
	    translate "deleted" = Just Constant_Revisionflag_Deleted
	    translate "off" = Just Constant_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Constant_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Constant_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Constant_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Constant_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Varname where
    fromElem (CElem (Elem "varname" as c0):rest) =
	(\(a,ca)->
	   (Just (Varname (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Varname as a) =
	[CElem (Elem "varname" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Varname_Attrs where
    fromAttrs as =
	Varname_Attrs
	  { varnameId = possibleA fromAttrToStr "id" as
	  , varnameLang = possibleA fromAttrToStr "lang" as
	  , varnameRemap = possibleA fromAttrToStr "remap" as
	  , varnameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , varnameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , varnameArch = possibleA fromAttrToStr "arch" as
	  , varnameCondition = possibleA fromAttrToStr "condition" as
	  , varnameConformance = possibleA fromAttrToStr "conformance" as
	  , varnameOs = possibleA fromAttrToStr "os" as
	  , varnameRevision = possibleA fromAttrToStr "revision" as
	  , varnameSecurity = possibleA fromAttrToStr "security" as
	  , varnameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , varnameVendor = possibleA fromAttrToStr "vendor" as
	  , varnameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (varnameId v)
	, maybeToAttr toAttrFrStr "lang" (varnameLang v)
	, maybeToAttr toAttrFrStr "remap" (varnameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (varnameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (varnameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (varnameArch v)
	, maybeToAttr toAttrFrStr "condition" (varnameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (varnameConformance v)
	, maybeToAttr toAttrFrStr "os" (varnameOs v)
	, maybeToAttr toAttrFrStr "revision" (varnameRevision v)
	, maybeToAttr toAttrFrStr "security" (varnameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (varnameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (varnameVendor v)
	, maybeToAttr toAttrFrStr "role" (varnameRole v)
	]
instance XmlContent Varname_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Varname_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Varname_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Varname_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Varname_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Varname_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Varname_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Varname_Str a) = toText a
    toElem (Varname_Replaceable a) = toElem a
    toElem (Varname_Inlinegraphic a) = toElem a
    toElem (Varname_Inlinemediaobject a) = toElem a
    toElem (Varname_Indexterm a) = toElem a
    toElem (Varname_Beginpage a) = toElem a
instance XmlAttrType Varname_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Varname_Revisionflag_Changed
	    translate "added" = Just Varname_Revisionflag_Added
	    translate "deleted" = Just Varname_Revisionflag_Deleted
	    translate "off" = Just Varname_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Varname_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Varname_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Varname_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Varname_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Markup where
    fromElem (CElem (Elem "markup" as c0):rest) =
	(\(a,ca)->
	   (Just (Markup (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Markup as a) =
	[CElem (Elem "markup" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Markup_Attrs where
    fromAttrs as =
	Markup_Attrs
	  { markupId = possibleA fromAttrToStr "id" as
	  , markupLang = possibleA fromAttrToStr "lang" as
	  , markupRemap = possibleA fromAttrToStr "remap" as
	  , markupXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , markupRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , markupArch = possibleA fromAttrToStr "arch" as
	  , markupCondition = possibleA fromAttrToStr "condition" as
	  , markupConformance = possibleA fromAttrToStr "conformance" as
	  , markupOs = possibleA fromAttrToStr "os" as
	  , markupRevision = possibleA fromAttrToStr "revision" as
	  , markupSecurity = possibleA fromAttrToStr "security" as
	  , markupUserlevel = possibleA fromAttrToStr "userlevel" as
	  , markupVendor = possibleA fromAttrToStr "vendor" as
	  , markupRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (markupId v)
	, maybeToAttr toAttrFrStr "lang" (markupLang v)
	, maybeToAttr toAttrFrStr "remap" (markupRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (markupXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (markupRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (markupArch v)
	, maybeToAttr toAttrFrStr "condition" (markupCondition v)
	, maybeToAttr toAttrFrStr "conformance" (markupConformance v)
	, maybeToAttr toAttrFrStr "os" (markupOs v)
	, maybeToAttr toAttrFrStr "revision" (markupRevision v)
	, maybeToAttr toAttrFrStr "security" (markupSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (markupUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (markupVendor v)
	, maybeToAttr toAttrFrStr "role" (markupRole v)
	]
instance XmlContent Markup_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Markup_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Markup_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Markup_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Markup_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Markup_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Markup_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Markup_Str a) = toText a
    toElem (Markup_Replaceable a) = toElem a
    toElem (Markup_Inlinegraphic a) = toElem a
    toElem (Markup_Inlinemediaobject a) = toElem a
    toElem (Markup_Indexterm a) = toElem a
    toElem (Markup_Beginpage a) = toElem a
instance XmlAttrType Markup_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Markup_Revisionflag_Changed
	    translate "added" = Just Markup_Revisionflag_Added
	    translate "deleted" = Just Markup_Revisionflag_Deleted
	    translate "off" = Just Markup_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Markup_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Markup_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Markup_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Markup_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Medialabel where
    fromElem (CElem (Elem "medialabel" as c0):rest) =
	(\(a,ca)->
	   (Just (Medialabel (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Medialabel as a) =
	[CElem (Elem "medialabel" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Medialabel_Attrs where
    fromAttrs as =
	Medialabel_Attrs
	  { medialabelClass = possibleA fromAttrToTyp "class" as
	  , medialabelId = possibleA fromAttrToStr "id" as
	  , medialabelLang = possibleA fromAttrToStr "lang" as
	  , medialabelRemap = possibleA fromAttrToStr "remap" as
	  , medialabelXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , medialabelRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , medialabelArch = possibleA fromAttrToStr "arch" as
	  , medialabelCondition = possibleA fromAttrToStr "condition" as
	  , medialabelConformance = possibleA fromAttrToStr "conformance" as
	  , medialabelOs = possibleA fromAttrToStr "os" as
	  , medialabelRevision = possibleA fromAttrToStr "revision" as
	  , medialabelSecurity = possibleA fromAttrToStr "security" as
	  , medialabelUserlevel = possibleA fromAttrToStr "userlevel" as
	  , medialabelVendor = possibleA fromAttrToStr "vendor" as
	  , medialabelRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "class" (medialabelClass v)
	, maybeToAttr toAttrFrStr "id" (medialabelId v)
	, maybeToAttr toAttrFrStr "lang" (medialabelLang v)
	, maybeToAttr toAttrFrStr "remap" (medialabelRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (medialabelXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (medialabelRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (medialabelArch v)
	, maybeToAttr toAttrFrStr "condition" (medialabelCondition v)
	, maybeToAttr toAttrFrStr "conformance" (medialabelConformance v)
	, maybeToAttr toAttrFrStr "os" (medialabelOs v)
	, maybeToAttr toAttrFrStr "revision" (medialabelRevision v)
	, maybeToAttr toAttrFrStr "security" (medialabelSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (medialabelUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (medialabelVendor v)
	, maybeToAttr toAttrFrStr "role" (medialabelRole v)
	]
instance XmlContent Medialabel_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Medialabel_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Medialabel_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Medialabel_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Medialabel_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Medialabel_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Medialabel_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Medialabel_Str a) = toText a
    toElem (Medialabel_Replaceable a) = toElem a
    toElem (Medialabel_Inlinegraphic a) = toElem a
    toElem (Medialabel_Inlinemediaobject a) = toElem a
    toElem (Medialabel_Indexterm a) = toElem a
    toElem (Medialabel_Beginpage a) = toElem a
instance XmlAttrType Medialabel_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "cartridge" = Just Medialabel_Class_Cartridge
	    translate "cdrom" = Just Medialabel_Class_Cdrom
	    translate "disk" = Just Medialabel_Class_Disk
	    translate "tape" = Just Medialabel_Class_Tape
	    translate _ = Nothing
    toAttrFrTyp n Medialabel_Class_Cartridge = Just (n, str2attr "cartridge")
    toAttrFrTyp n Medialabel_Class_Cdrom = Just (n, str2attr "cdrom")
    toAttrFrTyp n Medialabel_Class_Disk = Just (n, str2attr "disk")
    toAttrFrTyp n Medialabel_Class_Tape = Just (n, str2attr "tape")
instance XmlAttrType Medialabel_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Medialabel_Revisionflag_Changed
	    translate "added" = Just Medialabel_Revisionflag_Added
	    translate "deleted" = Just Medialabel_Revisionflag_Deleted
	    translate "off" = Just Medialabel_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Medialabel_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Medialabel_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Medialabel_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Medialabel_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Menuchoice where
    fromElem (CElem (Elem "menuchoice" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Menuchoice (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Menuchoice as a b) =
	[CElem (Elem "menuchoice" (toAttrs as) (maybe [] toElem a ++
						concatMap toElem b))]
instance XmlAttributes Menuchoice_Attrs where
    fromAttrs as =
	Menuchoice_Attrs
	  { menuchoiceMoreinfo = defaultA fromAttrToTyp Menuchoice_Moreinfo_None "moreinfo" as
	  , menuchoiceId = possibleA fromAttrToStr "id" as
	  , menuchoiceLang = possibleA fromAttrToStr "lang" as
	  , menuchoiceRemap = possibleA fromAttrToStr "remap" as
	  , menuchoiceXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , menuchoiceRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , menuchoiceArch = possibleA fromAttrToStr "arch" as
	  , menuchoiceCondition = possibleA fromAttrToStr "condition" as
	  , menuchoiceConformance = possibleA fromAttrToStr "conformance" as
	  , menuchoiceOs = possibleA fromAttrToStr "os" as
	  , menuchoiceRevision = possibleA fromAttrToStr "revision" as
	  , menuchoiceSecurity = possibleA fromAttrToStr "security" as
	  , menuchoiceUserlevel = possibleA fromAttrToStr "userlevel" as
	  , menuchoiceVendor = possibleA fromAttrToStr "vendor" as
	  , menuchoiceRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (menuchoiceMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (menuchoiceId v)
	, maybeToAttr toAttrFrStr "lang" (menuchoiceLang v)
	, maybeToAttr toAttrFrStr "remap" (menuchoiceRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (menuchoiceXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (menuchoiceRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (menuchoiceArch v)
	, maybeToAttr toAttrFrStr "condition" (menuchoiceCondition v)
	, maybeToAttr toAttrFrStr "conformance" (menuchoiceConformance v)
	, maybeToAttr toAttrFrStr "os" (menuchoiceOs v)
	, maybeToAttr toAttrFrStr "revision" (menuchoiceRevision v)
	, maybeToAttr toAttrFrStr "security" (menuchoiceSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (menuchoiceUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (menuchoiceVendor v)
	, maybeToAttr toAttrFrStr "role" (menuchoiceRole v)
	]
instance XmlAttrType Menuchoice_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Menuchoice_Moreinfo_Refentry
	    translate "none" = Just Menuchoice_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Menuchoice_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Menuchoice_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Menuchoice_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Menuchoice_Revisionflag_Changed
	    translate "added" = Just Menuchoice_Revisionflag_Added
	    translate "deleted" = Just Menuchoice_Revisionflag_Deleted
	    translate "off" = Just Menuchoice_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Menuchoice_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Menuchoice_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Menuchoice_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Menuchoice_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Shortcut where
    fromElem (CElem (Elem "shortcut" as c0):rest) =
	(\(a,ca)->
	   (Just (Shortcut (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Shortcut as a) =
	[CElem (Elem "shortcut" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Shortcut_Attrs where
    fromAttrs as =
	Shortcut_Attrs
	  { shortcutAction = possibleA fromAttrToTyp "action" as
	  , shortcutOtheraction = possibleA fromAttrToStr "otheraction" as
	  , shortcutMoreinfo = defaultA fromAttrToTyp Shortcut_Moreinfo_None "moreinfo" as
	  , shortcutId = possibleA fromAttrToStr "id" as
	  , shortcutLang = possibleA fromAttrToStr "lang" as
	  , shortcutRemap = possibleA fromAttrToStr "remap" as
	  , shortcutXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , shortcutRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , shortcutArch = possibleA fromAttrToStr "arch" as
	  , shortcutCondition = possibleA fromAttrToStr "condition" as
	  , shortcutConformance = possibleA fromAttrToStr "conformance" as
	  , shortcutOs = possibleA fromAttrToStr "os" as
	  , shortcutRevision = possibleA fromAttrToStr "revision" as
	  , shortcutSecurity = possibleA fromAttrToStr "security" as
	  , shortcutUserlevel = possibleA fromAttrToStr "userlevel" as
	  , shortcutVendor = possibleA fromAttrToStr "vendor" as
	  , shortcutRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "action" (shortcutAction v)
	, maybeToAttr toAttrFrStr "otheraction" (shortcutOtheraction v)
	, defaultToAttr toAttrFrTyp "moreinfo" (shortcutMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (shortcutId v)
	, maybeToAttr toAttrFrStr "lang" (shortcutLang v)
	, maybeToAttr toAttrFrStr "remap" (shortcutRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (shortcutXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (shortcutRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (shortcutArch v)
	, maybeToAttr toAttrFrStr "condition" (shortcutCondition v)
	, maybeToAttr toAttrFrStr "conformance" (shortcutConformance v)
	, maybeToAttr toAttrFrStr "os" (shortcutOs v)
	, maybeToAttr toAttrFrStr "revision" (shortcutRevision v)
	, maybeToAttr toAttrFrStr "security" (shortcutSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (shortcutUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (shortcutVendor v)
	, maybeToAttr toAttrFrStr "role" (shortcutRole v)
	]
instance XmlAttrType Shortcut_Action where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "click" = Just Shortcut_Action_Click
	    translate "double-click" = Just Shortcut_Action_Double_click
	    translate "press" = Just Shortcut_Action_Press
	    translate "seq" = Just Shortcut_Action_Seq
	    translate "simul" = Just Shortcut_Action_Simul
	    translate "other" = Just Shortcut_Action_Other
	    translate _ = Nothing
    toAttrFrTyp n Shortcut_Action_Click = Just (n, str2attr "click")
    toAttrFrTyp n Shortcut_Action_Double_click = Just (n, str2attr "double-click")
    toAttrFrTyp n Shortcut_Action_Press = Just (n, str2attr "press")
    toAttrFrTyp n Shortcut_Action_Seq = Just (n, str2attr "seq")
    toAttrFrTyp n Shortcut_Action_Simul = Just (n, str2attr "simul")
    toAttrFrTyp n Shortcut_Action_Other = Just (n, str2attr "other")
instance XmlAttrType Shortcut_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Shortcut_Moreinfo_Refentry
	    translate "none" = Just Shortcut_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Shortcut_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Shortcut_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Shortcut_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Shortcut_Revisionflag_Changed
	    translate "added" = Just Shortcut_Revisionflag_Added
	    translate "deleted" = Just Shortcut_Revisionflag_Deleted
	    translate "off" = Just Shortcut_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Shortcut_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Shortcut_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Shortcut_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Shortcut_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Mousebutton where
    fromElem (CElem (Elem "mousebutton" as c0):rest) =
	(\(a,ca)->
	   (Just (Mousebutton (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Mousebutton as a) =
	[CElem (Elem "mousebutton" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Mousebutton_Attrs where
    fromAttrs as =
	Mousebutton_Attrs
	  { mousebuttonMoreinfo = defaultA fromAttrToTyp Mousebutton_Moreinfo_None "moreinfo" as
	  , mousebuttonId = possibleA fromAttrToStr "id" as
	  , mousebuttonLang = possibleA fromAttrToStr "lang" as
	  , mousebuttonRemap = possibleA fromAttrToStr "remap" as
	  , mousebuttonXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , mousebuttonRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , mousebuttonArch = possibleA fromAttrToStr "arch" as
	  , mousebuttonCondition = possibleA fromAttrToStr "condition" as
	  , mousebuttonConformance = possibleA fromAttrToStr "conformance" as
	  , mousebuttonOs = possibleA fromAttrToStr "os" as
	  , mousebuttonRevision = possibleA fromAttrToStr "revision" as
	  , mousebuttonSecurity = possibleA fromAttrToStr "security" as
	  , mousebuttonUserlevel = possibleA fromAttrToStr "userlevel" as
	  , mousebuttonVendor = possibleA fromAttrToStr "vendor" as
	  , mousebuttonRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (mousebuttonMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (mousebuttonId v)
	, maybeToAttr toAttrFrStr "lang" (mousebuttonLang v)
	, maybeToAttr toAttrFrStr "remap" (mousebuttonRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (mousebuttonXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (mousebuttonRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (mousebuttonArch v)
	, maybeToAttr toAttrFrStr "condition" (mousebuttonCondition v)
	, maybeToAttr toAttrFrStr "conformance" (mousebuttonConformance v)
	, maybeToAttr toAttrFrStr "os" (mousebuttonOs v)
	, maybeToAttr toAttrFrStr "revision" (mousebuttonRevision v)
	, maybeToAttr toAttrFrStr "security" (mousebuttonSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (mousebuttonUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (mousebuttonVendor v)
	, maybeToAttr toAttrFrStr "role" (mousebuttonRole v)
	]
instance XmlContent Mousebutton_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Mousebutton_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Mousebutton_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Mousebutton_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Mousebutton_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Mousebutton_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Mousebutton_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Mousebutton_Str a) = toText a
    toElem (Mousebutton_Replaceable a) = toElem a
    toElem (Mousebutton_Inlinegraphic a) = toElem a
    toElem (Mousebutton_Inlinemediaobject a) = toElem a
    toElem (Mousebutton_Indexterm a) = toElem a
    toElem (Mousebutton_Beginpage a) = toElem a
instance XmlAttrType Mousebutton_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Mousebutton_Moreinfo_Refentry
	    translate "none" = Just Mousebutton_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Mousebutton_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Mousebutton_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Mousebutton_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Mousebutton_Revisionflag_Changed
	    translate "added" = Just Mousebutton_Revisionflag_Added
	    translate "deleted" = Just Mousebutton_Revisionflag_Deleted
	    translate "off" = Just Mousebutton_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Mousebutton_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Mousebutton_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Mousebutton_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Mousebutton_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Msgtext where
    fromElem (CElem (Elem "msgtext" as c0):rest) =
	(\(a,ca)->
	   (Just (Msgtext (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Msgtext as a) =
	[CElem (Elem "msgtext" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Msgtext_Attrs where
    fromAttrs as =
	Msgtext_Attrs
	  { msgtextId = possibleA fromAttrToStr "id" as
	  , msgtextLang = possibleA fromAttrToStr "lang" as
	  , msgtextRemap = possibleA fromAttrToStr "remap" as
	  , msgtextXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , msgtextRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , msgtextArch = possibleA fromAttrToStr "arch" as
	  , msgtextCondition = possibleA fromAttrToStr "condition" as
	  , msgtextConformance = possibleA fromAttrToStr "conformance" as
	  , msgtextOs = possibleA fromAttrToStr "os" as
	  , msgtextRevision = possibleA fromAttrToStr "revision" as
	  , msgtextSecurity = possibleA fromAttrToStr "security" as
	  , msgtextUserlevel = possibleA fromAttrToStr "userlevel" as
	  , msgtextVendor = possibleA fromAttrToStr "vendor" as
	  , msgtextRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (msgtextId v)
	, maybeToAttr toAttrFrStr "lang" (msgtextLang v)
	, maybeToAttr toAttrFrStr "remap" (msgtextRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (msgtextXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (msgtextRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (msgtextArch v)
	, maybeToAttr toAttrFrStr "condition" (msgtextCondition v)
	, maybeToAttr toAttrFrStr "conformance" (msgtextConformance v)
	, maybeToAttr toAttrFrStr "os" (msgtextOs v)
	, maybeToAttr toAttrFrStr "revision" (msgtextRevision v)
	, maybeToAttr toAttrFrStr "security" (msgtextSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (msgtextUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (msgtextVendor v)
	, maybeToAttr toAttrFrStr "role" (msgtextRole v)
	]
instance XmlAttrType Msgtext_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Msgtext_Revisionflag_Changed
	    translate "added" = Just Msgtext_Revisionflag_Added
	    translate "deleted" = Just Msgtext_Revisionflag_Deleted
	    translate "off" = Just Msgtext_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Msgtext_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Msgtext_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Msgtext_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Msgtext_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Option where
    fromElem (CElem (Elem "option" as c0):rest) =
	(\(a,ca)->
	   (Just (Option (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Option as a) =
	[CElem (Elem "option" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Option_Attrs where
    fromAttrs as =
	Option_Attrs
	  { optionId = possibleA fromAttrToStr "id" as
	  , optionLang = possibleA fromAttrToStr "lang" as
	  , optionRemap = possibleA fromAttrToStr "remap" as
	  , optionXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , optionRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , optionArch = possibleA fromAttrToStr "arch" as
	  , optionCondition = possibleA fromAttrToStr "condition" as
	  , optionConformance = possibleA fromAttrToStr "conformance" as
	  , optionOs = possibleA fromAttrToStr "os" as
	  , optionRevision = possibleA fromAttrToStr "revision" as
	  , optionSecurity = possibleA fromAttrToStr "security" as
	  , optionUserlevel = possibleA fromAttrToStr "userlevel" as
	  , optionVendor = possibleA fromAttrToStr "vendor" as
	  , optionRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (optionId v)
	, maybeToAttr toAttrFrStr "lang" (optionLang v)
	, maybeToAttr toAttrFrStr "remap" (optionRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (optionXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (optionRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (optionArch v)
	, maybeToAttr toAttrFrStr "condition" (optionCondition v)
	, maybeToAttr toAttrFrStr "conformance" (optionConformance v)
	, maybeToAttr toAttrFrStr "os" (optionOs v)
	, maybeToAttr toAttrFrStr "revision" (optionRevision v)
	, maybeToAttr toAttrFrStr "security" (optionSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (optionUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (optionVendor v)
	, maybeToAttr toAttrFrStr "role" (optionRole v)
	]
instance XmlContent Option_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Option_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Option_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Option_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Option_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Option_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Option_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Option_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Option_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Option_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Option_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Option_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Option_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Option_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Option_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Option_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Option_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Option_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Option_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Option_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Option_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Option_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Option_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Option_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Option_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Option_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Option_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Option_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Option_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Option_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Option_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Option_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Option_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Option_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Option_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Option_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Option_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Option_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Option_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Option_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Option_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Option_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Option_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Option_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Option_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Option_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Option_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Option_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Option_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Option_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Option_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Option_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Option_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Option_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Option_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Option_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Option_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Option_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Option_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Option_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Option_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Option_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Option_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Option_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Option_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Option_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Option_Beginpage a), rest)
																																																																		(_,_) ->
																																																																		    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Option_Str a) = toText a
    toElem (Option_Link a) = toElem a
    toElem (Option_Olink a) = toElem a
    toElem (Option_Ulink a) = toElem a
    toElem (Option_Action a) = toElem a
    toElem (Option_Application a) = toElem a
    toElem (Option_Classname a) = toElem a
    toElem (Option_Methodname a) = toElem a
    toElem (Option_Interfacename a) = toElem a
    toElem (Option_Exceptionname a) = toElem a
    toElem (Option_Ooclass a) = toElem a
    toElem (Option_Oointerface a) = toElem a
    toElem (Option_Ooexception a) = toElem a
    toElem (Option_Command a) = toElem a
    toElem (Option_Computeroutput a) = toElem a
    toElem (Option_Database a) = toElem a
    toElem (Option_Email a) = toElem a
    toElem (Option_Envar a) = toElem a
    toElem (Option_Errorcode a) = toElem a
    toElem (Option_Errorname a) = toElem a
    toElem (Option_Errortype a) = toElem a
    toElem (Option_Errortext a) = toElem a
    toElem (Option_Filename a) = toElem a
    toElem (Option_Function a) = toElem a
    toElem (Option_Guibutton a) = toElem a
    toElem (Option_Guiicon a) = toElem a
    toElem (Option_Guilabel a) = toElem a
    toElem (Option_Guimenu a) = toElem a
    toElem (Option_Guimenuitem a) = toElem a
    toElem (Option_Guisubmenu a) = toElem a
    toElem (Option_Hardware a) = toElem a
    toElem (Option_Interface a) = toElem a
    toElem (Option_Keycap a) = toElem a
    toElem (Option_Keycode a) = toElem a
    toElem (Option_Keycombo a) = toElem a
    toElem (Option_Keysym a) = toElem a
    toElem (Option_Literal a) = toElem a
    toElem (Option_Constant a) = toElem a
    toElem (Option_Markup a) = toElem a
    toElem (Option_Medialabel a) = toElem a
    toElem (Option_Menuchoice a) = toElem a
    toElem (Option_Mousebutton a) = toElem a
    toElem (Option_Option a) = toElem a
    toElem (Option_Optional a) = toElem a
    toElem (Option_Parameter a) = toElem a
    toElem (Option_Prompt a) = toElem a
    toElem (Option_Property a) = toElem a
    toElem (Option_Replaceable a) = toElem a
    toElem (Option_Returnvalue a) = toElem a
    toElem (Option_Sgmltag a) = toElem a
    toElem (Option_Structfield a) = toElem a
    toElem (Option_Structname a) = toElem a
    toElem (Option_Symbol a) = toElem a
    toElem (Option_Systemitem a) = toElem a
    toElem (Option_Token a) = toElem a
    toElem (Option_Type a) = toElem a
    toElem (Option_Userinput a) = toElem a
    toElem (Option_Varname a) = toElem a
    toElem (Option_Anchor a) = toElem a
    toElem (Option_Remark a) = toElem a
    toElem (Option_Subscript a) = toElem a
    toElem (Option_Superscript a) = toElem a
    toElem (Option_Inlinegraphic a) = toElem a
    toElem (Option_Inlinemediaobject a) = toElem a
    toElem (Option_Indexterm a) = toElem a
    toElem (Option_Beginpage a) = toElem a
instance XmlAttrType Option_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Option_Revisionflag_Changed
	    translate "added" = Just Option_Revisionflag_Added
	    translate "deleted" = Just Option_Revisionflag_Deleted
	    translate "off" = Just Option_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Option_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Option_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Option_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Option_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Optional where
    fromElem (CElem (Elem "optional" as c0):rest) =
	(\(a,ca)->
	   (Just (Optional (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Optional as a) =
	[CElem (Elem "optional" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Optional_Attrs where
    fromAttrs as =
	Optional_Attrs
	  { optionalId = possibleA fromAttrToStr "id" as
	  , optionalLang = possibleA fromAttrToStr "lang" as
	  , optionalRemap = possibleA fromAttrToStr "remap" as
	  , optionalXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , optionalRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , optionalArch = possibleA fromAttrToStr "arch" as
	  , optionalCondition = possibleA fromAttrToStr "condition" as
	  , optionalConformance = possibleA fromAttrToStr "conformance" as
	  , optionalOs = possibleA fromAttrToStr "os" as
	  , optionalRevision = possibleA fromAttrToStr "revision" as
	  , optionalSecurity = possibleA fromAttrToStr "security" as
	  , optionalUserlevel = possibleA fromAttrToStr "userlevel" as
	  , optionalVendor = possibleA fromAttrToStr "vendor" as
	  , optionalRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (optionalId v)
	, maybeToAttr toAttrFrStr "lang" (optionalLang v)
	, maybeToAttr toAttrFrStr "remap" (optionalRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (optionalXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (optionalRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (optionalArch v)
	, maybeToAttr toAttrFrStr "condition" (optionalCondition v)
	, maybeToAttr toAttrFrStr "conformance" (optionalConformance v)
	, maybeToAttr toAttrFrStr "os" (optionalOs v)
	, maybeToAttr toAttrFrStr "revision" (optionalRevision v)
	, maybeToAttr toAttrFrStr "security" (optionalSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (optionalUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (optionalVendor v)
	, maybeToAttr toAttrFrStr "role" (optionalRole v)
	]
instance XmlContent Optional_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Optional_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Optional_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Optional_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Optional_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Optional_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Optional_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Optional_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Optional_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Optional_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Optional_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Optional_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Optional_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Optional_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Optional_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Optional_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Optional_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Optional_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Optional_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Optional_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Optional_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Optional_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Optional_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Optional_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Optional_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Optional_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Optional_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Optional_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Optional_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Optional_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Optional_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Optional_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Optional_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Optional_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Optional_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Optional_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Optional_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Optional_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Optional_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Optional_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Optional_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Optional_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Optional_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Optional_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Optional_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Optional_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Optional_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Optional_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Optional_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Optional_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Optional_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Optional_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Optional_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Optional_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Optional_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Optional_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Optional_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Optional_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Optional_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Optional_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Optional_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Optional_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Optional_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Optional_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Optional_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Optional_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Optional_Beginpage a), rest)
																																																																		(_,_) ->
																																																																		    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Optional_Str a) = toText a
    toElem (Optional_Link a) = toElem a
    toElem (Optional_Olink a) = toElem a
    toElem (Optional_Ulink a) = toElem a
    toElem (Optional_Action a) = toElem a
    toElem (Optional_Application a) = toElem a
    toElem (Optional_Classname a) = toElem a
    toElem (Optional_Methodname a) = toElem a
    toElem (Optional_Interfacename a) = toElem a
    toElem (Optional_Exceptionname a) = toElem a
    toElem (Optional_Ooclass a) = toElem a
    toElem (Optional_Oointerface a) = toElem a
    toElem (Optional_Ooexception a) = toElem a
    toElem (Optional_Command a) = toElem a
    toElem (Optional_Computeroutput a) = toElem a
    toElem (Optional_Database a) = toElem a
    toElem (Optional_Email a) = toElem a
    toElem (Optional_Envar a) = toElem a
    toElem (Optional_Errorcode a) = toElem a
    toElem (Optional_Errorname a) = toElem a
    toElem (Optional_Errortype a) = toElem a
    toElem (Optional_Errortext a) = toElem a
    toElem (Optional_Filename a) = toElem a
    toElem (Optional_Function a) = toElem a
    toElem (Optional_Guibutton a) = toElem a
    toElem (Optional_Guiicon a) = toElem a
    toElem (Optional_Guilabel a) = toElem a
    toElem (Optional_Guimenu a) = toElem a
    toElem (Optional_Guimenuitem a) = toElem a
    toElem (Optional_Guisubmenu a) = toElem a
    toElem (Optional_Hardware a) = toElem a
    toElem (Optional_Interface a) = toElem a
    toElem (Optional_Keycap a) = toElem a
    toElem (Optional_Keycode a) = toElem a
    toElem (Optional_Keycombo a) = toElem a
    toElem (Optional_Keysym a) = toElem a
    toElem (Optional_Literal a) = toElem a
    toElem (Optional_Constant a) = toElem a
    toElem (Optional_Markup a) = toElem a
    toElem (Optional_Medialabel a) = toElem a
    toElem (Optional_Menuchoice a) = toElem a
    toElem (Optional_Mousebutton a) = toElem a
    toElem (Optional_Option a) = toElem a
    toElem (Optional_Optional a) = toElem a
    toElem (Optional_Parameter a) = toElem a
    toElem (Optional_Prompt a) = toElem a
    toElem (Optional_Property a) = toElem a
    toElem (Optional_Replaceable a) = toElem a
    toElem (Optional_Returnvalue a) = toElem a
    toElem (Optional_Sgmltag a) = toElem a
    toElem (Optional_Structfield a) = toElem a
    toElem (Optional_Structname a) = toElem a
    toElem (Optional_Symbol a) = toElem a
    toElem (Optional_Systemitem a) = toElem a
    toElem (Optional_Token a) = toElem a
    toElem (Optional_Type a) = toElem a
    toElem (Optional_Userinput a) = toElem a
    toElem (Optional_Varname a) = toElem a
    toElem (Optional_Anchor a) = toElem a
    toElem (Optional_Remark a) = toElem a
    toElem (Optional_Subscript a) = toElem a
    toElem (Optional_Superscript a) = toElem a
    toElem (Optional_Inlinegraphic a) = toElem a
    toElem (Optional_Inlinemediaobject a) = toElem a
    toElem (Optional_Indexterm a) = toElem a
    toElem (Optional_Beginpage a) = toElem a
instance XmlAttrType Optional_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Optional_Revisionflag_Changed
	    translate "added" = Just Optional_Revisionflag_Added
	    translate "deleted" = Just Optional_Revisionflag_Deleted
	    translate "off" = Just Optional_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Optional_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Optional_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Optional_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Optional_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Parameter where
    fromElem (CElem (Elem "parameter" as c0):rest) =
	(\(a,ca)->
	   (Just (Parameter (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Parameter as a) =
	[CElem (Elem "parameter" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Parameter_Attrs where
    fromAttrs as =
	Parameter_Attrs
	  { parameterClass = possibleA fromAttrToTyp "class" as
	  , parameterMoreinfo = defaultA fromAttrToTyp Parameter_Moreinfo_None "moreinfo" as
	  , parameterId = possibleA fromAttrToStr "id" as
	  , parameterLang = possibleA fromAttrToStr "lang" as
	  , parameterRemap = possibleA fromAttrToStr "remap" as
	  , parameterXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , parameterRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , parameterArch = possibleA fromAttrToStr "arch" as
	  , parameterCondition = possibleA fromAttrToStr "condition" as
	  , parameterConformance = possibleA fromAttrToStr "conformance" as
	  , parameterOs = possibleA fromAttrToStr "os" as
	  , parameterRevision = possibleA fromAttrToStr "revision" as
	  , parameterSecurity = possibleA fromAttrToStr "security" as
	  , parameterUserlevel = possibleA fromAttrToStr "userlevel" as
	  , parameterVendor = possibleA fromAttrToStr "vendor" as
	  , parameterRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "class" (parameterClass v)
	, defaultToAttr toAttrFrTyp "moreinfo" (parameterMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (parameterId v)
	, maybeToAttr toAttrFrStr "lang" (parameterLang v)
	, maybeToAttr toAttrFrStr "remap" (parameterRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (parameterXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (parameterRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (parameterArch v)
	, maybeToAttr toAttrFrStr "condition" (parameterCondition v)
	, maybeToAttr toAttrFrStr "conformance" (parameterConformance v)
	, maybeToAttr toAttrFrStr "os" (parameterOs v)
	, maybeToAttr toAttrFrStr "revision" (parameterRevision v)
	, maybeToAttr toAttrFrStr "security" (parameterSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (parameterUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (parameterVendor v)
	, maybeToAttr toAttrFrStr "role" (parameterRole v)
	]
instance XmlContent Parameter_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Parameter_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Parameter_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Parameter_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Parameter_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Parameter_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Parameter_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Parameter_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Parameter_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Parameter_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Parameter_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Parameter_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Parameter_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Parameter_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Parameter_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Parameter_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Parameter_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Parameter_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Parameter_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Parameter_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Parameter_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Parameter_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Parameter_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Parameter_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Parameter_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Parameter_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Parameter_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Parameter_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Parameter_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Parameter_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Parameter_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Parameter_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Parameter_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Parameter_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Parameter_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Parameter_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Parameter_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Parameter_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Parameter_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Parameter_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Parameter_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Parameter_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Parameter_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Parameter_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Parameter_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Parameter_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Parameter_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Parameter_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Parameter_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Parameter_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Parameter_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Parameter_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Parameter_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Parameter_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Parameter_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Parameter_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Parameter_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Parameter_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Parameter_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Parameter_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Parameter_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Parameter_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Parameter_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Parameter_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Parameter_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Parameter_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Parameter_Beginpage a), rest)
																																																																		(_,_) ->
																																																																		    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Parameter_Str a) = toText a
    toElem (Parameter_Link a) = toElem a
    toElem (Parameter_Olink a) = toElem a
    toElem (Parameter_Ulink a) = toElem a
    toElem (Parameter_Action a) = toElem a
    toElem (Parameter_Application a) = toElem a
    toElem (Parameter_Classname a) = toElem a
    toElem (Parameter_Methodname a) = toElem a
    toElem (Parameter_Interfacename a) = toElem a
    toElem (Parameter_Exceptionname a) = toElem a
    toElem (Parameter_Ooclass a) = toElem a
    toElem (Parameter_Oointerface a) = toElem a
    toElem (Parameter_Ooexception a) = toElem a
    toElem (Parameter_Command a) = toElem a
    toElem (Parameter_Computeroutput a) = toElem a
    toElem (Parameter_Database a) = toElem a
    toElem (Parameter_Email a) = toElem a
    toElem (Parameter_Envar a) = toElem a
    toElem (Parameter_Errorcode a) = toElem a
    toElem (Parameter_Errorname a) = toElem a
    toElem (Parameter_Errortype a) = toElem a
    toElem (Parameter_Errortext a) = toElem a
    toElem (Parameter_Filename a) = toElem a
    toElem (Parameter_Function a) = toElem a
    toElem (Parameter_Guibutton a) = toElem a
    toElem (Parameter_Guiicon a) = toElem a
    toElem (Parameter_Guilabel a) = toElem a
    toElem (Parameter_Guimenu a) = toElem a
    toElem (Parameter_Guimenuitem a) = toElem a
    toElem (Parameter_Guisubmenu a) = toElem a
    toElem (Parameter_Hardware a) = toElem a
    toElem (Parameter_Interface a) = toElem a
    toElem (Parameter_Keycap a) = toElem a
    toElem (Parameter_Keycode a) = toElem a
    toElem (Parameter_Keycombo a) = toElem a
    toElem (Parameter_Keysym a) = toElem a
    toElem (Parameter_Literal a) = toElem a
    toElem (Parameter_Constant a) = toElem a
    toElem (Parameter_Markup a) = toElem a
    toElem (Parameter_Medialabel a) = toElem a
    toElem (Parameter_Menuchoice a) = toElem a
    toElem (Parameter_Mousebutton a) = toElem a
    toElem (Parameter_Option a) = toElem a
    toElem (Parameter_Optional a) = toElem a
    toElem (Parameter_Parameter a) = toElem a
    toElem (Parameter_Prompt a) = toElem a
    toElem (Parameter_Property a) = toElem a
    toElem (Parameter_Replaceable a) = toElem a
    toElem (Parameter_Returnvalue a) = toElem a
    toElem (Parameter_Sgmltag a) = toElem a
    toElem (Parameter_Structfield a) = toElem a
    toElem (Parameter_Structname a) = toElem a
    toElem (Parameter_Symbol a) = toElem a
    toElem (Parameter_Systemitem a) = toElem a
    toElem (Parameter_Token a) = toElem a
    toElem (Parameter_Type a) = toElem a
    toElem (Parameter_Userinput a) = toElem a
    toElem (Parameter_Varname a) = toElem a
    toElem (Parameter_Anchor a) = toElem a
    toElem (Parameter_Remark a) = toElem a
    toElem (Parameter_Subscript a) = toElem a
    toElem (Parameter_Superscript a) = toElem a
    toElem (Parameter_Inlinegraphic a) = toElem a
    toElem (Parameter_Inlinemediaobject a) = toElem a
    toElem (Parameter_Indexterm a) = toElem a
    toElem (Parameter_Beginpage a) = toElem a
instance XmlAttrType Parameter_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "command" = Just Parameter_Class_Command
	    translate "function" = Just Parameter_Class_Function
	    translate "option" = Just Parameter_Class_Option
	    translate _ = Nothing
    toAttrFrTyp n Parameter_Class_Command = Just (n, str2attr "command")
    toAttrFrTyp n Parameter_Class_Function = Just (n, str2attr "function")
    toAttrFrTyp n Parameter_Class_Option = Just (n, str2attr "option")
instance XmlAttrType Parameter_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Parameter_Moreinfo_Refentry
	    translate "none" = Just Parameter_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Parameter_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Parameter_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Parameter_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Parameter_Revisionflag_Changed
	    translate "added" = Just Parameter_Revisionflag_Added
	    translate "deleted" = Just Parameter_Revisionflag_Deleted
	    translate "off" = Just Parameter_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Parameter_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Parameter_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Parameter_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Parameter_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Prompt where
    fromElem (CElem (Elem "prompt" as c0):rest) =
	(\(a,ca)->
	   (Just (Prompt (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Prompt as a) =
	[CElem (Elem "prompt" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Prompt_Attrs where
    fromAttrs as =
	Prompt_Attrs
	  { promptMoreinfo = defaultA fromAttrToTyp Prompt_Moreinfo_None "moreinfo" as
	  , promptId = possibleA fromAttrToStr "id" as
	  , promptLang = possibleA fromAttrToStr "lang" as
	  , promptRemap = possibleA fromAttrToStr "remap" as
	  , promptXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , promptRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , promptArch = possibleA fromAttrToStr "arch" as
	  , promptCondition = possibleA fromAttrToStr "condition" as
	  , promptConformance = possibleA fromAttrToStr "conformance" as
	  , promptOs = possibleA fromAttrToStr "os" as
	  , promptRevision = possibleA fromAttrToStr "revision" as
	  , promptSecurity = possibleA fromAttrToStr "security" as
	  , promptUserlevel = possibleA fromAttrToStr "userlevel" as
	  , promptVendor = possibleA fromAttrToStr "vendor" as
	  , promptRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (promptMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (promptId v)
	, maybeToAttr toAttrFrStr "lang" (promptLang v)
	, maybeToAttr toAttrFrStr "remap" (promptRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (promptXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (promptRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (promptArch v)
	, maybeToAttr toAttrFrStr "condition" (promptCondition v)
	, maybeToAttr toAttrFrStr "conformance" (promptConformance v)
	, maybeToAttr toAttrFrStr "os" (promptOs v)
	, maybeToAttr toAttrFrStr "revision" (promptRevision v)
	, maybeToAttr toAttrFrStr "security" (promptSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (promptUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (promptVendor v)
	, maybeToAttr toAttrFrStr "role" (promptRole v)
	]
instance XmlContent Prompt_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Prompt_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Prompt_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Prompt_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Prompt_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Prompt_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Prompt_Beginpage a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Prompt_Co a), rest)
							(_,_) ->
							    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Prompt_Str a) = toText a
    toElem (Prompt_Replaceable a) = toElem a
    toElem (Prompt_Inlinegraphic a) = toElem a
    toElem (Prompt_Inlinemediaobject a) = toElem a
    toElem (Prompt_Indexterm a) = toElem a
    toElem (Prompt_Beginpage a) = toElem a
    toElem (Prompt_Co a) = toElem a
instance XmlAttrType Prompt_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Prompt_Moreinfo_Refentry
	    translate "none" = Just Prompt_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Prompt_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Prompt_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Prompt_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Prompt_Revisionflag_Changed
	    translate "added" = Just Prompt_Revisionflag_Added
	    translate "deleted" = Just Prompt_Revisionflag_Deleted
	    translate "off" = Just Prompt_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Prompt_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Prompt_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Prompt_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Prompt_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Property where
    fromElem (CElem (Elem "property" as c0):rest) =
	(\(a,ca)->
	   (Just (Property (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Property as a) =
	[CElem (Elem "property" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Property_Attrs where
    fromAttrs as =
	Property_Attrs
	  { propertyMoreinfo = defaultA fromAttrToTyp Property_Moreinfo_None "moreinfo" as
	  , propertyId = possibleA fromAttrToStr "id" as
	  , propertyLang = possibleA fromAttrToStr "lang" as
	  , propertyRemap = possibleA fromAttrToStr "remap" as
	  , propertyXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , propertyRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , propertyArch = possibleA fromAttrToStr "arch" as
	  , propertyCondition = possibleA fromAttrToStr "condition" as
	  , propertyConformance = possibleA fromAttrToStr "conformance" as
	  , propertyOs = possibleA fromAttrToStr "os" as
	  , propertyRevision = possibleA fromAttrToStr "revision" as
	  , propertySecurity = possibleA fromAttrToStr "security" as
	  , propertyUserlevel = possibleA fromAttrToStr "userlevel" as
	  , propertyVendor = possibleA fromAttrToStr "vendor" as
	  , propertyRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (propertyMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (propertyId v)
	, maybeToAttr toAttrFrStr "lang" (propertyLang v)
	, maybeToAttr toAttrFrStr "remap" (propertyRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (propertyXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (propertyRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (propertyArch v)
	, maybeToAttr toAttrFrStr "condition" (propertyCondition v)
	, maybeToAttr toAttrFrStr "conformance" (propertyConformance v)
	, maybeToAttr toAttrFrStr "os" (propertyOs v)
	, maybeToAttr toAttrFrStr "revision" (propertyRevision v)
	, maybeToAttr toAttrFrStr "security" (propertySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (propertyUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (propertyVendor v)
	, maybeToAttr toAttrFrStr "role" (propertyRole v)
	]
instance XmlContent Property_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Property_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Property_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Property_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Property_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Property_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Property_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Property_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Property_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Property_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Property_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Property_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Property_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Property_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Property_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Property_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Property_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Property_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Property_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Property_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Property_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Property_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Property_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Property_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Property_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Property_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Property_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Property_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Property_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Property_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Property_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Property_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Property_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Property_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Property_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Property_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Property_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Property_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Property_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Property_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Property_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Property_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Property_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Property_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Property_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Property_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Property_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Property_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Property_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Property_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Property_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Property_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Property_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Property_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Property_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Property_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Property_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Property_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Property_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Property_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Property_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Property_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Property_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Property_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Property_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Property_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Property_Beginpage a), rest)
																																																																		(_,_) ->
																																																																		    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Property_Str a) = toText a
    toElem (Property_Link a) = toElem a
    toElem (Property_Olink a) = toElem a
    toElem (Property_Ulink a) = toElem a
    toElem (Property_Action a) = toElem a
    toElem (Property_Application a) = toElem a
    toElem (Property_Classname a) = toElem a
    toElem (Property_Methodname a) = toElem a
    toElem (Property_Interfacename a) = toElem a
    toElem (Property_Exceptionname a) = toElem a
    toElem (Property_Ooclass a) = toElem a
    toElem (Property_Oointerface a) = toElem a
    toElem (Property_Ooexception a) = toElem a
    toElem (Property_Command a) = toElem a
    toElem (Property_Computeroutput a) = toElem a
    toElem (Property_Database a) = toElem a
    toElem (Property_Email a) = toElem a
    toElem (Property_Envar a) = toElem a
    toElem (Property_Errorcode a) = toElem a
    toElem (Property_Errorname a) = toElem a
    toElem (Property_Errortype a) = toElem a
    toElem (Property_Errortext a) = toElem a
    toElem (Property_Filename a) = toElem a
    toElem (Property_Function a) = toElem a
    toElem (Property_Guibutton a) = toElem a
    toElem (Property_Guiicon a) = toElem a
    toElem (Property_Guilabel a) = toElem a
    toElem (Property_Guimenu a) = toElem a
    toElem (Property_Guimenuitem a) = toElem a
    toElem (Property_Guisubmenu a) = toElem a
    toElem (Property_Hardware a) = toElem a
    toElem (Property_Interface a) = toElem a
    toElem (Property_Keycap a) = toElem a
    toElem (Property_Keycode a) = toElem a
    toElem (Property_Keycombo a) = toElem a
    toElem (Property_Keysym a) = toElem a
    toElem (Property_Literal a) = toElem a
    toElem (Property_Constant a) = toElem a
    toElem (Property_Markup a) = toElem a
    toElem (Property_Medialabel a) = toElem a
    toElem (Property_Menuchoice a) = toElem a
    toElem (Property_Mousebutton a) = toElem a
    toElem (Property_Option a) = toElem a
    toElem (Property_Optional a) = toElem a
    toElem (Property_Parameter a) = toElem a
    toElem (Property_Prompt a) = toElem a
    toElem (Property_Property a) = toElem a
    toElem (Property_Replaceable a) = toElem a
    toElem (Property_Returnvalue a) = toElem a
    toElem (Property_Sgmltag a) = toElem a
    toElem (Property_Structfield a) = toElem a
    toElem (Property_Structname a) = toElem a
    toElem (Property_Symbol a) = toElem a
    toElem (Property_Systemitem a) = toElem a
    toElem (Property_Token a) = toElem a
    toElem (Property_Type a) = toElem a
    toElem (Property_Userinput a) = toElem a
    toElem (Property_Varname a) = toElem a
    toElem (Property_Anchor a) = toElem a
    toElem (Property_Remark a) = toElem a
    toElem (Property_Subscript a) = toElem a
    toElem (Property_Superscript a) = toElem a
    toElem (Property_Inlinegraphic a) = toElem a
    toElem (Property_Inlinemediaobject a) = toElem a
    toElem (Property_Indexterm a) = toElem a
    toElem (Property_Beginpage a) = toElem a
instance XmlAttrType Property_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Property_Moreinfo_Refentry
	    translate "none" = Just Property_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Property_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Property_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Property_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Property_Revisionflag_Changed
	    translate "added" = Just Property_Revisionflag_Added
	    translate "deleted" = Just Property_Revisionflag_Deleted
	    translate "off" = Just Property_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Property_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Property_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Property_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Property_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Replaceable where
    fromElem (CElem (Elem "replaceable" as c0):rest) =
	(\(a,ca)->
	   (Just (Replaceable (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Replaceable as a) =
	[CElem (Elem "replaceable" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Replaceable_Attrs where
    fromAttrs as =
	Replaceable_Attrs
	  { replaceableClass = possibleA fromAttrToTyp "class" as
	  , replaceableId = possibleA fromAttrToStr "id" as
	  , replaceableLang = possibleA fromAttrToStr "lang" as
	  , replaceableRemap = possibleA fromAttrToStr "remap" as
	  , replaceableXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , replaceableRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , replaceableArch = possibleA fromAttrToStr "arch" as
	  , replaceableCondition = possibleA fromAttrToStr "condition" as
	  , replaceableConformance = possibleA fromAttrToStr "conformance" as
	  , replaceableOs = possibleA fromAttrToStr "os" as
	  , replaceableRevision = possibleA fromAttrToStr "revision" as
	  , replaceableSecurity = possibleA fromAttrToStr "security" as
	  , replaceableUserlevel = possibleA fromAttrToStr "userlevel" as
	  , replaceableVendor = possibleA fromAttrToStr "vendor" as
	  , replaceableRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "class" (replaceableClass v)
	, maybeToAttr toAttrFrStr "id" (replaceableId v)
	, maybeToAttr toAttrFrStr "lang" (replaceableLang v)
	, maybeToAttr toAttrFrStr "remap" (replaceableRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (replaceableXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (replaceableRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (replaceableArch v)
	, maybeToAttr toAttrFrStr "condition" (replaceableCondition v)
	, maybeToAttr toAttrFrStr "conformance" (replaceableConformance v)
	, maybeToAttr toAttrFrStr "os" (replaceableOs v)
	, maybeToAttr toAttrFrStr "revision" (replaceableRevision v)
	, maybeToAttr toAttrFrStr "security" (replaceableSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (replaceableUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (replaceableVendor v)
	, maybeToAttr toAttrFrStr "role" (replaceableRole v)
	]
instance XmlContent Replaceable_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Replaceable_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Replaceable_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Replaceable_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Replaceable_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Replaceable_Optional a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Replaceable_Anchor a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Replaceable_Remark a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Replaceable_Subscript a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Replaceable_Superscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Replaceable_Inlinegraphic a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Replaceable_Inlinemediaobject a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Replaceable_Co a), rest)
												(_,_) ->
												    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Replaceable_Str a) = toText a
    toElem (Replaceable_Link a) = toElem a
    toElem (Replaceable_Olink a) = toElem a
    toElem (Replaceable_Ulink a) = toElem a
    toElem (Replaceable_Optional a) = toElem a
    toElem (Replaceable_Anchor a) = toElem a
    toElem (Replaceable_Remark a) = toElem a
    toElem (Replaceable_Subscript a) = toElem a
    toElem (Replaceable_Superscript a) = toElem a
    toElem (Replaceable_Inlinegraphic a) = toElem a
    toElem (Replaceable_Inlinemediaobject a) = toElem a
    toElem (Replaceable_Co a) = toElem a
instance XmlAttrType Replaceable_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "command" = Just Replaceable_Class_Command
	    translate "function" = Just Replaceable_Class_Function
	    translate "option" = Just Replaceable_Class_Option
	    translate "parameter" = Just Replaceable_Class_Parameter
	    translate _ = Nothing
    toAttrFrTyp n Replaceable_Class_Command = Just (n, str2attr "command")
    toAttrFrTyp n Replaceable_Class_Function = Just (n, str2attr "function")
    toAttrFrTyp n Replaceable_Class_Option = Just (n, str2attr "option")
    toAttrFrTyp n Replaceable_Class_Parameter = Just (n, str2attr "parameter")
instance XmlAttrType Replaceable_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Replaceable_Revisionflag_Changed
	    translate "added" = Just Replaceable_Revisionflag_Added
	    translate "deleted" = Just Replaceable_Revisionflag_Deleted
	    translate "off" = Just Replaceable_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Replaceable_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Replaceable_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Replaceable_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Replaceable_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Returnvalue where
    fromElem (CElem (Elem "returnvalue" as c0):rest) =
	(\(a,ca)->
	   (Just (Returnvalue (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Returnvalue as a) =
	[CElem (Elem "returnvalue" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Returnvalue_Attrs where
    fromAttrs as =
	Returnvalue_Attrs
	  { returnvalueId = possibleA fromAttrToStr "id" as
	  , returnvalueLang = possibleA fromAttrToStr "lang" as
	  , returnvalueRemap = possibleA fromAttrToStr "remap" as
	  , returnvalueXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , returnvalueRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , returnvalueArch = possibleA fromAttrToStr "arch" as
	  , returnvalueCondition = possibleA fromAttrToStr "condition" as
	  , returnvalueConformance = possibleA fromAttrToStr "conformance" as
	  , returnvalueOs = possibleA fromAttrToStr "os" as
	  , returnvalueRevision = possibleA fromAttrToStr "revision" as
	  , returnvalueSecurity = possibleA fromAttrToStr "security" as
	  , returnvalueUserlevel = possibleA fromAttrToStr "userlevel" as
	  , returnvalueVendor = possibleA fromAttrToStr "vendor" as
	  , returnvalueRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (returnvalueId v)
	, maybeToAttr toAttrFrStr "lang" (returnvalueLang v)
	, maybeToAttr toAttrFrStr "remap" (returnvalueRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (returnvalueXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (returnvalueRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (returnvalueArch v)
	, maybeToAttr toAttrFrStr "condition" (returnvalueCondition v)
	, maybeToAttr toAttrFrStr "conformance" (returnvalueConformance v)
	, maybeToAttr toAttrFrStr "os" (returnvalueOs v)
	, maybeToAttr toAttrFrStr "revision" (returnvalueRevision v)
	, maybeToAttr toAttrFrStr "security" (returnvalueSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (returnvalueUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (returnvalueVendor v)
	, maybeToAttr toAttrFrStr "role" (returnvalueRole v)
	]
instance XmlContent Returnvalue_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Returnvalue_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Returnvalue_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Returnvalue_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Returnvalue_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Returnvalue_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Returnvalue_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Returnvalue_Str a) = toText a
    toElem (Returnvalue_Replaceable a) = toElem a
    toElem (Returnvalue_Inlinegraphic a) = toElem a
    toElem (Returnvalue_Inlinemediaobject a) = toElem a
    toElem (Returnvalue_Indexterm a) = toElem a
    toElem (Returnvalue_Beginpage a) = toElem a
instance XmlAttrType Returnvalue_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Returnvalue_Revisionflag_Changed
	    translate "added" = Just Returnvalue_Revisionflag_Added
	    translate "deleted" = Just Returnvalue_Revisionflag_Deleted
	    translate "off" = Just Returnvalue_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Returnvalue_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Returnvalue_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Returnvalue_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Returnvalue_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Sgmltag where
    fromElem (CElem (Elem "sgmltag" as c0):rest) =
	(\(a,ca)->
	   (Just (Sgmltag (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Sgmltag as a) =
	[CElem (Elem "sgmltag" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Sgmltag_Attrs where
    fromAttrs as =
	Sgmltag_Attrs
	  { sgmltagClass = possibleA fromAttrToTyp "class" as
	  , sgmltagId = possibleA fromAttrToStr "id" as
	  , sgmltagLang = possibleA fromAttrToStr "lang" as
	  , sgmltagRemap = possibleA fromAttrToStr "remap" as
	  , sgmltagXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , sgmltagRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , sgmltagArch = possibleA fromAttrToStr "arch" as
	  , sgmltagCondition = possibleA fromAttrToStr "condition" as
	  , sgmltagConformance = possibleA fromAttrToStr "conformance" as
	  , sgmltagOs = possibleA fromAttrToStr "os" as
	  , sgmltagRevision = possibleA fromAttrToStr "revision" as
	  , sgmltagSecurity = possibleA fromAttrToStr "security" as
	  , sgmltagUserlevel = possibleA fromAttrToStr "userlevel" as
	  , sgmltagVendor = possibleA fromAttrToStr "vendor" as
	  , sgmltagRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "class" (sgmltagClass v)
	, maybeToAttr toAttrFrStr "id" (sgmltagId v)
	, maybeToAttr toAttrFrStr "lang" (sgmltagLang v)
	, maybeToAttr toAttrFrStr "remap" (sgmltagRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (sgmltagXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (sgmltagRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (sgmltagArch v)
	, maybeToAttr toAttrFrStr "condition" (sgmltagCondition v)
	, maybeToAttr toAttrFrStr "conformance" (sgmltagConformance v)
	, maybeToAttr toAttrFrStr "os" (sgmltagOs v)
	, maybeToAttr toAttrFrStr "revision" (sgmltagRevision v)
	, maybeToAttr toAttrFrStr "security" (sgmltagSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (sgmltagUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (sgmltagVendor v)
	, maybeToAttr toAttrFrStr "role" (sgmltagRole v)
	]
instance XmlContent Sgmltag_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Sgmltag_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Sgmltag_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Sgmltag_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Sgmltag_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Sgmltag_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Sgmltag_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Sgmltag_Str a) = toText a
    toElem (Sgmltag_Replaceable a) = toElem a
    toElem (Sgmltag_Inlinegraphic a) = toElem a
    toElem (Sgmltag_Inlinemediaobject a) = toElem a
    toElem (Sgmltag_Indexterm a) = toElem a
    toElem (Sgmltag_Beginpage a) = toElem a
instance XmlAttrType Sgmltag_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "attribute" = Just Sgmltag_Class_Attribute
	    translate "attvalue" = Just Sgmltag_Class_Attvalue
	    translate "element" = Just Sgmltag_Class_Element
	    translate "endtag" = Just Sgmltag_Class_Endtag
	    translate "emptytag" = Just Sgmltag_Class_Emptytag
	    translate "genentity" = Just Sgmltag_Class_Genentity
	    translate "numcharref" = Just Sgmltag_Class_Numcharref
	    translate "paramentity" = Just Sgmltag_Class_Paramentity
	    translate "pi" = Just Sgmltag_Class_Pi
	    translate "xmlpi" = Just Sgmltag_Class_Xmlpi
	    translate "starttag" = Just Sgmltag_Class_Starttag
	    translate "sgmlcomment" = Just Sgmltag_Class_Sgmlcomment
	    translate _ = Nothing
    toAttrFrTyp n Sgmltag_Class_Attribute = Just (n, str2attr "attribute")
    toAttrFrTyp n Sgmltag_Class_Attvalue = Just (n, str2attr "attvalue")
    toAttrFrTyp n Sgmltag_Class_Element = Just (n, str2attr "element")
    toAttrFrTyp n Sgmltag_Class_Endtag = Just (n, str2attr "endtag")
    toAttrFrTyp n Sgmltag_Class_Emptytag = Just (n, str2attr "emptytag")
    toAttrFrTyp n Sgmltag_Class_Genentity = Just (n, str2attr "genentity")
    toAttrFrTyp n Sgmltag_Class_Numcharref = Just (n, str2attr "numcharref")
    toAttrFrTyp n Sgmltag_Class_Paramentity = Just (n, str2attr "paramentity")
    toAttrFrTyp n Sgmltag_Class_Pi = Just (n, str2attr "pi")
    toAttrFrTyp n Sgmltag_Class_Xmlpi = Just (n, str2attr "xmlpi")
    toAttrFrTyp n Sgmltag_Class_Starttag = Just (n, str2attr "starttag")
    toAttrFrTyp n Sgmltag_Class_Sgmlcomment = Just (n, str2attr "sgmlcomment")
instance XmlAttrType Sgmltag_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Sgmltag_Revisionflag_Changed
	    translate "added" = Just Sgmltag_Revisionflag_Added
	    translate "deleted" = Just Sgmltag_Revisionflag_Deleted
	    translate "off" = Just Sgmltag_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Sgmltag_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Sgmltag_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Sgmltag_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Sgmltag_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Structfield where
    fromElem (CElem (Elem "structfield" as c0):rest) =
	(\(a,ca)->
	   (Just (Structfield (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Structfield as a) =
	[CElem (Elem "structfield" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Structfield_Attrs where
    fromAttrs as =
	Structfield_Attrs
	  { structfieldId = possibleA fromAttrToStr "id" as
	  , structfieldLang = possibleA fromAttrToStr "lang" as
	  , structfieldRemap = possibleA fromAttrToStr "remap" as
	  , structfieldXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , structfieldRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , structfieldArch = possibleA fromAttrToStr "arch" as
	  , structfieldCondition = possibleA fromAttrToStr "condition" as
	  , structfieldConformance = possibleA fromAttrToStr "conformance" as
	  , structfieldOs = possibleA fromAttrToStr "os" as
	  , structfieldRevision = possibleA fromAttrToStr "revision" as
	  , structfieldSecurity = possibleA fromAttrToStr "security" as
	  , structfieldUserlevel = possibleA fromAttrToStr "userlevel" as
	  , structfieldVendor = possibleA fromAttrToStr "vendor" as
	  , structfieldRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (structfieldId v)
	, maybeToAttr toAttrFrStr "lang" (structfieldLang v)
	, maybeToAttr toAttrFrStr "remap" (structfieldRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (structfieldXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (structfieldRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (structfieldArch v)
	, maybeToAttr toAttrFrStr "condition" (structfieldCondition v)
	, maybeToAttr toAttrFrStr "conformance" (structfieldConformance v)
	, maybeToAttr toAttrFrStr "os" (structfieldOs v)
	, maybeToAttr toAttrFrStr "revision" (structfieldRevision v)
	, maybeToAttr toAttrFrStr "security" (structfieldSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (structfieldUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (structfieldVendor v)
	, maybeToAttr toAttrFrStr "role" (structfieldRole v)
	]
instance XmlContent Structfield_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Structfield_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Structfield_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Structfield_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Structfield_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Structfield_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Structfield_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Structfield_Str a) = toText a
    toElem (Structfield_Replaceable a) = toElem a
    toElem (Structfield_Inlinegraphic a) = toElem a
    toElem (Structfield_Inlinemediaobject a) = toElem a
    toElem (Structfield_Indexterm a) = toElem a
    toElem (Structfield_Beginpage a) = toElem a
instance XmlAttrType Structfield_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Structfield_Revisionflag_Changed
	    translate "added" = Just Structfield_Revisionflag_Added
	    translate "deleted" = Just Structfield_Revisionflag_Deleted
	    translate "off" = Just Structfield_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Structfield_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Structfield_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Structfield_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Structfield_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Structname where
    fromElem (CElem (Elem "structname" as c0):rest) =
	(\(a,ca)->
	   (Just (Structname (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Structname as a) =
	[CElem (Elem "structname" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Structname_Attrs where
    fromAttrs as =
	Structname_Attrs
	  { structnameId = possibleA fromAttrToStr "id" as
	  , structnameLang = possibleA fromAttrToStr "lang" as
	  , structnameRemap = possibleA fromAttrToStr "remap" as
	  , structnameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , structnameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , structnameArch = possibleA fromAttrToStr "arch" as
	  , structnameCondition = possibleA fromAttrToStr "condition" as
	  , structnameConformance = possibleA fromAttrToStr "conformance" as
	  , structnameOs = possibleA fromAttrToStr "os" as
	  , structnameRevision = possibleA fromAttrToStr "revision" as
	  , structnameSecurity = possibleA fromAttrToStr "security" as
	  , structnameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , structnameVendor = possibleA fromAttrToStr "vendor" as
	  , structnameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (structnameId v)
	, maybeToAttr toAttrFrStr "lang" (structnameLang v)
	, maybeToAttr toAttrFrStr "remap" (structnameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (structnameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (structnameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (structnameArch v)
	, maybeToAttr toAttrFrStr "condition" (structnameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (structnameConformance v)
	, maybeToAttr toAttrFrStr "os" (structnameOs v)
	, maybeToAttr toAttrFrStr "revision" (structnameRevision v)
	, maybeToAttr toAttrFrStr "security" (structnameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (structnameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (structnameVendor v)
	, maybeToAttr toAttrFrStr "role" (structnameRole v)
	]
instance XmlContent Structname_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Structname_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Structname_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Structname_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Structname_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Structname_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Structname_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Structname_Str a) = toText a
    toElem (Structname_Replaceable a) = toElem a
    toElem (Structname_Inlinegraphic a) = toElem a
    toElem (Structname_Inlinemediaobject a) = toElem a
    toElem (Structname_Indexterm a) = toElem a
    toElem (Structname_Beginpage a) = toElem a
instance XmlAttrType Structname_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Structname_Revisionflag_Changed
	    translate "added" = Just Structname_Revisionflag_Added
	    translate "deleted" = Just Structname_Revisionflag_Deleted
	    translate "off" = Just Structname_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Structname_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Structname_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Structname_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Structname_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Symbol where
    fromElem (CElem (Elem "symbol" as c0):rest) =
	(\(a,ca)->
	   (Just (Symbol (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Symbol as a) =
	[CElem (Elem "symbol" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Symbol_Attrs where
    fromAttrs as =
	Symbol_Attrs
	  { symbolClass = possibleA fromAttrToTyp "class" as
	  , symbolId = possibleA fromAttrToStr "id" as
	  , symbolLang = possibleA fromAttrToStr "lang" as
	  , symbolRemap = possibleA fromAttrToStr "remap" as
	  , symbolXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , symbolRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , symbolArch = possibleA fromAttrToStr "arch" as
	  , symbolCondition = possibleA fromAttrToStr "condition" as
	  , symbolConformance = possibleA fromAttrToStr "conformance" as
	  , symbolOs = possibleA fromAttrToStr "os" as
	  , symbolRevision = possibleA fromAttrToStr "revision" as
	  , symbolSecurity = possibleA fromAttrToStr "security" as
	  , symbolUserlevel = possibleA fromAttrToStr "userlevel" as
	  , symbolVendor = possibleA fromAttrToStr "vendor" as
	  , symbolRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "class" (symbolClass v)
	, maybeToAttr toAttrFrStr "id" (symbolId v)
	, maybeToAttr toAttrFrStr "lang" (symbolLang v)
	, maybeToAttr toAttrFrStr "remap" (symbolRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (symbolXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (symbolRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (symbolArch v)
	, maybeToAttr toAttrFrStr "condition" (symbolCondition v)
	, maybeToAttr toAttrFrStr "conformance" (symbolConformance v)
	, maybeToAttr toAttrFrStr "os" (symbolOs v)
	, maybeToAttr toAttrFrStr "revision" (symbolRevision v)
	, maybeToAttr toAttrFrStr "security" (symbolSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (symbolUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (symbolVendor v)
	, maybeToAttr toAttrFrStr "role" (symbolRole v)
	]
instance XmlContent Symbol_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Symbol_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Symbol_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Symbol_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Symbol_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Symbol_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Symbol_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Symbol_Str a) = toText a
    toElem (Symbol_Replaceable a) = toElem a
    toElem (Symbol_Inlinegraphic a) = toElem a
    toElem (Symbol_Inlinemediaobject a) = toElem a
    toElem (Symbol_Indexterm a) = toElem a
    toElem (Symbol_Beginpage a) = toElem a
instance XmlAttrType Symbol_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "limit" = Just Symbol_Class_Limit
	    translate _ = Nothing
    toAttrFrTyp n Symbol_Class_Limit = Just (n, str2attr "limit")
instance XmlAttrType Symbol_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Symbol_Revisionflag_Changed
	    translate "added" = Just Symbol_Revisionflag_Added
	    translate "deleted" = Just Symbol_Revisionflag_Deleted
	    translate "off" = Just Symbol_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Symbol_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Symbol_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Symbol_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Symbol_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Systemitem where
    fromElem (CElem (Elem "systemitem" as c0):rest) =
	(\(a,ca)->
	   (Just (Systemitem (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Systemitem as a) =
	[CElem (Elem "systemitem" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Systemitem_Attrs where
    fromAttrs as =
	Systemitem_Attrs
	  { systemitemClass = possibleA fromAttrToTyp "class" as
	  , systemitemMoreinfo = defaultA fromAttrToTyp Systemitem_Moreinfo_None "moreinfo" as
	  , systemitemId = possibleA fromAttrToStr "id" as
	  , systemitemLang = possibleA fromAttrToStr "lang" as
	  , systemitemRemap = possibleA fromAttrToStr "remap" as
	  , systemitemXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , systemitemRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , systemitemArch = possibleA fromAttrToStr "arch" as
	  , systemitemCondition = possibleA fromAttrToStr "condition" as
	  , systemitemConformance = possibleA fromAttrToStr "conformance" as
	  , systemitemOs = possibleA fromAttrToStr "os" as
	  , systemitemRevision = possibleA fromAttrToStr "revision" as
	  , systemitemSecurity = possibleA fromAttrToStr "security" as
	  , systemitemUserlevel = possibleA fromAttrToStr "userlevel" as
	  , systemitemVendor = possibleA fromAttrToStr "vendor" as
	  , systemitemRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "class" (systemitemClass v)
	, defaultToAttr toAttrFrTyp "moreinfo" (systemitemMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (systemitemId v)
	, maybeToAttr toAttrFrStr "lang" (systemitemLang v)
	, maybeToAttr toAttrFrStr "remap" (systemitemRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (systemitemXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (systemitemRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (systemitemArch v)
	, maybeToAttr toAttrFrStr "condition" (systemitemCondition v)
	, maybeToAttr toAttrFrStr "conformance" (systemitemConformance v)
	, maybeToAttr toAttrFrStr "os" (systemitemOs v)
	, maybeToAttr toAttrFrStr "revision" (systemitemRevision v)
	, maybeToAttr toAttrFrStr "security" (systemitemSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (systemitemUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (systemitemVendor v)
	, maybeToAttr toAttrFrStr "role" (systemitemRole v)
	]
instance XmlContent Systemitem_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Systemitem_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Systemitem_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Systemitem_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Systemitem_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Systemitem_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Systemitem_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Systemitem_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Systemitem_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Systemitem_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Systemitem_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Systemitem_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Systemitem_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Systemitem_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Systemitem_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Systemitem_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Systemitem_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Systemitem_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Systemitem_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Systemitem_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Systemitem_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Systemitem_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Systemitem_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Systemitem_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Systemitem_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Systemitem_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Systemitem_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Systemitem_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Systemitem_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Systemitem_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Systemitem_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Systemitem_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Systemitem_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Systemitem_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Systemitem_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Systemitem_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Systemitem_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Systemitem_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Systemitem_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Systemitem_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Systemitem_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Systemitem_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Systemitem_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Systemitem_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Systemitem_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Systemitem_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Systemitem_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Systemitem_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Systemitem_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Systemitem_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Systemitem_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Systemitem_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Systemitem_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Systemitem_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Systemitem_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Systemitem_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Systemitem_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Systemitem_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Systemitem_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Systemitem_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Systemitem_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Systemitem_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Systemitem_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Systemitem_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Systemitem_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Systemitem_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Systemitem_Beginpage a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Systemitem_Acronym a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Systemitem_Co a), rest)
																																																																				(_,_) ->
																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Systemitem_Str a) = toText a
    toElem (Systemitem_Link a) = toElem a
    toElem (Systemitem_Olink a) = toElem a
    toElem (Systemitem_Ulink a) = toElem a
    toElem (Systemitem_Action a) = toElem a
    toElem (Systemitem_Application a) = toElem a
    toElem (Systemitem_Classname a) = toElem a
    toElem (Systemitem_Methodname a) = toElem a
    toElem (Systemitem_Interfacename a) = toElem a
    toElem (Systemitem_Exceptionname a) = toElem a
    toElem (Systemitem_Ooclass a) = toElem a
    toElem (Systemitem_Oointerface a) = toElem a
    toElem (Systemitem_Ooexception a) = toElem a
    toElem (Systemitem_Command a) = toElem a
    toElem (Systemitem_Computeroutput a) = toElem a
    toElem (Systemitem_Database a) = toElem a
    toElem (Systemitem_Email a) = toElem a
    toElem (Systemitem_Envar a) = toElem a
    toElem (Systemitem_Errorcode a) = toElem a
    toElem (Systemitem_Errorname a) = toElem a
    toElem (Systemitem_Errortype a) = toElem a
    toElem (Systemitem_Errortext a) = toElem a
    toElem (Systemitem_Filename a) = toElem a
    toElem (Systemitem_Function a) = toElem a
    toElem (Systemitem_Guibutton a) = toElem a
    toElem (Systemitem_Guiicon a) = toElem a
    toElem (Systemitem_Guilabel a) = toElem a
    toElem (Systemitem_Guimenu a) = toElem a
    toElem (Systemitem_Guimenuitem a) = toElem a
    toElem (Systemitem_Guisubmenu a) = toElem a
    toElem (Systemitem_Hardware a) = toElem a
    toElem (Systemitem_Interface a) = toElem a
    toElem (Systemitem_Keycap a) = toElem a
    toElem (Systemitem_Keycode a) = toElem a
    toElem (Systemitem_Keycombo a) = toElem a
    toElem (Systemitem_Keysym a) = toElem a
    toElem (Systemitem_Literal a) = toElem a
    toElem (Systemitem_Constant a) = toElem a
    toElem (Systemitem_Markup a) = toElem a
    toElem (Systemitem_Medialabel a) = toElem a
    toElem (Systemitem_Menuchoice a) = toElem a
    toElem (Systemitem_Mousebutton a) = toElem a
    toElem (Systemitem_Option a) = toElem a
    toElem (Systemitem_Optional a) = toElem a
    toElem (Systemitem_Parameter a) = toElem a
    toElem (Systemitem_Prompt a) = toElem a
    toElem (Systemitem_Property a) = toElem a
    toElem (Systemitem_Replaceable a) = toElem a
    toElem (Systemitem_Returnvalue a) = toElem a
    toElem (Systemitem_Sgmltag a) = toElem a
    toElem (Systemitem_Structfield a) = toElem a
    toElem (Systemitem_Structname a) = toElem a
    toElem (Systemitem_Symbol a) = toElem a
    toElem (Systemitem_Systemitem a) = toElem a
    toElem (Systemitem_Token a) = toElem a
    toElem (Systemitem_Type a) = toElem a
    toElem (Systemitem_Userinput a) = toElem a
    toElem (Systemitem_Varname a) = toElem a
    toElem (Systemitem_Anchor a) = toElem a
    toElem (Systemitem_Remark a) = toElem a
    toElem (Systemitem_Subscript a) = toElem a
    toElem (Systemitem_Superscript a) = toElem a
    toElem (Systemitem_Inlinegraphic a) = toElem a
    toElem (Systemitem_Inlinemediaobject a) = toElem a
    toElem (Systemitem_Indexterm a) = toElem a
    toElem (Systemitem_Beginpage a) = toElem a
    toElem (Systemitem_Acronym a) = toElem a
    toElem (Systemitem_Co a) = toElem a
instance XmlAttrType Systemitem_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "constant" = Just Systemitem_Class_Constant
	    translate "event" = Just Systemitem_Class_Event
	    translate "eventhandler" = Just Systemitem_Class_Eventhandler
	    translate "domainname" = Just Systemitem_Class_Domainname
	    translate "fqdomainname" = Just Systemitem_Class_Fqdomainname
	    translate "ipaddress" = Just Systemitem_Class_Ipaddress
	    translate "netmask" = Just Systemitem_Class_Netmask
	    translate "etheraddress" = Just Systemitem_Class_Etheraddress
	    translate "groupname" = Just Systemitem_Class_Groupname
	    translate "library" = Just Systemitem_Class_Library
	    translate "macro" = Just Systemitem_Class_Macro
	    translate "osname" = Just Systemitem_Class_Osname
	    translate "filesystem" = Just Systemitem_Class_Filesystem
	    translate "resource" = Just Systemitem_Class_Resource
	    translate "systemname" = Just Systemitem_Class_Systemname
	    translate "username" = Just Systemitem_Class_Username
	    translate "newsgroup" = Just Systemitem_Class_Newsgroup
	    translate _ = Nothing
    toAttrFrTyp n Systemitem_Class_Constant = Just (n, str2attr "constant")
    toAttrFrTyp n Systemitem_Class_Event = Just (n, str2attr "event")
    toAttrFrTyp n Systemitem_Class_Eventhandler = Just (n, str2attr "eventhandler")
    toAttrFrTyp n Systemitem_Class_Domainname = Just (n, str2attr "domainname")
    toAttrFrTyp n Systemitem_Class_Fqdomainname = Just (n, str2attr "fqdomainname")
    toAttrFrTyp n Systemitem_Class_Ipaddress = Just (n, str2attr "ipaddress")
    toAttrFrTyp n Systemitem_Class_Netmask = Just (n, str2attr "netmask")
    toAttrFrTyp n Systemitem_Class_Etheraddress = Just (n, str2attr "etheraddress")
    toAttrFrTyp n Systemitem_Class_Groupname = Just (n, str2attr "groupname")
    toAttrFrTyp n Systemitem_Class_Library = Just (n, str2attr "library")
    toAttrFrTyp n Systemitem_Class_Macro = Just (n, str2attr "macro")
    toAttrFrTyp n Systemitem_Class_Osname = Just (n, str2attr "osname")
    toAttrFrTyp n Systemitem_Class_Filesystem = Just (n, str2attr "filesystem")
    toAttrFrTyp n Systemitem_Class_Resource = Just (n, str2attr "resource")
    toAttrFrTyp n Systemitem_Class_Systemname = Just (n, str2attr "systemname")
    toAttrFrTyp n Systemitem_Class_Username = Just (n, str2attr "username")
    toAttrFrTyp n Systemitem_Class_Newsgroup = Just (n, str2attr "newsgroup")
instance XmlAttrType Systemitem_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Systemitem_Moreinfo_Refentry
	    translate "none" = Just Systemitem_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Systemitem_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Systemitem_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Systemitem_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Systemitem_Revisionflag_Changed
	    translate "added" = Just Systemitem_Revisionflag_Added
	    translate "deleted" = Just Systemitem_Revisionflag_Deleted
	    translate "off" = Just Systemitem_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Systemitem_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Systemitem_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Systemitem_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Systemitem_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Token where
    fromElem (CElem (Elem "token" as c0):rest) =
	(\(a,ca)->
	   (Just (Token (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Token as a) =
	[CElem (Elem "token" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Token_Attrs where
    fromAttrs as =
	Token_Attrs
	  { tokenId = possibleA fromAttrToStr "id" as
	  , tokenLang = possibleA fromAttrToStr "lang" as
	  , tokenRemap = possibleA fromAttrToStr "remap" as
	  , tokenXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , tokenRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , tokenArch = possibleA fromAttrToStr "arch" as
	  , tokenCondition = possibleA fromAttrToStr "condition" as
	  , tokenConformance = possibleA fromAttrToStr "conformance" as
	  , tokenOs = possibleA fromAttrToStr "os" as
	  , tokenRevision = possibleA fromAttrToStr "revision" as
	  , tokenSecurity = possibleA fromAttrToStr "security" as
	  , tokenUserlevel = possibleA fromAttrToStr "userlevel" as
	  , tokenVendor = possibleA fromAttrToStr "vendor" as
	  , tokenRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (tokenId v)
	, maybeToAttr toAttrFrStr "lang" (tokenLang v)
	, maybeToAttr toAttrFrStr "remap" (tokenRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (tokenXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (tokenRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (tokenArch v)
	, maybeToAttr toAttrFrStr "condition" (tokenCondition v)
	, maybeToAttr toAttrFrStr "conformance" (tokenConformance v)
	, maybeToAttr toAttrFrStr "os" (tokenOs v)
	, maybeToAttr toAttrFrStr "revision" (tokenRevision v)
	, maybeToAttr toAttrFrStr "security" (tokenSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (tokenUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (tokenVendor v)
	, maybeToAttr toAttrFrStr "role" (tokenRole v)
	]
instance XmlContent Token_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Token_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Token_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Token_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Token_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Token_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Token_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Token_Str a) = toText a
    toElem (Token_Replaceable a) = toElem a
    toElem (Token_Inlinegraphic a) = toElem a
    toElem (Token_Inlinemediaobject a) = toElem a
    toElem (Token_Indexterm a) = toElem a
    toElem (Token_Beginpage a) = toElem a
instance XmlAttrType Token_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Token_Revisionflag_Changed
	    translate "added" = Just Token_Revisionflag_Added
	    translate "deleted" = Just Token_Revisionflag_Deleted
	    translate "off" = Just Token_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Token_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Token_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Token_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Token_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Type where
    fromElem (CElem (Elem "type" as c0):rest) =
	(\(a,ca)->
	   (Just (Type (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Type as a) =
	[CElem (Elem "type" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Type_Attrs where
    fromAttrs as =
	Type_Attrs
	  { typeId = possibleA fromAttrToStr "id" as
	  , typeLang = possibleA fromAttrToStr "lang" as
	  , typeRemap = possibleA fromAttrToStr "remap" as
	  , typeXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , typeRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , typeArch = possibleA fromAttrToStr "arch" as
	  , typeCondition = possibleA fromAttrToStr "condition" as
	  , typeConformance = possibleA fromAttrToStr "conformance" as
	  , typeOs = possibleA fromAttrToStr "os" as
	  , typeRevision = possibleA fromAttrToStr "revision" as
	  , typeSecurity = possibleA fromAttrToStr "security" as
	  , typeUserlevel = possibleA fromAttrToStr "userlevel" as
	  , typeVendor = possibleA fromAttrToStr "vendor" as
	  , typeRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (typeId v)
	, maybeToAttr toAttrFrStr "lang" (typeLang v)
	, maybeToAttr toAttrFrStr "remap" (typeRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (typeXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (typeRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (typeArch v)
	, maybeToAttr toAttrFrStr "condition" (typeCondition v)
	, maybeToAttr toAttrFrStr "conformance" (typeConformance v)
	, maybeToAttr toAttrFrStr "os" (typeOs v)
	, maybeToAttr toAttrFrStr "revision" (typeRevision v)
	, maybeToAttr toAttrFrStr "security" (typeSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (typeUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (typeVendor v)
	, maybeToAttr toAttrFrStr "role" (typeRole v)
	]
instance XmlContent Type_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Type_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Type_Replaceable a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Type_Inlinegraphic a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Type_Inlinemediaobject a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Type_Indexterm a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Type_Beginpage a), rest)
						(_,_) ->
						    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Type_Str a) = toText a
    toElem (Type_Replaceable a) = toElem a
    toElem (Type_Inlinegraphic a) = toElem a
    toElem (Type_Inlinemediaobject a) = toElem a
    toElem (Type_Indexterm a) = toElem a
    toElem (Type_Beginpage a) = toElem a
instance XmlAttrType Type_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Type_Revisionflag_Changed
	    translate "added" = Just Type_Revisionflag_Added
	    translate "deleted" = Just Type_Revisionflag_Deleted
	    translate "off" = Just Type_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Type_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Type_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Type_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Type_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Userinput where
    fromElem (CElem (Elem "userinput" as c0):rest) =
	(\(a,ca)->
	   (Just (Userinput (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Userinput as a) =
	[CElem (Elem "userinput" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Userinput_Attrs where
    fromAttrs as =
	Userinput_Attrs
	  { userinputMoreinfo = defaultA fromAttrToTyp Userinput_Moreinfo_None "moreinfo" as
	  , userinputId = possibleA fromAttrToStr "id" as
	  , userinputLang = possibleA fromAttrToStr "lang" as
	  , userinputRemap = possibleA fromAttrToStr "remap" as
	  , userinputXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , userinputRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , userinputArch = possibleA fromAttrToStr "arch" as
	  , userinputCondition = possibleA fromAttrToStr "condition" as
	  , userinputConformance = possibleA fromAttrToStr "conformance" as
	  , userinputOs = possibleA fromAttrToStr "os" as
	  , userinputRevision = possibleA fromAttrToStr "revision" as
	  , userinputSecurity = possibleA fromAttrToStr "security" as
	  , userinputUserlevel = possibleA fromAttrToStr "userlevel" as
	  , userinputVendor = possibleA fromAttrToStr "vendor" as
	  , userinputRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "moreinfo" (userinputMoreinfo v)
	, maybeToAttr toAttrFrStr "id" (userinputId v)
	, maybeToAttr toAttrFrStr "lang" (userinputLang v)
	, maybeToAttr toAttrFrStr "remap" (userinputRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (userinputXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (userinputRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (userinputArch v)
	, maybeToAttr toAttrFrStr "condition" (userinputCondition v)
	, maybeToAttr toAttrFrStr "conformance" (userinputConformance v)
	, maybeToAttr toAttrFrStr "os" (userinputOs v)
	, maybeToAttr toAttrFrStr "revision" (userinputRevision v)
	, maybeToAttr toAttrFrStr "security" (userinputSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (userinputUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (userinputVendor v)
	, maybeToAttr toAttrFrStr "role" (userinputRole v)
	]
instance XmlContent Userinput_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Userinput_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Userinput_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Userinput_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Userinput_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Userinput_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Userinput_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Userinput_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Userinput_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Userinput_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Userinput_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Userinput_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Userinput_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Userinput_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Userinput_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Userinput_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Userinput_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Userinput_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Userinput_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Userinput_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Userinput_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Userinput_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Userinput_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Userinput_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Userinput_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Userinput_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Userinput_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Userinput_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Userinput_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Userinput_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Userinput_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Userinput_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Userinput_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Userinput_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Userinput_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Userinput_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Userinput_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Userinput_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Userinput_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Userinput_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Userinput_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Userinput_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Userinput_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Userinput_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Userinput_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Userinput_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Userinput_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Userinput_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Userinput_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Userinput_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Userinput_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Userinput_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Userinput_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Userinput_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Userinput_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Userinput_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Userinput_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Userinput_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Userinput_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Userinput_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Userinput_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Userinput_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Userinput_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Userinput_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Userinput_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Userinput_Indexterm a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Userinput_Beginpage a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Userinput_Co a), rest)
																																																																			(_,_) ->
																																																																			    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Userinput_Str a) = toText a
    toElem (Userinput_Link a) = toElem a
    toElem (Userinput_Olink a) = toElem a
    toElem (Userinput_Ulink a) = toElem a
    toElem (Userinput_Action a) = toElem a
    toElem (Userinput_Application a) = toElem a
    toElem (Userinput_Classname a) = toElem a
    toElem (Userinput_Methodname a) = toElem a
    toElem (Userinput_Interfacename a) = toElem a
    toElem (Userinput_Exceptionname a) = toElem a
    toElem (Userinput_Ooclass a) = toElem a
    toElem (Userinput_Oointerface a) = toElem a
    toElem (Userinput_Ooexception a) = toElem a
    toElem (Userinput_Command a) = toElem a
    toElem (Userinput_Computeroutput a) = toElem a
    toElem (Userinput_Database a) = toElem a
    toElem (Userinput_Email a) = toElem a
    toElem (Userinput_Envar a) = toElem a
    toElem (Userinput_Errorcode a) = toElem a
    toElem (Userinput_Errorname a) = toElem a
    toElem (Userinput_Errortype a) = toElem a
    toElem (Userinput_Errortext a) = toElem a
    toElem (Userinput_Filename a) = toElem a
    toElem (Userinput_Function a) = toElem a
    toElem (Userinput_Guibutton a) = toElem a
    toElem (Userinput_Guiicon a) = toElem a
    toElem (Userinput_Guilabel a) = toElem a
    toElem (Userinput_Guimenu a) = toElem a
    toElem (Userinput_Guimenuitem a) = toElem a
    toElem (Userinput_Guisubmenu a) = toElem a
    toElem (Userinput_Hardware a) = toElem a
    toElem (Userinput_Interface a) = toElem a
    toElem (Userinput_Keycap a) = toElem a
    toElem (Userinput_Keycode a) = toElem a
    toElem (Userinput_Keycombo a) = toElem a
    toElem (Userinput_Keysym a) = toElem a
    toElem (Userinput_Literal a) = toElem a
    toElem (Userinput_Constant a) = toElem a
    toElem (Userinput_Markup a) = toElem a
    toElem (Userinput_Medialabel a) = toElem a
    toElem (Userinput_Menuchoice a) = toElem a
    toElem (Userinput_Mousebutton a) = toElem a
    toElem (Userinput_Option a) = toElem a
    toElem (Userinput_Optional a) = toElem a
    toElem (Userinput_Parameter a) = toElem a
    toElem (Userinput_Prompt a) = toElem a
    toElem (Userinput_Property a) = toElem a
    toElem (Userinput_Replaceable a) = toElem a
    toElem (Userinput_Returnvalue a) = toElem a
    toElem (Userinput_Sgmltag a) = toElem a
    toElem (Userinput_Structfield a) = toElem a
    toElem (Userinput_Structname a) = toElem a
    toElem (Userinput_Symbol a) = toElem a
    toElem (Userinput_Systemitem a) = toElem a
    toElem (Userinput_Token a) = toElem a
    toElem (Userinput_Type a) = toElem a
    toElem (Userinput_Userinput a) = toElem a
    toElem (Userinput_Varname a) = toElem a
    toElem (Userinput_Anchor a) = toElem a
    toElem (Userinput_Remark a) = toElem a
    toElem (Userinput_Subscript a) = toElem a
    toElem (Userinput_Superscript a) = toElem a
    toElem (Userinput_Inlinegraphic a) = toElem a
    toElem (Userinput_Inlinemediaobject a) = toElem a
    toElem (Userinput_Indexterm a) = toElem a
    toElem (Userinput_Beginpage a) = toElem a
    toElem (Userinput_Co a) = toElem a
instance XmlAttrType Userinput_Moreinfo where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "refentry" = Just Userinput_Moreinfo_Refentry
	    translate "none" = Just Userinput_Moreinfo_None
	    translate _ = Nothing
    toAttrFrTyp n Userinput_Moreinfo_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Userinput_Moreinfo_None = Just (n, str2attr "none")
instance XmlAttrType Userinput_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Userinput_Revisionflag_Changed
	    translate "added" = Just Userinput_Revisionflag_Added
	    translate "deleted" = Just Userinput_Revisionflag_Deleted
	    translate "off" = Just Userinput_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Userinput_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Userinput_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Userinput_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Userinput_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Abbrev where
    fromElem (CElem (Elem "abbrev" as c0):rest) =
	(\(a,ca)->
	   (Just (Abbrev (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Abbrev as a) =
	[CElem (Elem "abbrev" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Abbrev_Attrs where
    fromAttrs as =
	Abbrev_Attrs
	  { abbrevId = possibleA fromAttrToStr "id" as
	  , abbrevLang = possibleA fromAttrToStr "lang" as
	  , abbrevRemap = possibleA fromAttrToStr "remap" as
	  , abbrevXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , abbrevRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , abbrevArch = possibleA fromAttrToStr "arch" as
	  , abbrevCondition = possibleA fromAttrToStr "condition" as
	  , abbrevConformance = possibleA fromAttrToStr "conformance" as
	  , abbrevOs = possibleA fromAttrToStr "os" as
	  , abbrevRevision = possibleA fromAttrToStr "revision" as
	  , abbrevSecurity = possibleA fromAttrToStr "security" as
	  , abbrevUserlevel = possibleA fromAttrToStr "userlevel" as
	  , abbrevVendor = possibleA fromAttrToStr "vendor" as
	  , abbrevRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (abbrevId v)
	, maybeToAttr toAttrFrStr "lang" (abbrevLang v)
	, maybeToAttr toAttrFrStr "remap" (abbrevRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (abbrevXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (abbrevRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (abbrevArch v)
	, maybeToAttr toAttrFrStr "condition" (abbrevCondition v)
	, maybeToAttr toAttrFrStr "conformance" (abbrevConformance v)
	, maybeToAttr toAttrFrStr "os" (abbrevOs v)
	, maybeToAttr toAttrFrStr "revision" (abbrevRevision v)
	, maybeToAttr toAttrFrStr "security" (abbrevSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (abbrevUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (abbrevVendor v)
	, maybeToAttr toAttrFrStr "role" (abbrevRole v)
	]
instance XmlContent Abbrev_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Abbrev_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Abbrev_Acronym a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Abbrev_Emphasis a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Abbrev_Trademark a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Abbrev_Link a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Abbrev_Olink a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Abbrev_Ulink a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Abbrev_Anchor a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Abbrev_Remark a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Abbrev_Subscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Abbrev_Superscript a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Abbrev_Inlinegraphic a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Abbrev_Inlinemediaobject a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Abbrev_Indexterm a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Abbrev_Beginpage a), rest)
															(_,_) ->
															    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Abbrev_Str a) = toText a
    toElem (Abbrev_Acronym a) = toElem a
    toElem (Abbrev_Emphasis a) = toElem a
    toElem (Abbrev_Trademark a) = toElem a
    toElem (Abbrev_Link a) = toElem a
    toElem (Abbrev_Olink a) = toElem a
    toElem (Abbrev_Ulink a) = toElem a
    toElem (Abbrev_Anchor a) = toElem a
    toElem (Abbrev_Remark a) = toElem a
    toElem (Abbrev_Subscript a) = toElem a
    toElem (Abbrev_Superscript a) = toElem a
    toElem (Abbrev_Inlinegraphic a) = toElem a
    toElem (Abbrev_Inlinemediaobject a) = toElem a
    toElem (Abbrev_Indexterm a) = toElem a
    toElem (Abbrev_Beginpage a) = toElem a
instance XmlAttrType Abbrev_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Abbrev_Revisionflag_Changed
	    translate "added" = Just Abbrev_Revisionflag_Added
	    translate "deleted" = Just Abbrev_Revisionflag_Deleted
	    translate "off" = Just Abbrev_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Abbrev_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Abbrev_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Abbrev_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Abbrev_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Acronym where
    fromElem (CElem (Elem "acronym" as c0):rest) =
	(\(a,ca)->
	   (Just (Acronym (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Acronym as a) =
	[CElem (Elem "acronym" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Acronym_Attrs where
    fromAttrs as =
	Acronym_Attrs
	  { acronymId = possibleA fromAttrToStr "id" as
	  , acronymLang = possibleA fromAttrToStr "lang" as
	  , acronymRemap = possibleA fromAttrToStr "remap" as
	  , acronymXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , acronymRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , acronymArch = possibleA fromAttrToStr "arch" as
	  , acronymCondition = possibleA fromAttrToStr "condition" as
	  , acronymConformance = possibleA fromAttrToStr "conformance" as
	  , acronymOs = possibleA fromAttrToStr "os" as
	  , acronymRevision = possibleA fromAttrToStr "revision" as
	  , acronymSecurity = possibleA fromAttrToStr "security" as
	  , acronymUserlevel = possibleA fromAttrToStr "userlevel" as
	  , acronymVendor = possibleA fromAttrToStr "vendor" as
	  , acronymRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (acronymId v)
	, maybeToAttr toAttrFrStr "lang" (acronymLang v)
	, maybeToAttr toAttrFrStr "remap" (acronymRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (acronymXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (acronymRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (acronymArch v)
	, maybeToAttr toAttrFrStr "condition" (acronymCondition v)
	, maybeToAttr toAttrFrStr "conformance" (acronymConformance v)
	, maybeToAttr toAttrFrStr "os" (acronymOs v)
	, maybeToAttr toAttrFrStr "revision" (acronymRevision v)
	, maybeToAttr toAttrFrStr "security" (acronymSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (acronymUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (acronymVendor v)
	, maybeToAttr toAttrFrStr "role" (acronymRole v)
	]
instance XmlContent Acronym_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Acronym_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Acronym_Acronym a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Acronym_Emphasis a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Acronym_Trademark a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Acronym_Link a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Acronym_Olink a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Acronym_Ulink a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Acronym_Anchor a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Acronym_Remark a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Acronym_Subscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Acronym_Superscript a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Acronym_Inlinegraphic a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Acronym_Inlinemediaobject a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Acronym_Indexterm a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Acronym_Beginpage a), rest)
															(_,_) ->
															    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Acronym_Str a) = toText a
    toElem (Acronym_Acronym a) = toElem a
    toElem (Acronym_Emphasis a) = toElem a
    toElem (Acronym_Trademark a) = toElem a
    toElem (Acronym_Link a) = toElem a
    toElem (Acronym_Olink a) = toElem a
    toElem (Acronym_Ulink a) = toElem a
    toElem (Acronym_Anchor a) = toElem a
    toElem (Acronym_Remark a) = toElem a
    toElem (Acronym_Subscript a) = toElem a
    toElem (Acronym_Superscript a) = toElem a
    toElem (Acronym_Inlinegraphic a) = toElem a
    toElem (Acronym_Inlinemediaobject a) = toElem a
    toElem (Acronym_Indexterm a) = toElem a
    toElem (Acronym_Beginpage a) = toElem a
instance XmlAttrType Acronym_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Acronym_Revisionflag_Changed
	    translate "added" = Just Acronym_Revisionflag_Added
	    translate "deleted" = Just Acronym_Revisionflag_Deleted
	    translate "off" = Just Acronym_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Acronym_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Acronym_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Acronym_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Acronym_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Citation where
    fromElem (CElem (Elem "citation" as c0):rest) =
	(\(a,ca)->
	   (Just (Citation (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Citation as a) =
	[CElem (Elem "citation" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Citation_Attrs where
    fromAttrs as =
	Citation_Attrs
	  { citationId = possibleA fromAttrToStr "id" as
	  , citationLang = possibleA fromAttrToStr "lang" as
	  , citationRemap = possibleA fromAttrToStr "remap" as
	  , citationXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , citationRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , citationArch = possibleA fromAttrToStr "arch" as
	  , citationCondition = possibleA fromAttrToStr "condition" as
	  , citationConformance = possibleA fromAttrToStr "conformance" as
	  , citationOs = possibleA fromAttrToStr "os" as
	  , citationRevision = possibleA fromAttrToStr "revision" as
	  , citationSecurity = possibleA fromAttrToStr "security" as
	  , citationUserlevel = possibleA fromAttrToStr "userlevel" as
	  , citationVendor = possibleA fromAttrToStr "vendor" as
	  , citationRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (citationId v)
	, maybeToAttr toAttrFrStr "lang" (citationLang v)
	, maybeToAttr toAttrFrStr "remap" (citationRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (citationXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (citationRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (citationArch v)
	, maybeToAttr toAttrFrStr "condition" (citationCondition v)
	, maybeToAttr toAttrFrStr "conformance" (citationConformance v)
	, maybeToAttr toAttrFrStr "os" (citationOs v)
	, maybeToAttr toAttrFrStr "revision" (citationRevision v)
	, maybeToAttr toAttrFrStr "security" (citationSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (citationUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (citationVendor v)
	, maybeToAttr toAttrFrStr "role" (citationRole v)
	]
instance XmlContent Citation_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Citation_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Citation_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Citation_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Citation_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Citation_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Citation_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Citation_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Citation_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Citation_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Citation_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Citation_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Citation_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Citation_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Citation_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Citation_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Citation_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Citation_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Citation_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Citation_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Citation_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Citation_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Citation_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Citation_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Citation_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Citation_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Citation_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Citation_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Citation_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Citation_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Citation_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Citation_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Citation_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Citation_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Citation_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Citation_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Citation_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Citation_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Citation_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Citation_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Citation_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Citation_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Citation_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Citation_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Citation_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Citation_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Citation_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Citation_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Citation_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Citation_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Citation_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Citation_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Citation_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Citation_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Citation_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Citation_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Citation_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Citation_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Citation_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Citation_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Citation_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Citation_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Citation_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Citation_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Citation_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Citation_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Citation_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Citation_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Citation_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Citation_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Citation_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Citation_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Citation_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Citation_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Citation_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Citation_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Citation_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Citation_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Citation_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Citation_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Citation_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Citation_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Citation_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Citation_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Citation_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Citation_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Citation_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Citation_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Citation_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Citation_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Citation_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Citation_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Citation_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Citation_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Citation_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Citation_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Citation_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Citation_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Citation_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Citation_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Citation_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Citation_Str a) = toText a
    toElem (Citation_Footnoteref a) = toElem a
    toElem (Citation_Xref a) = toElem a
    toElem (Citation_Abbrev a) = toElem a
    toElem (Citation_Acronym a) = toElem a
    toElem (Citation_Citation a) = toElem a
    toElem (Citation_Citerefentry a) = toElem a
    toElem (Citation_Citetitle a) = toElem a
    toElem (Citation_Emphasis a) = toElem a
    toElem (Citation_Firstterm a) = toElem a
    toElem (Citation_Foreignphrase a) = toElem a
    toElem (Citation_Glossterm a) = toElem a
    toElem (Citation_Footnote a) = toElem a
    toElem (Citation_Phrase a) = toElem a
    toElem (Citation_Quote a) = toElem a
    toElem (Citation_Trademark a) = toElem a
    toElem (Citation_Wordasword a) = toElem a
    toElem (Citation_Personname a) = toElem a
    toElem (Citation_Link a) = toElem a
    toElem (Citation_Olink a) = toElem a
    toElem (Citation_Ulink a) = toElem a
    toElem (Citation_Action a) = toElem a
    toElem (Citation_Application a) = toElem a
    toElem (Citation_Classname a) = toElem a
    toElem (Citation_Methodname a) = toElem a
    toElem (Citation_Interfacename a) = toElem a
    toElem (Citation_Exceptionname a) = toElem a
    toElem (Citation_Ooclass a) = toElem a
    toElem (Citation_Oointerface a) = toElem a
    toElem (Citation_Ooexception a) = toElem a
    toElem (Citation_Command a) = toElem a
    toElem (Citation_Computeroutput a) = toElem a
    toElem (Citation_Database a) = toElem a
    toElem (Citation_Email a) = toElem a
    toElem (Citation_Envar a) = toElem a
    toElem (Citation_Errorcode a) = toElem a
    toElem (Citation_Errorname a) = toElem a
    toElem (Citation_Errortype a) = toElem a
    toElem (Citation_Errortext a) = toElem a
    toElem (Citation_Filename a) = toElem a
    toElem (Citation_Function a) = toElem a
    toElem (Citation_Guibutton a) = toElem a
    toElem (Citation_Guiicon a) = toElem a
    toElem (Citation_Guilabel a) = toElem a
    toElem (Citation_Guimenu a) = toElem a
    toElem (Citation_Guimenuitem a) = toElem a
    toElem (Citation_Guisubmenu a) = toElem a
    toElem (Citation_Hardware a) = toElem a
    toElem (Citation_Interface a) = toElem a
    toElem (Citation_Keycap a) = toElem a
    toElem (Citation_Keycode a) = toElem a
    toElem (Citation_Keycombo a) = toElem a
    toElem (Citation_Keysym a) = toElem a
    toElem (Citation_Literal a) = toElem a
    toElem (Citation_Constant a) = toElem a
    toElem (Citation_Markup a) = toElem a
    toElem (Citation_Medialabel a) = toElem a
    toElem (Citation_Menuchoice a) = toElem a
    toElem (Citation_Mousebutton a) = toElem a
    toElem (Citation_Option a) = toElem a
    toElem (Citation_Optional a) = toElem a
    toElem (Citation_Parameter a) = toElem a
    toElem (Citation_Prompt a) = toElem a
    toElem (Citation_Property a) = toElem a
    toElem (Citation_Replaceable a) = toElem a
    toElem (Citation_Returnvalue a) = toElem a
    toElem (Citation_Sgmltag a) = toElem a
    toElem (Citation_Structfield a) = toElem a
    toElem (Citation_Structname a) = toElem a
    toElem (Citation_Symbol a) = toElem a
    toElem (Citation_Systemitem a) = toElem a
    toElem (Citation_Token a) = toElem a
    toElem (Citation_Type a) = toElem a
    toElem (Citation_Userinput a) = toElem a
    toElem (Citation_Varname a) = toElem a
    toElem (Citation_Anchor a) = toElem a
    toElem (Citation_Author a) = toElem a
    toElem (Citation_Authorinitials a) = toElem a
    toElem (Citation_Corpauthor a) = toElem a
    toElem (Citation_Modespec a) = toElem a
    toElem (Citation_Othercredit a) = toElem a
    toElem (Citation_Productname a) = toElem a
    toElem (Citation_Productnumber a) = toElem a
    toElem (Citation_Revhistory a) = toElem a
    toElem (Citation_Remark a) = toElem a
    toElem (Citation_Subscript a) = toElem a
    toElem (Citation_Superscript a) = toElem a
    toElem (Citation_Inlinegraphic a) = toElem a
    toElem (Citation_Inlinemediaobject a) = toElem a
    toElem (Citation_Inlineequation a) = toElem a
    toElem (Citation_Synopsis a) = toElem a
    toElem (Citation_Cmdsynopsis a) = toElem a
    toElem (Citation_Funcsynopsis a) = toElem a
    toElem (Citation_Classsynopsis a) = toElem a
    toElem (Citation_Fieldsynopsis a) = toElem a
    toElem (Citation_Constructorsynopsis a) = toElem a
    toElem (Citation_Destructorsynopsis a) = toElem a
    toElem (Citation_Methodsynopsis a) = toElem a
    toElem (Citation_Indexterm a) = toElem a
    toElem (Citation_Beginpage a) = toElem a
instance XmlAttrType Citation_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Citation_Revisionflag_Changed
	    translate "added" = Just Citation_Revisionflag_Added
	    translate "deleted" = Just Citation_Revisionflag_Deleted
	    translate "off" = Just Citation_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Citation_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Citation_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Citation_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Citation_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Citerefentry where
    fromElem (CElem (Elem "citerefentry" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Citerefentry (fromAttrs as) a b), rest))
	   (fromElem ca))
	(definite fromElem "<refentrytitle>" "citerefentry" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Citerefentry as a b) =
	[CElem (Elem "citerefentry" (toAttrs as) (toElem a ++
						  maybe [] toElem b))]
instance XmlAttributes Citerefentry_Attrs where
    fromAttrs as =
	Citerefentry_Attrs
	  { citerefentryId = possibleA fromAttrToStr "id" as
	  , citerefentryLang = possibleA fromAttrToStr "lang" as
	  , citerefentryRemap = possibleA fromAttrToStr "remap" as
	  , citerefentryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , citerefentryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , citerefentryArch = possibleA fromAttrToStr "arch" as
	  , citerefentryCondition = possibleA fromAttrToStr "condition" as
	  , citerefentryConformance = possibleA fromAttrToStr "conformance" as
	  , citerefentryOs = possibleA fromAttrToStr "os" as
	  , citerefentryRevision = possibleA fromAttrToStr "revision" as
	  , citerefentrySecurity = possibleA fromAttrToStr "security" as
	  , citerefentryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , citerefentryVendor = possibleA fromAttrToStr "vendor" as
	  , citerefentryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (citerefentryId v)
	, maybeToAttr toAttrFrStr "lang" (citerefentryLang v)
	, maybeToAttr toAttrFrStr "remap" (citerefentryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (citerefentryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (citerefentryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (citerefentryArch v)
	, maybeToAttr toAttrFrStr "condition" (citerefentryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (citerefentryConformance v)
	, maybeToAttr toAttrFrStr "os" (citerefentryOs v)
	, maybeToAttr toAttrFrStr "revision" (citerefentryRevision v)
	, maybeToAttr toAttrFrStr "security" (citerefentrySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (citerefentryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (citerefentryVendor v)
	, maybeToAttr toAttrFrStr "role" (citerefentryRole v)
	]
instance XmlAttrType Citerefentry_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Citerefentry_Revisionflag_Changed
	    translate "added" = Just Citerefentry_Revisionflag_Added
	    translate "deleted" = Just Citerefentry_Revisionflag_Deleted
	    translate "off" = Just Citerefentry_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Citerefentry_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Citerefentry_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Citerefentry_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Citerefentry_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refentrytitle where
    fromElem (CElem (Elem "refentrytitle" as c0):rest) =
	(\(a,ca)->
	   (Just (Refentrytitle (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refentrytitle as a) =
	[CElem (Elem "refentrytitle" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Refentrytitle_Attrs where
    fromAttrs as =
	Refentrytitle_Attrs
	  { refentrytitleId = possibleA fromAttrToStr "id" as
	  , refentrytitleLang = possibleA fromAttrToStr "lang" as
	  , refentrytitleRemap = possibleA fromAttrToStr "remap" as
	  , refentrytitleXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refentrytitleRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refentrytitleArch = possibleA fromAttrToStr "arch" as
	  , refentrytitleCondition = possibleA fromAttrToStr "condition" as
	  , refentrytitleConformance = possibleA fromAttrToStr "conformance" as
	  , refentrytitleOs = possibleA fromAttrToStr "os" as
	  , refentrytitleRevision = possibleA fromAttrToStr "revision" as
	  , refentrytitleSecurity = possibleA fromAttrToStr "security" as
	  , refentrytitleUserlevel = possibleA fromAttrToStr "userlevel" as
	  , refentrytitleVendor = possibleA fromAttrToStr "vendor" as
	  , refentrytitleRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (refentrytitleId v)
	, maybeToAttr toAttrFrStr "lang" (refentrytitleLang v)
	, maybeToAttr toAttrFrStr "remap" (refentrytitleRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refentrytitleXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refentrytitleRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refentrytitleArch v)
	, maybeToAttr toAttrFrStr "condition" (refentrytitleCondition v)
	, maybeToAttr toAttrFrStr "conformance" (refentrytitleConformance v)
	, maybeToAttr toAttrFrStr "os" (refentrytitleOs v)
	, maybeToAttr toAttrFrStr "revision" (refentrytitleRevision v)
	, maybeToAttr toAttrFrStr "security" (refentrytitleSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (refentrytitleUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refentrytitleVendor v)
	, maybeToAttr toAttrFrStr "role" (refentrytitleRole v)
	]
instance XmlContent Refentrytitle_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Refentrytitle_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Refentrytitle_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Refentrytitle_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Refentrytitle_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Refentrytitle_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Refentrytitle_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Refentrytitle_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Refentrytitle_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Refentrytitle_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Refentrytitle_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Refentrytitle_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Refentrytitle_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Refentrytitle_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Refentrytitle_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Refentrytitle_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Refentrytitle_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Refentrytitle_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Refentrytitle_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Refentrytitle_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Refentrytitle_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Refentrytitle_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Refentrytitle_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Refentrytitle_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Refentrytitle_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Refentrytitle_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Refentrytitle_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Refentrytitle_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Refentrytitle_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Refentrytitle_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Refentrytitle_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Refentrytitle_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Refentrytitle_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Refentrytitle_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Refentrytitle_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Refentrytitle_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Refentrytitle_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Refentrytitle_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Refentrytitle_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Refentrytitle_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Refentrytitle_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Refentrytitle_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Refentrytitle_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Refentrytitle_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Refentrytitle_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Refentrytitle_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Refentrytitle_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Refentrytitle_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Refentrytitle_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Refentrytitle_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Refentrytitle_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Refentrytitle_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Refentrytitle_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Refentrytitle_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Refentrytitle_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Refentrytitle_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Refentrytitle_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Refentrytitle_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Refentrytitle_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Refentrytitle_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Refentrytitle_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Refentrytitle_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Refentrytitle_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Refentrytitle_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Refentrytitle_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Refentrytitle_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Refentrytitle_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Refentrytitle_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Refentrytitle_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Refentrytitle_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Refentrytitle_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Refentrytitle_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Refentrytitle_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Refentrytitle_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Refentrytitle_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Refentrytitle_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Refentrytitle_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Refentrytitle_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Refentrytitle_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Refentrytitle_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Refentrytitle_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Refentrytitle_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Refentrytitle_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Refentrytitle_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Refentrytitle_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Refentrytitle_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Refentrytitle_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Refentrytitle_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Refentrytitle_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Refentrytitle_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Refentrytitle_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Refentrytitle_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Refentrytitle_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Refentrytitle_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Refentrytitle_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Refentrytitle_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Refentrytitle_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Refentrytitle_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Refentrytitle_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Refentrytitle_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Refentrytitle_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refentrytitle_Str a) = toText a
    toElem (Refentrytitle_Footnoteref a) = toElem a
    toElem (Refentrytitle_Xref a) = toElem a
    toElem (Refentrytitle_Abbrev a) = toElem a
    toElem (Refentrytitle_Acronym a) = toElem a
    toElem (Refentrytitle_Citation a) = toElem a
    toElem (Refentrytitle_Citerefentry a) = toElem a
    toElem (Refentrytitle_Citetitle a) = toElem a
    toElem (Refentrytitle_Emphasis a) = toElem a
    toElem (Refentrytitle_Firstterm a) = toElem a
    toElem (Refentrytitle_Foreignphrase a) = toElem a
    toElem (Refentrytitle_Glossterm a) = toElem a
    toElem (Refentrytitle_Footnote a) = toElem a
    toElem (Refentrytitle_Phrase a) = toElem a
    toElem (Refentrytitle_Quote a) = toElem a
    toElem (Refentrytitle_Trademark a) = toElem a
    toElem (Refentrytitle_Wordasword a) = toElem a
    toElem (Refentrytitle_Personname a) = toElem a
    toElem (Refentrytitle_Link a) = toElem a
    toElem (Refentrytitle_Olink a) = toElem a
    toElem (Refentrytitle_Ulink a) = toElem a
    toElem (Refentrytitle_Action a) = toElem a
    toElem (Refentrytitle_Application a) = toElem a
    toElem (Refentrytitle_Classname a) = toElem a
    toElem (Refentrytitle_Methodname a) = toElem a
    toElem (Refentrytitle_Interfacename a) = toElem a
    toElem (Refentrytitle_Exceptionname a) = toElem a
    toElem (Refentrytitle_Ooclass a) = toElem a
    toElem (Refentrytitle_Oointerface a) = toElem a
    toElem (Refentrytitle_Ooexception a) = toElem a
    toElem (Refentrytitle_Command a) = toElem a
    toElem (Refentrytitle_Computeroutput a) = toElem a
    toElem (Refentrytitle_Database a) = toElem a
    toElem (Refentrytitle_Email a) = toElem a
    toElem (Refentrytitle_Envar a) = toElem a
    toElem (Refentrytitle_Errorcode a) = toElem a
    toElem (Refentrytitle_Errorname a) = toElem a
    toElem (Refentrytitle_Errortype a) = toElem a
    toElem (Refentrytitle_Errortext a) = toElem a
    toElem (Refentrytitle_Filename a) = toElem a
    toElem (Refentrytitle_Function a) = toElem a
    toElem (Refentrytitle_Guibutton a) = toElem a
    toElem (Refentrytitle_Guiicon a) = toElem a
    toElem (Refentrytitle_Guilabel a) = toElem a
    toElem (Refentrytitle_Guimenu a) = toElem a
    toElem (Refentrytitle_Guimenuitem a) = toElem a
    toElem (Refentrytitle_Guisubmenu a) = toElem a
    toElem (Refentrytitle_Hardware a) = toElem a
    toElem (Refentrytitle_Interface a) = toElem a
    toElem (Refentrytitle_Keycap a) = toElem a
    toElem (Refentrytitle_Keycode a) = toElem a
    toElem (Refentrytitle_Keycombo a) = toElem a
    toElem (Refentrytitle_Keysym a) = toElem a
    toElem (Refentrytitle_Literal a) = toElem a
    toElem (Refentrytitle_Constant a) = toElem a
    toElem (Refentrytitle_Markup a) = toElem a
    toElem (Refentrytitle_Medialabel a) = toElem a
    toElem (Refentrytitle_Menuchoice a) = toElem a
    toElem (Refentrytitle_Mousebutton a) = toElem a
    toElem (Refentrytitle_Option a) = toElem a
    toElem (Refentrytitle_Optional a) = toElem a
    toElem (Refentrytitle_Parameter a) = toElem a
    toElem (Refentrytitle_Prompt a) = toElem a
    toElem (Refentrytitle_Property a) = toElem a
    toElem (Refentrytitle_Replaceable a) = toElem a
    toElem (Refentrytitle_Returnvalue a) = toElem a
    toElem (Refentrytitle_Sgmltag a) = toElem a
    toElem (Refentrytitle_Structfield a) = toElem a
    toElem (Refentrytitle_Structname a) = toElem a
    toElem (Refentrytitle_Symbol a) = toElem a
    toElem (Refentrytitle_Systemitem a) = toElem a
    toElem (Refentrytitle_Token a) = toElem a
    toElem (Refentrytitle_Type a) = toElem a
    toElem (Refentrytitle_Userinput a) = toElem a
    toElem (Refentrytitle_Varname a) = toElem a
    toElem (Refentrytitle_Anchor a) = toElem a
    toElem (Refentrytitle_Author a) = toElem a
    toElem (Refentrytitle_Authorinitials a) = toElem a
    toElem (Refentrytitle_Corpauthor a) = toElem a
    toElem (Refentrytitle_Modespec a) = toElem a
    toElem (Refentrytitle_Othercredit a) = toElem a
    toElem (Refentrytitle_Productname a) = toElem a
    toElem (Refentrytitle_Productnumber a) = toElem a
    toElem (Refentrytitle_Revhistory a) = toElem a
    toElem (Refentrytitle_Remark a) = toElem a
    toElem (Refentrytitle_Subscript a) = toElem a
    toElem (Refentrytitle_Superscript a) = toElem a
    toElem (Refentrytitle_Inlinegraphic a) = toElem a
    toElem (Refentrytitle_Inlinemediaobject a) = toElem a
    toElem (Refentrytitle_Inlineequation a) = toElem a
    toElem (Refentrytitle_Synopsis a) = toElem a
    toElem (Refentrytitle_Cmdsynopsis a) = toElem a
    toElem (Refentrytitle_Funcsynopsis a) = toElem a
    toElem (Refentrytitle_Classsynopsis a) = toElem a
    toElem (Refentrytitle_Fieldsynopsis a) = toElem a
    toElem (Refentrytitle_Constructorsynopsis a) = toElem a
    toElem (Refentrytitle_Destructorsynopsis a) = toElem a
    toElem (Refentrytitle_Methodsynopsis a) = toElem a
    toElem (Refentrytitle_Indexterm a) = toElem a
    toElem (Refentrytitle_Beginpage a) = toElem a
instance XmlAttrType Refentrytitle_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refentrytitle_Revisionflag_Changed
	    translate "added" = Just Refentrytitle_Revisionflag_Added
	    translate "deleted" = Just Refentrytitle_Revisionflag_Deleted
	    translate "off" = Just Refentrytitle_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refentrytitle_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refentrytitle_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refentrytitle_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refentrytitle_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Manvolnum where
    fromElem (CElem (Elem "manvolnum" as c0):rest) =
	(\(a,ca)->
	   (Just (Manvolnum (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Manvolnum as a) =
	[CElem (Elem "manvolnum" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Manvolnum_Attrs where
    fromAttrs as =
	Manvolnum_Attrs
	  { manvolnumId = possibleA fromAttrToStr "id" as
	  , manvolnumLang = possibleA fromAttrToStr "lang" as
	  , manvolnumRemap = possibleA fromAttrToStr "remap" as
	  , manvolnumXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , manvolnumRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , manvolnumArch = possibleA fromAttrToStr "arch" as
	  , manvolnumCondition = possibleA fromAttrToStr "condition" as
	  , manvolnumConformance = possibleA fromAttrToStr "conformance" as
	  , manvolnumOs = possibleA fromAttrToStr "os" as
	  , manvolnumRevision = possibleA fromAttrToStr "revision" as
	  , manvolnumSecurity = possibleA fromAttrToStr "security" as
	  , manvolnumUserlevel = possibleA fromAttrToStr "userlevel" as
	  , manvolnumVendor = possibleA fromAttrToStr "vendor" as
	  , manvolnumRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (manvolnumId v)
	, maybeToAttr toAttrFrStr "lang" (manvolnumLang v)
	, maybeToAttr toAttrFrStr "remap" (manvolnumRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (manvolnumXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (manvolnumRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (manvolnumArch v)
	, maybeToAttr toAttrFrStr "condition" (manvolnumCondition v)
	, maybeToAttr toAttrFrStr "conformance" (manvolnumConformance v)
	, maybeToAttr toAttrFrStr "os" (manvolnumOs v)
	, maybeToAttr toAttrFrStr "revision" (manvolnumRevision v)
	, maybeToAttr toAttrFrStr "security" (manvolnumSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (manvolnumUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (manvolnumVendor v)
	, maybeToAttr toAttrFrStr "role" (manvolnumRole v)
	]
instance XmlContent Manvolnum_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Manvolnum_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Manvolnum_Acronym a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Manvolnum_Emphasis a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Manvolnum_Trademark a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Manvolnum_Link a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Manvolnum_Olink a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Manvolnum_Ulink a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Manvolnum_Anchor a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Manvolnum_Remark a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Manvolnum_Subscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Manvolnum_Superscript a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Manvolnum_Inlinegraphic a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Manvolnum_Inlinemediaobject a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Manvolnum_Indexterm a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Manvolnum_Beginpage a), rest)
															(_,_) ->
															    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Manvolnum_Str a) = toText a
    toElem (Manvolnum_Acronym a) = toElem a
    toElem (Manvolnum_Emphasis a) = toElem a
    toElem (Manvolnum_Trademark a) = toElem a
    toElem (Manvolnum_Link a) = toElem a
    toElem (Manvolnum_Olink a) = toElem a
    toElem (Manvolnum_Ulink a) = toElem a
    toElem (Manvolnum_Anchor a) = toElem a
    toElem (Manvolnum_Remark a) = toElem a
    toElem (Manvolnum_Subscript a) = toElem a
    toElem (Manvolnum_Superscript a) = toElem a
    toElem (Manvolnum_Inlinegraphic a) = toElem a
    toElem (Manvolnum_Inlinemediaobject a) = toElem a
    toElem (Manvolnum_Indexterm a) = toElem a
    toElem (Manvolnum_Beginpage a) = toElem a
instance XmlAttrType Manvolnum_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Manvolnum_Revisionflag_Changed
	    translate "added" = Just Manvolnum_Revisionflag_Added
	    translate "deleted" = Just Manvolnum_Revisionflag_Deleted
	    translate "off" = Just Manvolnum_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Manvolnum_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Manvolnum_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Manvolnum_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Manvolnum_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Citetitle where
    fromElem (CElem (Elem "citetitle" as c0):rest) =
	(\(a,ca)->
	   (Just (Citetitle (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Citetitle as a) =
	[CElem (Elem "citetitle" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Citetitle_Attrs where
    fromAttrs as =
	Citetitle_Attrs
	  { citetitlePubwork = possibleA fromAttrToTyp "pubwork" as
	  , citetitleId = possibleA fromAttrToStr "id" as
	  , citetitleLang = possibleA fromAttrToStr "lang" as
	  , citetitleRemap = possibleA fromAttrToStr "remap" as
	  , citetitleXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , citetitleRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , citetitleArch = possibleA fromAttrToStr "arch" as
	  , citetitleCondition = possibleA fromAttrToStr "condition" as
	  , citetitleConformance = possibleA fromAttrToStr "conformance" as
	  , citetitleOs = possibleA fromAttrToStr "os" as
	  , citetitleRevision = possibleA fromAttrToStr "revision" as
	  , citetitleSecurity = possibleA fromAttrToStr "security" as
	  , citetitleUserlevel = possibleA fromAttrToStr "userlevel" as
	  , citetitleVendor = possibleA fromAttrToStr "vendor" as
	  , citetitleRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "pubwork" (citetitlePubwork v)
	, maybeToAttr toAttrFrStr "id" (citetitleId v)
	, maybeToAttr toAttrFrStr "lang" (citetitleLang v)
	, maybeToAttr toAttrFrStr "remap" (citetitleRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (citetitleXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (citetitleRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (citetitleArch v)
	, maybeToAttr toAttrFrStr "condition" (citetitleCondition v)
	, maybeToAttr toAttrFrStr "conformance" (citetitleConformance v)
	, maybeToAttr toAttrFrStr "os" (citetitleOs v)
	, maybeToAttr toAttrFrStr "revision" (citetitleRevision v)
	, maybeToAttr toAttrFrStr "security" (citetitleSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (citetitleUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (citetitleVendor v)
	, maybeToAttr toAttrFrStr "role" (citetitleRole v)
	]
instance XmlContent Citetitle_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Citetitle_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Citetitle_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Citetitle_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Citetitle_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Citetitle_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Citetitle_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Citetitle_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Citetitle_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Citetitle_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Citetitle_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Citetitle_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Citetitle_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Citetitle_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Citetitle_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Citetitle_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Citetitle_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Citetitle_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Citetitle_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Citetitle_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Citetitle_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Citetitle_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Citetitle_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Citetitle_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Citetitle_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Citetitle_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Citetitle_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Citetitle_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Citetitle_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Citetitle_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Citetitle_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Citetitle_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Citetitle_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Citetitle_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Citetitle_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Citetitle_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Citetitle_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Citetitle_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Citetitle_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Citetitle_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Citetitle_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Citetitle_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Citetitle_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Citetitle_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Citetitle_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Citetitle_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Citetitle_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Citetitle_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Citetitle_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Citetitle_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Citetitle_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Citetitle_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Citetitle_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Citetitle_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Citetitle_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Citetitle_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Citetitle_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Citetitle_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Citetitle_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Citetitle_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Citetitle_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Citetitle_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Citetitle_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Citetitle_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Citetitle_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Citetitle_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Citetitle_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Citetitle_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Citetitle_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Citetitle_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Citetitle_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Citetitle_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Citetitle_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Citetitle_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Citetitle_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Citetitle_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Citetitle_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Citetitle_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Citetitle_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Citetitle_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Citetitle_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Citetitle_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Citetitle_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Citetitle_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Citetitle_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Citetitle_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Citetitle_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Citetitle_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Citetitle_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Citetitle_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Citetitle_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Citetitle_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Citetitle_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Citetitle_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Citetitle_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Citetitle_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Citetitle_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Citetitle_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Citetitle_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Citetitle_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Citetitle_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Citetitle_Str a) = toText a
    toElem (Citetitle_Footnoteref a) = toElem a
    toElem (Citetitle_Xref a) = toElem a
    toElem (Citetitle_Abbrev a) = toElem a
    toElem (Citetitle_Acronym a) = toElem a
    toElem (Citetitle_Citation a) = toElem a
    toElem (Citetitle_Citerefentry a) = toElem a
    toElem (Citetitle_Citetitle a) = toElem a
    toElem (Citetitle_Emphasis a) = toElem a
    toElem (Citetitle_Firstterm a) = toElem a
    toElem (Citetitle_Foreignphrase a) = toElem a
    toElem (Citetitle_Glossterm a) = toElem a
    toElem (Citetitle_Footnote a) = toElem a
    toElem (Citetitle_Phrase a) = toElem a
    toElem (Citetitle_Quote a) = toElem a
    toElem (Citetitle_Trademark a) = toElem a
    toElem (Citetitle_Wordasword a) = toElem a
    toElem (Citetitle_Personname a) = toElem a
    toElem (Citetitle_Link a) = toElem a
    toElem (Citetitle_Olink a) = toElem a
    toElem (Citetitle_Ulink a) = toElem a
    toElem (Citetitle_Action a) = toElem a
    toElem (Citetitle_Application a) = toElem a
    toElem (Citetitle_Classname a) = toElem a
    toElem (Citetitle_Methodname a) = toElem a
    toElem (Citetitle_Interfacename a) = toElem a
    toElem (Citetitle_Exceptionname a) = toElem a
    toElem (Citetitle_Ooclass a) = toElem a
    toElem (Citetitle_Oointerface a) = toElem a
    toElem (Citetitle_Ooexception a) = toElem a
    toElem (Citetitle_Command a) = toElem a
    toElem (Citetitle_Computeroutput a) = toElem a
    toElem (Citetitle_Database a) = toElem a
    toElem (Citetitle_Email a) = toElem a
    toElem (Citetitle_Envar a) = toElem a
    toElem (Citetitle_Errorcode a) = toElem a
    toElem (Citetitle_Errorname a) = toElem a
    toElem (Citetitle_Errortype a) = toElem a
    toElem (Citetitle_Errortext a) = toElem a
    toElem (Citetitle_Filename a) = toElem a
    toElem (Citetitle_Function a) = toElem a
    toElem (Citetitle_Guibutton a) = toElem a
    toElem (Citetitle_Guiicon a) = toElem a
    toElem (Citetitle_Guilabel a) = toElem a
    toElem (Citetitle_Guimenu a) = toElem a
    toElem (Citetitle_Guimenuitem a) = toElem a
    toElem (Citetitle_Guisubmenu a) = toElem a
    toElem (Citetitle_Hardware a) = toElem a
    toElem (Citetitle_Interface a) = toElem a
    toElem (Citetitle_Keycap a) = toElem a
    toElem (Citetitle_Keycode a) = toElem a
    toElem (Citetitle_Keycombo a) = toElem a
    toElem (Citetitle_Keysym a) = toElem a
    toElem (Citetitle_Literal a) = toElem a
    toElem (Citetitle_Constant a) = toElem a
    toElem (Citetitle_Markup a) = toElem a
    toElem (Citetitle_Medialabel a) = toElem a
    toElem (Citetitle_Menuchoice a) = toElem a
    toElem (Citetitle_Mousebutton a) = toElem a
    toElem (Citetitle_Option a) = toElem a
    toElem (Citetitle_Optional a) = toElem a
    toElem (Citetitle_Parameter a) = toElem a
    toElem (Citetitle_Prompt a) = toElem a
    toElem (Citetitle_Property a) = toElem a
    toElem (Citetitle_Replaceable a) = toElem a
    toElem (Citetitle_Returnvalue a) = toElem a
    toElem (Citetitle_Sgmltag a) = toElem a
    toElem (Citetitle_Structfield a) = toElem a
    toElem (Citetitle_Structname a) = toElem a
    toElem (Citetitle_Symbol a) = toElem a
    toElem (Citetitle_Systemitem a) = toElem a
    toElem (Citetitle_Token a) = toElem a
    toElem (Citetitle_Type a) = toElem a
    toElem (Citetitle_Userinput a) = toElem a
    toElem (Citetitle_Varname a) = toElem a
    toElem (Citetitle_Anchor a) = toElem a
    toElem (Citetitle_Author a) = toElem a
    toElem (Citetitle_Authorinitials a) = toElem a
    toElem (Citetitle_Corpauthor a) = toElem a
    toElem (Citetitle_Modespec a) = toElem a
    toElem (Citetitle_Othercredit a) = toElem a
    toElem (Citetitle_Productname a) = toElem a
    toElem (Citetitle_Productnumber a) = toElem a
    toElem (Citetitle_Revhistory a) = toElem a
    toElem (Citetitle_Remark a) = toElem a
    toElem (Citetitle_Subscript a) = toElem a
    toElem (Citetitle_Superscript a) = toElem a
    toElem (Citetitle_Inlinegraphic a) = toElem a
    toElem (Citetitle_Inlinemediaobject a) = toElem a
    toElem (Citetitle_Inlineequation a) = toElem a
    toElem (Citetitle_Synopsis a) = toElem a
    toElem (Citetitle_Cmdsynopsis a) = toElem a
    toElem (Citetitle_Funcsynopsis a) = toElem a
    toElem (Citetitle_Classsynopsis a) = toElem a
    toElem (Citetitle_Fieldsynopsis a) = toElem a
    toElem (Citetitle_Constructorsynopsis a) = toElem a
    toElem (Citetitle_Destructorsynopsis a) = toElem a
    toElem (Citetitle_Methodsynopsis a) = toElem a
    toElem (Citetitle_Indexterm a) = toElem a
    toElem (Citetitle_Beginpage a) = toElem a
instance XmlAttrType Citetitle_Pubwork where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "article" = Just Citetitle_Pubwork_Article
	    translate "book" = Just Citetitle_Pubwork_Book
	    translate "chapter" = Just Citetitle_Pubwork_Chapter
	    translate "part" = Just Citetitle_Pubwork_Part
	    translate "refentry" = Just Citetitle_Pubwork_Refentry
	    translate "section" = Just Citetitle_Pubwork_Section
	    translate "journal" = Just Citetitle_Pubwork_Journal
	    translate "series" = Just Citetitle_Pubwork_Series
	    translate "set" = Just Citetitle_Pubwork_Set
	    translate "manuscript" = Just Citetitle_Pubwork_Manuscript
	    translate _ = Nothing
    toAttrFrTyp n Citetitle_Pubwork_Article = Just (n, str2attr "article")
    toAttrFrTyp n Citetitle_Pubwork_Book = Just (n, str2attr "book")
    toAttrFrTyp n Citetitle_Pubwork_Chapter = Just (n, str2attr "chapter")
    toAttrFrTyp n Citetitle_Pubwork_Part = Just (n, str2attr "part")
    toAttrFrTyp n Citetitle_Pubwork_Refentry = Just (n, str2attr "refentry")
    toAttrFrTyp n Citetitle_Pubwork_Section = Just (n, str2attr "section")
    toAttrFrTyp n Citetitle_Pubwork_Journal = Just (n, str2attr "journal")
    toAttrFrTyp n Citetitle_Pubwork_Series = Just (n, str2attr "series")
    toAttrFrTyp n Citetitle_Pubwork_Set = Just (n, str2attr "set")
    toAttrFrTyp n Citetitle_Pubwork_Manuscript = Just (n, str2attr "manuscript")
instance XmlAttrType Citetitle_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Citetitle_Revisionflag_Changed
	    translate "added" = Just Citetitle_Revisionflag_Added
	    translate "deleted" = Just Citetitle_Revisionflag_Deleted
	    translate "off" = Just Citetitle_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Citetitle_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Citetitle_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Citetitle_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Citetitle_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Emphasis where
    fromElem (CElem (Elem "emphasis" as c0):rest) =
	(\(a,ca)->
	   (Just (Emphasis (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Emphasis as a) =
	[CElem (Elem "emphasis" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Emphasis_Attrs where
    fromAttrs as =
	Emphasis_Attrs
	  { emphasisId = possibleA fromAttrToStr "id" as
	  , emphasisLang = possibleA fromAttrToStr "lang" as
	  , emphasisRemap = possibleA fromAttrToStr "remap" as
	  , emphasisXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , emphasisRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , emphasisArch = possibleA fromAttrToStr "arch" as
	  , emphasisCondition = possibleA fromAttrToStr "condition" as
	  , emphasisConformance = possibleA fromAttrToStr "conformance" as
	  , emphasisOs = possibleA fromAttrToStr "os" as
	  , emphasisRevision = possibleA fromAttrToStr "revision" as
	  , emphasisSecurity = possibleA fromAttrToStr "security" as
	  , emphasisUserlevel = possibleA fromAttrToStr "userlevel" as
	  , emphasisVendor = possibleA fromAttrToStr "vendor" as
	  , emphasisRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (emphasisId v)
	, maybeToAttr toAttrFrStr "lang" (emphasisLang v)
	, maybeToAttr toAttrFrStr "remap" (emphasisRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (emphasisXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (emphasisRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (emphasisArch v)
	, maybeToAttr toAttrFrStr "condition" (emphasisCondition v)
	, maybeToAttr toAttrFrStr "conformance" (emphasisConformance v)
	, maybeToAttr toAttrFrStr "os" (emphasisOs v)
	, maybeToAttr toAttrFrStr "revision" (emphasisRevision v)
	, maybeToAttr toAttrFrStr "security" (emphasisSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (emphasisUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (emphasisVendor v)
	, maybeToAttr toAttrFrStr "role" (emphasisRole v)
	]
instance XmlContent Emphasis_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Emphasis_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Emphasis_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Emphasis_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Emphasis_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Emphasis_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Emphasis_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Emphasis_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Emphasis_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Emphasis_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Emphasis_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Emphasis_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Emphasis_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Emphasis_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Emphasis_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Emphasis_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Emphasis_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Emphasis_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Emphasis_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Emphasis_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Emphasis_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Emphasis_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Emphasis_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Emphasis_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Emphasis_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Emphasis_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Emphasis_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Emphasis_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Emphasis_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Emphasis_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Emphasis_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Emphasis_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Emphasis_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Emphasis_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Emphasis_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Emphasis_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Emphasis_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Emphasis_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Emphasis_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Emphasis_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Emphasis_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Emphasis_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Emphasis_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Emphasis_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Emphasis_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Emphasis_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Emphasis_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Emphasis_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Emphasis_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Emphasis_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Emphasis_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Emphasis_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Emphasis_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Emphasis_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Emphasis_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Emphasis_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Emphasis_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Emphasis_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Emphasis_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Emphasis_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Emphasis_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Emphasis_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Emphasis_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Emphasis_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Emphasis_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Emphasis_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Emphasis_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Emphasis_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Emphasis_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Emphasis_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Emphasis_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Emphasis_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Emphasis_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Emphasis_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Emphasis_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Emphasis_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Emphasis_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Emphasis_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Emphasis_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Emphasis_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Emphasis_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Emphasis_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Emphasis_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Emphasis_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Emphasis_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Emphasis_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Emphasis_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Emphasis_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Emphasis_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Emphasis_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Emphasis_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Emphasis_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Emphasis_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Emphasis_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Emphasis_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Emphasis_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Emphasis_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Emphasis_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Emphasis_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Emphasis_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Emphasis_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Emphasis_Str a) = toText a
    toElem (Emphasis_Footnoteref a) = toElem a
    toElem (Emphasis_Xref a) = toElem a
    toElem (Emphasis_Abbrev a) = toElem a
    toElem (Emphasis_Acronym a) = toElem a
    toElem (Emphasis_Citation a) = toElem a
    toElem (Emphasis_Citerefentry a) = toElem a
    toElem (Emphasis_Citetitle a) = toElem a
    toElem (Emphasis_Emphasis a) = toElem a
    toElem (Emphasis_Firstterm a) = toElem a
    toElem (Emphasis_Foreignphrase a) = toElem a
    toElem (Emphasis_Glossterm a) = toElem a
    toElem (Emphasis_Footnote a) = toElem a
    toElem (Emphasis_Phrase a) = toElem a
    toElem (Emphasis_Quote a) = toElem a
    toElem (Emphasis_Trademark a) = toElem a
    toElem (Emphasis_Wordasword a) = toElem a
    toElem (Emphasis_Personname a) = toElem a
    toElem (Emphasis_Link a) = toElem a
    toElem (Emphasis_Olink a) = toElem a
    toElem (Emphasis_Ulink a) = toElem a
    toElem (Emphasis_Action a) = toElem a
    toElem (Emphasis_Application a) = toElem a
    toElem (Emphasis_Classname a) = toElem a
    toElem (Emphasis_Methodname a) = toElem a
    toElem (Emphasis_Interfacename a) = toElem a
    toElem (Emphasis_Exceptionname a) = toElem a
    toElem (Emphasis_Ooclass a) = toElem a
    toElem (Emphasis_Oointerface a) = toElem a
    toElem (Emphasis_Ooexception a) = toElem a
    toElem (Emphasis_Command a) = toElem a
    toElem (Emphasis_Computeroutput a) = toElem a
    toElem (Emphasis_Database a) = toElem a
    toElem (Emphasis_Email a) = toElem a
    toElem (Emphasis_Envar a) = toElem a
    toElem (Emphasis_Errorcode a) = toElem a
    toElem (Emphasis_Errorname a) = toElem a
    toElem (Emphasis_Errortype a) = toElem a
    toElem (Emphasis_Errortext a) = toElem a
    toElem (Emphasis_Filename a) = toElem a
    toElem (Emphasis_Function a) = toElem a
    toElem (Emphasis_Guibutton a) = toElem a
    toElem (Emphasis_Guiicon a) = toElem a
    toElem (Emphasis_Guilabel a) = toElem a
    toElem (Emphasis_Guimenu a) = toElem a
    toElem (Emphasis_Guimenuitem a) = toElem a
    toElem (Emphasis_Guisubmenu a) = toElem a
    toElem (Emphasis_Hardware a) = toElem a
    toElem (Emphasis_Interface a) = toElem a
    toElem (Emphasis_Keycap a) = toElem a
    toElem (Emphasis_Keycode a) = toElem a
    toElem (Emphasis_Keycombo a) = toElem a
    toElem (Emphasis_Keysym a) = toElem a
    toElem (Emphasis_Literal a) = toElem a
    toElem (Emphasis_Constant a) = toElem a
    toElem (Emphasis_Markup a) = toElem a
    toElem (Emphasis_Medialabel a) = toElem a
    toElem (Emphasis_Menuchoice a) = toElem a
    toElem (Emphasis_Mousebutton a) = toElem a
    toElem (Emphasis_Option a) = toElem a
    toElem (Emphasis_Optional a) = toElem a
    toElem (Emphasis_Parameter a) = toElem a
    toElem (Emphasis_Prompt a) = toElem a
    toElem (Emphasis_Property a) = toElem a
    toElem (Emphasis_Replaceable a) = toElem a
    toElem (Emphasis_Returnvalue a) = toElem a
    toElem (Emphasis_Sgmltag a) = toElem a
    toElem (Emphasis_Structfield a) = toElem a
    toElem (Emphasis_Structname a) = toElem a
    toElem (Emphasis_Symbol a) = toElem a
    toElem (Emphasis_Systemitem a) = toElem a
    toElem (Emphasis_Token a) = toElem a
    toElem (Emphasis_Type a) = toElem a
    toElem (Emphasis_Userinput a) = toElem a
    toElem (Emphasis_Varname a) = toElem a
    toElem (Emphasis_Anchor a) = toElem a
    toElem (Emphasis_Author a) = toElem a
    toElem (Emphasis_Authorinitials a) = toElem a
    toElem (Emphasis_Corpauthor a) = toElem a
    toElem (Emphasis_Modespec a) = toElem a
    toElem (Emphasis_Othercredit a) = toElem a
    toElem (Emphasis_Productname a) = toElem a
    toElem (Emphasis_Productnumber a) = toElem a
    toElem (Emphasis_Revhistory a) = toElem a
    toElem (Emphasis_Remark a) = toElem a
    toElem (Emphasis_Subscript a) = toElem a
    toElem (Emphasis_Superscript a) = toElem a
    toElem (Emphasis_Inlinegraphic a) = toElem a
    toElem (Emphasis_Inlinemediaobject a) = toElem a
    toElem (Emphasis_Inlineequation a) = toElem a
    toElem (Emphasis_Synopsis a) = toElem a
    toElem (Emphasis_Cmdsynopsis a) = toElem a
    toElem (Emphasis_Funcsynopsis a) = toElem a
    toElem (Emphasis_Classsynopsis a) = toElem a
    toElem (Emphasis_Fieldsynopsis a) = toElem a
    toElem (Emphasis_Constructorsynopsis a) = toElem a
    toElem (Emphasis_Destructorsynopsis a) = toElem a
    toElem (Emphasis_Methodsynopsis a) = toElem a
    toElem (Emphasis_Indexterm a) = toElem a
    toElem (Emphasis_Beginpage a) = toElem a
instance XmlAttrType Emphasis_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Emphasis_Revisionflag_Changed
	    translate "added" = Just Emphasis_Revisionflag_Added
	    translate "deleted" = Just Emphasis_Revisionflag_Deleted
	    translate "off" = Just Emphasis_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Emphasis_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Emphasis_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Emphasis_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Emphasis_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Firstterm where
    fromElem (CElem (Elem "firstterm" as c0):rest) =
	(\(a,ca)->
	   (Just (Firstterm (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Firstterm as a) =
	[CElem (Elem "firstterm" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Firstterm_Attrs where
    fromAttrs as =
	Firstterm_Attrs
	  { firsttermLinkend = possibleA fromAttrToStr "linkend" as
	  , firsttermId = possibleA fromAttrToStr "id" as
	  , firsttermLang = possibleA fromAttrToStr "lang" as
	  , firsttermRemap = possibleA fromAttrToStr "remap" as
	  , firsttermXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , firsttermRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , firsttermArch = possibleA fromAttrToStr "arch" as
	  , firsttermCondition = possibleA fromAttrToStr "condition" as
	  , firsttermConformance = possibleA fromAttrToStr "conformance" as
	  , firsttermOs = possibleA fromAttrToStr "os" as
	  , firsttermRevision = possibleA fromAttrToStr "revision" as
	  , firsttermSecurity = possibleA fromAttrToStr "security" as
	  , firsttermUserlevel = possibleA fromAttrToStr "userlevel" as
	  , firsttermVendor = possibleA fromAttrToStr "vendor" as
	  , firsttermRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "linkend" (firsttermLinkend v)
	, maybeToAttr toAttrFrStr "id" (firsttermId v)
	, maybeToAttr toAttrFrStr "lang" (firsttermLang v)
	, maybeToAttr toAttrFrStr "remap" (firsttermRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (firsttermXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (firsttermRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (firsttermArch v)
	, maybeToAttr toAttrFrStr "condition" (firsttermCondition v)
	, maybeToAttr toAttrFrStr "conformance" (firsttermConformance v)
	, maybeToAttr toAttrFrStr "os" (firsttermOs v)
	, maybeToAttr toAttrFrStr "revision" (firsttermRevision v)
	, maybeToAttr toAttrFrStr "security" (firsttermSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (firsttermUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (firsttermVendor v)
	, maybeToAttr toAttrFrStr "role" (firsttermRole v)
	]
instance XmlContent Firstterm_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Firstterm_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Firstterm_Acronym a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Firstterm_Emphasis a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Firstterm_Trademark a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Firstterm_Link a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Firstterm_Olink a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Firstterm_Ulink a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Firstterm_Anchor a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Firstterm_Remark a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Firstterm_Subscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Firstterm_Superscript a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Firstterm_Inlinegraphic a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Firstterm_Inlinemediaobject a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Firstterm_Indexterm a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Firstterm_Beginpage a), rest)
															(_,_) ->
															    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Firstterm_Str a) = toText a
    toElem (Firstterm_Acronym a) = toElem a
    toElem (Firstterm_Emphasis a) = toElem a
    toElem (Firstterm_Trademark a) = toElem a
    toElem (Firstterm_Link a) = toElem a
    toElem (Firstterm_Olink a) = toElem a
    toElem (Firstterm_Ulink a) = toElem a
    toElem (Firstterm_Anchor a) = toElem a
    toElem (Firstterm_Remark a) = toElem a
    toElem (Firstterm_Subscript a) = toElem a
    toElem (Firstterm_Superscript a) = toElem a
    toElem (Firstterm_Inlinegraphic a) = toElem a
    toElem (Firstterm_Inlinemediaobject a) = toElem a
    toElem (Firstterm_Indexterm a) = toElem a
    toElem (Firstterm_Beginpage a) = toElem a
instance XmlAttrType Firstterm_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Firstterm_Revisionflag_Changed
	    translate "added" = Just Firstterm_Revisionflag_Added
	    translate "deleted" = Just Firstterm_Revisionflag_Deleted
	    translate "off" = Just Firstterm_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Firstterm_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Firstterm_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Firstterm_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Firstterm_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Foreignphrase where
    fromElem (CElem (Elem "foreignphrase" as c0):rest) =
	(\(a,ca)->
	   (Just (Foreignphrase (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Foreignphrase as a) =
	[CElem (Elem "foreignphrase" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Foreignphrase_Attrs where
    fromAttrs as =
	Foreignphrase_Attrs
	  { foreignphraseId = possibleA fromAttrToStr "id" as
	  , foreignphraseLang = possibleA fromAttrToStr "lang" as
	  , foreignphraseRemap = possibleA fromAttrToStr "remap" as
	  , foreignphraseXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , foreignphraseRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , foreignphraseArch = possibleA fromAttrToStr "arch" as
	  , foreignphraseCondition = possibleA fromAttrToStr "condition" as
	  , foreignphraseConformance = possibleA fromAttrToStr "conformance" as
	  , foreignphraseOs = possibleA fromAttrToStr "os" as
	  , foreignphraseRevision = possibleA fromAttrToStr "revision" as
	  , foreignphraseSecurity = possibleA fromAttrToStr "security" as
	  , foreignphraseUserlevel = possibleA fromAttrToStr "userlevel" as
	  , foreignphraseVendor = possibleA fromAttrToStr "vendor" as
	  , foreignphraseRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (foreignphraseId v)
	, maybeToAttr toAttrFrStr "lang" (foreignphraseLang v)
	, maybeToAttr toAttrFrStr "remap" (foreignphraseRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (foreignphraseXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (foreignphraseRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (foreignphraseArch v)
	, maybeToAttr toAttrFrStr "condition" (foreignphraseCondition v)
	, maybeToAttr toAttrFrStr "conformance" (foreignphraseConformance v)
	, maybeToAttr toAttrFrStr "os" (foreignphraseOs v)
	, maybeToAttr toAttrFrStr "revision" (foreignphraseRevision v)
	, maybeToAttr toAttrFrStr "security" (foreignphraseSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (foreignphraseUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (foreignphraseVendor v)
	, maybeToAttr toAttrFrStr "role" (foreignphraseRole v)
	]
instance XmlContent Foreignphrase_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Foreignphrase_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Foreignphrase_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Foreignphrase_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Foreignphrase_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Foreignphrase_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Foreignphrase_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Foreignphrase_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Foreignphrase_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Foreignphrase_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Foreignphrase_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Foreignphrase_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Foreignphrase_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Foreignphrase_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Foreignphrase_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Foreignphrase_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Foreignphrase_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Foreignphrase_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Foreignphrase_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Foreignphrase_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Foreignphrase_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Foreignphrase_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Foreignphrase_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Foreignphrase_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Foreignphrase_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Foreignphrase_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Foreignphrase_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Foreignphrase_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Foreignphrase_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Foreignphrase_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Foreignphrase_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Foreignphrase_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Foreignphrase_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Foreignphrase_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Foreignphrase_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Foreignphrase_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Foreignphrase_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Foreignphrase_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Foreignphrase_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Foreignphrase_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Foreignphrase_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Foreignphrase_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Foreignphrase_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Foreignphrase_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Foreignphrase_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Foreignphrase_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Foreignphrase_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Foreignphrase_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Foreignphrase_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Foreignphrase_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Foreignphrase_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Foreignphrase_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Foreignphrase_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Foreignphrase_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Foreignphrase_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Foreignphrase_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Foreignphrase_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Foreignphrase_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Foreignphrase_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Foreignphrase_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Foreignphrase_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Foreignphrase_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Foreignphrase_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Foreignphrase_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Foreignphrase_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Foreignphrase_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Foreignphrase_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Foreignphrase_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Foreignphrase_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Foreignphrase_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Foreignphrase_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Foreignphrase_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Foreignphrase_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Foreignphrase_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Foreignphrase_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Foreignphrase_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Foreignphrase_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Foreignphrase_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Foreignphrase_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Foreignphrase_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Foreignphrase_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Foreignphrase_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Foreignphrase_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Foreignphrase_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Foreignphrase_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Foreignphrase_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Foreignphrase_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Foreignphrase_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Foreignphrase_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Foreignphrase_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Foreignphrase_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Foreignphrase_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Foreignphrase_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Foreignphrase_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Foreignphrase_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Foreignphrase_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Foreignphrase_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Foreignphrase_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Foreignphrase_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Foreignphrase_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Foreignphrase_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Foreignphrase_Str a) = toText a
    toElem (Foreignphrase_Footnoteref a) = toElem a
    toElem (Foreignphrase_Xref a) = toElem a
    toElem (Foreignphrase_Abbrev a) = toElem a
    toElem (Foreignphrase_Acronym a) = toElem a
    toElem (Foreignphrase_Citation a) = toElem a
    toElem (Foreignphrase_Citerefentry a) = toElem a
    toElem (Foreignphrase_Citetitle a) = toElem a
    toElem (Foreignphrase_Emphasis a) = toElem a
    toElem (Foreignphrase_Firstterm a) = toElem a
    toElem (Foreignphrase_Foreignphrase a) = toElem a
    toElem (Foreignphrase_Glossterm a) = toElem a
    toElem (Foreignphrase_Footnote a) = toElem a
    toElem (Foreignphrase_Phrase a) = toElem a
    toElem (Foreignphrase_Quote a) = toElem a
    toElem (Foreignphrase_Trademark a) = toElem a
    toElem (Foreignphrase_Wordasword a) = toElem a
    toElem (Foreignphrase_Personname a) = toElem a
    toElem (Foreignphrase_Link a) = toElem a
    toElem (Foreignphrase_Olink a) = toElem a
    toElem (Foreignphrase_Ulink a) = toElem a
    toElem (Foreignphrase_Action a) = toElem a
    toElem (Foreignphrase_Application a) = toElem a
    toElem (Foreignphrase_Classname a) = toElem a
    toElem (Foreignphrase_Methodname a) = toElem a
    toElem (Foreignphrase_Interfacename a) = toElem a
    toElem (Foreignphrase_Exceptionname a) = toElem a
    toElem (Foreignphrase_Ooclass a) = toElem a
    toElem (Foreignphrase_Oointerface a) = toElem a
    toElem (Foreignphrase_Ooexception a) = toElem a
    toElem (Foreignphrase_Command a) = toElem a
    toElem (Foreignphrase_Computeroutput a) = toElem a
    toElem (Foreignphrase_Database a) = toElem a
    toElem (Foreignphrase_Email a) = toElem a
    toElem (Foreignphrase_Envar a) = toElem a
    toElem (Foreignphrase_Errorcode a) = toElem a
    toElem (Foreignphrase_Errorname a) = toElem a
    toElem (Foreignphrase_Errortype a) = toElem a
    toElem (Foreignphrase_Errortext a) = toElem a
    toElem (Foreignphrase_Filename a) = toElem a
    toElem (Foreignphrase_Function a) = toElem a
    toElem (Foreignphrase_Guibutton a) = toElem a
    toElem (Foreignphrase_Guiicon a) = toElem a
    toElem (Foreignphrase_Guilabel a) = toElem a
    toElem (Foreignphrase_Guimenu a) = toElem a
    toElem (Foreignphrase_Guimenuitem a) = toElem a
    toElem (Foreignphrase_Guisubmenu a) = toElem a
    toElem (Foreignphrase_Hardware a) = toElem a
    toElem (Foreignphrase_Interface a) = toElem a
    toElem (Foreignphrase_Keycap a) = toElem a
    toElem (Foreignphrase_Keycode a) = toElem a
    toElem (Foreignphrase_Keycombo a) = toElem a
    toElem (Foreignphrase_Keysym a) = toElem a
    toElem (Foreignphrase_Literal a) = toElem a
    toElem (Foreignphrase_Constant a) = toElem a
    toElem (Foreignphrase_Markup a) = toElem a
    toElem (Foreignphrase_Medialabel a) = toElem a
    toElem (Foreignphrase_Menuchoice a) = toElem a
    toElem (Foreignphrase_Mousebutton a) = toElem a
    toElem (Foreignphrase_Option a) = toElem a
    toElem (Foreignphrase_Optional a) = toElem a
    toElem (Foreignphrase_Parameter a) = toElem a
    toElem (Foreignphrase_Prompt a) = toElem a
    toElem (Foreignphrase_Property a) = toElem a
    toElem (Foreignphrase_Replaceable a) = toElem a
    toElem (Foreignphrase_Returnvalue a) = toElem a
    toElem (Foreignphrase_Sgmltag a) = toElem a
    toElem (Foreignphrase_Structfield a) = toElem a
    toElem (Foreignphrase_Structname a) = toElem a
    toElem (Foreignphrase_Symbol a) = toElem a
    toElem (Foreignphrase_Systemitem a) = toElem a
    toElem (Foreignphrase_Token a) = toElem a
    toElem (Foreignphrase_Type a) = toElem a
    toElem (Foreignphrase_Userinput a) = toElem a
    toElem (Foreignphrase_Varname a) = toElem a
    toElem (Foreignphrase_Anchor a) = toElem a
    toElem (Foreignphrase_Author a) = toElem a
    toElem (Foreignphrase_Authorinitials a) = toElem a
    toElem (Foreignphrase_Corpauthor a) = toElem a
    toElem (Foreignphrase_Modespec a) = toElem a
    toElem (Foreignphrase_Othercredit a) = toElem a
    toElem (Foreignphrase_Productname a) = toElem a
    toElem (Foreignphrase_Productnumber a) = toElem a
    toElem (Foreignphrase_Revhistory a) = toElem a
    toElem (Foreignphrase_Remark a) = toElem a
    toElem (Foreignphrase_Subscript a) = toElem a
    toElem (Foreignphrase_Superscript a) = toElem a
    toElem (Foreignphrase_Inlinegraphic a) = toElem a
    toElem (Foreignphrase_Inlinemediaobject a) = toElem a
    toElem (Foreignphrase_Inlineequation a) = toElem a
    toElem (Foreignphrase_Synopsis a) = toElem a
    toElem (Foreignphrase_Cmdsynopsis a) = toElem a
    toElem (Foreignphrase_Funcsynopsis a) = toElem a
    toElem (Foreignphrase_Classsynopsis a) = toElem a
    toElem (Foreignphrase_Fieldsynopsis a) = toElem a
    toElem (Foreignphrase_Constructorsynopsis a) = toElem a
    toElem (Foreignphrase_Destructorsynopsis a) = toElem a
    toElem (Foreignphrase_Methodsynopsis a) = toElem a
    toElem (Foreignphrase_Indexterm a) = toElem a
    toElem (Foreignphrase_Beginpage a) = toElem a
instance XmlAttrType Foreignphrase_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Foreignphrase_Revisionflag_Changed
	    translate "added" = Just Foreignphrase_Revisionflag_Added
	    translate "deleted" = Just Foreignphrase_Revisionflag_Deleted
	    translate "off" = Just Foreignphrase_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Foreignphrase_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Foreignphrase_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Foreignphrase_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Foreignphrase_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Glossterm where
    fromElem (CElem (Elem "glossterm" as c0):rest) =
	(\(a,ca)->
	   (Just (Glossterm (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Glossterm as a) =
	[CElem (Elem "glossterm" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Glossterm_Attrs where
    fromAttrs as =
	Glossterm_Attrs
	  { glosstermLinkend = possibleA fromAttrToStr "linkend" as
	  , glosstermBaseform = possibleA fromAttrToStr "baseform" as
	  , glosstermId = possibleA fromAttrToStr "id" as
	  , glosstermLang = possibleA fromAttrToStr "lang" as
	  , glosstermRemap = possibleA fromAttrToStr "remap" as
	  , glosstermXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , glosstermRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , glosstermArch = possibleA fromAttrToStr "arch" as
	  , glosstermCondition = possibleA fromAttrToStr "condition" as
	  , glosstermConformance = possibleA fromAttrToStr "conformance" as
	  , glosstermOs = possibleA fromAttrToStr "os" as
	  , glosstermRevision = possibleA fromAttrToStr "revision" as
	  , glosstermSecurity = possibleA fromAttrToStr "security" as
	  , glosstermUserlevel = possibleA fromAttrToStr "userlevel" as
	  , glosstermVendor = possibleA fromAttrToStr "vendor" as
	  , glosstermRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "linkend" (glosstermLinkend v)
	, maybeToAttr toAttrFrStr "baseform" (glosstermBaseform v)
	, maybeToAttr toAttrFrStr "id" (glosstermId v)
	, maybeToAttr toAttrFrStr "lang" (glosstermLang v)
	, maybeToAttr toAttrFrStr "remap" (glosstermRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (glosstermXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (glosstermRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (glosstermArch v)
	, maybeToAttr toAttrFrStr "condition" (glosstermCondition v)
	, maybeToAttr toAttrFrStr "conformance" (glosstermConformance v)
	, maybeToAttr toAttrFrStr "os" (glosstermOs v)
	, maybeToAttr toAttrFrStr "revision" (glosstermRevision v)
	, maybeToAttr toAttrFrStr "security" (glosstermSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (glosstermUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (glosstermVendor v)
	, maybeToAttr toAttrFrStr "role" (glosstermRole v)
	]
instance XmlContent Glossterm_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Glossterm_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Glossterm_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Glossterm_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Glossterm_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Glossterm_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Glossterm_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Glossterm_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Glossterm_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Glossterm_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Glossterm_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Glossterm_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Glossterm_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Glossterm_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Glossterm_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Glossterm_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Glossterm_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Glossterm_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Glossterm_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Glossterm_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Glossterm_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Glossterm_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Glossterm_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Glossterm_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Glossterm_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Glossterm_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Glossterm_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Glossterm_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Glossterm_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Glossterm_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Glossterm_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Glossterm_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Glossterm_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Glossterm_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Glossterm_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Glossterm_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Glossterm_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Glossterm_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Glossterm_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Glossterm_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Glossterm_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Glossterm_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Glossterm_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Glossterm_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Glossterm_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Glossterm_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Glossterm_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Glossterm_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Glossterm_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Glossterm_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Glossterm_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Glossterm_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Glossterm_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Glossterm_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Glossterm_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Glossterm_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Glossterm_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Glossterm_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Glossterm_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Glossterm_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Glossterm_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Glossterm_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Glossterm_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Glossterm_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Glossterm_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Glossterm_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Glossterm_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Glossterm_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Glossterm_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Glossterm_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Glossterm_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Glossterm_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Glossterm_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Glossterm_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Glossterm_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Glossterm_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Glossterm_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Glossterm_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Glossterm_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Glossterm_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Glossterm_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Glossterm_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Glossterm_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Glossterm_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Glossterm_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Glossterm_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Glossterm_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Glossterm_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Glossterm_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Glossterm_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Glossterm_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Glossterm_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Glossterm_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Glossterm_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Glossterm_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Glossterm_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Glossterm_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Glossterm_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Glossterm_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Glossterm_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Glossterm_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Glossterm_Str a) = toText a
    toElem (Glossterm_Footnoteref a) = toElem a
    toElem (Glossterm_Xref a) = toElem a
    toElem (Glossterm_Abbrev a) = toElem a
    toElem (Glossterm_Acronym a) = toElem a
    toElem (Glossterm_Citation a) = toElem a
    toElem (Glossterm_Citerefentry a) = toElem a
    toElem (Glossterm_Citetitle a) = toElem a
    toElem (Glossterm_Emphasis a) = toElem a
    toElem (Glossterm_Firstterm a) = toElem a
    toElem (Glossterm_Foreignphrase a) = toElem a
    toElem (Glossterm_Glossterm a) = toElem a
    toElem (Glossterm_Footnote a) = toElem a
    toElem (Glossterm_Phrase a) = toElem a
    toElem (Glossterm_Quote a) = toElem a
    toElem (Glossterm_Trademark a) = toElem a
    toElem (Glossterm_Wordasword a) = toElem a
    toElem (Glossterm_Personname a) = toElem a
    toElem (Glossterm_Link a) = toElem a
    toElem (Glossterm_Olink a) = toElem a
    toElem (Glossterm_Ulink a) = toElem a
    toElem (Glossterm_Action a) = toElem a
    toElem (Glossterm_Application a) = toElem a
    toElem (Glossterm_Classname a) = toElem a
    toElem (Glossterm_Methodname a) = toElem a
    toElem (Glossterm_Interfacename a) = toElem a
    toElem (Glossterm_Exceptionname a) = toElem a
    toElem (Glossterm_Ooclass a) = toElem a
    toElem (Glossterm_Oointerface a) = toElem a
    toElem (Glossterm_Ooexception a) = toElem a
    toElem (Glossterm_Command a) = toElem a
    toElem (Glossterm_Computeroutput a) = toElem a
    toElem (Glossterm_Database a) = toElem a
    toElem (Glossterm_Email a) = toElem a
    toElem (Glossterm_Envar a) = toElem a
    toElem (Glossterm_Errorcode a) = toElem a
    toElem (Glossterm_Errorname a) = toElem a
    toElem (Glossterm_Errortype a) = toElem a
    toElem (Glossterm_Errortext a) = toElem a
    toElem (Glossterm_Filename a) = toElem a
    toElem (Glossterm_Function a) = toElem a
    toElem (Glossterm_Guibutton a) = toElem a
    toElem (Glossterm_Guiicon a) = toElem a
    toElem (Glossterm_Guilabel a) = toElem a
    toElem (Glossterm_Guimenu a) = toElem a
    toElem (Glossterm_Guimenuitem a) = toElem a
    toElem (Glossterm_Guisubmenu a) = toElem a
    toElem (Glossterm_Hardware a) = toElem a
    toElem (Glossterm_Interface a) = toElem a
    toElem (Glossterm_Keycap a) = toElem a
    toElem (Glossterm_Keycode a) = toElem a
    toElem (Glossterm_Keycombo a) = toElem a
    toElem (Glossterm_Keysym a) = toElem a
    toElem (Glossterm_Literal a) = toElem a
    toElem (Glossterm_Constant a) = toElem a
    toElem (Glossterm_Markup a) = toElem a
    toElem (Glossterm_Medialabel a) = toElem a
    toElem (Glossterm_Menuchoice a) = toElem a
    toElem (Glossterm_Mousebutton a) = toElem a
    toElem (Glossterm_Option a) = toElem a
    toElem (Glossterm_Optional a) = toElem a
    toElem (Glossterm_Parameter a) = toElem a
    toElem (Glossterm_Prompt a) = toElem a
    toElem (Glossterm_Property a) = toElem a
    toElem (Glossterm_Replaceable a) = toElem a
    toElem (Glossterm_Returnvalue a) = toElem a
    toElem (Glossterm_Sgmltag a) = toElem a
    toElem (Glossterm_Structfield a) = toElem a
    toElem (Glossterm_Structname a) = toElem a
    toElem (Glossterm_Symbol a) = toElem a
    toElem (Glossterm_Systemitem a) = toElem a
    toElem (Glossterm_Token a) = toElem a
    toElem (Glossterm_Type a) = toElem a
    toElem (Glossterm_Userinput a) = toElem a
    toElem (Glossterm_Varname a) = toElem a
    toElem (Glossterm_Anchor a) = toElem a
    toElem (Glossterm_Author a) = toElem a
    toElem (Glossterm_Authorinitials a) = toElem a
    toElem (Glossterm_Corpauthor a) = toElem a
    toElem (Glossterm_Modespec a) = toElem a
    toElem (Glossterm_Othercredit a) = toElem a
    toElem (Glossterm_Productname a) = toElem a
    toElem (Glossterm_Productnumber a) = toElem a
    toElem (Glossterm_Revhistory a) = toElem a
    toElem (Glossterm_Remark a) = toElem a
    toElem (Glossterm_Subscript a) = toElem a
    toElem (Glossterm_Superscript a) = toElem a
    toElem (Glossterm_Inlinegraphic a) = toElem a
    toElem (Glossterm_Inlinemediaobject a) = toElem a
    toElem (Glossterm_Inlineequation a) = toElem a
    toElem (Glossterm_Synopsis a) = toElem a
    toElem (Glossterm_Cmdsynopsis a) = toElem a
    toElem (Glossterm_Funcsynopsis a) = toElem a
    toElem (Glossterm_Classsynopsis a) = toElem a
    toElem (Glossterm_Fieldsynopsis a) = toElem a
    toElem (Glossterm_Constructorsynopsis a) = toElem a
    toElem (Glossterm_Destructorsynopsis a) = toElem a
    toElem (Glossterm_Methodsynopsis a) = toElem a
    toElem (Glossterm_Indexterm a) = toElem a
    toElem (Glossterm_Beginpage a) = toElem a
instance XmlAttrType Glossterm_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Glossterm_Revisionflag_Changed
	    translate "added" = Just Glossterm_Revisionflag_Added
	    translate "deleted" = Just Glossterm_Revisionflag_Deleted
	    translate "off" = Just Glossterm_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Glossterm_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Glossterm_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Glossterm_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Glossterm_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Phrase where
    fromElem (CElem (Elem "phrase" as c0):rest) =
	(\(a,ca)->
	   (Just (Phrase (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Phrase as a) =
	[CElem (Elem "phrase" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Phrase_Attrs where
    fromAttrs as =
	Phrase_Attrs
	  { phraseId = possibleA fromAttrToStr "id" as
	  , phraseLang = possibleA fromAttrToStr "lang" as
	  , phraseRemap = possibleA fromAttrToStr "remap" as
	  , phraseXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , phraseRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , phraseArch = possibleA fromAttrToStr "arch" as
	  , phraseCondition = possibleA fromAttrToStr "condition" as
	  , phraseConformance = possibleA fromAttrToStr "conformance" as
	  , phraseOs = possibleA fromAttrToStr "os" as
	  , phraseRevision = possibleA fromAttrToStr "revision" as
	  , phraseSecurity = possibleA fromAttrToStr "security" as
	  , phraseUserlevel = possibleA fromAttrToStr "userlevel" as
	  , phraseVendor = possibleA fromAttrToStr "vendor" as
	  , phraseRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (phraseId v)
	, maybeToAttr toAttrFrStr "lang" (phraseLang v)
	, maybeToAttr toAttrFrStr "remap" (phraseRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (phraseXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (phraseRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (phraseArch v)
	, maybeToAttr toAttrFrStr "condition" (phraseCondition v)
	, maybeToAttr toAttrFrStr "conformance" (phraseConformance v)
	, maybeToAttr toAttrFrStr "os" (phraseOs v)
	, maybeToAttr toAttrFrStr "revision" (phraseRevision v)
	, maybeToAttr toAttrFrStr "security" (phraseSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (phraseUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (phraseVendor v)
	, maybeToAttr toAttrFrStr "role" (phraseRole v)
	]
instance XmlContent Phrase_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Phrase_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Phrase_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Phrase_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Phrase_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Phrase_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Phrase_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Phrase_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Phrase_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Phrase_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Phrase_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Phrase_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Phrase_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Phrase_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Phrase_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Phrase_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Phrase_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Phrase_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Phrase_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Phrase_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Phrase_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Phrase_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Phrase_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Phrase_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Phrase_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Phrase_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Phrase_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Phrase_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Phrase_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Phrase_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Phrase_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Phrase_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Phrase_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Phrase_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Phrase_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Phrase_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Phrase_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Phrase_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Phrase_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Phrase_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Phrase_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Phrase_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Phrase_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Phrase_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Phrase_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Phrase_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Phrase_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Phrase_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Phrase_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Phrase_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Phrase_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Phrase_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Phrase_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Phrase_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Phrase_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Phrase_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Phrase_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Phrase_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Phrase_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Phrase_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Phrase_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Phrase_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Phrase_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Phrase_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Phrase_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Phrase_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Phrase_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Phrase_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Phrase_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Phrase_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Phrase_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Phrase_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Phrase_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Phrase_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Phrase_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Phrase_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Phrase_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Phrase_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Phrase_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Phrase_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Phrase_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Phrase_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Phrase_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Phrase_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Phrase_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Phrase_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Phrase_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Phrase_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Phrase_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Phrase_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Phrase_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Phrase_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Phrase_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Phrase_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Phrase_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Phrase_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Phrase_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Phrase_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Phrase_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Phrase_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Phrase_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Phrase_Str a) = toText a
    toElem (Phrase_Footnoteref a) = toElem a
    toElem (Phrase_Xref a) = toElem a
    toElem (Phrase_Abbrev a) = toElem a
    toElem (Phrase_Acronym a) = toElem a
    toElem (Phrase_Citation a) = toElem a
    toElem (Phrase_Citerefentry a) = toElem a
    toElem (Phrase_Citetitle a) = toElem a
    toElem (Phrase_Emphasis a) = toElem a
    toElem (Phrase_Firstterm a) = toElem a
    toElem (Phrase_Foreignphrase a) = toElem a
    toElem (Phrase_Glossterm a) = toElem a
    toElem (Phrase_Footnote a) = toElem a
    toElem (Phrase_Phrase a) = toElem a
    toElem (Phrase_Quote a) = toElem a
    toElem (Phrase_Trademark a) = toElem a
    toElem (Phrase_Wordasword a) = toElem a
    toElem (Phrase_Personname a) = toElem a
    toElem (Phrase_Link a) = toElem a
    toElem (Phrase_Olink a) = toElem a
    toElem (Phrase_Ulink a) = toElem a
    toElem (Phrase_Action a) = toElem a
    toElem (Phrase_Application a) = toElem a
    toElem (Phrase_Classname a) = toElem a
    toElem (Phrase_Methodname a) = toElem a
    toElem (Phrase_Interfacename a) = toElem a
    toElem (Phrase_Exceptionname a) = toElem a
    toElem (Phrase_Ooclass a) = toElem a
    toElem (Phrase_Oointerface a) = toElem a
    toElem (Phrase_Ooexception a) = toElem a
    toElem (Phrase_Command a) = toElem a
    toElem (Phrase_Computeroutput a) = toElem a
    toElem (Phrase_Database a) = toElem a
    toElem (Phrase_Email a) = toElem a
    toElem (Phrase_Envar a) = toElem a
    toElem (Phrase_Errorcode a) = toElem a
    toElem (Phrase_Errorname a) = toElem a
    toElem (Phrase_Errortype a) = toElem a
    toElem (Phrase_Errortext a) = toElem a
    toElem (Phrase_Filename a) = toElem a
    toElem (Phrase_Function a) = toElem a
    toElem (Phrase_Guibutton a) = toElem a
    toElem (Phrase_Guiicon a) = toElem a
    toElem (Phrase_Guilabel a) = toElem a
    toElem (Phrase_Guimenu a) = toElem a
    toElem (Phrase_Guimenuitem a) = toElem a
    toElem (Phrase_Guisubmenu a) = toElem a
    toElem (Phrase_Hardware a) = toElem a
    toElem (Phrase_Interface a) = toElem a
    toElem (Phrase_Keycap a) = toElem a
    toElem (Phrase_Keycode a) = toElem a
    toElem (Phrase_Keycombo a) = toElem a
    toElem (Phrase_Keysym a) = toElem a
    toElem (Phrase_Literal a) = toElem a
    toElem (Phrase_Constant a) = toElem a
    toElem (Phrase_Markup a) = toElem a
    toElem (Phrase_Medialabel a) = toElem a
    toElem (Phrase_Menuchoice a) = toElem a
    toElem (Phrase_Mousebutton a) = toElem a
    toElem (Phrase_Option a) = toElem a
    toElem (Phrase_Optional a) = toElem a
    toElem (Phrase_Parameter a) = toElem a
    toElem (Phrase_Prompt a) = toElem a
    toElem (Phrase_Property a) = toElem a
    toElem (Phrase_Replaceable a) = toElem a
    toElem (Phrase_Returnvalue a) = toElem a
    toElem (Phrase_Sgmltag a) = toElem a
    toElem (Phrase_Structfield a) = toElem a
    toElem (Phrase_Structname a) = toElem a
    toElem (Phrase_Symbol a) = toElem a
    toElem (Phrase_Systemitem a) = toElem a
    toElem (Phrase_Token a) = toElem a
    toElem (Phrase_Type a) = toElem a
    toElem (Phrase_Userinput a) = toElem a
    toElem (Phrase_Varname a) = toElem a
    toElem (Phrase_Anchor a) = toElem a
    toElem (Phrase_Author a) = toElem a
    toElem (Phrase_Authorinitials a) = toElem a
    toElem (Phrase_Corpauthor a) = toElem a
    toElem (Phrase_Modespec a) = toElem a
    toElem (Phrase_Othercredit a) = toElem a
    toElem (Phrase_Productname a) = toElem a
    toElem (Phrase_Productnumber a) = toElem a
    toElem (Phrase_Revhistory a) = toElem a
    toElem (Phrase_Remark a) = toElem a
    toElem (Phrase_Subscript a) = toElem a
    toElem (Phrase_Superscript a) = toElem a
    toElem (Phrase_Inlinegraphic a) = toElem a
    toElem (Phrase_Inlinemediaobject a) = toElem a
    toElem (Phrase_Inlineequation a) = toElem a
    toElem (Phrase_Synopsis a) = toElem a
    toElem (Phrase_Cmdsynopsis a) = toElem a
    toElem (Phrase_Funcsynopsis a) = toElem a
    toElem (Phrase_Classsynopsis a) = toElem a
    toElem (Phrase_Fieldsynopsis a) = toElem a
    toElem (Phrase_Constructorsynopsis a) = toElem a
    toElem (Phrase_Destructorsynopsis a) = toElem a
    toElem (Phrase_Methodsynopsis a) = toElem a
    toElem (Phrase_Indexterm a) = toElem a
    toElem (Phrase_Beginpage a) = toElem a
instance XmlAttrType Phrase_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Phrase_Revisionflag_Changed
	    translate "added" = Just Phrase_Revisionflag_Added
	    translate "deleted" = Just Phrase_Revisionflag_Deleted
	    translate "off" = Just Phrase_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Phrase_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Phrase_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Phrase_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Phrase_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Quote where
    fromElem (CElem (Elem "quote" as c0):rest) =
	(\(a,ca)->
	   (Just (Quote (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Quote as a) =
	[CElem (Elem "quote" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Quote_Attrs where
    fromAttrs as =
	Quote_Attrs
	  { quoteId = possibleA fromAttrToStr "id" as
	  , quoteLang = possibleA fromAttrToStr "lang" as
	  , quoteRemap = possibleA fromAttrToStr "remap" as
	  , quoteXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , quoteRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , quoteArch = possibleA fromAttrToStr "arch" as
	  , quoteCondition = possibleA fromAttrToStr "condition" as
	  , quoteConformance = possibleA fromAttrToStr "conformance" as
	  , quoteOs = possibleA fromAttrToStr "os" as
	  , quoteRevision = possibleA fromAttrToStr "revision" as
	  , quoteSecurity = possibleA fromAttrToStr "security" as
	  , quoteUserlevel = possibleA fromAttrToStr "userlevel" as
	  , quoteVendor = possibleA fromAttrToStr "vendor" as
	  , quoteRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (quoteId v)
	, maybeToAttr toAttrFrStr "lang" (quoteLang v)
	, maybeToAttr toAttrFrStr "remap" (quoteRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (quoteXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (quoteRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (quoteArch v)
	, maybeToAttr toAttrFrStr "condition" (quoteCondition v)
	, maybeToAttr toAttrFrStr "conformance" (quoteConformance v)
	, maybeToAttr toAttrFrStr "os" (quoteOs v)
	, maybeToAttr toAttrFrStr "revision" (quoteRevision v)
	, maybeToAttr toAttrFrStr "security" (quoteSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (quoteUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (quoteVendor v)
	, maybeToAttr toAttrFrStr "role" (quoteRole v)
	]
instance XmlContent Quote_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Quote_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Quote_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Quote_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Quote_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Quote_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Quote_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Quote_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Quote_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Quote_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Quote_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Quote_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Quote_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Quote_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Quote_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Quote_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Quote_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Quote_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Quote_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Quote_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Quote_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Quote_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Quote_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Quote_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Quote_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Quote_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Quote_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Quote_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Quote_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Quote_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Quote_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Quote_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Quote_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Quote_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Quote_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Quote_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Quote_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Quote_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Quote_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Quote_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Quote_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Quote_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Quote_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Quote_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Quote_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Quote_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Quote_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Quote_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Quote_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Quote_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Quote_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Quote_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Quote_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Quote_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Quote_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Quote_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Quote_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Quote_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Quote_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Quote_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Quote_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Quote_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Quote_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Quote_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Quote_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Quote_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Quote_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Quote_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Quote_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Quote_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Quote_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Quote_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Quote_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Quote_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Quote_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Quote_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Quote_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Quote_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Quote_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Quote_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Quote_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Quote_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Quote_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Quote_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Quote_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Quote_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Quote_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Quote_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Quote_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Quote_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Quote_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Quote_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Quote_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Quote_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Quote_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Quote_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Quote_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Quote_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Quote_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Quote_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Quote_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Quote_Str a) = toText a
    toElem (Quote_Footnoteref a) = toElem a
    toElem (Quote_Xref a) = toElem a
    toElem (Quote_Abbrev a) = toElem a
    toElem (Quote_Acronym a) = toElem a
    toElem (Quote_Citation a) = toElem a
    toElem (Quote_Citerefentry a) = toElem a
    toElem (Quote_Citetitle a) = toElem a
    toElem (Quote_Emphasis a) = toElem a
    toElem (Quote_Firstterm a) = toElem a
    toElem (Quote_Foreignphrase a) = toElem a
    toElem (Quote_Glossterm a) = toElem a
    toElem (Quote_Footnote a) = toElem a
    toElem (Quote_Phrase a) = toElem a
    toElem (Quote_Quote a) = toElem a
    toElem (Quote_Trademark a) = toElem a
    toElem (Quote_Wordasword a) = toElem a
    toElem (Quote_Personname a) = toElem a
    toElem (Quote_Link a) = toElem a
    toElem (Quote_Olink a) = toElem a
    toElem (Quote_Ulink a) = toElem a
    toElem (Quote_Action a) = toElem a
    toElem (Quote_Application a) = toElem a
    toElem (Quote_Classname a) = toElem a
    toElem (Quote_Methodname a) = toElem a
    toElem (Quote_Interfacename a) = toElem a
    toElem (Quote_Exceptionname a) = toElem a
    toElem (Quote_Ooclass a) = toElem a
    toElem (Quote_Oointerface a) = toElem a
    toElem (Quote_Ooexception a) = toElem a
    toElem (Quote_Command a) = toElem a
    toElem (Quote_Computeroutput a) = toElem a
    toElem (Quote_Database a) = toElem a
    toElem (Quote_Email a) = toElem a
    toElem (Quote_Envar a) = toElem a
    toElem (Quote_Errorcode a) = toElem a
    toElem (Quote_Errorname a) = toElem a
    toElem (Quote_Errortype a) = toElem a
    toElem (Quote_Errortext a) = toElem a
    toElem (Quote_Filename a) = toElem a
    toElem (Quote_Function a) = toElem a
    toElem (Quote_Guibutton a) = toElem a
    toElem (Quote_Guiicon a) = toElem a
    toElem (Quote_Guilabel a) = toElem a
    toElem (Quote_Guimenu a) = toElem a
    toElem (Quote_Guimenuitem a) = toElem a
    toElem (Quote_Guisubmenu a) = toElem a
    toElem (Quote_Hardware a) = toElem a
    toElem (Quote_Interface a) = toElem a
    toElem (Quote_Keycap a) = toElem a
    toElem (Quote_Keycode a) = toElem a
    toElem (Quote_Keycombo a) = toElem a
    toElem (Quote_Keysym a) = toElem a
    toElem (Quote_Literal a) = toElem a
    toElem (Quote_Constant a) = toElem a
    toElem (Quote_Markup a) = toElem a
    toElem (Quote_Medialabel a) = toElem a
    toElem (Quote_Menuchoice a) = toElem a
    toElem (Quote_Mousebutton a) = toElem a
    toElem (Quote_Option a) = toElem a
    toElem (Quote_Optional a) = toElem a
    toElem (Quote_Parameter a) = toElem a
    toElem (Quote_Prompt a) = toElem a
    toElem (Quote_Property a) = toElem a
    toElem (Quote_Replaceable a) = toElem a
    toElem (Quote_Returnvalue a) = toElem a
    toElem (Quote_Sgmltag a) = toElem a
    toElem (Quote_Structfield a) = toElem a
    toElem (Quote_Structname a) = toElem a
    toElem (Quote_Symbol a) = toElem a
    toElem (Quote_Systemitem a) = toElem a
    toElem (Quote_Token a) = toElem a
    toElem (Quote_Type a) = toElem a
    toElem (Quote_Userinput a) = toElem a
    toElem (Quote_Varname a) = toElem a
    toElem (Quote_Anchor a) = toElem a
    toElem (Quote_Author a) = toElem a
    toElem (Quote_Authorinitials a) = toElem a
    toElem (Quote_Corpauthor a) = toElem a
    toElem (Quote_Modespec a) = toElem a
    toElem (Quote_Othercredit a) = toElem a
    toElem (Quote_Productname a) = toElem a
    toElem (Quote_Productnumber a) = toElem a
    toElem (Quote_Revhistory a) = toElem a
    toElem (Quote_Remark a) = toElem a
    toElem (Quote_Subscript a) = toElem a
    toElem (Quote_Superscript a) = toElem a
    toElem (Quote_Inlinegraphic a) = toElem a
    toElem (Quote_Inlinemediaobject a) = toElem a
    toElem (Quote_Inlineequation a) = toElem a
    toElem (Quote_Synopsis a) = toElem a
    toElem (Quote_Cmdsynopsis a) = toElem a
    toElem (Quote_Funcsynopsis a) = toElem a
    toElem (Quote_Classsynopsis a) = toElem a
    toElem (Quote_Fieldsynopsis a) = toElem a
    toElem (Quote_Constructorsynopsis a) = toElem a
    toElem (Quote_Destructorsynopsis a) = toElem a
    toElem (Quote_Methodsynopsis a) = toElem a
    toElem (Quote_Indexterm a) = toElem a
    toElem (Quote_Beginpage a) = toElem a
instance XmlAttrType Quote_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Quote_Revisionflag_Changed
	    translate "added" = Just Quote_Revisionflag_Added
	    translate "deleted" = Just Quote_Revisionflag_Deleted
	    translate "off" = Just Quote_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Quote_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Quote_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Quote_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Quote_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Subscript where
    fromElem (CElem (Elem "subscript" as c0):rest) =
	(\(a,ca)->
	   (Just (Subscript (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Subscript as a) =
	[CElem (Elem "subscript" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Subscript_Attrs where
    fromAttrs as =
	Subscript_Attrs
	  { subscriptId = possibleA fromAttrToStr "id" as
	  , subscriptLang = possibleA fromAttrToStr "lang" as
	  , subscriptRemap = possibleA fromAttrToStr "remap" as
	  , subscriptXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , subscriptRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , subscriptArch = possibleA fromAttrToStr "arch" as
	  , subscriptCondition = possibleA fromAttrToStr "condition" as
	  , subscriptConformance = possibleA fromAttrToStr "conformance" as
	  , subscriptOs = possibleA fromAttrToStr "os" as
	  , subscriptRevision = possibleA fromAttrToStr "revision" as
	  , subscriptSecurity = possibleA fromAttrToStr "security" as
	  , subscriptUserlevel = possibleA fromAttrToStr "userlevel" as
	  , subscriptVendor = possibleA fromAttrToStr "vendor" as
	  , subscriptRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (subscriptId v)
	, maybeToAttr toAttrFrStr "lang" (subscriptLang v)
	, maybeToAttr toAttrFrStr "remap" (subscriptRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (subscriptXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (subscriptRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (subscriptArch v)
	, maybeToAttr toAttrFrStr "condition" (subscriptCondition v)
	, maybeToAttr toAttrFrStr "conformance" (subscriptConformance v)
	, maybeToAttr toAttrFrStr "os" (subscriptOs v)
	, maybeToAttr toAttrFrStr "revision" (subscriptRevision v)
	, maybeToAttr toAttrFrStr "security" (subscriptSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (subscriptUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (subscriptVendor v)
	, maybeToAttr toAttrFrStr "role" (subscriptRole v)
	]
instance XmlContent Subscript_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Subscript_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Subscript_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Subscript_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Subscript_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Subscript_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Subscript_Replaceable a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Subscript_Symbol a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Subscript_Inlinegraphic a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Subscript_Inlinemediaobject a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Subscript_Anchor a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Subscript_Remark a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Subscript_Subscript a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Subscript_Superscript a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Subscript_Str a) = toText a
    toElem (Subscript_Link a) = toElem a
    toElem (Subscript_Olink a) = toElem a
    toElem (Subscript_Ulink a) = toElem a
    toElem (Subscript_Emphasis a) = toElem a
    toElem (Subscript_Replaceable a) = toElem a
    toElem (Subscript_Symbol a) = toElem a
    toElem (Subscript_Inlinegraphic a) = toElem a
    toElem (Subscript_Inlinemediaobject a) = toElem a
    toElem (Subscript_Anchor a) = toElem a
    toElem (Subscript_Remark a) = toElem a
    toElem (Subscript_Subscript a) = toElem a
    toElem (Subscript_Superscript a) = toElem a
instance XmlAttrType Subscript_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Subscript_Revisionflag_Changed
	    translate "added" = Just Subscript_Revisionflag_Added
	    translate "deleted" = Just Subscript_Revisionflag_Deleted
	    translate "off" = Just Subscript_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Subscript_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Subscript_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Subscript_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Subscript_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Superscript where
    fromElem (CElem (Elem "superscript" as c0):rest) =
	(\(a,ca)->
	   (Just (Superscript (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Superscript as a) =
	[CElem (Elem "superscript" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Superscript_Attrs where
    fromAttrs as =
	Superscript_Attrs
	  { superscriptId = possibleA fromAttrToStr "id" as
	  , superscriptLang = possibleA fromAttrToStr "lang" as
	  , superscriptRemap = possibleA fromAttrToStr "remap" as
	  , superscriptXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , superscriptRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , superscriptArch = possibleA fromAttrToStr "arch" as
	  , superscriptCondition = possibleA fromAttrToStr "condition" as
	  , superscriptConformance = possibleA fromAttrToStr "conformance" as
	  , superscriptOs = possibleA fromAttrToStr "os" as
	  , superscriptRevision = possibleA fromAttrToStr "revision" as
	  , superscriptSecurity = possibleA fromAttrToStr "security" as
	  , superscriptUserlevel = possibleA fromAttrToStr "userlevel" as
	  , superscriptVendor = possibleA fromAttrToStr "vendor" as
	  , superscriptRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (superscriptId v)
	, maybeToAttr toAttrFrStr "lang" (superscriptLang v)
	, maybeToAttr toAttrFrStr "remap" (superscriptRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (superscriptXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (superscriptRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (superscriptArch v)
	, maybeToAttr toAttrFrStr "condition" (superscriptCondition v)
	, maybeToAttr toAttrFrStr "conformance" (superscriptConformance v)
	, maybeToAttr toAttrFrStr "os" (superscriptOs v)
	, maybeToAttr toAttrFrStr "revision" (superscriptRevision v)
	, maybeToAttr toAttrFrStr "security" (superscriptSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (superscriptUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (superscriptVendor v)
	, maybeToAttr toAttrFrStr "role" (superscriptRole v)
	]
instance XmlContent Superscript_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Superscript_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Superscript_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Superscript_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Superscript_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Superscript_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Superscript_Replaceable a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Superscript_Symbol a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Superscript_Inlinegraphic a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Superscript_Inlinemediaobject a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Superscript_Anchor a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Superscript_Remark a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Superscript_Subscript a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Superscript_Superscript a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Superscript_Str a) = toText a
    toElem (Superscript_Link a) = toElem a
    toElem (Superscript_Olink a) = toElem a
    toElem (Superscript_Ulink a) = toElem a
    toElem (Superscript_Emphasis a) = toElem a
    toElem (Superscript_Replaceable a) = toElem a
    toElem (Superscript_Symbol a) = toElem a
    toElem (Superscript_Inlinegraphic a) = toElem a
    toElem (Superscript_Inlinemediaobject a) = toElem a
    toElem (Superscript_Anchor a) = toElem a
    toElem (Superscript_Remark a) = toElem a
    toElem (Superscript_Subscript a) = toElem a
    toElem (Superscript_Superscript a) = toElem a
instance XmlAttrType Superscript_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Superscript_Revisionflag_Changed
	    translate "added" = Just Superscript_Revisionflag_Added
	    translate "deleted" = Just Superscript_Revisionflag_Deleted
	    translate "off" = Just Superscript_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Superscript_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Superscript_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Superscript_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Superscript_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Trademark where
    fromElem (CElem (Elem "trademark" as c0):rest) =
	(\(a,ca)->
	   (Just (Trademark (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Trademark as a) =
	[CElem (Elem "trademark" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Trademark_Attrs where
    fromAttrs as =
	Trademark_Attrs
	  { trademarkClass = defaultA fromAttrToTyp Trademark_Class_Trade "class" as
	  , trademarkId = possibleA fromAttrToStr "id" as
	  , trademarkLang = possibleA fromAttrToStr "lang" as
	  , trademarkRemap = possibleA fromAttrToStr "remap" as
	  , trademarkXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , trademarkRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , trademarkArch = possibleA fromAttrToStr "arch" as
	  , trademarkCondition = possibleA fromAttrToStr "condition" as
	  , trademarkConformance = possibleA fromAttrToStr "conformance" as
	  , trademarkOs = possibleA fromAttrToStr "os" as
	  , trademarkRevision = possibleA fromAttrToStr "revision" as
	  , trademarkSecurity = possibleA fromAttrToStr "security" as
	  , trademarkUserlevel = possibleA fromAttrToStr "userlevel" as
	  , trademarkVendor = possibleA fromAttrToStr "vendor" as
	  , trademarkRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ defaultToAttr toAttrFrTyp "class" (trademarkClass v)
	, maybeToAttr toAttrFrStr "id" (trademarkId v)
	, maybeToAttr toAttrFrStr "lang" (trademarkLang v)
	, maybeToAttr toAttrFrStr "remap" (trademarkRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (trademarkXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (trademarkRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (trademarkArch v)
	, maybeToAttr toAttrFrStr "condition" (trademarkCondition v)
	, maybeToAttr toAttrFrStr "conformance" (trademarkConformance v)
	, maybeToAttr toAttrFrStr "os" (trademarkOs v)
	, maybeToAttr toAttrFrStr "revision" (trademarkRevision v)
	, maybeToAttr toAttrFrStr "security" (trademarkSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (trademarkUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (trademarkVendor v)
	, maybeToAttr toAttrFrStr "role" (trademarkRole v)
	]
instance XmlContent Trademark_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Trademark_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Trademark_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Trademark_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Trademark_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Trademark_Action a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Trademark_Application a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Trademark_Classname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Trademark_Methodname a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Trademark_Interfacename a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Trademark_Exceptionname a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Trademark_Ooclass a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Trademark_Oointerface a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Trademark_Ooexception a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Trademark_Command a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Trademark_Computeroutput a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Trademark_Database a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Trademark_Email a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Trademark_Envar a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Trademark_Errorcode a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Trademark_Errorname a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Trademark_Errortype a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Trademark_Errortext a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Trademark_Filename a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Trademark_Function a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Trademark_Guibutton a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Trademark_Guiicon a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Trademark_Guilabel a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Trademark_Guimenu a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Trademark_Guimenuitem a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Trademark_Guisubmenu a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Trademark_Hardware a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Trademark_Interface a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Trademark_Keycap a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Trademark_Keycode a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Trademark_Keycombo a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Trademark_Keysym a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Trademark_Literal a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Trademark_Constant a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Trademark_Markup a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Trademark_Medialabel a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Trademark_Menuchoice a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Trademark_Mousebutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Trademark_Option a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Trademark_Optional a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Trademark_Parameter a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Trademark_Prompt a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Trademark_Property a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Trademark_Replaceable a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Trademark_Returnvalue a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Trademark_Sgmltag a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Trademark_Structfield a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Trademark_Structname a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Trademark_Symbol a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Trademark_Systemitem a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Trademark_Token a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Trademark_Type a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Trademark_Userinput a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Trademark_Varname a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Trademark_Anchor a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Trademark_Remark a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Trademark_Subscript a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Trademark_Superscript a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Trademark_Inlinegraphic a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Trademark_Inlinemediaobject a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Trademark_Emphasis a), rest)
																																																																	(_,_) ->
																																																																	    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Trademark_Str a) = toText a
    toElem (Trademark_Link a) = toElem a
    toElem (Trademark_Olink a) = toElem a
    toElem (Trademark_Ulink a) = toElem a
    toElem (Trademark_Action a) = toElem a
    toElem (Trademark_Application a) = toElem a
    toElem (Trademark_Classname a) = toElem a
    toElem (Trademark_Methodname a) = toElem a
    toElem (Trademark_Interfacename a) = toElem a
    toElem (Trademark_Exceptionname a) = toElem a
    toElem (Trademark_Ooclass a) = toElem a
    toElem (Trademark_Oointerface a) = toElem a
    toElem (Trademark_Ooexception a) = toElem a
    toElem (Trademark_Command a) = toElem a
    toElem (Trademark_Computeroutput a) = toElem a
    toElem (Trademark_Database a) = toElem a
    toElem (Trademark_Email a) = toElem a
    toElem (Trademark_Envar a) = toElem a
    toElem (Trademark_Errorcode a) = toElem a
    toElem (Trademark_Errorname a) = toElem a
    toElem (Trademark_Errortype a) = toElem a
    toElem (Trademark_Errortext a) = toElem a
    toElem (Trademark_Filename a) = toElem a
    toElem (Trademark_Function a) = toElem a
    toElem (Trademark_Guibutton a) = toElem a
    toElem (Trademark_Guiicon a) = toElem a
    toElem (Trademark_Guilabel a) = toElem a
    toElem (Trademark_Guimenu a) = toElem a
    toElem (Trademark_Guimenuitem a) = toElem a
    toElem (Trademark_Guisubmenu a) = toElem a
    toElem (Trademark_Hardware a) = toElem a
    toElem (Trademark_Interface a) = toElem a
    toElem (Trademark_Keycap a) = toElem a
    toElem (Trademark_Keycode a) = toElem a
    toElem (Trademark_Keycombo a) = toElem a
    toElem (Trademark_Keysym a) = toElem a
    toElem (Trademark_Literal a) = toElem a
    toElem (Trademark_Constant a) = toElem a
    toElem (Trademark_Markup a) = toElem a
    toElem (Trademark_Medialabel a) = toElem a
    toElem (Trademark_Menuchoice a) = toElem a
    toElem (Trademark_Mousebutton a) = toElem a
    toElem (Trademark_Option a) = toElem a
    toElem (Trademark_Optional a) = toElem a
    toElem (Trademark_Parameter a) = toElem a
    toElem (Trademark_Prompt a) = toElem a
    toElem (Trademark_Property a) = toElem a
    toElem (Trademark_Replaceable a) = toElem a
    toElem (Trademark_Returnvalue a) = toElem a
    toElem (Trademark_Sgmltag a) = toElem a
    toElem (Trademark_Structfield a) = toElem a
    toElem (Trademark_Structname a) = toElem a
    toElem (Trademark_Symbol a) = toElem a
    toElem (Trademark_Systemitem a) = toElem a
    toElem (Trademark_Token a) = toElem a
    toElem (Trademark_Type a) = toElem a
    toElem (Trademark_Userinput a) = toElem a
    toElem (Trademark_Varname a) = toElem a
    toElem (Trademark_Anchor a) = toElem a
    toElem (Trademark_Remark a) = toElem a
    toElem (Trademark_Subscript a) = toElem a
    toElem (Trademark_Superscript a) = toElem a
    toElem (Trademark_Inlinegraphic a) = toElem a
    toElem (Trademark_Inlinemediaobject a) = toElem a
    toElem (Trademark_Emphasis a) = toElem a
instance XmlAttrType Trademark_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "service" = Just Trademark_Class_Service
	    translate "trade" = Just Trademark_Class_Trade
	    translate "registered" = Just Trademark_Class_Registered
	    translate "copyright" = Just Trademark_Class_Copyright
	    translate _ = Nothing
    toAttrFrTyp n Trademark_Class_Service = Just (n, str2attr "service")
    toAttrFrTyp n Trademark_Class_Trade = Just (n, str2attr "trade")
    toAttrFrTyp n Trademark_Class_Registered = Just (n, str2attr "registered")
    toAttrFrTyp n Trademark_Class_Copyright = Just (n, str2attr "copyright")
instance XmlAttrType Trademark_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Trademark_Revisionflag_Changed
	    translate "added" = Just Trademark_Revisionflag_Added
	    translate "deleted" = Just Trademark_Revisionflag_Deleted
	    translate "off" = Just Trademark_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Trademark_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Trademark_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Trademark_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Trademark_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Wordasword where
    fromElem (CElem (Elem "wordasword" as c0):rest) =
	(\(a,ca)->
	   (Just (Wordasword (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Wordasword as a) =
	[CElem (Elem "wordasword" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Wordasword_Attrs where
    fromAttrs as =
	Wordasword_Attrs
	  { wordaswordId = possibleA fromAttrToStr "id" as
	  , wordaswordLang = possibleA fromAttrToStr "lang" as
	  , wordaswordRemap = possibleA fromAttrToStr "remap" as
	  , wordaswordXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , wordaswordRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , wordaswordArch = possibleA fromAttrToStr "arch" as
	  , wordaswordCondition = possibleA fromAttrToStr "condition" as
	  , wordaswordConformance = possibleA fromAttrToStr "conformance" as
	  , wordaswordOs = possibleA fromAttrToStr "os" as
	  , wordaswordRevision = possibleA fromAttrToStr "revision" as
	  , wordaswordSecurity = possibleA fromAttrToStr "security" as
	  , wordaswordUserlevel = possibleA fromAttrToStr "userlevel" as
	  , wordaswordVendor = possibleA fromAttrToStr "vendor" as
	  , wordaswordRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (wordaswordId v)
	, maybeToAttr toAttrFrStr "lang" (wordaswordLang v)
	, maybeToAttr toAttrFrStr "remap" (wordaswordRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (wordaswordXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (wordaswordRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (wordaswordArch v)
	, maybeToAttr toAttrFrStr "condition" (wordaswordCondition v)
	, maybeToAttr toAttrFrStr "conformance" (wordaswordConformance v)
	, maybeToAttr toAttrFrStr "os" (wordaswordOs v)
	, maybeToAttr toAttrFrStr "revision" (wordaswordRevision v)
	, maybeToAttr toAttrFrStr "security" (wordaswordSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (wordaswordUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (wordaswordVendor v)
	, maybeToAttr toAttrFrStr "role" (wordaswordRole v)
	]
instance XmlContent Wordasword_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Wordasword_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Wordasword_Acronym a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Wordasword_Emphasis a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Wordasword_Trademark a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Wordasword_Link a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Wordasword_Olink a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Wordasword_Ulink a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Wordasword_Anchor a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Wordasword_Remark a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Wordasword_Subscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Wordasword_Superscript a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Wordasword_Inlinegraphic a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Wordasword_Inlinemediaobject a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Wordasword_Indexterm a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Wordasword_Beginpage a), rest)
															(_,_) ->
															    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Wordasword_Str a) = toText a
    toElem (Wordasword_Acronym a) = toElem a
    toElem (Wordasword_Emphasis a) = toElem a
    toElem (Wordasword_Trademark a) = toElem a
    toElem (Wordasword_Link a) = toElem a
    toElem (Wordasword_Olink a) = toElem a
    toElem (Wordasword_Ulink a) = toElem a
    toElem (Wordasword_Anchor a) = toElem a
    toElem (Wordasword_Remark a) = toElem a
    toElem (Wordasword_Subscript a) = toElem a
    toElem (Wordasword_Superscript a) = toElem a
    toElem (Wordasword_Inlinegraphic a) = toElem a
    toElem (Wordasword_Inlinemediaobject a) = toElem a
    toElem (Wordasword_Indexterm a) = toElem a
    toElem (Wordasword_Beginpage a) = toElem a
instance XmlAttrType Wordasword_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Wordasword_Revisionflag_Changed
	    translate "added" = Just Wordasword_Revisionflag_Added
	    translate "deleted" = Just Wordasword_Revisionflag_Deleted
	    translate "off" = Just Wordasword_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Wordasword_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Wordasword_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Wordasword_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Wordasword_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Link where
    fromElem (CElem (Elem "link" as c0):rest) =
	(\(a,ca)->
	   (Just (Link (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Link as a) =
	[CElem (Elem "link" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Link_Attrs where
    fromAttrs as =
	Link_Attrs
	  { linkEndterm = possibleA fromAttrToStr "endterm" as
	  , linkLinkend = definiteA fromAttrToStr "link" "linkend" as
	  , linkType = possibleA fromAttrToStr "type" as
	  , linkId = possibleA fromAttrToStr "id" as
	  , linkLang = possibleA fromAttrToStr "lang" as
	  , linkRemap = possibleA fromAttrToStr "remap" as
	  , linkXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , linkRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , linkArch = possibleA fromAttrToStr "arch" as
	  , linkCondition = possibleA fromAttrToStr "condition" as
	  , linkConformance = possibleA fromAttrToStr "conformance" as
	  , linkOs = possibleA fromAttrToStr "os" as
	  , linkRevision = possibleA fromAttrToStr "revision" as
	  , linkSecurity = possibleA fromAttrToStr "security" as
	  , linkUserlevel = possibleA fromAttrToStr "userlevel" as
	  , linkVendor = possibleA fromAttrToStr "vendor" as
	  , linkRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "endterm" (linkEndterm v)
	, toAttrFrStr "linkend" (linkLinkend v)
	, maybeToAttr toAttrFrStr "type" (linkType v)
	, maybeToAttr toAttrFrStr "id" (linkId v)
	, maybeToAttr toAttrFrStr "lang" (linkLang v)
	, maybeToAttr toAttrFrStr "remap" (linkRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (linkXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (linkRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (linkArch v)
	, maybeToAttr toAttrFrStr "condition" (linkCondition v)
	, maybeToAttr toAttrFrStr "conformance" (linkConformance v)
	, maybeToAttr toAttrFrStr "os" (linkOs v)
	, maybeToAttr toAttrFrStr "revision" (linkRevision v)
	, maybeToAttr toAttrFrStr "security" (linkSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (linkUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (linkVendor v)
	, maybeToAttr toAttrFrStr "role" (linkRole v)
	]
instance XmlContent Link_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Link_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Link_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Link_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Link_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Link_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Link_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Link_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Link_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Link_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Link_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Link_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Link_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Link_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Link_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Link_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Link_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Link_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Link_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Link_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Link_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Link_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Link_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Link_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Link_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Link_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Link_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Link_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Link_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Link_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Link_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Link_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Link_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Link_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Link_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Link_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Link_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Link_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Link_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Link_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Link_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Link_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Link_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Link_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Link_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Link_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Link_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Link_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Link_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Link_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Link_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Link_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Link_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Link_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Link_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Link_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Link_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Link_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Link_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Link_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Link_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Link_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Link_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Link_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Link_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Link_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Link_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Link_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Link_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Link_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Link_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Link_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Link_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Link_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Link_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Link_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Link_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Link_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Link_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Link_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Link_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Link_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Link_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Link_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Link_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Link_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Link_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Link_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Link_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Link_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Link_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Link_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Link_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Link_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Link_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Link_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Link_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Link_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Link_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Link_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Link_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Link_Str a) = toText a
    toElem (Link_Footnoteref a) = toElem a
    toElem (Link_Xref a) = toElem a
    toElem (Link_Abbrev a) = toElem a
    toElem (Link_Acronym a) = toElem a
    toElem (Link_Citation a) = toElem a
    toElem (Link_Citerefentry a) = toElem a
    toElem (Link_Citetitle a) = toElem a
    toElem (Link_Emphasis a) = toElem a
    toElem (Link_Firstterm a) = toElem a
    toElem (Link_Foreignphrase a) = toElem a
    toElem (Link_Glossterm a) = toElem a
    toElem (Link_Footnote a) = toElem a
    toElem (Link_Phrase a) = toElem a
    toElem (Link_Quote a) = toElem a
    toElem (Link_Trademark a) = toElem a
    toElem (Link_Wordasword a) = toElem a
    toElem (Link_Personname a) = toElem a
    toElem (Link_Link a) = toElem a
    toElem (Link_Olink a) = toElem a
    toElem (Link_Ulink a) = toElem a
    toElem (Link_Action a) = toElem a
    toElem (Link_Application a) = toElem a
    toElem (Link_Classname a) = toElem a
    toElem (Link_Methodname a) = toElem a
    toElem (Link_Interfacename a) = toElem a
    toElem (Link_Exceptionname a) = toElem a
    toElem (Link_Ooclass a) = toElem a
    toElem (Link_Oointerface a) = toElem a
    toElem (Link_Ooexception a) = toElem a
    toElem (Link_Command a) = toElem a
    toElem (Link_Computeroutput a) = toElem a
    toElem (Link_Database a) = toElem a
    toElem (Link_Email a) = toElem a
    toElem (Link_Envar a) = toElem a
    toElem (Link_Errorcode a) = toElem a
    toElem (Link_Errorname a) = toElem a
    toElem (Link_Errortype a) = toElem a
    toElem (Link_Errortext a) = toElem a
    toElem (Link_Filename a) = toElem a
    toElem (Link_Function a) = toElem a
    toElem (Link_Guibutton a) = toElem a
    toElem (Link_Guiicon a) = toElem a
    toElem (Link_Guilabel a) = toElem a
    toElem (Link_Guimenu a) = toElem a
    toElem (Link_Guimenuitem a) = toElem a
    toElem (Link_Guisubmenu a) = toElem a
    toElem (Link_Hardware a) = toElem a
    toElem (Link_Interface a) = toElem a
    toElem (Link_Keycap a) = toElem a
    toElem (Link_Keycode a) = toElem a
    toElem (Link_Keycombo a) = toElem a
    toElem (Link_Keysym a) = toElem a
    toElem (Link_Literal a) = toElem a
    toElem (Link_Constant a) = toElem a
    toElem (Link_Markup a) = toElem a
    toElem (Link_Medialabel a) = toElem a
    toElem (Link_Menuchoice a) = toElem a
    toElem (Link_Mousebutton a) = toElem a
    toElem (Link_Option a) = toElem a
    toElem (Link_Optional a) = toElem a
    toElem (Link_Parameter a) = toElem a
    toElem (Link_Prompt a) = toElem a
    toElem (Link_Property a) = toElem a
    toElem (Link_Replaceable a) = toElem a
    toElem (Link_Returnvalue a) = toElem a
    toElem (Link_Sgmltag a) = toElem a
    toElem (Link_Structfield a) = toElem a
    toElem (Link_Structname a) = toElem a
    toElem (Link_Symbol a) = toElem a
    toElem (Link_Systemitem a) = toElem a
    toElem (Link_Token a) = toElem a
    toElem (Link_Type a) = toElem a
    toElem (Link_Userinput a) = toElem a
    toElem (Link_Varname a) = toElem a
    toElem (Link_Anchor a) = toElem a
    toElem (Link_Author a) = toElem a
    toElem (Link_Authorinitials a) = toElem a
    toElem (Link_Corpauthor a) = toElem a
    toElem (Link_Modespec a) = toElem a
    toElem (Link_Othercredit a) = toElem a
    toElem (Link_Productname a) = toElem a
    toElem (Link_Productnumber a) = toElem a
    toElem (Link_Revhistory a) = toElem a
    toElem (Link_Remark a) = toElem a
    toElem (Link_Subscript a) = toElem a
    toElem (Link_Superscript a) = toElem a
    toElem (Link_Inlinegraphic a) = toElem a
    toElem (Link_Inlinemediaobject a) = toElem a
    toElem (Link_Inlineequation a) = toElem a
    toElem (Link_Synopsis a) = toElem a
    toElem (Link_Cmdsynopsis a) = toElem a
    toElem (Link_Funcsynopsis a) = toElem a
    toElem (Link_Classsynopsis a) = toElem a
    toElem (Link_Fieldsynopsis a) = toElem a
    toElem (Link_Constructorsynopsis a) = toElem a
    toElem (Link_Destructorsynopsis a) = toElem a
    toElem (Link_Methodsynopsis a) = toElem a
    toElem (Link_Indexterm a) = toElem a
    toElem (Link_Beginpage a) = toElem a
instance XmlAttrType Link_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Link_Revisionflag_Changed
	    translate "added" = Just Link_Revisionflag_Added
	    translate "deleted" = Just Link_Revisionflag_Deleted
	    translate "off" = Just Link_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Link_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Link_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Link_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Link_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Olink where
    fromElem (CElem (Elem "olink" as c0):rest) =
	(\(a,ca)->
	   (Just (Olink (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Olink as a) =
	[CElem (Elem "olink" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Olink_Attrs where
    fromAttrs as =
	Olink_Attrs
	  { olinkTargetdocent = possibleA fromAttrToStr "targetdocent" as
	  , olinkLinkmode = possibleA fromAttrToStr "linkmode" as
	  , olinkLocalinfo = possibleA fromAttrToStr "localinfo" as
	  , olinkType = possibleA fromAttrToStr "type" as
	  , olinkTargetdoc = possibleA fromAttrToStr "targetdoc" as
	  , olinkTargetptr = possibleA fromAttrToStr "targetptr" as
	  , olinkId = possibleA fromAttrToStr "id" as
	  , olinkLang = possibleA fromAttrToStr "lang" as
	  , olinkRemap = possibleA fromAttrToStr "remap" as
	  , olinkXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , olinkRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , olinkArch = possibleA fromAttrToStr "arch" as
	  , olinkCondition = possibleA fromAttrToStr "condition" as
	  , olinkConformance = possibleA fromAttrToStr "conformance" as
	  , olinkOs = possibleA fromAttrToStr "os" as
	  , olinkRevision = possibleA fromAttrToStr "revision" as
	  , olinkSecurity = possibleA fromAttrToStr "security" as
	  , olinkUserlevel = possibleA fromAttrToStr "userlevel" as
	  , olinkVendor = possibleA fromAttrToStr "vendor" as
	  , olinkRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "targetdocent" (olinkTargetdocent v)
	, maybeToAttr toAttrFrStr "linkmode" (olinkLinkmode v)
	, maybeToAttr toAttrFrStr "localinfo" (olinkLocalinfo v)
	, maybeToAttr toAttrFrStr "type" (olinkType v)
	, maybeToAttr toAttrFrStr "targetdoc" (olinkTargetdoc v)
	, maybeToAttr toAttrFrStr "targetptr" (olinkTargetptr v)
	, maybeToAttr toAttrFrStr "id" (olinkId v)
	, maybeToAttr toAttrFrStr "lang" (olinkLang v)
	, maybeToAttr toAttrFrStr "remap" (olinkRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (olinkXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (olinkRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (olinkArch v)
	, maybeToAttr toAttrFrStr "condition" (olinkCondition v)
	, maybeToAttr toAttrFrStr "conformance" (olinkConformance v)
	, maybeToAttr toAttrFrStr "os" (olinkOs v)
	, maybeToAttr toAttrFrStr "revision" (olinkRevision v)
	, maybeToAttr toAttrFrStr "security" (olinkSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (olinkUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (olinkVendor v)
	, maybeToAttr toAttrFrStr "role" (olinkRole v)
	]
instance XmlContent Olink_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Olink_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Olink_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Olink_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Olink_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Olink_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Olink_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Olink_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Olink_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Olink_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Olink_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Olink_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Olink_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Olink_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Olink_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Olink_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Olink_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Olink_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Olink_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Olink_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Olink_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Olink_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Olink_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Olink_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Olink_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Olink_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Olink_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Olink_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Olink_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Olink_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Olink_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Olink_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Olink_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Olink_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Olink_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Olink_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Olink_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Olink_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Olink_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Olink_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Olink_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Olink_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Olink_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Olink_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Olink_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Olink_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Olink_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Olink_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Olink_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Olink_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Olink_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Olink_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Olink_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Olink_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Olink_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Olink_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Olink_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Olink_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Olink_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Olink_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Olink_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Olink_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Olink_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Olink_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Olink_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Olink_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Olink_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Olink_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Olink_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Olink_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Olink_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Olink_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Olink_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Olink_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Olink_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Olink_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Olink_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Olink_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Olink_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Olink_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Olink_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Olink_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Olink_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Olink_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Olink_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Olink_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Olink_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Olink_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Olink_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Olink_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Olink_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Olink_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Olink_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Olink_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Olink_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Olink_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Olink_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Olink_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Olink_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Olink_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Olink_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Olink_Str a) = toText a
    toElem (Olink_Footnoteref a) = toElem a
    toElem (Olink_Xref a) = toElem a
    toElem (Olink_Abbrev a) = toElem a
    toElem (Olink_Acronym a) = toElem a
    toElem (Olink_Citation a) = toElem a
    toElem (Olink_Citerefentry a) = toElem a
    toElem (Olink_Citetitle a) = toElem a
    toElem (Olink_Emphasis a) = toElem a
    toElem (Olink_Firstterm a) = toElem a
    toElem (Olink_Foreignphrase a) = toElem a
    toElem (Olink_Glossterm a) = toElem a
    toElem (Olink_Footnote a) = toElem a
    toElem (Olink_Phrase a) = toElem a
    toElem (Olink_Quote a) = toElem a
    toElem (Olink_Trademark a) = toElem a
    toElem (Olink_Wordasword a) = toElem a
    toElem (Olink_Personname a) = toElem a
    toElem (Olink_Link a) = toElem a
    toElem (Olink_Olink a) = toElem a
    toElem (Olink_Ulink a) = toElem a
    toElem (Olink_Action a) = toElem a
    toElem (Olink_Application a) = toElem a
    toElem (Olink_Classname a) = toElem a
    toElem (Olink_Methodname a) = toElem a
    toElem (Olink_Interfacename a) = toElem a
    toElem (Olink_Exceptionname a) = toElem a
    toElem (Olink_Ooclass a) = toElem a
    toElem (Olink_Oointerface a) = toElem a
    toElem (Olink_Ooexception a) = toElem a
    toElem (Olink_Command a) = toElem a
    toElem (Olink_Computeroutput a) = toElem a
    toElem (Olink_Database a) = toElem a
    toElem (Olink_Email a) = toElem a
    toElem (Olink_Envar a) = toElem a
    toElem (Olink_Errorcode a) = toElem a
    toElem (Olink_Errorname a) = toElem a
    toElem (Olink_Errortype a) = toElem a
    toElem (Olink_Errortext a) = toElem a
    toElem (Olink_Filename a) = toElem a
    toElem (Olink_Function a) = toElem a
    toElem (Olink_Guibutton a) = toElem a
    toElem (Olink_Guiicon a) = toElem a
    toElem (Olink_Guilabel a) = toElem a
    toElem (Olink_Guimenu a) = toElem a
    toElem (Olink_Guimenuitem a) = toElem a
    toElem (Olink_Guisubmenu a) = toElem a
    toElem (Olink_Hardware a) = toElem a
    toElem (Olink_Interface a) = toElem a
    toElem (Olink_Keycap a) = toElem a
    toElem (Olink_Keycode a) = toElem a
    toElem (Olink_Keycombo a) = toElem a
    toElem (Olink_Keysym a) = toElem a
    toElem (Olink_Literal a) = toElem a
    toElem (Olink_Constant a) = toElem a
    toElem (Olink_Markup a) = toElem a
    toElem (Olink_Medialabel a) = toElem a
    toElem (Olink_Menuchoice a) = toElem a
    toElem (Olink_Mousebutton a) = toElem a
    toElem (Olink_Option a) = toElem a
    toElem (Olink_Optional a) = toElem a
    toElem (Olink_Parameter a) = toElem a
    toElem (Olink_Prompt a) = toElem a
    toElem (Olink_Property a) = toElem a
    toElem (Olink_Replaceable a) = toElem a
    toElem (Olink_Returnvalue a) = toElem a
    toElem (Olink_Sgmltag a) = toElem a
    toElem (Olink_Structfield a) = toElem a
    toElem (Olink_Structname a) = toElem a
    toElem (Olink_Symbol a) = toElem a
    toElem (Olink_Systemitem a) = toElem a
    toElem (Olink_Token a) = toElem a
    toElem (Olink_Type a) = toElem a
    toElem (Olink_Userinput a) = toElem a
    toElem (Olink_Varname a) = toElem a
    toElem (Olink_Anchor a) = toElem a
    toElem (Olink_Author a) = toElem a
    toElem (Olink_Authorinitials a) = toElem a
    toElem (Olink_Corpauthor a) = toElem a
    toElem (Olink_Modespec a) = toElem a
    toElem (Olink_Othercredit a) = toElem a
    toElem (Olink_Productname a) = toElem a
    toElem (Olink_Productnumber a) = toElem a
    toElem (Olink_Revhistory a) = toElem a
    toElem (Olink_Remark a) = toElem a
    toElem (Olink_Subscript a) = toElem a
    toElem (Olink_Superscript a) = toElem a
    toElem (Olink_Inlinegraphic a) = toElem a
    toElem (Olink_Inlinemediaobject a) = toElem a
    toElem (Olink_Inlineequation a) = toElem a
    toElem (Olink_Synopsis a) = toElem a
    toElem (Olink_Cmdsynopsis a) = toElem a
    toElem (Olink_Funcsynopsis a) = toElem a
    toElem (Olink_Classsynopsis a) = toElem a
    toElem (Olink_Fieldsynopsis a) = toElem a
    toElem (Olink_Constructorsynopsis a) = toElem a
    toElem (Olink_Destructorsynopsis a) = toElem a
    toElem (Olink_Methodsynopsis a) = toElem a
    toElem (Olink_Indexterm a) = toElem a
    toElem (Olink_Beginpage a) = toElem a
instance XmlAttrType Olink_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Olink_Revisionflag_Changed
	    translate "added" = Just Olink_Revisionflag_Added
	    translate "deleted" = Just Olink_Revisionflag_Deleted
	    translate "off" = Just Olink_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Olink_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Olink_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Olink_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Olink_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Ulink where
    fromElem (CElem (Elem "ulink" as c0):rest) =
	(\(a,ca)->
	   (Just (Ulink (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Ulink as a) =
	[CElem (Elem "ulink" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Ulink_Attrs where
    fromAttrs as =
	Ulink_Attrs
	  { ulinkUrl = definiteA fromAttrToStr "ulink" "url" as
	  , ulinkType = possibleA fromAttrToStr "type" as
	  , ulinkId = possibleA fromAttrToStr "id" as
	  , ulinkLang = possibleA fromAttrToStr "lang" as
	  , ulinkRemap = possibleA fromAttrToStr "remap" as
	  , ulinkXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , ulinkRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , ulinkArch = possibleA fromAttrToStr "arch" as
	  , ulinkCondition = possibleA fromAttrToStr "condition" as
	  , ulinkConformance = possibleA fromAttrToStr "conformance" as
	  , ulinkOs = possibleA fromAttrToStr "os" as
	  , ulinkRevision = possibleA fromAttrToStr "revision" as
	  , ulinkSecurity = possibleA fromAttrToStr "security" as
	  , ulinkUserlevel = possibleA fromAttrToStr "userlevel" as
	  , ulinkVendor = possibleA fromAttrToStr "vendor" as
	  , ulinkRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ toAttrFrStr "url" (ulinkUrl v)
	, maybeToAttr toAttrFrStr "type" (ulinkType v)
	, maybeToAttr toAttrFrStr "id" (ulinkId v)
	, maybeToAttr toAttrFrStr "lang" (ulinkLang v)
	, maybeToAttr toAttrFrStr "remap" (ulinkRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (ulinkXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (ulinkRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (ulinkArch v)
	, maybeToAttr toAttrFrStr "condition" (ulinkCondition v)
	, maybeToAttr toAttrFrStr "conformance" (ulinkConformance v)
	, maybeToAttr toAttrFrStr "os" (ulinkOs v)
	, maybeToAttr toAttrFrStr "revision" (ulinkRevision v)
	, maybeToAttr toAttrFrStr "security" (ulinkSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (ulinkUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (ulinkVendor v)
	, maybeToAttr toAttrFrStr "role" (ulinkRole v)
	]
instance XmlContent Ulink_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Ulink_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Ulink_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Ulink_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Ulink_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Ulink_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Ulink_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Ulink_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Ulink_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Ulink_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Ulink_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Ulink_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Ulink_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Ulink_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Ulink_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Ulink_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Ulink_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Ulink_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Ulink_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Ulink_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Ulink_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Ulink_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Ulink_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Ulink_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Ulink_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Ulink_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Ulink_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Ulink_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Ulink_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Ulink_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Ulink_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Ulink_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Ulink_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Ulink_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Ulink_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Ulink_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Ulink_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Ulink_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Ulink_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Ulink_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Ulink_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Ulink_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Ulink_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Ulink_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Ulink_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Ulink_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Ulink_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Ulink_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Ulink_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Ulink_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Ulink_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Ulink_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Ulink_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Ulink_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Ulink_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Ulink_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Ulink_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Ulink_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Ulink_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Ulink_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Ulink_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Ulink_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Ulink_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Ulink_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Ulink_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Ulink_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Ulink_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Ulink_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Ulink_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Ulink_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Ulink_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Ulink_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Ulink_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Ulink_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Ulink_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Ulink_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Ulink_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Ulink_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Ulink_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Ulink_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Ulink_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Ulink_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Ulink_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Ulink_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Ulink_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Ulink_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Ulink_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Ulink_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Ulink_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Ulink_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Ulink_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Ulink_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Ulink_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Ulink_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Ulink_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Ulink_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Ulink_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Ulink_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Ulink_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Ulink_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Ulink_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Ulink_Str a) = toText a
    toElem (Ulink_Footnoteref a) = toElem a
    toElem (Ulink_Xref a) = toElem a
    toElem (Ulink_Abbrev a) = toElem a
    toElem (Ulink_Acronym a) = toElem a
    toElem (Ulink_Citation a) = toElem a
    toElem (Ulink_Citerefentry a) = toElem a
    toElem (Ulink_Citetitle a) = toElem a
    toElem (Ulink_Emphasis a) = toElem a
    toElem (Ulink_Firstterm a) = toElem a
    toElem (Ulink_Foreignphrase a) = toElem a
    toElem (Ulink_Glossterm a) = toElem a
    toElem (Ulink_Footnote a) = toElem a
    toElem (Ulink_Phrase a) = toElem a
    toElem (Ulink_Quote a) = toElem a
    toElem (Ulink_Trademark a) = toElem a
    toElem (Ulink_Wordasword a) = toElem a
    toElem (Ulink_Personname a) = toElem a
    toElem (Ulink_Link a) = toElem a
    toElem (Ulink_Olink a) = toElem a
    toElem (Ulink_Ulink a) = toElem a
    toElem (Ulink_Action a) = toElem a
    toElem (Ulink_Application a) = toElem a
    toElem (Ulink_Classname a) = toElem a
    toElem (Ulink_Methodname a) = toElem a
    toElem (Ulink_Interfacename a) = toElem a
    toElem (Ulink_Exceptionname a) = toElem a
    toElem (Ulink_Ooclass a) = toElem a
    toElem (Ulink_Oointerface a) = toElem a
    toElem (Ulink_Ooexception a) = toElem a
    toElem (Ulink_Command a) = toElem a
    toElem (Ulink_Computeroutput a) = toElem a
    toElem (Ulink_Database a) = toElem a
    toElem (Ulink_Email a) = toElem a
    toElem (Ulink_Envar a) = toElem a
    toElem (Ulink_Errorcode a) = toElem a
    toElem (Ulink_Errorname a) = toElem a
    toElem (Ulink_Errortype a) = toElem a
    toElem (Ulink_Errortext a) = toElem a
    toElem (Ulink_Filename a) = toElem a
    toElem (Ulink_Function a) = toElem a
    toElem (Ulink_Guibutton a) = toElem a
    toElem (Ulink_Guiicon a) = toElem a
    toElem (Ulink_Guilabel a) = toElem a
    toElem (Ulink_Guimenu a) = toElem a
    toElem (Ulink_Guimenuitem a) = toElem a
    toElem (Ulink_Guisubmenu a) = toElem a
    toElem (Ulink_Hardware a) = toElem a
    toElem (Ulink_Interface a) = toElem a
    toElem (Ulink_Keycap a) = toElem a
    toElem (Ulink_Keycode a) = toElem a
    toElem (Ulink_Keycombo a) = toElem a
    toElem (Ulink_Keysym a) = toElem a
    toElem (Ulink_Literal a) = toElem a
    toElem (Ulink_Constant a) = toElem a
    toElem (Ulink_Markup a) = toElem a
    toElem (Ulink_Medialabel a) = toElem a
    toElem (Ulink_Menuchoice a) = toElem a
    toElem (Ulink_Mousebutton a) = toElem a
    toElem (Ulink_Option a) = toElem a
    toElem (Ulink_Optional a) = toElem a
    toElem (Ulink_Parameter a) = toElem a
    toElem (Ulink_Prompt a) = toElem a
    toElem (Ulink_Property a) = toElem a
    toElem (Ulink_Replaceable a) = toElem a
    toElem (Ulink_Returnvalue a) = toElem a
    toElem (Ulink_Sgmltag a) = toElem a
    toElem (Ulink_Structfield a) = toElem a
    toElem (Ulink_Structname a) = toElem a
    toElem (Ulink_Symbol a) = toElem a
    toElem (Ulink_Systemitem a) = toElem a
    toElem (Ulink_Token a) = toElem a
    toElem (Ulink_Type a) = toElem a
    toElem (Ulink_Userinput a) = toElem a
    toElem (Ulink_Varname a) = toElem a
    toElem (Ulink_Anchor a) = toElem a
    toElem (Ulink_Author a) = toElem a
    toElem (Ulink_Authorinitials a) = toElem a
    toElem (Ulink_Corpauthor a) = toElem a
    toElem (Ulink_Modespec a) = toElem a
    toElem (Ulink_Othercredit a) = toElem a
    toElem (Ulink_Productname a) = toElem a
    toElem (Ulink_Productnumber a) = toElem a
    toElem (Ulink_Revhistory a) = toElem a
    toElem (Ulink_Remark a) = toElem a
    toElem (Ulink_Subscript a) = toElem a
    toElem (Ulink_Superscript a) = toElem a
    toElem (Ulink_Inlinegraphic a) = toElem a
    toElem (Ulink_Inlinemediaobject a) = toElem a
    toElem (Ulink_Inlineequation a) = toElem a
    toElem (Ulink_Synopsis a) = toElem a
    toElem (Ulink_Cmdsynopsis a) = toElem a
    toElem (Ulink_Funcsynopsis a) = toElem a
    toElem (Ulink_Classsynopsis a) = toElem a
    toElem (Ulink_Fieldsynopsis a) = toElem a
    toElem (Ulink_Constructorsynopsis a) = toElem a
    toElem (Ulink_Destructorsynopsis a) = toElem a
    toElem (Ulink_Methodsynopsis a) = toElem a
    toElem (Ulink_Indexterm a) = toElem a
    toElem (Ulink_Beginpage a) = toElem a
instance XmlAttrType Ulink_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Ulink_Revisionflag_Changed
	    translate "added" = Just Ulink_Revisionflag_Added
	    translate "deleted" = Just Ulink_Revisionflag_Deleted
	    translate "off" = Just Ulink_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Ulink_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Ulink_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Ulink_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Ulink_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Footnoteref where
    fromElem (CElem (Elem "footnoteref" as []):rest) =
	(Just (fromAttrs as), rest)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem as =
	[CElem (Elem "footnoteref" (toAttrs as) [])]
instance XmlAttributes Footnoteref where
    fromAttrs as =
	Footnoteref
	  { footnoterefLinkend = definiteA fromAttrToStr "footnoteref" "linkend" as
	  , footnoterefLabel = possibleA fromAttrToStr "label" as
	  , footnoterefId = possibleA fromAttrToStr "id" as
	  , footnoterefLang = possibleA fromAttrToStr "lang" as
	  , footnoterefRemap = possibleA fromAttrToStr "remap" as
	  , footnoterefXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , footnoterefRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , footnoterefArch = possibleA fromAttrToStr "arch" as
	  , footnoterefCondition = possibleA fromAttrToStr "condition" as
	  , footnoterefConformance = possibleA fromAttrToStr "conformance" as
	  , footnoterefOs = possibleA fromAttrToStr "os" as
	  , footnoterefRevision = possibleA fromAttrToStr "revision" as
	  , footnoterefSecurity = possibleA fromAttrToStr "security" as
	  , footnoterefUserlevel = possibleA fromAttrToStr "userlevel" as
	  , footnoterefVendor = possibleA fromAttrToStr "vendor" as
	  , footnoterefRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ toAttrFrStr "linkend" (footnoterefLinkend v)
	, maybeToAttr toAttrFrStr "label" (footnoterefLabel v)
	, maybeToAttr toAttrFrStr "id" (footnoterefId v)
	, maybeToAttr toAttrFrStr "lang" (footnoterefLang v)
	, maybeToAttr toAttrFrStr "remap" (footnoterefRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (footnoterefXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (footnoterefRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (footnoterefArch v)
	, maybeToAttr toAttrFrStr "condition" (footnoterefCondition v)
	, maybeToAttr toAttrFrStr "conformance" (footnoterefConformance v)
	, maybeToAttr toAttrFrStr "os" (footnoterefOs v)
	, maybeToAttr toAttrFrStr "revision" (footnoterefRevision v)
	, maybeToAttr toAttrFrStr "security" (footnoterefSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (footnoterefUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (footnoterefVendor v)
	, maybeToAttr toAttrFrStr "role" (footnoterefRole v)
	]
instance XmlAttrType Footnoteref_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Footnoteref_Revisionflag_Changed
	    translate "added" = Just Footnoteref_Revisionflag_Added
	    translate "deleted" = Just Footnoteref_Revisionflag_Deleted
	    translate "off" = Just Footnoteref_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Footnoteref_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Footnoteref_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Footnoteref_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Footnoteref_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Xref where
    fromElem (CElem (Elem "xref" as []):rest) =
	(Just (fromAttrs as), rest)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem as =
	[CElem (Elem "xref" (toAttrs as) [])]
instance XmlAttributes Xref where
    fromAttrs as =
	Xref
	  { xrefEndterm = possibleA fromAttrToStr "endterm" as
	  , xrefLinkend = definiteA fromAttrToStr "xref" "linkend" as
	  , xrefId = possibleA fromAttrToStr "id" as
	  , xrefLang = possibleA fromAttrToStr "lang" as
	  , xrefRemap = possibleA fromAttrToStr "remap" as
	  , xrefXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , xrefRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , xrefArch = possibleA fromAttrToStr "arch" as
	  , xrefCondition = possibleA fromAttrToStr "condition" as
	  , xrefConformance = possibleA fromAttrToStr "conformance" as
	  , xrefOs = possibleA fromAttrToStr "os" as
	  , xrefRevision = possibleA fromAttrToStr "revision" as
	  , xrefSecurity = possibleA fromAttrToStr "security" as
	  , xrefUserlevel = possibleA fromAttrToStr "userlevel" as
	  , xrefVendor = possibleA fromAttrToStr "vendor" as
	  , xrefRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "endterm" (xrefEndterm v)
	, toAttrFrStr "linkend" (xrefLinkend v)
	, maybeToAttr toAttrFrStr "id" (xrefId v)
	, maybeToAttr toAttrFrStr "lang" (xrefLang v)
	, maybeToAttr toAttrFrStr "remap" (xrefRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (xrefXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (xrefRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (xrefArch v)
	, maybeToAttr toAttrFrStr "condition" (xrefCondition v)
	, maybeToAttr toAttrFrStr "conformance" (xrefConformance v)
	, maybeToAttr toAttrFrStr "os" (xrefOs v)
	, maybeToAttr toAttrFrStr "revision" (xrefRevision v)
	, maybeToAttr toAttrFrStr "security" (xrefSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (xrefUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (xrefVendor v)
	, maybeToAttr toAttrFrStr "role" (xrefRole v)
	]
instance XmlAttrType Xref_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Xref_Revisionflag_Changed
	    translate "added" = Just Xref_Revisionflag_Added
	    translate "deleted" = Just Xref_Revisionflag_Deleted
	    translate "off" = Just Xref_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Xref_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Xref_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Xref_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Xref_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Anchor where
    fromElem (CElem (Elem "anchor" as []):rest) =
	(Just (fromAttrs as), rest)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem as =
	[CElem (Elem "anchor" (toAttrs as) [])]
instance XmlAttributes Anchor where
    fromAttrs as =
	Anchor
	  { anchorId = definiteA fromAttrToStr "anchor" "id" as
	  , anchorPagenum = possibleA fromAttrToStr "pagenum" as
	  , anchorRemap = possibleA fromAttrToStr "remap" as
	  , anchorXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , anchorRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , anchorArch = possibleA fromAttrToStr "arch" as
	  , anchorCondition = possibleA fromAttrToStr "condition" as
	  , anchorConformance = possibleA fromAttrToStr "conformance" as
	  , anchorOs = possibleA fromAttrToStr "os" as
	  , anchorRevision = possibleA fromAttrToStr "revision" as
	  , anchorSecurity = possibleA fromAttrToStr "security" as
	  , anchorUserlevel = possibleA fromAttrToStr "userlevel" as
	  , anchorVendor = possibleA fromAttrToStr "vendor" as
	  , anchorRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ toAttrFrStr "id" (anchorId v)
	, maybeToAttr toAttrFrStr "pagenum" (anchorPagenum v)
	, maybeToAttr toAttrFrStr "remap" (anchorRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (anchorXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (anchorRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (anchorArch v)
	, maybeToAttr toAttrFrStr "condition" (anchorCondition v)
	, maybeToAttr toAttrFrStr "conformance" (anchorConformance v)
	, maybeToAttr toAttrFrStr "os" (anchorOs v)
	, maybeToAttr toAttrFrStr "revision" (anchorRevision v)
	, maybeToAttr toAttrFrStr "security" (anchorSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (anchorUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (anchorVendor v)
	, maybeToAttr toAttrFrStr "role" (anchorRole v)
	]
instance XmlAttrType Anchor_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Anchor_Revisionflag_Changed
	    translate "added" = Just Anchor_Revisionflag_Added
	    translate "deleted" = Just Anchor_Revisionflag_Deleted
	    translate "off" = Just Anchor_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Anchor_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Anchor_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Anchor_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Anchor_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Beginpage where
    fromElem (CElem (Elem "beginpage" as []):rest) =
	(Just (fromAttrs as), rest)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem as =
	[CElem (Elem "beginpage" (toAttrs as) [])]
instance XmlAttributes Beginpage where
    fromAttrs as =
	Beginpage
	  { beginpagePagenum = possibleA fromAttrToStr "pagenum" as
	  , beginpageId = possibleA fromAttrToStr "id" as
	  , beginpageLang = possibleA fromAttrToStr "lang" as
	  , beginpageRemap = possibleA fromAttrToStr "remap" as
	  , beginpageXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , beginpageRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , beginpageArch = possibleA fromAttrToStr "arch" as
	  , beginpageCondition = possibleA fromAttrToStr "condition" as
	  , beginpageConformance = possibleA fromAttrToStr "conformance" as
	  , beginpageOs = possibleA fromAttrToStr "os" as
	  , beginpageRevision = possibleA fromAttrToStr "revision" as
	  , beginpageSecurity = possibleA fromAttrToStr "security" as
	  , beginpageUserlevel = possibleA fromAttrToStr "userlevel" as
	  , beginpageVendor = possibleA fromAttrToStr "vendor" as
	  , beginpageRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "pagenum" (beginpagePagenum v)
	, maybeToAttr toAttrFrStr "id" (beginpageId v)
	, maybeToAttr toAttrFrStr "lang" (beginpageLang v)
	, maybeToAttr toAttrFrStr "remap" (beginpageRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (beginpageXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (beginpageRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (beginpageArch v)
	, maybeToAttr toAttrFrStr "condition" (beginpageCondition v)
	, maybeToAttr toAttrFrStr "conformance" (beginpageConformance v)
	, maybeToAttr toAttrFrStr "os" (beginpageOs v)
	, maybeToAttr toAttrFrStr "revision" (beginpageRevision v)
	, maybeToAttr toAttrFrStr "security" (beginpageSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (beginpageUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (beginpageVendor v)
	, maybeToAttr toAttrFrStr "role" (beginpageRole v)
	]
instance XmlAttrType Beginpage_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Beginpage_Revisionflag_Changed
	    translate "added" = Just Beginpage_Revisionflag_Added
	    translate "deleted" = Just Beginpage_Revisionflag_Deleted
	    translate "off" = Just Beginpage_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Beginpage_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Beginpage_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Beginpage_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Beginpage_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Indexterm where
    fromElem (CElem (Elem "indexterm" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Indexterm (fromAttrs as) a b), rest))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Indexterm as a b) =
	[CElem (Elem "indexterm" (toAttrs as) (maybe [] toElem a ++
					       maybe [] toElem b))]
instance XmlAttributes Indexterm_Attrs where
    fromAttrs as =
	Indexterm_Attrs
	  { indextermPagenum = possibleA fromAttrToStr "pagenum" as
	  , indextermScope = possibleA fromAttrToTyp "scope" as
	  , indextermSignificance = defaultA fromAttrToTyp Indexterm_Significance_Normal "significance" as
	  , indextermClass = possibleA fromAttrToTyp "class" as
	  , indextermStartref = possibleA fromAttrToStr "startref" as
	  , indextermZone = possibleA fromAttrToStr "zone" as
	  , indextermId = possibleA fromAttrToStr "id" as
	  , indextermLang = possibleA fromAttrToStr "lang" as
	  , indextermRemap = possibleA fromAttrToStr "remap" as
	  , indextermXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , indextermRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , indextermArch = possibleA fromAttrToStr "arch" as
	  , indextermCondition = possibleA fromAttrToStr "condition" as
	  , indextermConformance = possibleA fromAttrToStr "conformance" as
	  , indextermOs = possibleA fromAttrToStr "os" as
	  , indextermRevision = possibleA fromAttrToStr "revision" as
	  , indextermSecurity = possibleA fromAttrToStr "security" as
	  , indextermUserlevel = possibleA fromAttrToStr "userlevel" as
	  , indextermVendor = possibleA fromAttrToStr "vendor" as
	  , indextermRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "pagenum" (indextermPagenum v)
	, maybeToAttr toAttrFrTyp "scope" (indextermScope v)
	, defaultToAttr toAttrFrTyp "significance" (indextermSignificance v)
	, maybeToAttr toAttrFrTyp "class" (indextermClass v)
	, maybeToAttr toAttrFrStr "startref" (indextermStartref v)
	, maybeToAttr toAttrFrStr "zone" (indextermZone v)
	, maybeToAttr toAttrFrStr "id" (indextermId v)
	, maybeToAttr toAttrFrStr "lang" (indextermLang v)
	, maybeToAttr toAttrFrStr "remap" (indextermRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (indextermXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (indextermRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (indextermArch v)
	, maybeToAttr toAttrFrStr "condition" (indextermCondition v)
	, maybeToAttr toAttrFrStr "conformance" (indextermConformance v)
	, maybeToAttr toAttrFrStr "os" (indextermOs v)
	, maybeToAttr toAttrFrStr "revision" (indextermRevision v)
	, maybeToAttr toAttrFrStr "security" (indextermSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (indextermUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (indextermVendor v)
	, maybeToAttr toAttrFrStr "role" (indextermRole v)
	]
instance XmlAttrType Indexterm_Scope where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "all" = Just Indexterm_Scope_All
	    translate "global" = Just Indexterm_Scope_Global
	    translate "local" = Just Indexterm_Scope_Local
	    translate _ = Nothing
    toAttrFrTyp n Indexterm_Scope_All = Just (n, str2attr "all")
    toAttrFrTyp n Indexterm_Scope_Global = Just (n, str2attr "global")
    toAttrFrTyp n Indexterm_Scope_Local = Just (n, str2attr "local")
instance XmlAttrType Indexterm_Significance where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "preferred" = Just Indexterm_Significance_Preferred
	    translate "normal" = Just Indexterm_Significance_Normal
	    translate _ = Nothing
    toAttrFrTyp n Indexterm_Significance_Preferred = Just (n, str2attr "preferred")
    toAttrFrTyp n Indexterm_Significance_Normal = Just (n, str2attr "normal")
instance XmlAttrType Indexterm_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "singular" = Just Indexterm_Class_Singular
	    translate "startofrange" = Just Indexterm_Class_Startofrange
	    translate "endofrange" = Just Indexterm_Class_Endofrange
	    translate _ = Nothing
    toAttrFrTyp n Indexterm_Class_Singular = Just (n, str2attr "singular")
    toAttrFrTyp n Indexterm_Class_Startofrange = Just (n, str2attr "startofrange")
    toAttrFrTyp n Indexterm_Class_Endofrange = Just (n, str2attr "endofrange")
instance XmlAttrType Indexterm_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Indexterm_Revisionflag_Changed
	    translate "added" = Just Indexterm_Revisionflag_Added
	    translate "deleted" = Just Indexterm_Revisionflag_Deleted
	    translate "off" = Just Indexterm_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Indexterm_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Indexterm_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Indexterm_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Indexterm_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Primary where
    fromElem (CElem (Elem "primary" as c0):rest) =
	(\(a,ca)->
	   (Just (Primary (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Primary as a) =
	[CElem (Elem "primary" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Primary_Attrs where
    fromAttrs as =
	Primary_Attrs
	  { primarySortas = possibleA fromAttrToStr "sortas" as
	  , primaryId = possibleA fromAttrToStr "id" as
	  , primaryLang = possibleA fromAttrToStr "lang" as
	  , primaryRemap = possibleA fromAttrToStr "remap" as
	  , primaryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , primaryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , primaryArch = possibleA fromAttrToStr "arch" as
	  , primaryCondition = possibleA fromAttrToStr "condition" as
	  , primaryConformance = possibleA fromAttrToStr "conformance" as
	  , primaryOs = possibleA fromAttrToStr "os" as
	  , primaryRevision = possibleA fromAttrToStr "revision" as
	  , primarySecurity = possibleA fromAttrToStr "security" as
	  , primaryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , primaryVendor = possibleA fromAttrToStr "vendor" as
	  , primaryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "sortas" (primarySortas v)
	, maybeToAttr toAttrFrStr "id" (primaryId v)
	, maybeToAttr toAttrFrStr "lang" (primaryLang v)
	, maybeToAttr toAttrFrStr "remap" (primaryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (primaryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (primaryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (primaryArch v)
	, maybeToAttr toAttrFrStr "condition" (primaryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (primaryConformance v)
	, maybeToAttr toAttrFrStr "os" (primaryOs v)
	, maybeToAttr toAttrFrStr "revision" (primaryRevision v)
	, maybeToAttr toAttrFrStr "security" (primarySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (primaryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (primaryVendor v)
	, maybeToAttr toAttrFrStr "role" (primaryRole v)
	]
instance XmlContent Primary_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Primary_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Primary_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Primary_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Primary_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Primary_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Primary_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Primary_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Primary_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Primary_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Primary_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Primary_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Primary_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Primary_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Primary_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Primary_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Primary_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Primary_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Primary_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Primary_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Primary_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Primary_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Primary_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Primary_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Primary_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Primary_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Primary_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Primary_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Primary_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Primary_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Primary_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Primary_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Primary_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Primary_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Primary_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Primary_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Primary_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Primary_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Primary_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Primary_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Primary_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Primary_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Primary_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Primary_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Primary_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Primary_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Primary_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Primary_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Primary_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Primary_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Primary_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Primary_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Primary_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Primary_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Primary_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Primary_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Primary_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Primary_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Primary_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Primary_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Primary_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Primary_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Primary_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Primary_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Primary_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Primary_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Primary_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Primary_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Primary_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Primary_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Primary_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Primary_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Primary_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Primary_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Primary_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Primary_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Primary_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Primary_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Primary_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Primary_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Primary_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Primary_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Primary_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Primary_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Primary_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Primary_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Primary_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Primary_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Primary_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Primary_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																									    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Primary_Str a) = toText a
    toElem (Primary_Footnoteref a) = toElem a
    toElem (Primary_Xref a) = toElem a
    toElem (Primary_Abbrev a) = toElem a
    toElem (Primary_Acronym a) = toElem a
    toElem (Primary_Citation a) = toElem a
    toElem (Primary_Citerefentry a) = toElem a
    toElem (Primary_Citetitle a) = toElem a
    toElem (Primary_Emphasis a) = toElem a
    toElem (Primary_Firstterm a) = toElem a
    toElem (Primary_Foreignphrase a) = toElem a
    toElem (Primary_Glossterm a) = toElem a
    toElem (Primary_Footnote a) = toElem a
    toElem (Primary_Phrase a) = toElem a
    toElem (Primary_Quote a) = toElem a
    toElem (Primary_Trademark a) = toElem a
    toElem (Primary_Wordasword a) = toElem a
    toElem (Primary_Personname a) = toElem a
    toElem (Primary_Link a) = toElem a
    toElem (Primary_Olink a) = toElem a
    toElem (Primary_Ulink a) = toElem a
    toElem (Primary_Action a) = toElem a
    toElem (Primary_Application a) = toElem a
    toElem (Primary_Classname a) = toElem a
    toElem (Primary_Methodname a) = toElem a
    toElem (Primary_Interfacename a) = toElem a
    toElem (Primary_Exceptionname a) = toElem a
    toElem (Primary_Ooclass a) = toElem a
    toElem (Primary_Oointerface a) = toElem a
    toElem (Primary_Ooexception a) = toElem a
    toElem (Primary_Command a) = toElem a
    toElem (Primary_Computeroutput a) = toElem a
    toElem (Primary_Database a) = toElem a
    toElem (Primary_Email a) = toElem a
    toElem (Primary_Envar a) = toElem a
    toElem (Primary_Errorcode a) = toElem a
    toElem (Primary_Errorname a) = toElem a
    toElem (Primary_Errortype a) = toElem a
    toElem (Primary_Errortext a) = toElem a
    toElem (Primary_Filename a) = toElem a
    toElem (Primary_Function a) = toElem a
    toElem (Primary_Guibutton a) = toElem a
    toElem (Primary_Guiicon a) = toElem a
    toElem (Primary_Guilabel a) = toElem a
    toElem (Primary_Guimenu a) = toElem a
    toElem (Primary_Guimenuitem a) = toElem a
    toElem (Primary_Guisubmenu a) = toElem a
    toElem (Primary_Hardware a) = toElem a
    toElem (Primary_Interface a) = toElem a
    toElem (Primary_Keycap a) = toElem a
    toElem (Primary_Keycode a) = toElem a
    toElem (Primary_Keycombo a) = toElem a
    toElem (Primary_Keysym a) = toElem a
    toElem (Primary_Literal a) = toElem a
    toElem (Primary_Constant a) = toElem a
    toElem (Primary_Markup a) = toElem a
    toElem (Primary_Medialabel a) = toElem a
    toElem (Primary_Menuchoice a) = toElem a
    toElem (Primary_Mousebutton a) = toElem a
    toElem (Primary_Option a) = toElem a
    toElem (Primary_Optional a) = toElem a
    toElem (Primary_Parameter a) = toElem a
    toElem (Primary_Prompt a) = toElem a
    toElem (Primary_Property a) = toElem a
    toElem (Primary_Replaceable a) = toElem a
    toElem (Primary_Returnvalue a) = toElem a
    toElem (Primary_Sgmltag a) = toElem a
    toElem (Primary_Structfield a) = toElem a
    toElem (Primary_Structname a) = toElem a
    toElem (Primary_Symbol a) = toElem a
    toElem (Primary_Systemitem a) = toElem a
    toElem (Primary_Token a) = toElem a
    toElem (Primary_Type a) = toElem a
    toElem (Primary_Userinput a) = toElem a
    toElem (Primary_Varname a) = toElem a
    toElem (Primary_Anchor a) = toElem a
    toElem (Primary_Author a) = toElem a
    toElem (Primary_Authorinitials a) = toElem a
    toElem (Primary_Corpauthor a) = toElem a
    toElem (Primary_Modespec a) = toElem a
    toElem (Primary_Othercredit a) = toElem a
    toElem (Primary_Productname a) = toElem a
    toElem (Primary_Productnumber a) = toElem a
    toElem (Primary_Revhistory a) = toElem a
    toElem (Primary_Remark a) = toElem a
    toElem (Primary_Subscript a) = toElem a
    toElem (Primary_Superscript a) = toElem a
    toElem (Primary_Inlinegraphic a) = toElem a
    toElem (Primary_Inlinemediaobject a) = toElem a
instance XmlAttrType Primary_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Primary_Revisionflag_Changed
	    translate "added" = Just Primary_Revisionflag_Added
	    translate "deleted" = Just Primary_Revisionflag_Deleted
	    translate "off" = Just Primary_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Primary_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Primary_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Primary_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Primary_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Secondary where
    fromElem (CElem (Elem "secondary" as c0):rest) =
	(\(a,ca)->
	   (Just (Secondary (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Secondary as a) =
	[CElem (Elem "secondary" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Secondary_Attrs where
    fromAttrs as =
	Secondary_Attrs
	  { secondarySortas = possibleA fromAttrToStr "sortas" as
	  , secondaryId = possibleA fromAttrToStr "id" as
	  , secondaryLang = possibleA fromAttrToStr "lang" as
	  , secondaryRemap = possibleA fromAttrToStr "remap" as
	  , secondaryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , secondaryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , secondaryArch = possibleA fromAttrToStr "arch" as
	  , secondaryCondition = possibleA fromAttrToStr "condition" as
	  , secondaryConformance = possibleA fromAttrToStr "conformance" as
	  , secondaryOs = possibleA fromAttrToStr "os" as
	  , secondaryRevision = possibleA fromAttrToStr "revision" as
	  , secondarySecurity = possibleA fromAttrToStr "security" as
	  , secondaryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , secondaryVendor = possibleA fromAttrToStr "vendor" as
	  , secondaryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "sortas" (secondarySortas v)
	, maybeToAttr toAttrFrStr "id" (secondaryId v)
	, maybeToAttr toAttrFrStr "lang" (secondaryLang v)
	, maybeToAttr toAttrFrStr "remap" (secondaryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (secondaryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (secondaryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (secondaryArch v)
	, maybeToAttr toAttrFrStr "condition" (secondaryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (secondaryConformance v)
	, maybeToAttr toAttrFrStr "os" (secondaryOs v)
	, maybeToAttr toAttrFrStr "revision" (secondaryRevision v)
	, maybeToAttr toAttrFrStr "security" (secondarySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (secondaryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (secondaryVendor v)
	, maybeToAttr toAttrFrStr "role" (secondaryRole v)
	]
instance XmlContent Secondary_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Secondary_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Secondary_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Secondary_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Secondary_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Secondary_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Secondary_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Secondary_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Secondary_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Secondary_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Secondary_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Secondary_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Secondary_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Secondary_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Secondary_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Secondary_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Secondary_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Secondary_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Secondary_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Secondary_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Secondary_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Secondary_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Secondary_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Secondary_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Secondary_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Secondary_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Secondary_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Secondary_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Secondary_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Secondary_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Secondary_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Secondary_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Secondary_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Secondary_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Secondary_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Secondary_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Secondary_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Secondary_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Secondary_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Secondary_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Secondary_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Secondary_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Secondary_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Secondary_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Secondary_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Secondary_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Secondary_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Secondary_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Secondary_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Secondary_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Secondary_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Secondary_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Secondary_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Secondary_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Secondary_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Secondary_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Secondary_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Secondary_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Secondary_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Secondary_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Secondary_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Secondary_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Secondary_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Secondary_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Secondary_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Secondary_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Secondary_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Secondary_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Secondary_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Secondary_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Secondary_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Secondary_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Secondary_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Secondary_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Secondary_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Secondary_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Secondary_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Secondary_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Secondary_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Secondary_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Secondary_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Secondary_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Secondary_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Secondary_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Secondary_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Secondary_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Secondary_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Secondary_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Secondary_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Secondary_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																									    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Secondary_Str a) = toText a
    toElem (Secondary_Footnoteref a) = toElem a
    toElem (Secondary_Xref a) = toElem a
    toElem (Secondary_Abbrev a) = toElem a
    toElem (Secondary_Acronym a) = toElem a
    toElem (Secondary_Citation a) = toElem a
    toElem (Secondary_Citerefentry a) = toElem a
    toElem (Secondary_Citetitle a) = toElem a
    toElem (Secondary_Emphasis a) = toElem a
    toElem (Secondary_Firstterm a) = toElem a
    toElem (Secondary_Foreignphrase a) = toElem a
    toElem (Secondary_Glossterm a) = toElem a
    toElem (Secondary_Footnote a) = toElem a
    toElem (Secondary_Phrase a) = toElem a
    toElem (Secondary_Quote a) = toElem a
    toElem (Secondary_Trademark a) = toElem a
    toElem (Secondary_Wordasword a) = toElem a
    toElem (Secondary_Personname a) = toElem a
    toElem (Secondary_Link a) = toElem a
    toElem (Secondary_Olink a) = toElem a
    toElem (Secondary_Ulink a) = toElem a
    toElem (Secondary_Action a) = toElem a
    toElem (Secondary_Application a) = toElem a
    toElem (Secondary_Classname a) = toElem a
    toElem (Secondary_Methodname a) = toElem a
    toElem (Secondary_Interfacename a) = toElem a
    toElem (Secondary_Exceptionname a) = toElem a
    toElem (Secondary_Ooclass a) = toElem a
    toElem (Secondary_Oointerface a) = toElem a
    toElem (Secondary_Ooexception a) = toElem a
    toElem (Secondary_Command a) = toElem a
    toElem (Secondary_Computeroutput a) = toElem a
    toElem (Secondary_Database a) = toElem a
    toElem (Secondary_Email a) = toElem a
    toElem (Secondary_Envar a) = toElem a
    toElem (Secondary_Errorcode a) = toElem a
    toElem (Secondary_Errorname a) = toElem a
    toElem (Secondary_Errortype a) = toElem a
    toElem (Secondary_Errortext a) = toElem a
    toElem (Secondary_Filename a) = toElem a
    toElem (Secondary_Function a) = toElem a
    toElem (Secondary_Guibutton a) = toElem a
    toElem (Secondary_Guiicon a) = toElem a
    toElem (Secondary_Guilabel a) = toElem a
    toElem (Secondary_Guimenu a) = toElem a
    toElem (Secondary_Guimenuitem a) = toElem a
    toElem (Secondary_Guisubmenu a) = toElem a
    toElem (Secondary_Hardware a) = toElem a
    toElem (Secondary_Interface a) = toElem a
    toElem (Secondary_Keycap a) = toElem a
    toElem (Secondary_Keycode a) = toElem a
    toElem (Secondary_Keycombo a) = toElem a
    toElem (Secondary_Keysym a) = toElem a
    toElem (Secondary_Literal a) = toElem a
    toElem (Secondary_Constant a) = toElem a
    toElem (Secondary_Markup a) = toElem a
    toElem (Secondary_Medialabel a) = toElem a
    toElem (Secondary_Menuchoice a) = toElem a
    toElem (Secondary_Mousebutton a) = toElem a
    toElem (Secondary_Option a) = toElem a
    toElem (Secondary_Optional a) = toElem a
    toElem (Secondary_Parameter a) = toElem a
    toElem (Secondary_Prompt a) = toElem a
    toElem (Secondary_Property a) = toElem a
    toElem (Secondary_Replaceable a) = toElem a
    toElem (Secondary_Returnvalue a) = toElem a
    toElem (Secondary_Sgmltag a) = toElem a
    toElem (Secondary_Structfield a) = toElem a
    toElem (Secondary_Structname a) = toElem a
    toElem (Secondary_Symbol a) = toElem a
    toElem (Secondary_Systemitem a) = toElem a
    toElem (Secondary_Token a) = toElem a
    toElem (Secondary_Type a) = toElem a
    toElem (Secondary_Userinput a) = toElem a
    toElem (Secondary_Varname a) = toElem a
    toElem (Secondary_Anchor a) = toElem a
    toElem (Secondary_Author a) = toElem a
    toElem (Secondary_Authorinitials a) = toElem a
    toElem (Secondary_Corpauthor a) = toElem a
    toElem (Secondary_Modespec a) = toElem a
    toElem (Secondary_Othercredit a) = toElem a
    toElem (Secondary_Productname a) = toElem a
    toElem (Secondary_Productnumber a) = toElem a
    toElem (Secondary_Revhistory a) = toElem a
    toElem (Secondary_Remark a) = toElem a
    toElem (Secondary_Subscript a) = toElem a
    toElem (Secondary_Superscript a) = toElem a
    toElem (Secondary_Inlinegraphic a) = toElem a
    toElem (Secondary_Inlinemediaobject a) = toElem a
instance XmlAttrType Secondary_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Secondary_Revisionflag_Changed
	    translate "added" = Just Secondary_Revisionflag_Added
	    translate "deleted" = Just Secondary_Revisionflag_Deleted
	    translate "off" = Just Secondary_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Secondary_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Secondary_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Secondary_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Secondary_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Tertiary where
    fromElem (CElem (Elem "tertiary" as c0):rest) =
	(\(a,ca)->
	   (Just (Tertiary (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Tertiary as a) =
	[CElem (Elem "tertiary" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Tertiary_Attrs where
    fromAttrs as =
	Tertiary_Attrs
	  { tertiarySortas = possibleA fromAttrToStr "sortas" as
	  , tertiaryId = possibleA fromAttrToStr "id" as
	  , tertiaryLang = possibleA fromAttrToStr "lang" as
	  , tertiaryRemap = possibleA fromAttrToStr "remap" as
	  , tertiaryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , tertiaryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , tertiaryArch = possibleA fromAttrToStr "arch" as
	  , tertiaryCondition = possibleA fromAttrToStr "condition" as
	  , tertiaryConformance = possibleA fromAttrToStr "conformance" as
	  , tertiaryOs = possibleA fromAttrToStr "os" as
	  , tertiaryRevision = possibleA fromAttrToStr "revision" as
	  , tertiarySecurity = possibleA fromAttrToStr "security" as
	  , tertiaryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , tertiaryVendor = possibleA fromAttrToStr "vendor" as
	  , tertiaryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "sortas" (tertiarySortas v)
	, maybeToAttr toAttrFrStr "id" (tertiaryId v)
	, maybeToAttr toAttrFrStr "lang" (tertiaryLang v)
	, maybeToAttr toAttrFrStr "remap" (tertiaryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (tertiaryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (tertiaryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (tertiaryArch v)
	, maybeToAttr toAttrFrStr "condition" (tertiaryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (tertiaryConformance v)
	, maybeToAttr toAttrFrStr "os" (tertiaryOs v)
	, maybeToAttr toAttrFrStr "revision" (tertiaryRevision v)
	, maybeToAttr toAttrFrStr "security" (tertiarySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (tertiaryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (tertiaryVendor v)
	, maybeToAttr toAttrFrStr "role" (tertiaryRole v)
	]
instance XmlContent Tertiary_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Tertiary_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Tertiary_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Tertiary_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Tertiary_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Tertiary_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Tertiary_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Tertiary_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Tertiary_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Tertiary_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Tertiary_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Tertiary_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Tertiary_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Tertiary_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Tertiary_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Tertiary_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Tertiary_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Tertiary_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Tertiary_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Tertiary_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Tertiary_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Tertiary_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Tertiary_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Tertiary_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Tertiary_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Tertiary_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Tertiary_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Tertiary_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Tertiary_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Tertiary_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Tertiary_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Tertiary_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Tertiary_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Tertiary_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Tertiary_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Tertiary_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Tertiary_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Tertiary_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Tertiary_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Tertiary_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Tertiary_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Tertiary_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Tertiary_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Tertiary_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Tertiary_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Tertiary_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Tertiary_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Tertiary_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Tertiary_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Tertiary_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Tertiary_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Tertiary_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Tertiary_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Tertiary_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Tertiary_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Tertiary_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Tertiary_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Tertiary_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Tertiary_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Tertiary_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Tertiary_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Tertiary_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Tertiary_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Tertiary_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Tertiary_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Tertiary_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Tertiary_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Tertiary_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Tertiary_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Tertiary_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Tertiary_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Tertiary_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Tertiary_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Tertiary_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Tertiary_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Tertiary_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Tertiary_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Tertiary_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Tertiary_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Tertiary_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Tertiary_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Tertiary_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Tertiary_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Tertiary_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Tertiary_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Tertiary_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Tertiary_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Tertiary_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Tertiary_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Tertiary_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																									    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Tertiary_Str a) = toText a
    toElem (Tertiary_Footnoteref a) = toElem a
    toElem (Tertiary_Xref a) = toElem a
    toElem (Tertiary_Abbrev a) = toElem a
    toElem (Tertiary_Acronym a) = toElem a
    toElem (Tertiary_Citation a) = toElem a
    toElem (Tertiary_Citerefentry a) = toElem a
    toElem (Tertiary_Citetitle a) = toElem a
    toElem (Tertiary_Emphasis a) = toElem a
    toElem (Tertiary_Firstterm a) = toElem a
    toElem (Tertiary_Foreignphrase a) = toElem a
    toElem (Tertiary_Glossterm a) = toElem a
    toElem (Tertiary_Footnote a) = toElem a
    toElem (Tertiary_Phrase a) = toElem a
    toElem (Tertiary_Quote a) = toElem a
    toElem (Tertiary_Trademark a) = toElem a
    toElem (Tertiary_Wordasword a) = toElem a
    toElem (Tertiary_Personname a) = toElem a
    toElem (Tertiary_Link a) = toElem a
    toElem (Tertiary_Olink a) = toElem a
    toElem (Tertiary_Ulink a) = toElem a
    toElem (Tertiary_Action a) = toElem a
    toElem (Tertiary_Application a) = toElem a
    toElem (Tertiary_Classname a) = toElem a
    toElem (Tertiary_Methodname a) = toElem a
    toElem (Tertiary_Interfacename a) = toElem a
    toElem (Tertiary_Exceptionname a) = toElem a
    toElem (Tertiary_Ooclass a) = toElem a
    toElem (Tertiary_Oointerface a) = toElem a
    toElem (Tertiary_Ooexception a) = toElem a
    toElem (Tertiary_Command a) = toElem a
    toElem (Tertiary_Computeroutput a) = toElem a
    toElem (Tertiary_Database a) = toElem a
    toElem (Tertiary_Email a) = toElem a
    toElem (Tertiary_Envar a) = toElem a
    toElem (Tertiary_Errorcode a) = toElem a
    toElem (Tertiary_Errorname a) = toElem a
    toElem (Tertiary_Errortype a) = toElem a
    toElem (Tertiary_Errortext a) = toElem a
    toElem (Tertiary_Filename a) = toElem a
    toElem (Tertiary_Function a) = toElem a
    toElem (Tertiary_Guibutton a) = toElem a
    toElem (Tertiary_Guiicon a) = toElem a
    toElem (Tertiary_Guilabel a) = toElem a
    toElem (Tertiary_Guimenu a) = toElem a
    toElem (Tertiary_Guimenuitem a) = toElem a
    toElem (Tertiary_Guisubmenu a) = toElem a
    toElem (Tertiary_Hardware a) = toElem a
    toElem (Tertiary_Interface a) = toElem a
    toElem (Tertiary_Keycap a) = toElem a
    toElem (Tertiary_Keycode a) = toElem a
    toElem (Tertiary_Keycombo a) = toElem a
    toElem (Tertiary_Keysym a) = toElem a
    toElem (Tertiary_Literal a) = toElem a
    toElem (Tertiary_Constant a) = toElem a
    toElem (Tertiary_Markup a) = toElem a
    toElem (Tertiary_Medialabel a) = toElem a
    toElem (Tertiary_Menuchoice a) = toElem a
    toElem (Tertiary_Mousebutton a) = toElem a
    toElem (Tertiary_Option a) = toElem a
    toElem (Tertiary_Optional a) = toElem a
    toElem (Tertiary_Parameter a) = toElem a
    toElem (Tertiary_Prompt a) = toElem a
    toElem (Tertiary_Property a) = toElem a
    toElem (Tertiary_Replaceable a) = toElem a
    toElem (Tertiary_Returnvalue a) = toElem a
    toElem (Tertiary_Sgmltag a) = toElem a
    toElem (Tertiary_Structfield a) = toElem a
    toElem (Tertiary_Structname a) = toElem a
    toElem (Tertiary_Symbol a) = toElem a
    toElem (Tertiary_Systemitem a) = toElem a
    toElem (Tertiary_Token a) = toElem a
    toElem (Tertiary_Type a) = toElem a
    toElem (Tertiary_Userinput a) = toElem a
    toElem (Tertiary_Varname a) = toElem a
    toElem (Tertiary_Anchor a) = toElem a
    toElem (Tertiary_Author a) = toElem a
    toElem (Tertiary_Authorinitials a) = toElem a
    toElem (Tertiary_Corpauthor a) = toElem a
    toElem (Tertiary_Modespec a) = toElem a
    toElem (Tertiary_Othercredit a) = toElem a
    toElem (Tertiary_Productname a) = toElem a
    toElem (Tertiary_Productnumber a) = toElem a
    toElem (Tertiary_Revhistory a) = toElem a
    toElem (Tertiary_Remark a) = toElem a
    toElem (Tertiary_Subscript a) = toElem a
    toElem (Tertiary_Superscript a) = toElem a
    toElem (Tertiary_Inlinegraphic a) = toElem a
    toElem (Tertiary_Inlinemediaobject a) = toElem a
instance XmlAttrType Tertiary_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Tertiary_Revisionflag_Changed
	    translate "added" = Just Tertiary_Revisionflag_Added
	    translate "deleted" = Just Tertiary_Revisionflag_Deleted
	    translate "off" = Just Tertiary_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Tertiary_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Tertiary_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Tertiary_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Tertiary_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent See where
    fromElem (CElem (Elem "see" as c0):rest) =
	(\(a,ca)->
	   (Just (See (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (See as a) =
	[CElem (Elem "see" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes See_Attrs where
    fromAttrs as =
	See_Attrs
	  { seeId = possibleA fromAttrToStr "id" as
	  , seeLang = possibleA fromAttrToStr "lang" as
	  , seeRemap = possibleA fromAttrToStr "remap" as
	  , seeXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , seeRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , seeArch = possibleA fromAttrToStr "arch" as
	  , seeCondition = possibleA fromAttrToStr "condition" as
	  , seeConformance = possibleA fromAttrToStr "conformance" as
	  , seeOs = possibleA fromAttrToStr "os" as
	  , seeRevision = possibleA fromAttrToStr "revision" as
	  , seeSecurity = possibleA fromAttrToStr "security" as
	  , seeUserlevel = possibleA fromAttrToStr "userlevel" as
	  , seeVendor = possibleA fromAttrToStr "vendor" as
	  , seeRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (seeId v)
	, maybeToAttr toAttrFrStr "lang" (seeLang v)
	, maybeToAttr toAttrFrStr "remap" (seeRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (seeXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (seeRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (seeArch v)
	, maybeToAttr toAttrFrStr "condition" (seeCondition v)
	, maybeToAttr toAttrFrStr "conformance" (seeConformance v)
	, maybeToAttr toAttrFrStr "os" (seeOs v)
	, maybeToAttr toAttrFrStr "revision" (seeRevision v)
	, maybeToAttr toAttrFrStr "security" (seeSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (seeUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (seeVendor v)
	, maybeToAttr toAttrFrStr "role" (seeRole v)
	]
instance XmlContent See_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (See_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (See_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (See_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (See_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (See_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (See_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (See_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (See_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (See_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (See_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (See_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (See_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (See_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (See_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (See_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (See_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (See_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (See_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (See_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (See_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (See_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (See_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (See_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (See_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (See_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (See_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (See_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (See_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (See_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (See_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (See_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (See_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (See_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (See_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (See_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (See_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (See_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (See_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (See_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (See_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (See_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (See_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (See_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (See_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (See_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (See_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (See_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (See_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (See_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (See_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (See_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (See_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (See_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (See_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (See_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (See_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (See_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (See_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (See_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (See_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (See_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (See_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (See_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (See_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (See_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (See_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (See_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (See_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (See_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (See_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (See_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (See_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (See_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (See_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (See_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (See_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (See_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (See_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (See_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (See_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (See_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (See_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (See_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (See_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (See_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (See_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (See_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (See_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (See_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																									    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (See_Str a) = toText a
    toElem (See_Footnoteref a) = toElem a
    toElem (See_Xref a) = toElem a
    toElem (See_Abbrev a) = toElem a
    toElem (See_Acronym a) = toElem a
    toElem (See_Citation a) = toElem a
    toElem (See_Citerefentry a) = toElem a
    toElem (See_Citetitle a) = toElem a
    toElem (See_Emphasis a) = toElem a
    toElem (See_Firstterm a) = toElem a
    toElem (See_Foreignphrase a) = toElem a
    toElem (See_Glossterm a) = toElem a
    toElem (See_Footnote a) = toElem a
    toElem (See_Phrase a) = toElem a
    toElem (See_Quote a) = toElem a
    toElem (See_Trademark a) = toElem a
    toElem (See_Wordasword a) = toElem a
    toElem (See_Personname a) = toElem a
    toElem (See_Link a) = toElem a
    toElem (See_Olink a) = toElem a
    toElem (See_Ulink a) = toElem a
    toElem (See_Action a) = toElem a
    toElem (See_Application a) = toElem a
    toElem (See_Classname a) = toElem a
    toElem (See_Methodname a) = toElem a
    toElem (See_Interfacename a) = toElem a
    toElem (See_Exceptionname a) = toElem a
    toElem (See_Ooclass a) = toElem a
    toElem (See_Oointerface a) = toElem a
    toElem (See_Ooexception a) = toElem a
    toElem (See_Command a) = toElem a
    toElem (See_Computeroutput a) = toElem a
    toElem (See_Database a) = toElem a
    toElem (See_Email a) = toElem a
    toElem (See_Envar a) = toElem a
    toElem (See_Errorcode a) = toElem a
    toElem (See_Errorname a) = toElem a
    toElem (See_Errortype a) = toElem a
    toElem (See_Errortext a) = toElem a
    toElem (See_Filename a) = toElem a
    toElem (See_Function a) = toElem a
    toElem (See_Guibutton a) = toElem a
    toElem (See_Guiicon a) = toElem a
    toElem (See_Guilabel a) = toElem a
    toElem (See_Guimenu a) = toElem a
    toElem (See_Guimenuitem a) = toElem a
    toElem (See_Guisubmenu a) = toElem a
    toElem (See_Hardware a) = toElem a
    toElem (See_Interface a) = toElem a
    toElem (See_Keycap a) = toElem a
    toElem (See_Keycode a) = toElem a
    toElem (See_Keycombo a) = toElem a
    toElem (See_Keysym a) = toElem a
    toElem (See_Literal a) = toElem a
    toElem (See_Constant a) = toElem a
    toElem (See_Markup a) = toElem a
    toElem (See_Medialabel a) = toElem a
    toElem (See_Menuchoice a) = toElem a
    toElem (See_Mousebutton a) = toElem a
    toElem (See_Option a) = toElem a
    toElem (See_Optional a) = toElem a
    toElem (See_Parameter a) = toElem a
    toElem (See_Prompt a) = toElem a
    toElem (See_Property a) = toElem a
    toElem (See_Replaceable a) = toElem a
    toElem (See_Returnvalue a) = toElem a
    toElem (See_Sgmltag a) = toElem a
    toElem (See_Structfield a) = toElem a
    toElem (See_Structname a) = toElem a
    toElem (See_Symbol a) = toElem a
    toElem (See_Systemitem a) = toElem a
    toElem (See_Token a) = toElem a
    toElem (See_Type a) = toElem a
    toElem (See_Userinput a) = toElem a
    toElem (See_Varname a) = toElem a
    toElem (See_Anchor a) = toElem a
    toElem (See_Author a) = toElem a
    toElem (See_Authorinitials a) = toElem a
    toElem (See_Corpauthor a) = toElem a
    toElem (See_Modespec a) = toElem a
    toElem (See_Othercredit a) = toElem a
    toElem (See_Productname a) = toElem a
    toElem (See_Productnumber a) = toElem a
    toElem (See_Revhistory a) = toElem a
    toElem (See_Remark a) = toElem a
    toElem (See_Subscript a) = toElem a
    toElem (See_Superscript a) = toElem a
    toElem (See_Inlinegraphic a) = toElem a
    toElem (See_Inlinemediaobject a) = toElem a
instance XmlAttrType See_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just See_Revisionflag_Changed
	    translate "added" = Just See_Revisionflag_Added
	    translate "deleted" = Just See_Revisionflag_Deleted
	    translate "off" = Just See_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n See_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n See_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n See_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n See_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Seealso where
    fromElem (CElem (Elem "seealso" as c0):rest) =
	(\(a,ca)->
	   (Just (Seealso (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Seealso as a) =
	[CElem (Elem "seealso" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Seealso_Attrs where
    fromAttrs as =
	Seealso_Attrs
	  { seealsoId = possibleA fromAttrToStr "id" as
	  , seealsoLang = possibleA fromAttrToStr "lang" as
	  , seealsoRemap = possibleA fromAttrToStr "remap" as
	  , seealsoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , seealsoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , seealsoArch = possibleA fromAttrToStr "arch" as
	  , seealsoCondition = possibleA fromAttrToStr "condition" as
	  , seealsoConformance = possibleA fromAttrToStr "conformance" as
	  , seealsoOs = possibleA fromAttrToStr "os" as
	  , seealsoRevision = possibleA fromAttrToStr "revision" as
	  , seealsoSecurity = possibleA fromAttrToStr "security" as
	  , seealsoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , seealsoVendor = possibleA fromAttrToStr "vendor" as
	  , seealsoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (seealsoId v)
	, maybeToAttr toAttrFrStr "lang" (seealsoLang v)
	, maybeToAttr toAttrFrStr "remap" (seealsoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (seealsoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (seealsoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (seealsoArch v)
	, maybeToAttr toAttrFrStr "condition" (seealsoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (seealsoConformance v)
	, maybeToAttr toAttrFrStr "os" (seealsoOs v)
	, maybeToAttr toAttrFrStr "revision" (seealsoRevision v)
	, maybeToAttr toAttrFrStr "security" (seealsoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (seealsoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (seealsoVendor v)
	, maybeToAttr toAttrFrStr "role" (seealsoRole v)
	]
instance XmlContent Seealso_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Seealso_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Seealso_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Seealso_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Seealso_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Seealso_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Seealso_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Seealso_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Seealso_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Seealso_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Seealso_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Seealso_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Seealso_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Seealso_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Seealso_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Seealso_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Seealso_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Seealso_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Seealso_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Seealso_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Seealso_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Seealso_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Seealso_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Seealso_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Seealso_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Seealso_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Seealso_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Seealso_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Seealso_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Seealso_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Seealso_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Seealso_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Seealso_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Seealso_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Seealso_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Seealso_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Seealso_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Seealso_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Seealso_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Seealso_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Seealso_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Seealso_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Seealso_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Seealso_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Seealso_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Seealso_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Seealso_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Seealso_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Seealso_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Seealso_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Seealso_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Seealso_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Seealso_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Seealso_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Seealso_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Seealso_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Seealso_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Seealso_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Seealso_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Seealso_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Seealso_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Seealso_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Seealso_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Seealso_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Seealso_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Seealso_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Seealso_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Seealso_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Seealso_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Seealso_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Seealso_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Seealso_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Seealso_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Seealso_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Seealso_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Seealso_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Seealso_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Seealso_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Seealso_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Seealso_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Seealso_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Seealso_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Seealso_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Seealso_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Seealso_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Seealso_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Seealso_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Seealso_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Seealso_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Seealso_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																									    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Seealso_Str a) = toText a
    toElem (Seealso_Footnoteref a) = toElem a
    toElem (Seealso_Xref a) = toElem a
    toElem (Seealso_Abbrev a) = toElem a
    toElem (Seealso_Acronym a) = toElem a
    toElem (Seealso_Citation a) = toElem a
    toElem (Seealso_Citerefentry a) = toElem a
    toElem (Seealso_Citetitle a) = toElem a
    toElem (Seealso_Emphasis a) = toElem a
    toElem (Seealso_Firstterm a) = toElem a
    toElem (Seealso_Foreignphrase a) = toElem a
    toElem (Seealso_Glossterm a) = toElem a
    toElem (Seealso_Footnote a) = toElem a
    toElem (Seealso_Phrase a) = toElem a
    toElem (Seealso_Quote a) = toElem a
    toElem (Seealso_Trademark a) = toElem a
    toElem (Seealso_Wordasword a) = toElem a
    toElem (Seealso_Personname a) = toElem a
    toElem (Seealso_Link a) = toElem a
    toElem (Seealso_Olink a) = toElem a
    toElem (Seealso_Ulink a) = toElem a
    toElem (Seealso_Action a) = toElem a
    toElem (Seealso_Application a) = toElem a
    toElem (Seealso_Classname a) = toElem a
    toElem (Seealso_Methodname a) = toElem a
    toElem (Seealso_Interfacename a) = toElem a
    toElem (Seealso_Exceptionname a) = toElem a
    toElem (Seealso_Ooclass a) = toElem a
    toElem (Seealso_Oointerface a) = toElem a
    toElem (Seealso_Ooexception a) = toElem a
    toElem (Seealso_Command a) = toElem a
    toElem (Seealso_Computeroutput a) = toElem a
    toElem (Seealso_Database a) = toElem a
    toElem (Seealso_Email a) = toElem a
    toElem (Seealso_Envar a) = toElem a
    toElem (Seealso_Errorcode a) = toElem a
    toElem (Seealso_Errorname a) = toElem a
    toElem (Seealso_Errortype a) = toElem a
    toElem (Seealso_Errortext a) = toElem a
    toElem (Seealso_Filename a) = toElem a
    toElem (Seealso_Function a) = toElem a
    toElem (Seealso_Guibutton a) = toElem a
    toElem (Seealso_Guiicon a) = toElem a
    toElem (Seealso_Guilabel a) = toElem a
    toElem (Seealso_Guimenu a) = toElem a
    toElem (Seealso_Guimenuitem a) = toElem a
    toElem (Seealso_Guisubmenu a) = toElem a
    toElem (Seealso_Hardware a) = toElem a
    toElem (Seealso_Interface a) = toElem a
    toElem (Seealso_Keycap a) = toElem a
    toElem (Seealso_Keycode a) = toElem a
    toElem (Seealso_Keycombo a) = toElem a
    toElem (Seealso_Keysym a) = toElem a
    toElem (Seealso_Literal a) = toElem a
    toElem (Seealso_Constant a) = toElem a
    toElem (Seealso_Markup a) = toElem a
    toElem (Seealso_Medialabel a) = toElem a
    toElem (Seealso_Menuchoice a) = toElem a
    toElem (Seealso_Mousebutton a) = toElem a
    toElem (Seealso_Option a) = toElem a
    toElem (Seealso_Optional a) = toElem a
    toElem (Seealso_Parameter a) = toElem a
    toElem (Seealso_Prompt a) = toElem a
    toElem (Seealso_Property a) = toElem a
    toElem (Seealso_Replaceable a) = toElem a
    toElem (Seealso_Returnvalue a) = toElem a
    toElem (Seealso_Sgmltag a) = toElem a
    toElem (Seealso_Structfield a) = toElem a
    toElem (Seealso_Structname a) = toElem a
    toElem (Seealso_Symbol a) = toElem a
    toElem (Seealso_Systemitem a) = toElem a
    toElem (Seealso_Token a) = toElem a
    toElem (Seealso_Type a) = toElem a
    toElem (Seealso_Userinput a) = toElem a
    toElem (Seealso_Varname a) = toElem a
    toElem (Seealso_Anchor a) = toElem a
    toElem (Seealso_Author a) = toElem a
    toElem (Seealso_Authorinitials a) = toElem a
    toElem (Seealso_Corpauthor a) = toElem a
    toElem (Seealso_Modespec a) = toElem a
    toElem (Seealso_Othercredit a) = toElem a
    toElem (Seealso_Productname a) = toElem a
    toElem (Seealso_Productnumber a) = toElem a
    toElem (Seealso_Revhistory a) = toElem a
    toElem (Seealso_Remark a) = toElem a
    toElem (Seealso_Subscript a) = toElem a
    toElem (Seealso_Superscript a) = toElem a
    toElem (Seealso_Inlinegraphic a) = toElem a
    toElem (Seealso_Inlinemediaobject a) = toElem a
instance XmlAttrType Seealso_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Seealso_Revisionflag_Changed
	    translate "added" = Just Seealso_Revisionflag_Added
	    translate "deleted" = Just Seealso_Revisionflag_Deleted
	    translate "off" = Just Seealso_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Seealso_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Seealso_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Seealso_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Seealso_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Set where
    fromElem (CElem (Elem "set" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (Just (Set (fromAttrs as) a b c d e), rest))
		    (fromElem cd))
		 (many fromElem cc))
	      (fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Set as a b c d e) =
	[CElem (Elem "set" (toAttrs as) (maybe [] toElem a ++
					 maybe [] toElem b ++ maybe [] toElem c ++
					 concatMap toElem d ++ maybe [] toElem e))]
instance XmlAttributes Set_Attrs where
    fromAttrs as =
	Set_Attrs
	  { setFpi = possibleA fromAttrToStr "fpi" as
	  , setStatus = possibleA fromAttrToStr "status" as
	  , setId = possibleA fromAttrToStr "id" as
	  , setLang = possibleA fromAttrToStr "lang" as
	  , setRemap = possibleA fromAttrToStr "remap" as
	  , setXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , setRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , setArch = possibleA fromAttrToStr "arch" as
	  , setCondition = possibleA fromAttrToStr "condition" as
	  , setConformance = possibleA fromAttrToStr "conformance" as
	  , setOs = possibleA fromAttrToStr "os" as
	  , setRevision = possibleA fromAttrToStr "revision" as
	  , setSecurity = possibleA fromAttrToStr "security" as
	  , setUserlevel = possibleA fromAttrToStr "userlevel" as
	  , setVendor = possibleA fromAttrToStr "vendor" as
	  , setRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "fpi" (setFpi v)
	, maybeToAttr toAttrFrStr "status" (setStatus v)
	, maybeToAttr toAttrFrStr "id" (setId v)
	, maybeToAttr toAttrFrStr "lang" (setLang v)
	, maybeToAttr toAttrFrStr "remap" (setRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (setXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (setRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (setArch v)
	, maybeToAttr toAttrFrStr "condition" (setCondition v)
	, maybeToAttr toAttrFrStr "conformance" (setConformance v)
	, maybeToAttr toAttrFrStr "os" (setOs v)
	, maybeToAttr toAttrFrStr "revision" (setRevision v)
	, maybeToAttr toAttrFrStr "security" (setSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (setUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (setVendor v)
	, maybeToAttr toAttrFrStr "role" (setRole v)
	]
instance XmlAttrType Set_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Set_Revisionflag_Changed
	    translate "added" = Just Set_Revisionflag_Added
	    translate "deleted" = Just Set_Revisionflag_Deleted
	    translate "off" = Just Set_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Set_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Set_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Set_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Set_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Setinfo where
    fromElem (CElem (Elem "setinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Setinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Setinfo as a) =
	[CElem (Elem "setinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Setinfo_Attrs where
    fromAttrs as =
	Setinfo_Attrs
	  { setinfoContents = possibleA fromAttrToStr "contents" as
	  , setinfoId = possibleA fromAttrToStr "id" as
	  , setinfoLang = possibleA fromAttrToStr "lang" as
	  , setinfoRemap = possibleA fromAttrToStr "remap" as
	  , setinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , setinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , setinfoArch = possibleA fromAttrToStr "arch" as
	  , setinfoCondition = possibleA fromAttrToStr "condition" as
	  , setinfoConformance = possibleA fromAttrToStr "conformance" as
	  , setinfoOs = possibleA fromAttrToStr "os" as
	  , setinfoRevision = possibleA fromAttrToStr "revision" as
	  , setinfoSecurity = possibleA fromAttrToStr "security" as
	  , setinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , setinfoVendor = possibleA fromAttrToStr "vendor" as
	  , setinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "contents" (setinfoContents v)
	, maybeToAttr toAttrFrStr "id" (setinfoId v)
	, maybeToAttr toAttrFrStr "lang" (setinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (setinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (setinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (setinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (setinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (setinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (setinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (setinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (setinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (setinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (setinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (setinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (setinfoRole v)
	]
instance XmlAttrType Setinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Setinfo_Revisionflag_Changed
	    translate "added" = Just Setinfo_Revisionflag_Added
	    translate "deleted" = Just Setinfo_Revisionflag_Deleted
	    translate "off" = Just Setinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Setinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Setinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Setinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Setinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Book where
    fromElem (CElem (Elem "book" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Book (fromAttrs as) a b c), rest))
	      (many fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Book as a b c) =
	[CElem (Elem "book" (toAttrs as) (maybe [] toElem a ++
					  maybe [] toElem b ++ concatMap toElem c))]
instance XmlAttributes Book_Attrs where
    fromAttrs as =
	Book_Attrs
	  { bookFpi = possibleA fromAttrToStr "fpi" as
	  , bookLabel = possibleA fromAttrToStr "label" as
	  , bookStatus = possibleA fromAttrToStr "status" as
	  , bookId = possibleA fromAttrToStr "id" as
	  , bookLang = possibleA fromAttrToStr "lang" as
	  , bookRemap = possibleA fromAttrToStr "remap" as
	  , bookXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , bookRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , bookArch = possibleA fromAttrToStr "arch" as
	  , bookCondition = possibleA fromAttrToStr "condition" as
	  , bookConformance = possibleA fromAttrToStr "conformance" as
	  , bookOs = possibleA fromAttrToStr "os" as
	  , bookRevision = possibleA fromAttrToStr "revision" as
	  , bookSecurity = possibleA fromAttrToStr "security" as
	  , bookUserlevel = possibleA fromAttrToStr "userlevel" as
	  , bookVendor = possibleA fromAttrToStr "vendor" as
	  , bookRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "fpi" (bookFpi v)
	, maybeToAttr toAttrFrStr "label" (bookLabel v)
	, maybeToAttr toAttrFrStr "status" (bookStatus v)
	, maybeToAttr toAttrFrStr "id" (bookId v)
	, maybeToAttr toAttrFrStr "lang" (bookLang v)
	, maybeToAttr toAttrFrStr "remap" (bookRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (bookXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (bookRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (bookArch v)
	, maybeToAttr toAttrFrStr "condition" (bookCondition v)
	, maybeToAttr toAttrFrStr "conformance" (bookConformance v)
	, maybeToAttr toAttrFrStr "os" (bookOs v)
	, maybeToAttr toAttrFrStr "revision" (bookRevision v)
	, maybeToAttr toAttrFrStr "security" (bookSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (bookUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (bookVendor v)
	, maybeToAttr toAttrFrStr "role" (bookRole v)
	]
instance XmlAttrType Book_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Book_Revisionflag_Changed
	    translate "added" = Just Book_Revisionflag_Added
	    translate "deleted" = Just Book_Revisionflag_Deleted
	    translate "off" = Just Book_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Book_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Book_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Book_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Book_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Bookinfo where
    fromElem (CElem (Elem "bookinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Bookinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bookinfo as a) =
	[CElem (Elem "bookinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Bookinfo_Attrs where
    fromAttrs as =
	Bookinfo_Attrs
	  { bookinfoContents = possibleA fromAttrToStr "contents" as
	  , bookinfoId = possibleA fromAttrToStr "id" as
	  , bookinfoLang = possibleA fromAttrToStr "lang" as
	  , bookinfoRemap = possibleA fromAttrToStr "remap" as
	  , bookinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , bookinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , bookinfoArch = possibleA fromAttrToStr "arch" as
	  , bookinfoCondition = possibleA fromAttrToStr "condition" as
	  , bookinfoConformance = possibleA fromAttrToStr "conformance" as
	  , bookinfoOs = possibleA fromAttrToStr "os" as
	  , bookinfoRevision = possibleA fromAttrToStr "revision" as
	  , bookinfoSecurity = possibleA fromAttrToStr "security" as
	  , bookinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , bookinfoVendor = possibleA fromAttrToStr "vendor" as
	  , bookinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "contents" (bookinfoContents v)
	, maybeToAttr toAttrFrStr "id" (bookinfoId v)
	, maybeToAttr toAttrFrStr "lang" (bookinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (bookinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (bookinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (bookinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (bookinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (bookinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (bookinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (bookinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (bookinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (bookinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (bookinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (bookinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (bookinfoRole v)
	]
instance XmlAttrType Bookinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Bookinfo_Revisionflag_Changed
	    translate "added" = Just Bookinfo_Revisionflag_Added
	    translate "deleted" = Just Bookinfo_Revisionflag_Deleted
	    translate "off" = Just Bookinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Bookinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Bookinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Bookinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Bookinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Dedication where
    fromElem (CElem (Elem "dedication" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Dedication (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Dedication as a b) =
	[CElem (Elem "dedication" (toAttrs as) (maybe [] toElem a ++
						concatMap toElem b))]
instance XmlAttributes Dedication_Attrs where
    fromAttrs as =
	Dedication_Attrs
	  { dedicationStatus = possibleA fromAttrToStr "status" as
	  , dedicationId = possibleA fromAttrToStr "id" as
	  , dedicationLang = possibleA fromAttrToStr "lang" as
	  , dedicationRemap = possibleA fromAttrToStr "remap" as
	  , dedicationXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , dedicationRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , dedicationArch = possibleA fromAttrToStr "arch" as
	  , dedicationCondition = possibleA fromAttrToStr "condition" as
	  , dedicationConformance = possibleA fromAttrToStr "conformance" as
	  , dedicationOs = possibleA fromAttrToStr "os" as
	  , dedicationRevision = possibleA fromAttrToStr "revision" as
	  , dedicationSecurity = possibleA fromAttrToStr "security" as
	  , dedicationUserlevel = possibleA fromAttrToStr "userlevel" as
	  , dedicationVendor = possibleA fromAttrToStr "vendor" as
	  , dedicationRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "status" (dedicationStatus v)
	, maybeToAttr toAttrFrStr "id" (dedicationId v)
	, maybeToAttr toAttrFrStr "lang" (dedicationLang v)
	, maybeToAttr toAttrFrStr "remap" (dedicationRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (dedicationXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (dedicationRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (dedicationArch v)
	, maybeToAttr toAttrFrStr "condition" (dedicationCondition v)
	, maybeToAttr toAttrFrStr "conformance" (dedicationConformance v)
	, maybeToAttr toAttrFrStr "os" (dedicationOs v)
	, maybeToAttr toAttrFrStr "revision" (dedicationRevision v)
	, maybeToAttr toAttrFrStr "security" (dedicationSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (dedicationUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (dedicationVendor v)
	, maybeToAttr toAttrFrStr "role" (dedicationRole v)
	]
instance XmlAttrType Dedication_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Dedication_Revisionflag_Changed
	    translate "added" = Just Dedication_Revisionflag_Added
	    translate "deleted" = Just Dedication_Revisionflag_Deleted
	    translate "off" = Just Dedication_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Dedication_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Dedication_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Dedication_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Dedication_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Colophon where
    fromElem (CElem (Elem "colophon" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Colophon (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Colophon as a b) =
	[CElem (Elem "colophon" (toAttrs as) (maybe [] toElem a ++
					      concatMap toElem b))]
instance XmlAttributes Colophon_Attrs where
    fromAttrs as =
	Colophon_Attrs
	  { colophonStatus = possibleA fromAttrToStr "status" as
	  , colophonId = possibleA fromAttrToStr "id" as
	  , colophonLang = possibleA fromAttrToStr "lang" as
	  , colophonRemap = possibleA fromAttrToStr "remap" as
	  , colophonXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , colophonRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , colophonArch = possibleA fromAttrToStr "arch" as
	  , colophonCondition = possibleA fromAttrToStr "condition" as
	  , colophonConformance = possibleA fromAttrToStr "conformance" as
	  , colophonOs = possibleA fromAttrToStr "os" as
	  , colophonRevision = possibleA fromAttrToStr "revision" as
	  , colophonSecurity = possibleA fromAttrToStr "security" as
	  , colophonUserlevel = possibleA fromAttrToStr "userlevel" as
	  , colophonVendor = possibleA fromAttrToStr "vendor" as
	  , colophonRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "status" (colophonStatus v)
	, maybeToAttr toAttrFrStr "id" (colophonId v)
	, maybeToAttr toAttrFrStr "lang" (colophonLang v)
	, maybeToAttr toAttrFrStr "remap" (colophonRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (colophonXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (colophonRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (colophonArch v)
	, maybeToAttr toAttrFrStr "condition" (colophonCondition v)
	, maybeToAttr toAttrFrStr "conformance" (colophonConformance v)
	, maybeToAttr toAttrFrStr "os" (colophonOs v)
	, maybeToAttr toAttrFrStr "revision" (colophonRevision v)
	, maybeToAttr toAttrFrStr "security" (colophonSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (colophonUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (colophonVendor v)
	, maybeToAttr toAttrFrStr "role" (colophonRole v)
	]
instance XmlAttrType Colophon_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Colophon_Revisionflag_Changed
	    translate "added" = Just Colophon_Revisionflag_Added
	    translate "deleted" = Just Colophon_Revisionflag_Deleted
	    translate "off" = Just Colophon_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Colophon_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Colophon_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Colophon_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Colophon_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Toc where
    fromElem (CElem (Elem "toc" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (Just (Toc (fromAttrs as) a b c d e), rest))
		    (many fromElem cd))
		 (many fromElem cc))
	      (many fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Toc as a b c d e) =
	[CElem (Elem "toc" (toAttrs as) (maybe [] toElem a ++
					 maybe [] toElem b ++ concatMap toElem c ++
					 concatMap toElem d ++ concatMap toElem e))]
instance XmlAttributes Toc_Attrs where
    fromAttrs as =
	Toc_Attrs
	  { tocPagenum = possibleA fromAttrToStr "pagenum" as
	  , tocId = possibleA fromAttrToStr "id" as
	  , tocLang = possibleA fromAttrToStr "lang" as
	  , tocRemap = possibleA fromAttrToStr "remap" as
	  , tocXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , tocRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , tocArch = possibleA fromAttrToStr "arch" as
	  , tocCondition = possibleA fromAttrToStr "condition" as
	  , tocConformance = possibleA fromAttrToStr "conformance" as
	  , tocOs = possibleA fromAttrToStr "os" as
	  , tocRevision = possibleA fromAttrToStr "revision" as
	  , tocSecurity = possibleA fromAttrToStr "security" as
	  , tocUserlevel = possibleA fromAttrToStr "userlevel" as
	  , tocVendor = possibleA fromAttrToStr "vendor" as
	  , tocRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "pagenum" (tocPagenum v)
	, maybeToAttr toAttrFrStr "id" (tocId v)
	, maybeToAttr toAttrFrStr "lang" (tocLang v)
	, maybeToAttr toAttrFrStr "remap" (tocRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (tocXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (tocRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (tocArch v)
	, maybeToAttr toAttrFrStr "condition" (tocCondition v)
	, maybeToAttr toAttrFrStr "conformance" (tocConformance v)
	, maybeToAttr toAttrFrStr "os" (tocOs v)
	, maybeToAttr toAttrFrStr "revision" (tocRevision v)
	, maybeToAttr toAttrFrStr "security" (tocSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (tocUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (tocVendor v)
	, maybeToAttr toAttrFrStr "role" (tocRole v)
	]
instance XmlAttrType Toc_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Toc_Revisionflag_Changed
	    translate "added" = Just Toc_Revisionflag_Added
	    translate "deleted" = Just Toc_Revisionflag_Deleted
	    translate "off" = Just Toc_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Toc_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Toc_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Toc_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Toc_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Tocfront where
    fromElem (CElem (Elem "tocfront" as c0):rest) =
	(\(a,ca)->
	   (Just (Tocfront (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Tocfront as a) =
	[CElem (Elem "tocfront" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Tocfront_Attrs where
    fromAttrs as =
	Tocfront_Attrs
	  { tocfrontLabel = possibleA fromAttrToStr "label" as
	  , tocfrontLinkend = possibleA fromAttrToStr "linkend" as
	  , tocfrontPagenum = possibleA fromAttrToStr "pagenum" as
	  , tocfrontId = possibleA fromAttrToStr "id" as
	  , tocfrontLang = possibleA fromAttrToStr "lang" as
	  , tocfrontRemap = possibleA fromAttrToStr "remap" as
	  , tocfrontXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , tocfrontRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , tocfrontArch = possibleA fromAttrToStr "arch" as
	  , tocfrontCondition = possibleA fromAttrToStr "condition" as
	  , tocfrontConformance = possibleA fromAttrToStr "conformance" as
	  , tocfrontOs = possibleA fromAttrToStr "os" as
	  , tocfrontRevision = possibleA fromAttrToStr "revision" as
	  , tocfrontSecurity = possibleA fromAttrToStr "security" as
	  , tocfrontUserlevel = possibleA fromAttrToStr "userlevel" as
	  , tocfrontVendor = possibleA fromAttrToStr "vendor" as
	  , tocfrontRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (tocfrontLabel v)
	, maybeToAttr toAttrFrStr "linkend" (tocfrontLinkend v)
	, maybeToAttr toAttrFrStr "pagenum" (tocfrontPagenum v)
	, maybeToAttr toAttrFrStr "id" (tocfrontId v)
	, maybeToAttr toAttrFrStr "lang" (tocfrontLang v)
	, maybeToAttr toAttrFrStr "remap" (tocfrontRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (tocfrontXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (tocfrontRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (tocfrontArch v)
	, maybeToAttr toAttrFrStr "condition" (tocfrontCondition v)
	, maybeToAttr toAttrFrStr "conformance" (tocfrontConformance v)
	, maybeToAttr toAttrFrStr "os" (tocfrontOs v)
	, maybeToAttr toAttrFrStr "revision" (tocfrontRevision v)
	, maybeToAttr toAttrFrStr "security" (tocfrontSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (tocfrontUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (tocfrontVendor v)
	, maybeToAttr toAttrFrStr "role" (tocfrontRole v)
	]
instance XmlContent Tocfront_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Tocfront_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Tocfront_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Tocfront_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Tocfront_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Tocfront_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Tocfront_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Tocfront_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Tocfront_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Tocfront_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Tocfront_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Tocfront_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Tocfront_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Tocfront_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Tocfront_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Tocfront_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Tocfront_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Tocfront_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Tocfront_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Tocfront_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Tocfront_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Tocfront_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Tocfront_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Tocfront_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Tocfront_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Tocfront_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Tocfront_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Tocfront_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Tocfront_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Tocfront_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Tocfront_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Tocfront_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Tocfront_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Tocfront_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Tocfront_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Tocfront_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Tocfront_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Tocfront_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Tocfront_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Tocfront_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Tocfront_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Tocfront_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Tocfront_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Tocfront_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Tocfront_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Tocfront_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Tocfront_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Tocfront_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Tocfront_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Tocfront_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Tocfront_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Tocfront_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Tocfront_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Tocfront_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Tocfront_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Tocfront_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Tocfront_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Tocfront_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Tocfront_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Tocfront_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Tocfront_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Tocfront_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Tocfront_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Tocfront_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Tocfront_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Tocfront_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Tocfront_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Tocfront_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Tocfront_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Tocfront_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Tocfront_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Tocfront_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Tocfront_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Tocfront_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Tocfront_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Tocfront_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Tocfront_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Tocfront_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Tocfront_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Tocfront_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Tocfront_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Tocfront_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Tocfront_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Tocfront_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Tocfront_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Tocfront_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Tocfront_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Tocfront_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Tocfront_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Tocfront_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Tocfront_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Tocfront_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Tocfront_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Tocfront_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Tocfront_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Tocfront_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Tocfront_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Tocfront_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Tocfront_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Tocfront_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Tocfront_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Tocfront_Str a) = toText a
    toElem (Tocfront_Footnoteref a) = toElem a
    toElem (Tocfront_Xref a) = toElem a
    toElem (Tocfront_Abbrev a) = toElem a
    toElem (Tocfront_Acronym a) = toElem a
    toElem (Tocfront_Citation a) = toElem a
    toElem (Tocfront_Citerefentry a) = toElem a
    toElem (Tocfront_Citetitle a) = toElem a
    toElem (Tocfront_Emphasis a) = toElem a
    toElem (Tocfront_Firstterm a) = toElem a
    toElem (Tocfront_Foreignphrase a) = toElem a
    toElem (Tocfront_Glossterm a) = toElem a
    toElem (Tocfront_Footnote a) = toElem a
    toElem (Tocfront_Phrase a) = toElem a
    toElem (Tocfront_Quote a) = toElem a
    toElem (Tocfront_Trademark a) = toElem a
    toElem (Tocfront_Wordasword a) = toElem a
    toElem (Tocfront_Personname a) = toElem a
    toElem (Tocfront_Link a) = toElem a
    toElem (Tocfront_Olink a) = toElem a
    toElem (Tocfront_Ulink a) = toElem a
    toElem (Tocfront_Action a) = toElem a
    toElem (Tocfront_Application a) = toElem a
    toElem (Tocfront_Classname a) = toElem a
    toElem (Tocfront_Methodname a) = toElem a
    toElem (Tocfront_Interfacename a) = toElem a
    toElem (Tocfront_Exceptionname a) = toElem a
    toElem (Tocfront_Ooclass a) = toElem a
    toElem (Tocfront_Oointerface a) = toElem a
    toElem (Tocfront_Ooexception a) = toElem a
    toElem (Tocfront_Command a) = toElem a
    toElem (Tocfront_Computeroutput a) = toElem a
    toElem (Tocfront_Database a) = toElem a
    toElem (Tocfront_Email a) = toElem a
    toElem (Tocfront_Envar a) = toElem a
    toElem (Tocfront_Errorcode a) = toElem a
    toElem (Tocfront_Errorname a) = toElem a
    toElem (Tocfront_Errortype a) = toElem a
    toElem (Tocfront_Errortext a) = toElem a
    toElem (Tocfront_Filename a) = toElem a
    toElem (Tocfront_Function a) = toElem a
    toElem (Tocfront_Guibutton a) = toElem a
    toElem (Tocfront_Guiicon a) = toElem a
    toElem (Tocfront_Guilabel a) = toElem a
    toElem (Tocfront_Guimenu a) = toElem a
    toElem (Tocfront_Guimenuitem a) = toElem a
    toElem (Tocfront_Guisubmenu a) = toElem a
    toElem (Tocfront_Hardware a) = toElem a
    toElem (Tocfront_Interface a) = toElem a
    toElem (Tocfront_Keycap a) = toElem a
    toElem (Tocfront_Keycode a) = toElem a
    toElem (Tocfront_Keycombo a) = toElem a
    toElem (Tocfront_Keysym a) = toElem a
    toElem (Tocfront_Literal a) = toElem a
    toElem (Tocfront_Constant a) = toElem a
    toElem (Tocfront_Markup a) = toElem a
    toElem (Tocfront_Medialabel a) = toElem a
    toElem (Tocfront_Menuchoice a) = toElem a
    toElem (Tocfront_Mousebutton a) = toElem a
    toElem (Tocfront_Option a) = toElem a
    toElem (Tocfront_Optional a) = toElem a
    toElem (Tocfront_Parameter a) = toElem a
    toElem (Tocfront_Prompt a) = toElem a
    toElem (Tocfront_Property a) = toElem a
    toElem (Tocfront_Replaceable a) = toElem a
    toElem (Tocfront_Returnvalue a) = toElem a
    toElem (Tocfront_Sgmltag a) = toElem a
    toElem (Tocfront_Structfield a) = toElem a
    toElem (Tocfront_Structname a) = toElem a
    toElem (Tocfront_Symbol a) = toElem a
    toElem (Tocfront_Systemitem a) = toElem a
    toElem (Tocfront_Token a) = toElem a
    toElem (Tocfront_Type a) = toElem a
    toElem (Tocfront_Userinput a) = toElem a
    toElem (Tocfront_Varname a) = toElem a
    toElem (Tocfront_Anchor a) = toElem a
    toElem (Tocfront_Author a) = toElem a
    toElem (Tocfront_Authorinitials a) = toElem a
    toElem (Tocfront_Corpauthor a) = toElem a
    toElem (Tocfront_Modespec a) = toElem a
    toElem (Tocfront_Othercredit a) = toElem a
    toElem (Tocfront_Productname a) = toElem a
    toElem (Tocfront_Productnumber a) = toElem a
    toElem (Tocfront_Revhistory a) = toElem a
    toElem (Tocfront_Remark a) = toElem a
    toElem (Tocfront_Subscript a) = toElem a
    toElem (Tocfront_Superscript a) = toElem a
    toElem (Tocfront_Inlinegraphic a) = toElem a
    toElem (Tocfront_Inlinemediaobject a) = toElem a
    toElem (Tocfront_Inlineequation a) = toElem a
    toElem (Tocfront_Synopsis a) = toElem a
    toElem (Tocfront_Cmdsynopsis a) = toElem a
    toElem (Tocfront_Funcsynopsis a) = toElem a
    toElem (Tocfront_Classsynopsis a) = toElem a
    toElem (Tocfront_Fieldsynopsis a) = toElem a
    toElem (Tocfront_Constructorsynopsis a) = toElem a
    toElem (Tocfront_Destructorsynopsis a) = toElem a
    toElem (Tocfront_Methodsynopsis a) = toElem a
    toElem (Tocfront_Indexterm a) = toElem a
    toElem (Tocfront_Beginpage a) = toElem a
instance XmlAttrType Tocfront_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Tocfront_Revisionflag_Changed
	    translate "added" = Just Tocfront_Revisionflag_Added
	    translate "deleted" = Just Tocfront_Revisionflag_Deleted
	    translate "off" = Just Tocfront_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Tocfront_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Tocfront_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Tocfront_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Tocfront_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Tocentry where
    fromElem (CElem (Elem "tocentry" as c0):rest) =
	(\(a,ca)->
	   (Just (Tocentry (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Tocentry as a) =
	[CElem (Elem "tocentry" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Tocentry_Attrs where
    fromAttrs as =
	Tocentry_Attrs
	  { tocentryLinkend = possibleA fromAttrToStr "linkend" as
	  , tocentryPagenum = possibleA fromAttrToStr "pagenum" as
	  , tocentryId = possibleA fromAttrToStr "id" as
	  , tocentryLang = possibleA fromAttrToStr "lang" as
	  , tocentryRemap = possibleA fromAttrToStr "remap" as
	  , tocentryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , tocentryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , tocentryArch = possibleA fromAttrToStr "arch" as
	  , tocentryCondition = possibleA fromAttrToStr "condition" as
	  , tocentryConformance = possibleA fromAttrToStr "conformance" as
	  , tocentryOs = possibleA fromAttrToStr "os" as
	  , tocentryRevision = possibleA fromAttrToStr "revision" as
	  , tocentrySecurity = possibleA fromAttrToStr "security" as
	  , tocentryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , tocentryVendor = possibleA fromAttrToStr "vendor" as
	  , tocentryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "linkend" (tocentryLinkend v)
	, maybeToAttr toAttrFrStr "pagenum" (tocentryPagenum v)
	, maybeToAttr toAttrFrStr "id" (tocentryId v)
	, maybeToAttr toAttrFrStr "lang" (tocentryLang v)
	, maybeToAttr toAttrFrStr "remap" (tocentryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (tocentryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (tocentryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (tocentryArch v)
	, maybeToAttr toAttrFrStr "condition" (tocentryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (tocentryConformance v)
	, maybeToAttr toAttrFrStr "os" (tocentryOs v)
	, maybeToAttr toAttrFrStr "revision" (tocentryRevision v)
	, maybeToAttr toAttrFrStr "security" (tocentrySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (tocentryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (tocentryVendor v)
	, maybeToAttr toAttrFrStr "role" (tocentryRole v)
	]
instance XmlContent Tocentry_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Tocentry_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Tocentry_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Tocentry_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Tocentry_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Tocentry_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Tocentry_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Tocentry_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Tocentry_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Tocentry_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Tocentry_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Tocentry_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Tocentry_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Tocentry_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Tocentry_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Tocentry_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Tocentry_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Tocentry_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Tocentry_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Tocentry_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Tocentry_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Tocentry_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Tocentry_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Tocentry_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Tocentry_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Tocentry_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Tocentry_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Tocentry_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Tocentry_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Tocentry_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Tocentry_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Tocentry_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Tocentry_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Tocentry_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Tocentry_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Tocentry_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Tocentry_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Tocentry_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Tocentry_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Tocentry_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Tocentry_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Tocentry_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Tocentry_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Tocentry_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Tocentry_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Tocentry_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Tocentry_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Tocentry_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Tocentry_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Tocentry_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Tocentry_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Tocentry_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Tocentry_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Tocentry_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Tocentry_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Tocentry_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Tocentry_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Tocentry_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Tocentry_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Tocentry_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Tocentry_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Tocentry_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Tocentry_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Tocentry_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Tocentry_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Tocentry_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Tocentry_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Tocentry_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Tocentry_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Tocentry_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Tocentry_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Tocentry_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Tocentry_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Tocentry_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Tocentry_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Tocentry_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Tocentry_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Tocentry_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Tocentry_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Tocentry_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Tocentry_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Tocentry_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Tocentry_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Tocentry_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Tocentry_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Tocentry_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Tocentry_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Tocentry_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Tocentry_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Tocentry_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Tocentry_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Tocentry_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Tocentry_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Tocentry_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Tocentry_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Tocentry_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Tocentry_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Tocentry_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Tocentry_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Tocentry_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Tocentry_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Tocentry_Str a) = toText a
    toElem (Tocentry_Footnoteref a) = toElem a
    toElem (Tocentry_Xref a) = toElem a
    toElem (Tocentry_Abbrev a) = toElem a
    toElem (Tocentry_Acronym a) = toElem a
    toElem (Tocentry_Citation a) = toElem a
    toElem (Tocentry_Citerefentry a) = toElem a
    toElem (Tocentry_Citetitle a) = toElem a
    toElem (Tocentry_Emphasis a) = toElem a
    toElem (Tocentry_Firstterm a) = toElem a
    toElem (Tocentry_Foreignphrase a) = toElem a
    toElem (Tocentry_Glossterm a) = toElem a
    toElem (Tocentry_Footnote a) = toElem a
    toElem (Tocentry_Phrase a) = toElem a
    toElem (Tocentry_Quote a) = toElem a
    toElem (Tocentry_Trademark a) = toElem a
    toElem (Tocentry_Wordasword a) = toElem a
    toElem (Tocentry_Personname a) = toElem a
    toElem (Tocentry_Link a) = toElem a
    toElem (Tocentry_Olink a) = toElem a
    toElem (Tocentry_Ulink a) = toElem a
    toElem (Tocentry_Action a) = toElem a
    toElem (Tocentry_Application a) = toElem a
    toElem (Tocentry_Classname a) = toElem a
    toElem (Tocentry_Methodname a) = toElem a
    toElem (Tocentry_Interfacename a) = toElem a
    toElem (Tocentry_Exceptionname a) = toElem a
    toElem (Tocentry_Ooclass a) = toElem a
    toElem (Tocentry_Oointerface a) = toElem a
    toElem (Tocentry_Ooexception a) = toElem a
    toElem (Tocentry_Command a) = toElem a
    toElem (Tocentry_Computeroutput a) = toElem a
    toElem (Tocentry_Database a) = toElem a
    toElem (Tocentry_Email a) = toElem a
    toElem (Tocentry_Envar a) = toElem a
    toElem (Tocentry_Errorcode a) = toElem a
    toElem (Tocentry_Errorname a) = toElem a
    toElem (Tocentry_Errortype a) = toElem a
    toElem (Tocentry_Errortext a) = toElem a
    toElem (Tocentry_Filename a) = toElem a
    toElem (Tocentry_Function a) = toElem a
    toElem (Tocentry_Guibutton a) = toElem a
    toElem (Tocentry_Guiicon a) = toElem a
    toElem (Tocentry_Guilabel a) = toElem a
    toElem (Tocentry_Guimenu a) = toElem a
    toElem (Tocentry_Guimenuitem a) = toElem a
    toElem (Tocentry_Guisubmenu a) = toElem a
    toElem (Tocentry_Hardware a) = toElem a
    toElem (Tocentry_Interface a) = toElem a
    toElem (Tocentry_Keycap a) = toElem a
    toElem (Tocentry_Keycode a) = toElem a
    toElem (Tocentry_Keycombo a) = toElem a
    toElem (Tocentry_Keysym a) = toElem a
    toElem (Tocentry_Literal a) = toElem a
    toElem (Tocentry_Constant a) = toElem a
    toElem (Tocentry_Markup a) = toElem a
    toElem (Tocentry_Medialabel a) = toElem a
    toElem (Tocentry_Menuchoice a) = toElem a
    toElem (Tocentry_Mousebutton a) = toElem a
    toElem (Tocentry_Option a) = toElem a
    toElem (Tocentry_Optional a) = toElem a
    toElem (Tocentry_Parameter a) = toElem a
    toElem (Tocentry_Prompt a) = toElem a
    toElem (Tocentry_Property a) = toElem a
    toElem (Tocentry_Replaceable a) = toElem a
    toElem (Tocentry_Returnvalue a) = toElem a
    toElem (Tocentry_Sgmltag a) = toElem a
    toElem (Tocentry_Structfield a) = toElem a
    toElem (Tocentry_Structname a) = toElem a
    toElem (Tocentry_Symbol a) = toElem a
    toElem (Tocentry_Systemitem a) = toElem a
    toElem (Tocentry_Token a) = toElem a
    toElem (Tocentry_Type a) = toElem a
    toElem (Tocentry_Userinput a) = toElem a
    toElem (Tocentry_Varname a) = toElem a
    toElem (Tocentry_Anchor a) = toElem a
    toElem (Tocentry_Author a) = toElem a
    toElem (Tocentry_Authorinitials a) = toElem a
    toElem (Tocentry_Corpauthor a) = toElem a
    toElem (Tocentry_Modespec a) = toElem a
    toElem (Tocentry_Othercredit a) = toElem a
    toElem (Tocentry_Productname a) = toElem a
    toElem (Tocentry_Productnumber a) = toElem a
    toElem (Tocentry_Revhistory a) = toElem a
    toElem (Tocentry_Remark a) = toElem a
    toElem (Tocentry_Subscript a) = toElem a
    toElem (Tocentry_Superscript a) = toElem a
    toElem (Tocentry_Inlinegraphic a) = toElem a
    toElem (Tocentry_Inlinemediaobject a) = toElem a
    toElem (Tocentry_Inlineequation a) = toElem a
    toElem (Tocentry_Synopsis a) = toElem a
    toElem (Tocentry_Cmdsynopsis a) = toElem a
    toElem (Tocentry_Funcsynopsis a) = toElem a
    toElem (Tocentry_Classsynopsis a) = toElem a
    toElem (Tocentry_Fieldsynopsis a) = toElem a
    toElem (Tocentry_Constructorsynopsis a) = toElem a
    toElem (Tocentry_Destructorsynopsis a) = toElem a
    toElem (Tocentry_Methodsynopsis a) = toElem a
    toElem (Tocentry_Indexterm a) = toElem a
    toElem (Tocentry_Beginpage a) = toElem a
instance XmlAttrType Tocentry_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Tocentry_Revisionflag_Changed
	    translate "added" = Just Tocentry_Revisionflag_Added
	    translate "deleted" = Just Tocentry_Revisionflag_Deleted
	    translate "off" = Just Tocentry_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Tocentry_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Tocentry_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Tocentry_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Tocentry_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Tocpart where
    fromElem (CElem (Elem "tocpart" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Tocpart (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Tocpart as a b) =
	[CElem (Elem "tocpart" (toAttrs as) (concatMap toElem a ++
					     concatMap toElem b))]
instance XmlAttributes Tocpart_Attrs where
    fromAttrs as =
	Tocpart_Attrs
	  { tocpartId = possibleA fromAttrToStr "id" as
	  , tocpartLang = possibleA fromAttrToStr "lang" as
	  , tocpartRemap = possibleA fromAttrToStr "remap" as
	  , tocpartXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , tocpartRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , tocpartArch = possibleA fromAttrToStr "arch" as
	  , tocpartCondition = possibleA fromAttrToStr "condition" as
	  , tocpartConformance = possibleA fromAttrToStr "conformance" as
	  , tocpartOs = possibleA fromAttrToStr "os" as
	  , tocpartRevision = possibleA fromAttrToStr "revision" as
	  , tocpartSecurity = possibleA fromAttrToStr "security" as
	  , tocpartUserlevel = possibleA fromAttrToStr "userlevel" as
	  , tocpartVendor = possibleA fromAttrToStr "vendor" as
	  , tocpartRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (tocpartId v)
	, maybeToAttr toAttrFrStr "lang" (tocpartLang v)
	, maybeToAttr toAttrFrStr "remap" (tocpartRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (tocpartXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (tocpartRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (tocpartArch v)
	, maybeToAttr toAttrFrStr "condition" (tocpartCondition v)
	, maybeToAttr toAttrFrStr "conformance" (tocpartConformance v)
	, maybeToAttr toAttrFrStr "os" (tocpartOs v)
	, maybeToAttr toAttrFrStr "revision" (tocpartRevision v)
	, maybeToAttr toAttrFrStr "security" (tocpartSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (tocpartUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (tocpartVendor v)
	, maybeToAttr toAttrFrStr "role" (tocpartRole v)
	]
instance XmlAttrType Tocpart_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Tocpart_Revisionflag_Changed
	    translate "added" = Just Tocpart_Revisionflag_Added
	    translate "deleted" = Just Tocpart_Revisionflag_Deleted
	    translate "off" = Just Tocpart_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Tocpart_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Tocpart_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Tocpart_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Tocpart_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Tocchap where
    fromElem (CElem (Elem "tocchap" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Tocchap (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Tocchap as a b) =
	[CElem (Elem "tocchap" (toAttrs as) (concatMap toElem a ++
					     concatMap toElem b))]
instance XmlAttributes Tocchap_Attrs where
    fromAttrs as =
	Tocchap_Attrs
	  { tocchapLabel = possibleA fromAttrToStr "label" as
	  , tocchapId = possibleA fromAttrToStr "id" as
	  , tocchapLang = possibleA fromAttrToStr "lang" as
	  , tocchapRemap = possibleA fromAttrToStr "remap" as
	  , tocchapXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , tocchapRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , tocchapArch = possibleA fromAttrToStr "arch" as
	  , tocchapCondition = possibleA fromAttrToStr "condition" as
	  , tocchapConformance = possibleA fromAttrToStr "conformance" as
	  , tocchapOs = possibleA fromAttrToStr "os" as
	  , tocchapRevision = possibleA fromAttrToStr "revision" as
	  , tocchapSecurity = possibleA fromAttrToStr "security" as
	  , tocchapUserlevel = possibleA fromAttrToStr "userlevel" as
	  , tocchapVendor = possibleA fromAttrToStr "vendor" as
	  , tocchapRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (tocchapLabel v)
	, maybeToAttr toAttrFrStr "id" (tocchapId v)
	, maybeToAttr toAttrFrStr "lang" (tocchapLang v)
	, maybeToAttr toAttrFrStr "remap" (tocchapRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (tocchapXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (tocchapRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (tocchapArch v)
	, maybeToAttr toAttrFrStr "condition" (tocchapCondition v)
	, maybeToAttr toAttrFrStr "conformance" (tocchapConformance v)
	, maybeToAttr toAttrFrStr "os" (tocchapOs v)
	, maybeToAttr toAttrFrStr "revision" (tocchapRevision v)
	, maybeToAttr toAttrFrStr "security" (tocchapSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (tocchapUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (tocchapVendor v)
	, maybeToAttr toAttrFrStr "role" (tocchapRole v)
	]
instance XmlAttrType Tocchap_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Tocchap_Revisionflag_Changed
	    translate "added" = Just Tocchap_Revisionflag_Added
	    translate "deleted" = Just Tocchap_Revisionflag_Deleted
	    translate "off" = Just Tocchap_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Tocchap_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Tocchap_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Tocchap_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Tocchap_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Toclevel1 where
    fromElem (CElem (Elem "toclevel1" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Toclevel1 (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Toclevel1 as a b) =
	[CElem (Elem "toclevel1" (toAttrs as) (concatMap toElem a ++
					       concatMap toElem b))]
instance XmlAttributes Toclevel1_Attrs where
    fromAttrs as =
	Toclevel1_Attrs
	  { toclevel1Id = possibleA fromAttrToStr "id" as
	  , toclevel1Lang = possibleA fromAttrToStr "lang" as
	  , toclevel1Remap = possibleA fromAttrToStr "remap" as
	  , toclevel1Xreflabel = possibleA fromAttrToStr "xreflabel" as
	  , toclevel1Revisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , toclevel1Arch = possibleA fromAttrToStr "arch" as
	  , toclevel1Condition = possibleA fromAttrToStr "condition" as
	  , toclevel1Conformance = possibleA fromAttrToStr "conformance" as
	  , toclevel1Os = possibleA fromAttrToStr "os" as
	  , toclevel1Revision = possibleA fromAttrToStr "revision" as
	  , toclevel1Security = possibleA fromAttrToStr "security" as
	  , toclevel1Userlevel = possibleA fromAttrToStr "userlevel" as
	  , toclevel1Vendor = possibleA fromAttrToStr "vendor" as
	  , toclevel1Role = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (toclevel1Id v)
	, maybeToAttr toAttrFrStr "lang" (toclevel1Lang v)
	, maybeToAttr toAttrFrStr "remap" (toclevel1Remap v)
	, maybeToAttr toAttrFrStr "xreflabel" (toclevel1Xreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (toclevel1Revisionflag v)
	, maybeToAttr toAttrFrStr "arch" (toclevel1Arch v)
	, maybeToAttr toAttrFrStr "condition" (toclevel1Condition v)
	, maybeToAttr toAttrFrStr "conformance" (toclevel1Conformance v)
	, maybeToAttr toAttrFrStr "os" (toclevel1Os v)
	, maybeToAttr toAttrFrStr "revision" (toclevel1Revision v)
	, maybeToAttr toAttrFrStr "security" (toclevel1Security v)
	, maybeToAttr toAttrFrStr "userlevel" (toclevel1Userlevel v)
	, maybeToAttr toAttrFrStr "vendor" (toclevel1Vendor v)
	, maybeToAttr toAttrFrStr "role" (toclevel1Role v)
	]
instance XmlAttrType Toclevel1_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Toclevel1_Revisionflag_Changed
	    translate "added" = Just Toclevel1_Revisionflag_Added
	    translate "deleted" = Just Toclevel1_Revisionflag_Deleted
	    translate "off" = Just Toclevel1_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Toclevel1_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Toclevel1_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Toclevel1_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Toclevel1_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Toclevel2 where
    fromElem (CElem (Elem "toclevel2" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Toclevel2 (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Toclevel2 as a b) =
	[CElem (Elem "toclevel2" (toAttrs as) (concatMap toElem a ++
					       concatMap toElem b))]
instance XmlAttributes Toclevel2_Attrs where
    fromAttrs as =
	Toclevel2_Attrs
	  { toclevel2Id = possibleA fromAttrToStr "id" as
	  , toclevel2Lang = possibleA fromAttrToStr "lang" as
	  , toclevel2Remap = possibleA fromAttrToStr "remap" as
	  , toclevel2Xreflabel = possibleA fromAttrToStr "xreflabel" as
	  , toclevel2Revisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , toclevel2Arch = possibleA fromAttrToStr "arch" as
	  , toclevel2Condition = possibleA fromAttrToStr "condition" as
	  , toclevel2Conformance = possibleA fromAttrToStr "conformance" as
	  , toclevel2Os = possibleA fromAttrToStr "os" as
	  , toclevel2Revision = possibleA fromAttrToStr "revision" as
	  , toclevel2Security = possibleA fromAttrToStr "security" as
	  , toclevel2Userlevel = possibleA fromAttrToStr "userlevel" as
	  , toclevel2Vendor = possibleA fromAttrToStr "vendor" as
	  , toclevel2Role = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (toclevel2Id v)
	, maybeToAttr toAttrFrStr "lang" (toclevel2Lang v)
	, maybeToAttr toAttrFrStr "remap" (toclevel2Remap v)
	, maybeToAttr toAttrFrStr "xreflabel" (toclevel2Xreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (toclevel2Revisionflag v)
	, maybeToAttr toAttrFrStr "arch" (toclevel2Arch v)
	, maybeToAttr toAttrFrStr "condition" (toclevel2Condition v)
	, maybeToAttr toAttrFrStr "conformance" (toclevel2Conformance v)
	, maybeToAttr toAttrFrStr "os" (toclevel2Os v)
	, maybeToAttr toAttrFrStr "revision" (toclevel2Revision v)
	, maybeToAttr toAttrFrStr "security" (toclevel2Security v)
	, maybeToAttr toAttrFrStr "userlevel" (toclevel2Userlevel v)
	, maybeToAttr toAttrFrStr "vendor" (toclevel2Vendor v)
	, maybeToAttr toAttrFrStr "role" (toclevel2Role v)
	]
instance XmlAttrType Toclevel2_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Toclevel2_Revisionflag_Changed
	    translate "added" = Just Toclevel2_Revisionflag_Added
	    translate "deleted" = Just Toclevel2_Revisionflag_Deleted
	    translate "off" = Just Toclevel2_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Toclevel2_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Toclevel2_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Toclevel2_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Toclevel2_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Toclevel3 where
    fromElem (CElem (Elem "toclevel3" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Toclevel3 (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Toclevel3 as a b) =
	[CElem (Elem "toclevel3" (toAttrs as) (concatMap toElem a ++
					       concatMap toElem b))]
instance XmlAttributes Toclevel3_Attrs where
    fromAttrs as =
	Toclevel3_Attrs
	  { toclevel3Id = possibleA fromAttrToStr "id" as
	  , toclevel3Lang = possibleA fromAttrToStr "lang" as
	  , toclevel3Remap = possibleA fromAttrToStr "remap" as
	  , toclevel3Xreflabel = possibleA fromAttrToStr "xreflabel" as
	  , toclevel3Revisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , toclevel3Arch = possibleA fromAttrToStr "arch" as
	  , toclevel3Condition = possibleA fromAttrToStr "condition" as
	  , toclevel3Conformance = possibleA fromAttrToStr "conformance" as
	  , toclevel3Os = possibleA fromAttrToStr "os" as
	  , toclevel3Revision = possibleA fromAttrToStr "revision" as
	  , toclevel3Security = possibleA fromAttrToStr "security" as
	  , toclevel3Userlevel = possibleA fromAttrToStr "userlevel" as
	  , toclevel3Vendor = possibleA fromAttrToStr "vendor" as
	  , toclevel3Role = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (toclevel3Id v)
	, maybeToAttr toAttrFrStr "lang" (toclevel3Lang v)
	, maybeToAttr toAttrFrStr "remap" (toclevel3Remap v)
	, maybeToAttr toAttrFrStr "xreflabel" (toclevel3Xreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (toclevel3Revisionflag v)
	, maybeToAttr toAttrFrStr "arch" (toclevel3Arch v)
	, maybeToAttr toAttrFrStr "condition" (toclevel3Condition v)
	, maybeToAttr toAttrFrStr "conformance" (toclevel3Conformance v)
	, maybeToAttr toAttrFrStr "os" (toclevel3Os v)
	, maybeToAttr toAttrFrStr "revision" (toclevel3Revision v)
	, maybeToAttr toAttrFrStr "security" (toclevel3Security v)
	, maybeToAttr toAttrFrStr "userlevel" (toclevel3Userlevel v)
	, maybeToAttr toAttrFrStr "vendor" (toclevel3Vendor v)
	, maybeToAttr toAttrFrStr "role" (toclevel3Role v)
	]
instance XmlAttrType Toclevel3_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Toclevel3_Revisionflag_Changed
	    translate "added" = Just Toclevel3_Revisionflag_Added
	    translate "deleted" = Just Toclevel3_Revisionflag_Deleted
	    translate "off" = Just Toclevel3_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Toclevel3_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Toclevel3_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Toclevel3_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Toclevel3_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Toclevel4 where
    fromElem (CElem (Elem "toclevel4" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Toclevel4 (fromAttrs as) a b), rest))
	   (many fromElem ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Toclevel4 as a b) =
	[CElem (Elem "toclevel4" (toAttrs as) (concatMap toElem a ++
					       concatMap toElem b))]
instance XmlAttributes Toclevel4_Attrs where
    fromAttrs as =
	Toclevel4_Attrs
	  { toclevel4Id = possibleA fromAttrToStr "id" as
	  , toclevel4Lang = possibleA fromAttrToStr "lang" as
	  , toclevel4Remap = possibleA fromAttrToStr "remap" as
	  , toclevel4Xreflabel = possibleA fromAttrToStr "xreflabel" as
	  , toclevel4Revisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , toclevel4Arch = possibleA fromAttrToStr "arch" as
	  , toclevel4Condition = possibleA fromAttrToStr "condition" as
	  , toclevel4Conformance = possibleA fromAttrToStr "conformance" as
	  , toclevel4Os = possibleA fromAttrToStr "os" as
	  , toclevel4Revision = possibleA fromAttrToStr "revision" as
	  , toclevel4Security = possibleA fromAttrToStr "security" as
	  , toclevel4Userlevel = possibleA fromAttrToStr "userlevel" as
	  , toclevel4Vendor = possibleA fromAttrToStr "vendor" as
	  , toclevel4Role = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (toclevel4Id v)
	, maybeToAttr toAttrFrStr "lang" (toclevel4Lang v)
	, maybeToAttr toAttrFrStr "remap" (toclevel4Remap v)
	, maybeToAttr toAttrFrStr "xreflabel" (toclevel4Xreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (toclevel4Revisionflag v)
	, maybeToAttr toAttrFrStr "arch" (toclevel4Arch v)
	, maybeToAttr toAttrFrStr "condition" (toclevel4Condition v)
	, maybeToAttr toAttrFrStr "conformance" (toclevel4Conformance v)
	, maybeToAttr toAttrFrStr "os" (toclevel4Os v)
	, maybeToAttr toAttrFrStr "revision" (toclevel4Revision v)
	, maybeToAttr toAttrFrStr "security" (toclevel4Security v)
	, maybeToAttr toAttrFrStr "userlevel" (toclevel4Userlevel v)
	, maybeToAttr toAttrFrStr "vendor" (toclevel4Vendor v)
	, maybeToAttr toAttrFrStr "role" (toclevel4Role v)
	]
instance XmlAttrType Toclevel4_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Toclevel4_Revisionflag_Changed
	    translate "added" = Just Toclevel4_Revisionflag_Added
	    translate "deleted" = Just Toclevel4_Revisionflag_Deleted
	    translate "off" = Just Toclevel4_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Toclevel4_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Toclevel4_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Toclevel4_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Toclevel4_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Toclevel5 where
    fromElem (CElem (Elem "toclevel5" as c0):rest) =
	(\(a,ca)->
	   (Just (Toclevel5 (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Toclevel5 as a) =
	[CElem (Elem "toclevel5" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Toclevel5_Attrs where
    fromAttrs as =
	Toclevel5_Attrs
	  { toclevel5Id = possibleA fromAttrToStr "id" as
	  , toclevel5Lang = possibleA fromAttrToStr "lang" as
	  , toclevel5Remap = possibleA fromAttrToStr "remap" as
	  , toclevel5Xreflabel = possibleA fromAttrToStr "xreflabel" as
	  , toclevel5Revisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , toclevel5Arch = possibleA fromAttrToStr "arch" as
	  , toclevel5Condition = possibleA fromAttrToStr "condition" as
	  , toclevel5Conformance = possibleA fromAttrToStr "conformance" as
	  , toclevel5Os = possibleA fromAttrToStr "os" as
	  , toclevel5Revision = possibleA fromAttrToStr "revision" as
	  , toclevel5Security = possibleA fromAttrToStr "security" as
	  , toclevel5Userlevel = possibleA fromAttrToStr "userlevel" as
	  , toclevel5Vendor = possibleA fromAttrToStr "vendor" as
	  , toclevel5Role = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (toclevel5Id v)
	, maybeToAttr toAttrFrStr "lang" (toclevel5Lang v)
	, maybeToAttr toAttrFrStr "remap" (toclevel5Remap v)
	, maybeToAttr toAttrFrStr "xreflabel" (toclevel5Xreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (toclevel5Revisionflag v)
	, maybeToAttr toAttrFrStr "arch" (toclevel5Arch v)
	, maybeToAttr toAttrFrStr "condition" (toclevel5Condition v)
	, maybeToAttr toAttrFrStr "conformance" (toclevel5Conformance v)
	, maybeToAttr toAttrFrStr "os" (toclevel5Os v)
	, maybeToAttr toAttrFrStr "revision" (toclevel5Revision v)
	, maybeToAttr toAttrFrStr "security" (toclevel5Security v)
	, maybeToAttr toAttrFrStr "userlevel" (toclevel5Userlevel v)
	, maybeToAttr toAttrFrStr "vendor" (toclevel5Vendor v)
	, maybeToAttr toAttrFrStr "role" (toclevel5Role v)
	]
instance XmlAttrType Toclevel5_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Toclevel5_Revisionflag_Changed
	    translate "added" = Just Toclevel5_Revisionflag_Added
	    translate "deleted" = Just Toclevel5_Revisionflag_Deleted
	    translate "off" = Just Toclevel5_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Toclevel5_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Toclevel5_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Toclevel5_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Toclevel5_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Tocback where
    fromElem (CElem (Elem "tocback" as c0):rest) =
	(\(a,ca)->
	   (Just (Tocback (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Tocback as a) =
	[CElem (Elem "tocback" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Tocback_Attrs where
    fromAttrs as =
	Tocback_Attrs
	  { tocbackLabel = possibleA fromAttrToStr "label" as
	  , tocbackLinkend = possibleA fromAttrToStr "linkend" as
	  , tocbackPagenum = possibleA fromAttrToStr "pagenum" as
	  , tocbackId = possibleA fromAttrToStr "id" as
	  , tocbackLang = possibleA fromAttrToStr "lang" as
	  , tocbackRemap = possibleA fromAttrToStr "remap" as
	  , tocbackXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , tocbackRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , tocbackArch = possibleA fromAttrToStr "arch" as
	  , tocbackCondition = possibleA fromAttrToStr "condition" as
	  , tocbackConformance = possibleA fromAttrToStr "conformance" as
	  , tocbackOs = possibleA fromAttrToStr "os" as
	  , tocbackRevision = possibleA fromAttrToStr "revision" as
	  , tocbackSecurity = possibleA fromAttrToStr "security" as
	  , tocbackUserlevel = possibleA fromAttrToStr "userlevel" as
	  , tocbackVendor = possibleA fromAttrToStr "vendor" as
	  , tocbackRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (tocbackLabel v)
	, maybeToAttr toAttrFrStr "linkend" (tocbackLinkend v)
	, maybeToAttr toAttrFrStr "pagenum" (tocbackPagenum v)
	, maybeToAttr toAttrFrStr "id" (tocbackId v)
	, maybeToAttr toAttrFrStr "lang" (tocbackLang v)
	, maybeToAttr toAttrFrStr "remap" (tocbackRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (tocbackXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (tocbackRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (tocbackArch v)
	, maybeToAttr toAttrFrStr "condition" (tocbackCondition v)
	, maybeToAttr toAttrFrStr "conformance" (tocbackConformance v)
	, maybeToAttr toAttrFrStr "os" (tocbackOs v)
	, maybeToAttr toAttrFrStr "revision" (tocbackRevision v)
	, maybeToAttr toAttrFrStr "security" (tocbackSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (tocbackUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (tocbackVendor v)
	, maybeToAttr toAttrFrStr "role" (tocbackRole v)
	]
instance XmlContent Tocback_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Tocback_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Tocback_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Tocback_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Tocback_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Tocback_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Tocback_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Tocback_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Tocback_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Tocback_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Tocback_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Tocback_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Tocback_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Tocback_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Tocback_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Tocback_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Tocback_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Tocback_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Tocback_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Tocback_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Tocback_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Tocback_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Tocback_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Tocback_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Tocback_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Tocback_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Tocback_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Tocback_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Tocback_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Tocback_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Tocback_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Tocback_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Tocback_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Tocback_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Tocback_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Tocback_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Tocback_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Tocback_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Tocback_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Tocback_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Tocback_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Tocback_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Tocback_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Tocback_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Tocback_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Tocback_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Tocback_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Tocback_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Tocback_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Tocback_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Tocback_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Tocback_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Tocback_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Tocback_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Tocback_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Tocback_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Tocback_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Tocback_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Tocback_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Tocback_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Tocback_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Tocback_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Tocback_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Tocback_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Tocback_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Tocback_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Tocback_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Tocback_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Tocback_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Tocback_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Tocback_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Tocback_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Tocback_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Tocback_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Tocback_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Tocback_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Tocback_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Tocback_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Tocback_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Tocback_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Tocback_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Tocback_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Tocback_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Tocback_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Tocback_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Tocback_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Tocback_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Tocback_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Tocback_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Tocback_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Tocback_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Tocback_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Tocback_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Tocback_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Tocback_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Tocback_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Tocback_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Tocback_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Tocback_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Tocback_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Tocback_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Tocback_Str a) = toText a
    toElem (Tocback_Footnoteref a) = toElem a
    toElem (Tocback_Xref a) = toElem a
    toElem (Tocback_Abbrev a) = toElem a
    toElem (Tocback_Acronym a) = toElem a
    toElem (Tocback_Citation a) = toElem a
    toElem (Tocback_Citerefentry a) = toElem a
    toElem (Tocback_Citetitle a) = toElem a
    toElem (Tocback_Emphasis a) = toElem a
    toElem (Tocback_Firstterm a) = toElem a
    toElem (Tocback_Foreignphrase a) = toElem a
    toElem (Tocback_Glossterm a) = toElem a
    toElem (Tocback_Footnote a) = toElem a
    toElem (Tocback_Phrase a) = toElem a
    toElem (Tocback_Quote a) = toElem a
    toElem (Tocback_Trademark a) = toElem a
    toElem (Tocback_Wordasword a) = toElem a
    toElem (Tocback_Personname a) = toElem a
    toElem (Tocback_Link a) = toElem a
    toElem (Tocback_Olink a) = toElem a
    toElem (Tocback_Ulink a) = toElem a
    toElem (Tocback_Action a) = toElem a
    toElem (Tocback_Application a) = toElem a
    toElem (Tocback_Classname a) = toElem a
    toElem (Tocback_Methodname a) = toElem a
    toElem (Tocback_Interfacename a) = toElem a
    toElem (Tocback_Exceptionname a) = toElem a
    toElem (Tocback_Ooclass a) = toElem a
    toElem (Tocback_Oointerface a) = toElem a
    toElem (Tocback_Ooexception a) = toElem a
    toElem (Tocback_Command a) = toElem a
    toElem (Tocback_Computeroutput a) = toElem a
    toElem (Tocback_Database a) = toElem a
    toElem (Tocback_Email a) = toElem a
    toElem (Tocback_Envar a) = toElem a
    toElem (Tocback_Errorcode a) = toElem a
    toElem (Tocback_Errorname a) = toElem a
    toElem (Tocback_Errortype a) = toElem a
    toElem (Tocback_Errortext a) = toElem a
    toElem (Tocback_Filename a) = toElem a
    toElem (Tocback_Function a) = toElem a
    toElem (Tocback_Guibutton a) = toElem a
    toElem (Tocback_Guiicon a) = toElem a
    toElem (Tocback_Guilabel a) = toElem a
    toElem (Tocback_Guimenu a) = toElem a
    toElem (Tocback_Guimenuitem a) = toElem a
    toElem (Tocback_Guisubmenu a) = toElem a
    toElem (Tocback_Hardware a) = toElem a
    toElem (Tocback_Interface a) = toElem a
    toElem (Tocback_Keycap a) = toElem a
    toElem (Tocback_Keycode a) = toElem a
    toElem (Tocback_Keycombo a) = toElem a
    toElem (Tocback_Keysym a) = toElem a
    toElem (Tocback_Literal a) = toElem a
    toElem (Tocback_Constant a) = toElem a
    toElem (Tocback_Markup a) = toElem a
    toElem (Tocback_Medialabel a) = toElem a
    toElem (Tocback_Menuchoice a) = toElem a
    toElem (Tocback_Mousebutton a) = toElem a
    toElem (Tocback_Option a) = toElem a
    toElem (Tocback_Optional a) = toElem a
    toElem (Tocback_Parameter a) = toElem a
    toElem (Tocback_Prompt a) = toElem a
    toElem (Tocback_Property a) = toElem a
    toElem (Tocback_Replaceable a) = toElem a
    toElem (Tocback_Returnvalue a) = toElem a
    toElem (Tocback_Sgmltag a) = toElem a
    toElem (Tocback_Structfield a) = toElem a
    toElem (Tocback_Structname a) = toElem a
    toElem (Tocback_Symbol a) = toElem a
    toElem (Tocback_Systemitem a) = toElem a
    toElem (Tocback_Token a) = toElem a
    toElem (Tocback_Type a) = toElem a
    toElem (Tocback_Userinput a) = toElem a
    toElem (Tocback_Varname a) = toElem a
    toElem (Tocback_Anchor a) = toElem a
    toElem (Tocback_Author a) = toElem a
    toElem (Tocback_Authorinitials a) = toElem a
    toElem (Tocback_Corpauthor a) = toElem a
    toElem (Tocback_Modespec a) = toElem a
    toElem (Tocback_Othercredit a) = toElem a
    toElem (Tocback_Productname a) = toElem a
    toElem (Tocback_Productnumber a) = toElem a
    toElem (Tocback_Revhistory a) = toElem a
    toElem (Tocback_Remark a) = toElem a
    toElem (Tocback_Subscript a) = toElem a
    toElem (Tocback_Superscript a) = toElem a
    toElem (Tocback_Inlinegraphic a) = toElem a
    toElem (Tocback_Inlinemediaobject a) = toElem a
    toElem (Tocback_Inlineequation a) = toElem a
    toElem (Tocback_Synopsis a) = toElem a
    toElem (Tocback_Cmdsynopsis a) = toElem a
    toElem (Tocback_Funcsynopsis a) = toElem a
    toElem (Tocback_Classsynopsis a) = toElem a
    toElem (Tocback_Fieldsynopsis a) = toElem a
    toElem (Tocback_Constructorsynopsis a) = toElem a
    toElem (Tocback_Destructorsynopsis a) = toElem a
    toElem (Tocback_Methodsynopsis a) = toElem a
    toElem (Tocback_Indexterm a) = toElem a
    toElem (Tocback_Beginpage a) = toElem a
instance XmlAttrType Tocback_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Tocback_Revisionflag_Changed
	    translate "added" = Just Tocback_Revisionflag_Added
	    translate "deleted" = Just Tocback_Revisionflag_Deleted
	    translate "off" = Just Tocback_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Tocback_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Tocback_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Tocback_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Tocback_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Lot where
    fromElem (CElem (Elem "lot" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Lot (fromAttrs as) a b c), rest))
	      (many fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Lot as a b c) =
	[CElem (Elem "lot" (toAttrs as) (maybe [] toElem a ++
					 maybe [] toElem b ++ concatMap toElem c))]
instance XmlAttributes Lot_Attrs where
    fromAttrs as =
	Lot_Attrs
	  { lotLabel = possibleA fromAttrToStr "label" as
	  , lotId = possibleA fromAttrToStr "id" as
	  , lotLang = possibleA fromAttrToStr "lang" as
	  , lotRemap = possibleA fromAttrToStr "remap" as
	  , lotXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , lotRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , lotArch = possibleA fromAttrToStr "arch" as
	  , lotCondition = possibleA fromAttrToStr "condition" as
	  , lotConformance = possibleA fromAttrToStr "conformance" as
	  , lotOs = possibleA fromAttrToStr "os" as
	  , lotRevision = possibleA fromAttrToStr "revision" as
	  , lotSecurity = possibleA fromAttrToStr "security" as
	  , lotUserlevel = possibleA fromAttrToStr "userlevel" as
	  , lotVendor = possibleA fromAttrToStr "vendor" as
	  , lotRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (lotLabel v)
	, maybeToAttr toAttrFrStr "id" (lotId v)
	, maybeToAttr toAttrFrStr "lang" (lotLang v)
	, maybeToAttr toAttrFrStr "remap" (lotRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (lotXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (lotRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (lotArch v)
	, maybeToAttr toAttrFrStr "condition" (lotCondition v)
	, maybeToAttr toAttrFrStr "conformance" (lotConformance v)
	, maybeToAttr toAttrFrStr "os" (lotOs v)
	, maybeToAttr toAttrFrStr "revision" (lotRevision v)
	, maybeToAttr toAttrFrStr "security" (lotSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (lotUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (lotVendor v)
	, maybeToAttr toAttrFrStr "role" (lotRole v)
	]
instance XmlAttrType Lot_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Lot_Revisionflag_Changed
	    translate "added" = Just Lot_Revisionflag_Added
	    translate "deleted" = Just Lot_Revisionflag_Deleted
	    translate "off" = Just Lot_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Lot_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Lot_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Lot_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Lot_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Lotentry where
    fromElem (CElem (Elem "lotentry" as c0):rest) =
	(\(a,ca)->
	   (Just (Lotentry (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Lotentry as a) =
	[CElem (Elem "lotentry" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Lotentry_Attrs where
    fromAttrs as =
	Lotentry_Attrs
	  { lotentryLinkend = possibleA fromAttrToStr "linkend" as
	  , lotentryPagenum = possibleA fromAttrToStr "pagenum" as
	  , lotentrySrccredit = possibleA fromAttrToStr "srccredit" as
	  , lotentryId = possibleA fromAttrToStr "id" as
	  , lotentryLang = possibleA fromAttrToStr "lang" as
	  , lotentryRemap = possibleA fromAttrToStr "remap" as
	  , lotentryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , lotentryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , lotentryArch = possibleA fromAttrToStr "arch" as
	  , lotentryCondition = possibleA fromAttrToStr "condition" as
	  , lotentryConformance = possibleA fromAttrToStr "conformance" as
	  , lotentryOs = possibleA fromAttrToStr "os" as
	  , lotentryRevision = possibleA fromAttrToStr "revision" as
	  , lotentrySecurity = possibleA fromAttrToStr "security" as
	  , lotentryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , lotentryVendor = possibleA fromAttrToStr "vendor" as
	  , lotentryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "linkend" (lotentryLinkend v)
	, maybeToAttr toAttrFrStr "pagenum" (lotentryPagenum v)
	, maybeToAttr toAttrFrStr "srccredit" (lotentrySrccredit v)
	, maybeToAttr toAttrFrStr "id" (lotentryId v)
	, maybeToAttr toAttrFrStr "lang" (lotentryLang v)
	, maybeToAttr toAttrFrStr "remap" (lotentryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (lotentryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (lotentryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (lotentryArch v)
	, maybeToAttr toAttrFrStr "condition" (lotentryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (lotentryConformance v)
	, maybeToAttr toAttrFrStr "os" (lotentryOs v)
	, maybeToAttr toAttrFrStr "revision" (lotentryRevision v)
	, maybeToAttr toAttrFrStr "security" (lotentrySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (lotentryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (lotentryVendor v)
	, maybeToAttr toAttrFrStr "role" (lotentryRole v)
	]
instance XmlContent Lotentry_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Lotentry_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Lotentry_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Lotentry_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Lotentry_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Lotentry_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Lotentry_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Lotentry_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Lotentry_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Lotentry_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Lotentry_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Lotentry_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Lotentry_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Lotentry_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Lotentry_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Lotentry_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Lotentry_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Lotentry_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Lotentry_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Lotentry_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Lotentry_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Lotentry_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Lotentry_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Lotentry_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Lotentry_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Lotentry_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Lotentry_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Lotentry_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Lotentry_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Lotentry_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Lotentry_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Lotentry_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Lotentry_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Lotentry_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Lotentry_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Lotentry_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Lotentry_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Lotentry_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Lotentry_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Lotentry_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Lotentry_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Lotentry_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Lotentry_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Lotentry_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Lotentry_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Lotentry_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Lotentry_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Lotentry_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Lotentry_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Lotentry_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Lotentry_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Lotentry_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Lotentry_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Lotentry_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Lotentry_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Lotentry_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Lotentry_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Lotentry_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Lotentry_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Lotentry_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Lotentry_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Lotentry_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Lotentry_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Lotentry_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Lotentry_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Lotentry_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Lotentry_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Lotentry_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Lotentry_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Lotentry_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Lotentry_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Lotentry_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Lotentry_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Lotentry_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Lotentry_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Lotentry_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Lotentry_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Lotentry_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Lotentry_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Lotentry_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Lotentry_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Lotentry_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Lotentry_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Lotentry_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Lotentry_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Lotentry_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Lotentry_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Lotentry_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Lotentry_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Lotentry_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																										case (fromElem c0) of
																																																																																										(Just a,rest) -> (Just (Lotentry_Inlineequation a), rest)
																																																																																										(_,_) ->
																																																																																											case (fromElem c0) of
																																																																																											(Just a,rest) -> (Just (Lotentry_Synopsis a), rest)
																																																																																											(_,_) ->
																																																																																												case (fromElem c0) of
																																																																																												(Just a,rest) -> (Just (Lotentry_Cmdsynopsis a), rest)
																																																																																												(_,_) ->
																																																																																													case (fromElem c0) of
																																																																																													(Just a,rest) -> (Just (Lotentry_Funcsynopsis a), rest)
																																																																																													(_,_) ->
																																																																																														case (fromElem c0) of
																																																																																														(Just a,rest) -> (Just (Lotentry_Classsynopsis a), rest)
																																																																																														(_,_) ->
																																																																																															case (fromElem c0) of
																																																																																															(Just a,rest) -> (Just (Lotentry_Fieldsynopsis a), rest)
																																																																																															(_,_) ->
																																																																																																case (fromElem c0) of
																																																																																																(Just a,rest) -> (Just (Lotentry_Constructorsynopsis a), rest)
																																																																																																(_,_) ->
																																																																																																	case (fromElem c0) of
																																																																																																	(Just a,rest) -> (Just (Lotentry_Destructorsynopsis a), rest)
																																																																																																	(_,_) ->
																																																																																																		case (fromElem c0) of
																																																																																																		(Just a,rest) -> (Just (Lotentry_Methodsynopsis a), rest)
																																																																																																		(_,_) ->
																																																																																																			case (fromElem c0) of
																																																																																																			(Just a,rest) -> (Just (Lotentry_Indexterm a), rest)
																																																																																																			(_,_) ->
																																																																																																				case (fromElem c0) of
																																																																																																				(Just a,rest) -> (Just (Lotentry_Beginpage a), rest)
																																																																																																				(_,_) ->
																																																																																																				    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Lotentry_Str a) = toText a
    toElem (Lotentry_Footnoteref a) = toElem a
    toElem (Lotentry_Xref a) = toElem a
    toElem (Lotentry_Abbrev a) = toElem a
    toElem (Lotentry_Acronym a) = toElem a
    toElem (Lotentry_Citation a) = toElem a
    toElem (Lotentry_Citerefentry a) = toElem a
    toElem (Lotentry_Citetitle a) = toElem a
    toElem (Lotentry_Emphasis a) = toElem a
    toElem (Lotentry_Firstterm a) = toElem a
    toElem (Lotentry_Foreignphrase a) = toElem a
    toElem (Lotentry_Glossterm a) = toElem a
    toElem (Lotentry_Footnote a) = toElem a
    toElem (Lotentry_Phrase a) = toElem a
    toElem (Lotentry_Quote a) = toElem a
    toElem (Lotentry_Trademark a) = toElem a
    toElem (Lotentry_Wordasword a) = toElem a
    toElem (Lotentry_Personname a) = toElem a
    toElem (Lotentry_Link a) = toElem a
    toElem (Lotentry_Olink a) = toElem a
    toElem (Lotentry_Ulink a) = toElem a
    toElem (Lotentry_Action a) = toElem a
    toElem (Lotentry_Application a) = toElem a
    toElem (Lotentry_Classname a) = toElem a
    toElem (Lotentry_Methodname a) = toElem a
    toElem (Lotentry_Interfacename a) = toElem a
    toElem (Lotentry_Exceptionname a) = toElem a
    toElem (Lotentry_Ooclass a) = toElem a
    toElem (Lotentry_Oointerface a) = toElem a
    toElem (Lotentry_Ooexception a) = toElem a
    toElem (Lotentry_Command a) = toElem a
    toElem (Lotentry_Computeroutput a) = toElem a
    toElem (Lotentry_Database a) = toElem a
    toElem (Lotentry_Email a) = toElem a
    toElem (Lotentry_Envar a) = toElem a
    toElem (Lotentry_Errorcode a) = toElem a
    toElem (Lotentry_Errorname a) = toElem a
    toElem (Lotentry_Errortype a) = toElem a
    toElem (Lotentry_Errortext a) = toElem a
    toElem (Lotentry_Filename a) = toElem a
    toElem (Lotentry_Function a) = toElem a
    toElem (Lotentry_Guibutton a) = toElem a
    toElem (Lotentry_Guiicon a) = toElem a
    toElem (Lotentry_Guilabel a) = toElem a
    toElem (Lotentry_Guimenu a) = toElem a
    toElem (Lotentry_Guimenuitem a) = toElem a
    toElem (Lotentry_Guisubmenu a) = toElem a
    toElem (Lotentry_Hardware a) = toElem a
    toElem (Lotentry_Interface a) = toElem a
    toElem (Lotentry_Keycap a) = toElem a
    toElem (Lotentry_Keycode a) = toElem a
    toElem (Lotentry_Keycombo a) = toElem a
    toElem (Lotentry_Keysym a) = toElem a
    toElem (Lotentry_Literal a) = toElem a
    toElem (Lotentry_Constant a) = toElem a
    toElem (Lotentry_Markup a) = toElem a
    toElem (Lotentry_Medialabel a) = toElem a
    toElem (Lotentry_Menuchoice a) = toElem a
    toElem (Lotentry_Mousebutton a) = toElem a
    toElem (Lotentry_Option a) = toElem a
    toElem (Lotentry_Optional a) = toElem a
    toElem (Lotentry_Parameter a) = toElem a
    toElem (Lotentry_Prompt a) = toElem a
    toElem (Lotentry_Property a) = toElem a
    toElem (Lotentry_Replaceable a) = toElem a
    toElem (Lotentry_Returnvalue a) = toElem a
    toElem (Lotentry_Sgmltag a) = toElem a
    toElem (Lotentry_Structfield a) = toElem a
    toElem (Lotentry_Structname a) = toElem a
    toElem (Lotentry_Symbol a) = toElem a
    toElem (Lotentry_Systemitem a) = toElem a
    toElem (Lotentry_Token a) = toElem a
    toElem (Lotentry_Type a) = toElem a
    toElem (Lotentry_Userinput a) = toElem a
    toElem (Lotentry_Varname a) = toElem a
    toElem (Lotentry_Anchor a) = toElem a
    toElem (Lotentry_Author a) = toElem a
    toElem (Lotentry_Authorinitials a) = toElem a
    toElem (Lotentry_Corpauthor a) = toElem a
    toElem (Lotentry_Modespec a) = toElem a
    toElem (Lotentry_Othercredit a) = toElem a
    toElem (Lotentry_Productname a) = toElem a
    toElem (Lotentry_Productnumber a) = toElem a
    toElem (Lotentry_Revhistory a) = toElem a
    toElem (Lotentry_Remark a) = toElem a
    toElem (Lotentry_Subscript a) = toElem a
    toElem (Lotentry_Superscript a) = toElem a
    toElem (Lotentry_Inlinegraphic a) = toElem a
    toElem (Lotentry_Inlinemediaobject a) = toElem a
    toElem (Lotentry_Inlineequation a) = toElem a
    toElem (Lotentry_Synopsis a) = toElem a
    toElem (Lotentry_Cmdsynopsis a) = toElem a
    toElem (Lotentry_Funcsynopsis a) = toElem a
    toElem (Lotentry_Classsynopsis a) = toElem a
    toElem (Lotentry_Fieldsynopsis a) = toElem a
    toElem (Lotentry_Constructorsynopsis a) = toElem a
    toElem (Lotentry_Destructorsynopsis a) = toElem a
    toElem (Lotentry_Methodsynopsis a) = toElem a
    toElem (Lotentry_Indexterm a) = toElem a
    toElem (Lotentry_Beginpage a) = toElem a
instance XmlAttrType Lotentry_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Lotentry_Revisionflag_Changed
	    translate "added" = Just Lotentry_Revisionflag_Added
	    translate "deleted" = Just Lotentry_Revisionflag_Deleted
	    translate "off" = Just Lotentry_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Lotentry_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Lotentry_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Lotentry_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Lotentry_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Appendix where
    fromElem (CElem (Elem "appendix" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (\(f,cf)->
			  (\(g,cg)->
			     (\(h,ch)->
				(\(i,ci)->
				   (Just (Appendix (fromAttrs as) a b c d e f g h i), rest))
				(many fromElem ch))
			     (definite fromElem "OneOf" "appendix" cg))
			  (fromElem cf))
		       (many fromElem ce))
		    (fromElem cd))
		 (fromElem cc))
	      (definite fromElem "<title>" "appendix" cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Appendix as a b c d e f g h i) =
	[CElem (Elem "appendix" (toAttrs as) (maybe [] toElem a ++
					      maybe [] toElem b ++ toElem c ++ maybe [] toElem d ++
					      maybe [] toElem e ++ concatMap toElem f ++
					      maybe [] toElem g ++ toElem h ++ concatMap toElem i))]
instance XmlAttributes Appendix_Attrs where
    fromAttrs as =
	Appendix_Attrs
	  { appendixLabel = possibleA fromAttrToStr "label" as
	  , appendixStatus = possibleA fromAttrToStr "status" as
	  , appendixId = possibleA fromAttrToStr "id" as
	  , appendixLang = possibleA fromAttrToStr "lang" as
	  , appendixRemap = possibleA fromAttrToStr "remap" as
	  , appendixXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , appendixRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , appendixArch = possibleA fromAttrToStr "arch" as
	  , appendixCondition = possibleA fromAttrToStr "condition" as
	  , appendixConformance = possibleA fromAttrToStr "conformance" as
	  , appendixOs = possibleA fromAttrToStr "os" as
	  , appendixRevision = possibleA fromAttrToStr "revision" as
	  , appendixSecurity = possibleA fromAttrToStr "security" as
	  , appendixUserlevel = possibleA fromAttrToStr "userlevel" as
	  , appendixVendor = possibleA fromAttrToStr "vendor" as
	  , appendixRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (appendixLabel v)
	, maybeToAttr toAttrFrStr "status" (appendixStatus v)
	, maybeToAttr toAttrFrStr "id" (appendixId v)
	, maybeToAttr toAttrFrStr "lang" (appendixLang v)
	, maybeToAttr toAttrFrStr "remap" (appendixRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (appendixXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (appendixRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (appendixArch v)
	, maybeToAttr toAttrFrStr "condition" (appendixCondition v)
	, maybeToAttr toAttrFrStr "conformance" (appendixConformance v)
	, maybeToAttr toAttrFrStr "os" (appendixOs v)
	, maybeToAttr toAttrFrStr "revision" (appendixRevision v)
	, maybeToAttr toAttrFrStr "security" (appendixSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (appendixUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (appendixVendor v)
	, maybeToAttr toAttrFrStr "role" (appendixRole v)
	]
instance XmlAttrType Appendix_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Appendix_Revisionflag_Changed
	    translate "added" = Just Appendix_Revisionflag_Added
	    translate "deleted" = Just Appendix_Revisionflag_Deleted
	    translate "off" = Just Appendix_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Appendix_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Appendix_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Appendix_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Appendix_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Chapter where
    fromElem (CElem (Elem "chapter" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (\(f,cf)->
			  (\(g,cg)->
			     (\(h,ch)->
				(\(i,ci)->
				   (Just (Chapter (fromAttrs as) a b c d e f g h i), rest))
				(many fromElem ch))
			     (definite fromElem "OneOf" "chapter" cg))
			  (fromElem cf))
		       (many fromElem ce))
		    (fromElem cd))
		 (fromElem cc))
	      (definite fromElem "<title>" "chapter" cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Chapter as a b c d e f g h i) =
	[CElem (Elem "chapter" (toAttrs as) (maybe [] toElem a ++
					     maybe [] toElem b ++ toElem c ++ maybe [] toElem d ++
					     maybe [] toElem e ++ concatMap toElem f ++
					     maybe [] toElem g ++ toElem h ++ concatMap toElem i))]
instance XmlAttributes Chapter_Attrs where
    fromAttrs as =
	Chapter_Attrs
	  { chapterLabel = possibleA fromAttrToStr "label" as
	  , chapterStatus = possibleA fromAttrToStr "status" as
	  , chapterId = possibleA fromAttrToStr "id" as
	  , chapterLang = possibleA fromAttrToStr "lang" as
	  , chapterRemap = possibleA fromAttrToStr "remap" as
	  , chapterXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , chapterRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , chapterArch = possibleA fromAttrToStr "arch" as
	  , chapterCondition = possibleA fromAttrToStr "condition" as
	  , chapterConformance = possibleA fromAttrToStr "conformance" as
	  , chapterOs = possibleA fromAttrToStr "os" as
	  , chapterRevision = possibleA fromAttrToStr "revision" as
	  , chapterSecurity = possibleA fromAttrToStr "security" as
	  , chapterUserlevel = possibleA fromAttrToStr "userlevel" as
	  , chapterVendor = possibleA fromAttrToStr "vendor" as
	  , chapterRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (chapterLabel v)
	, maybeToAttr toAttrFrStr "status" (chapterStatus v)
	, maybeToAttr toAttrFrStr "id" (chapterId v)
	, maybeToAttr toAttrFrStr "lang" (chapterLang v)
	, maybeToAttr toAttrFrStr "remap" (chapterRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (chapterXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (chapterRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (chapterArch v)
	, maybeToAttr toAttrFrStr "condition" (chapterCondition v)
	, maybeToAttr toAttrFrStr "conformance" (chapterConformance v)
	, maybeToAttr toAttrFrStr "os" (chapterOs v)
	, maybeToAttr toAttrFrStr "revision" (chapterRevision v)
	, maybeToAttr toAttrFrStr "security" (chapterSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (chapterUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (chapterVendor v)
	, maybeToAttr toAttrFrStr "role" (chapterRole v)
	]
instance XmlAttrType Chapter_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Chapter_Revisionflag_Changed
	    translate "added" = Just Chapter_Revisionflag_Added
	    translate "deleted" = Just Chapter_Revisionflag_Deleted
	    translate "off" = Just Chapter_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Chapter_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Chapter_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Chapter_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Chapter_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Part where
    fromElem (CElem (Elem "part" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (\(f,cf)->
			  (\(g,cg)->
			     (Just (Part (fromAttrs as) a b c d e f g), rest))
			  (many fromElem cf))
		       (fromElem ce))
		    (fromElem cd))
		 (fromElem cc))
	      (definite fromElem "<title>" "part" cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Part as a b c d e f g) =
	[CElem (Elem "part" (toAttrs as) (maybe [] toElem a ++
					  maybe [] toElem b ++ toElem c ++ maybe [] toElem d ++
					  maybe [] toElem e ++ maybe [] toElem f ++
					  concatMap toElem g))]
instance XmlAttributes Part_Attrs where
    fromAttrs as =
	Part_Attrs
	  { partLabel = possibleA fromAttrToStr "label" as
	  , partStatus = possibleA fromAttrToStr "status" as
	  , partId = possibleA fromAttrToStr "id" as
	  , partLang = possibleA fromAttrToStr "lang" as
	  , partRemap = possibleA fromAttrToStr "remap" as
	  , partXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , partRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , partArch = possibleA fromAttrToStr "arch" as
	  , partCondition = possibleA fromAttrToStr "condition" as
	  , partConformance = possibleA fromAttrToStr "conformance" as
	  , partOs = possibleA fromAttrToStr "os" as
	  , partRevision = possibleA fromAttrToStr "revision" as
	  , partSecurity = possibleA fromAttrToStr "security" as
	  , partUserlevel = possibleA fromAttrToStr "userlevel" as
	  , partVendor = possibleA fromAttrToStr "vendor" as
	  , partRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (partLabel v)
	, maybeToAttr toAttrFrStr "status" (partStatus v)
	, maybeToAttr toAttrFrStr "id" (partId v)
	, maybeToAttr toAttrFrStr "lang" (partLang v)
	, maybeToAttr toAttrFrStr "remap" (partRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (partXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (partRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (partArch v)
	, maybeToAttr toAttrFrStr "condition" (partCondition v)
	, maybeToAttr toAttrFrStr "conformance" (partConformance v)
	, maybeToAttr toAttrFrStr "os" (partOs v)
	, maybeToAttr toAttrFrStr "revision" (partRevision v)
	, maybeToAttr toAttrFrStr "security" (partSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (partUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (partVendor v)
	, maybeToAttr toAttrFrStr "role" (partRole v)
	]
instance XmlAttrType Part_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Part_Revisionflag_Changed
	    translate "added" = Just Part_Revisionflag_Added
	    translate "deleted" = Just Part_Revisionflag_Deleted
	    translate "off" = Just Part_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Part_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Part_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Part_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Part_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Preface where
    fromElem (CElem (Elem "preface" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (\(f,cf)->
			  (\(g,cg)->
			     (\(h,ch)->
				(\(i,ci)->
				   (Just (Preface (fromAttrs as) a b c d e f g h i), rest))
				(many fromElem ch))
			     (definite fromElem "OneOf" "preface" cg))
			  (fromElem cf))
		       (many fromElem ce))
		    (fromElem cd))
		 (fromElem cc))
	      (definite fromElem "<title>" "preface" cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Preface as a b c d e f g h i) =
	[CElem (Elem "preface" (toAttrs as) (maybe [] toElem a ++
					     maybe [] toElem b ++ toElem c ++ maybe [] toElem d ++
					     maybe [] toElem e ++ concatMap toElem f ++
					     maybe [] toElem g ++ toElem h ++ concatMap toElem i))]
instance XmlAttributes Preface_Attrs where
    fromAttrs as =
	Preface_Attrs
	  { prefaceStatus = possibleA fromAttrToStr "status" as
	  , prefaceId = possibleA fromAttrToStr "id" as
	  , prefaceLang = possibleA fromAttrToStr "lang" as
	  , prefaceRemap = possibleA fromAttrToStr "remap" as
	  , prefaceXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , prefaceRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , prefaceArch = possibleA fromAttrToStr "arch" as
	  , prefaceCondition = possibleA fromAttrToStr "condition" as
	  , prefaceConformance = possibleA fromAttrToStr "conformance" as
	  , prefaceOs = possibleA fromAttrToStr "os" as
	  , prefaceRevision = possibleA fromAttrToStr "revision" as
	  , prefaceSecurity = possibleA fromAttrToStr "security" as
	  , prefaceUserlevel = possibleA fromAttrToStr "userlevel" as
	  , prefaceVendor = possibleA fromAttrToStr "vendor" as
	  , prefaceRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "status" (prefaceStatus v)
	, maybeToAttr toAttrFrStr "id" (prefaceId v)
	, maybeToAttr toAttrFrStr "lang" (prefaceLang v)
	, maybeToAttr toAttrFrStr "remap" (prefaceRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (prefaceXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (prefaceRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (prefaceArch v)
	, maybeToAttr toAttrFrStr "condition" (prefaceCondition v)
	, maybeToAttr toAttrFrStr "conformance" (prefaceConformance v)
	, maybeToAttr toAttrFrStr "os" (prefaceOs v)
	, maybeToAttr toAttrFrStr "revision" (prefaceRevision v)
	, maybeToAttr toAttrFrStr "security" (prefaceSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (prefaceUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (prefaceVendor v)
	, maybeToAttr toAttrFrStr "role" (prefaceRole v)
	]
instance XmlAttrType Preface_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Preface_Revisionflag_Changed
	    translate "added" = Just Preface_Revisionflag_Added
	    translate "deleted" = Just Preface_Revisionflag_Deleted
	    translate "off" = Just Preface_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Preface_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Preface_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Preface_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Preface_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Reference where
    fromElem (CElem (Elem "reference" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (\(f,cf)->
			  (\(g,cg)->
			     (Just (Reference (fromAttrs as) a b c d e f g), rest))
			  (many fromElem cf))
		       (fromElem ce))
		    (fromElem cd))
		 (fromElem cc))
	      (definite fromElem "<title>" "reference" cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Reference as a b c d e f g) =
	[CElem (Elem "reference" (toAttrs as) (maybe [] toElem a ++
					       maybe [] toElem b ++ toElem c ++ maybe [] toElem d ++
					       maybe [] toElem e ++ maybe [] toElem f ++
					       concatMap toElem g))]
instance XmlAttributes Reference_Attrs where
    fromAttrs as =
	Reference_Attrs
	  { referenceLabel = possibleA fromAttrToStr "label" as
	  , referenceStatus = possibleA fromAttrToStr "status" as
	  , referenceId = possibleA fromAttrToStr "id" as
	  , referenceLang = possibleA fromAttrToStr "lang" as
	  , referenceRemap = possibleA fromAttrToStr "remap" as
	  , referenceXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , referenceRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , referenceArch = possibleA fromAttrToStr "arch" as
	  , referenceCondition = possibleA fromAttrToStr "condition" as
	  , referenceConformance = possibleA fromAttrToStr "conformance" as
	  , referenceOs = possibleA fromAttrToStr "os" as
	  , referenceRevision = possibleA fromAttrToStr "revision" as
	  , referenceSecurity = possibleA fromAttrToStr "security" as
	  , referenceUserlevel = possibleA fromAttrToStr "userlevel" as
	  , referenceVendor = possibleA fromAttrToStr "vendor" as
	  , referenceRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (referenceLabel v)
	, maybeToAttr toAttrFrStr "status" (referenceStatus v)
	, maybeToAttr toAttrFrStr "id" (referenceId v)
	, maybeToAttr toAttrFrStr "lang" (referenceLang v)
	, maybeToAttr toAttrFrStr "remap" (referenceRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (referenceXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (referenceRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (referenceArch v)
	, maybeToAttr toAttrFrStr "condition" (referenceCondition v)
	, maybeToAttr toAttrFrStr "conformance" (referenceConformance v)
	, maybeToAttr toAttrFrStr "os" (referenceOs v)
	, maybeToAttr toAttrFrStr "revision" (referenceRevision v)
	, maybeToAttr toAttrFrStr "security" (referenceSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (referenceUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (referenceVendor v)
	, maybeToAttr toAttrFrStr "role" (referenceRole v)
	]
instance XmlAttrType Reference_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Reference_Revisionflag_Changed
	    translate "added" = Just Reference_Revisionflag_Added
	    translate "deleted" = Just Reference_Revisionflag_Deleted
	    translate "off" = Just Reference_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Reference_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Reference_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Reference_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Reference_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Partintro where
    fromElem (CElem (Elem "partintro" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (Just (Partintro (fromAttrs as) a b), rest))
	   (definite fromElem "OneOf" "partintro" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Partintro as a b) =
	[CElem (Elem "partintro" (toAttrs as) (maybe [] toElem a ++
					       toElem b))]
instance XmlAttributes Partintro_Attrs where
    fromAttrs as =
	Partintro_Attrs
	  { partintroLabel = possibleA fromAttrToStr "label" as
	  , partintroId = possibleA fromAttrToStr "id" as
	  , partintroLang = possibleA fromAttrToStr "lang" as
	  , partintroRemap = possibleA fromAttrToStr "remap" as
	  , partintroXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , partintroRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , partintroArch = possibleA fromAttrToStr "arch" as
	  , partintroCondition = possibleA fromAttrToStr "condition" as
	  , partintroConformance = possibleA fromAttrToStr "conformance" as
	  , partintroOs = possibleA fromAttrToStr "os" as
	  , partintroRevision = possibleA fromAttrToStr "revision" as
	  , partintroSecurity = possibleA fromAttrToStr "security" as
	  , partintroUserlevel = possibleA fromAttrToStr "userlevel" as
	  , partintroVendor = possibleA fromAttrToStr "vendor" as
	  , partintroRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (partintroLabel v)
	, maybeToAttr toAttrFrStr "id" (partintroId v)
	, maybeToAttr toAttrFrStr "lang" (partintroLang v)
	, maybeToAttr toAttrFrStr "remap" (partintroRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (partintroXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (partintroRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (partintroArch v)
	, maybeToAttr toAttrFrStr "condition" (partintroCondition v)
	, maybeToAttr toAttrFrStr "conformance" (partintroConformance v)
	, maybeToAttr toAttrFrStr "os" (partintroOs v)
	, maybeToAttr toAttrFrStr "revision" (partintroRevision v)
	, maybeToAttr toAttrFrStr "security" (partintroSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (partintroUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (partintroVendor v)
	, maybeToAttr toAttrFrStr "role" (partintroRole v)
	]
instance XmlAttrType Partintro_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Partintro_Revisionflag_Changed
	    translate "added" = Just Partintro_Revisionflag_Added
	    translate "deleted" = Just Partintro_Revisionflag_Deleted
	    translate "off" = Just Partintro_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Partintro_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Partintro_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Partintro_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Partintro_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Appendixinfo where
    fromElem (CElem (Elem "appendixinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Appendixinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Appendixinfo as a) =
	[CElem (Elem "appendixinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Appendixinfo_Attrs where
    fromAttrs as =
	Appendixinfo_Attrs
	  { appendixinfoId = possibleA fromAttrToStr "id" as
	  , appendixinfoLang = possibleA fromAttrToStr "lang" as
	  , appendixinfoRemap = possibleA fromAttrToStr "remap" as
	  , appendixinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , appendixinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , appendixinfoArch = possibleA fromAttrToStr "arch" as
	  , appendixinfoCondition = possibleA fromAttrToStr "condition" as
	  , appendixinfoConformance = possibleA fromAttrToStr "conformance" as
	  , appendixinfoOs = possibleA fromAttrToStr "os" as
	  , appendixinfoRevision = possibleA fromAttrToStr "revision" as
	  , appendixinfoSecurity = possibleA fromAttrToStr "security" as
	  , appendixinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , appendixinfoVendor = possibleA fromAttrToStr "vendor" as
	  , appendixinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (appendixinfoId v)
	, maybeToAttr toAttrFrStr "lang" (appendixinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (appendixinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (appendixinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (appendixinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (appendixinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (appendixinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (appendixinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (appendixinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (appendixinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (appendixinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (appendixinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (appendixinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (appendixinfoRole v)
	]
instance XmlAttrType Appendixinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Appendixinfo_Revisionflag_Changed
	    translate "added" = Just Appendixinfo_Revisionflag_Added
	    translate "deleted" = Just Appendixinfo_Revisionflag_Deleted
	    translate "off" = Just Appendixinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Appendixinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Appendixinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Appendixinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Appendixinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Bibliographyinfo where
    fromElem (CElem (Elem "bibliographyinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Bibliographyinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bibliographyinfo as a) =
	[CElem (Elem "bibliographyinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Bibliographyinfo_Attrs where
    fromAttrs as =
	Bibliographyinfo_Attrs
	  { bibliographyinfoId = possibleA fromAttrToStr "id" as
	  , bibliographyinfoLang = possibleA fromAttrToStr "lang" as
	  , bibliographyinfoRemap = possibleA fromAttrToStr "remap" as
	  , bibliographyinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , bibliographyinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , bibliographyinfoArch = possibleA fromAttrToStr "arch" as
	  , bibliographyinfoCondition = possibleA fromAttrToStr "condition" as
	  , bibliographyinfoConformance = possibleA fromAttrToStr "conformance" as
	  , bibliographyinfoOs = possibleA fromAttrToStr "os" as
	  , bibliographyinfoRevision = possibleA fromAttrToStr "revision" as
	  , bibliographyinfoSecurity = possibleA fromAttrToStr "security" as
	  , bibliographyinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , bibliographyinfoVendor = possibleA fromAttrToStr "vendor" as
	  , bibliographyinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (bibliographyinfoId v)
	, maybeToAttr toAttrFrStr "lang" (bibliographyinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (bibliographyinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (bibliographyinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (bibliographyinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (bibliographyinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (bibliographyinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (bibliographyinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (bibliographyinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (bibliographyinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (bibliographyinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (bibliographyinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (bibliographyinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (bibliographyinfoRole v)
	]
instance XmlAttrType Bibliographyinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Bibliographyinfo_Revisionflag_Changed
	    translate "added" = Just Bibliographyinfo_Revisionflag_Added
	    translate "deleted" = Just Bibliographyinfo_Revisionflag_Deleted
	    translate "off" = Just Bibliographyinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Bibliographyinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Bibliographyinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Bibliographyinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Bibliographyinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Chapterinfo where
    fromElem (CElem (Elem "chapterinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Chapterinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Chapterinfo as a) =
	[CElem (Elem "chapterinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Chapterinfo_Attrs where
    fromAttrs as =
	Chapterinfo_Attrs
	  { chapterinfoId = possibleA fromAttrToStr "id" as
	  , chapterinfoLang = possibleA fromAttrToStr "lang" as
	  , chapterinfoRemap = possibleA fromAttrToStr "remap" as
	  , chapterinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , chapterinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , chapterinfoArch = possibleA fromAttrToStr "arch" as
	  , chapterinfoCondition = possibleA fromAttrToStr "condition" as
	  , chapterinfoConformance = possibleA fromAttrToStr "conformance" as
	  , chapterinfoOs = possibleA fromAttrToStr "os" as
	  , chapterinfoRevision = possibleA fromAttrToStr "revision" as
	  , chapterinfoSecurity = possibleA fromAttrToStr "security" as
	  , chapterinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , chapterinfoVendor = possibleA fromAttrToStr "vendor" as
	  , chapterinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (chapterinfoId v)
	, maybeToAttr toAttrFrStr "lang" (chapterinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (chapterinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (chapterinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (chapterinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (chapterinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (chapterinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (chapterinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (chapterinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (chapterinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (chapterinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (chapterinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (chapterinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (chapterinfoRole v)
	]
instance XmlAttrType Chapterinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Chapterinfo_Revisionflag_Changed
	    translate "added" = Just Chapterinfo_Revisionflag_Added
	    translate "deleted" = Just Chapterinfo_Revisionflag_Deleted
	    translate "off" = Just Chapterinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Chapterinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Chapterinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Chapterinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Chapterinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Glossaryinfo where
    fromElem (CElem (Elem "glossaryinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Glossaryinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Glossaryinfo as a) =
	[CElem (Elem "glossaryinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Glossaryinfo_Attrs where
    fromAttrs as =
	Glossaryinfo_Attrs
	  { glossaryinfoId = possibleA fromAttrToStr "id" as
	  , glossaryinfoLang = possibleA fromAttrToStr "lang" as
	  , glossaryinfoRemap = possibleA fromAttrToStr "remap" as
	  , glossaryinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , glossaryinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , glossaryinfoArch = possibleA fromAttrToStr "arch" as
	  , glossaryinfoCondition = possibleA fromAttrToStr "condition" as
	  , glossaryinfoConformance = possibleA fromAttrToStr "conformance" as
	  , glossaryinfoOs = possibleA fromAttrToStr "os" as
	  , glossaryinfoRevision = possibleA fromAttrToStr "revision" as
	  , glossaryinfoSecurity = possibleA fromAttrToStr "security" as
	  , glossaryinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , glossaryinfoVendor = possibleA fromAttrToStr "vendor" as
	  , glossaryinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (glossaryinfoId v)
	, maybeToAttr toAttrFrStr "lang" (glossaryinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (glossaryinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (glossaryinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (glossaryinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (glossaryinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (glossaryinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (glossaryinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (glossaryinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (glossaryinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (glossaryinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (glossaryinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (glossaryinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (glossaryinfoRole v)
	]
instance XmlAttrType Glossaryinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Glossaryinfo_Revisionflag_Changed
	    translate "added" = Just Glossaryinfo_Revisionflag_Added
	    translate "deleted" = Just Glossaryinfo_Revisionflag_Deleted
	    translate "off" = Just Glossaryinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Glossaryinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Glossaryinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Glossaryinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Glossaryinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Indexinfo where
    fromElem (CElem (Elem "indexinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Indexinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Indexinfo as a) =
	[CElem (Elem "indexinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Indexinfo_Attrs where
    fromAttrs as =
	Indexinfo_Attrs
	  { indexinfoId = possibleA fromAttrToStr "id" as
	  , indexinfoLang = possibleA fromAttrToStr "lang" as
	  , indexinfoRemap = possibleA fromAttrToStr "remap" as
	  , indexinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , indexinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , indexinfoArch = possibleA fromAttrToStr "arch" as
	  , indexinfoCondition = possibleA fromAttrToStr "condition" as
	  , indexinfoConformance = possibleA fromAttrToStr "conformance" as
	  , indexinfoOs = possibleA fromAttrToStr "os" as
	  , indexinfoRevision = possibleA fromAttrToStr "revision" as
	  , indexinfoSecurity = possibleA fromAttrToStr "security" as
	  , indexinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , indexinfoVendor = possibleA fromAttrToStr "vendor" as
	  , indexinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (indexinfoId v)
	, maybeToAttr toAttrFrStr "lang" (indexinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (indexinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (indexinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (indexinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (indexinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (indexinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (indexinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (indexinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (indexinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (indexinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (indexinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (indexinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (indexinfoRole v)
	]
instance XmlAttrType Indexinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Indexinfo_Revisionflag_Changed
	    translate "added" = Just Indexinfo_Revisionflag_Added
	    translate "deleted" = Just Indexinfo_Revisionflag_Deleted
	    translate "off" = Just Indexinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Indexinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Indexinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Indexinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Indexinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Setindexinfo where
    fromElem (CElem (Elem "setindexinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Setindexinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Setindexinfo as a) =
	[CElem (Elem "setindexinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Setindexinfo_Attrs where
    fromAttrs as =
	Setindexinfo_Attrs
	  { setindexinfoId = possibleA fromAttrToStr "id" as
	  , setindexinfoLang = possibleA fromAttrToStr "lang" as
	  , setindexinfoRemap = possibleA fromAttrToStr "remap" as
	  , setindexinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , setindexinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , setindexinfoArch = possibleA fromAttrToStr "arch" as
	  , setindexinfoCondition = possibleA fromAttrToStr "condition" as
	  , setindexinfoConformance = possibleA fromAttrToStr "conformance" as
	  , setindexinfoOs = possibleA fromAttrToStr "os" as
	  , setindexinfoRevision = possibleA fromAttrToStr "revision" as
	  , setindexinfoSecurity = possibleA fromAttrToStr "security" as
	  , setindexinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , setindexinfoVendor = possibleA fromAttrToStr "vendor" as
	  , setindexinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (setindexinfoId v)
	, maybeToAttr toAttrFrStr "lang" (setindexinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (setindexinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (setindexinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (setindexinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (setindexinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (setindexinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (setindexinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (setindexinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (setindexinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (setindexinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (setindexinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (setindexinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (setindexinfoRole v)
	]
instance XmlAttrType Setindexinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Setindexinfo_Revisionflag_Changed
	    translate "added" = Just Setindexinfo_Revisionflag_Added
	    translate "deleted" = Just Setindexinfo_Revisionflag_Deleted
	    translate "off" = Just Setindexinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Setindexinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Setindexinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Setindexinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Setindexinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Partinfo where
    fromElem (CElem (Elem "partinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Partinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Partinfo as a) =
	[CElem (Elem "partinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Partinfo_Attrs where
    fromAttrs as =
	Partinfo_Attrs
	  { partinfoId = possibleA fromAttrToStr "id" as
	  , partinfoLang = possibleA fromAttrToStr "lang" as
	  , partinfoRemap = possibleA fromAttrToStr "remap" as
	  , partinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , partinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , partinfoArch = possibleA fromAttrToStr "arch" as
	  , partinfoCondition = possibleA fromAttrToStr "condition" as
	  , partinfoConformance = possibleA fromAttrToStr "conformance" as
	  , partinfoOs = possibleA fromAttrToStr "os" as
	  , partinfoRevision = possibleA fromAttrToStr "revision" as
	  , partinfoSecurity = possibleA fromAttrToStr "security" as
	  , partinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , partinfoVendor = possibleA fromAttrToStr "vendor" as
	  , partinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (partinfoId v)
	, maybeToAttr toAttrFrStr "lang" (partinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (partinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (partinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (partinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (partinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (partinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (partinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (partinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (partinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (partinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (partinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (partinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (partinfoRole v)
	]
instance XmlAttrType Partinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Partinfo_Revisionflag_Changed
	    translate "added" = Just Partinfo_Revisionflag_Added
	    translate "deleted" = Just Partinfo_Revisionflag_Deleted
	    translate "off" = Just Partinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Partinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Partinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Partinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Partinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Prefaceinfo where
    fromElem (CElem (Elem "prefaceinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Prefaceinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Prefaceinfo as a) =
	[CElem (Elem "prefaceinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Prefaceinfo_Attrs where
    fromAttrs as =
	Prefaceinfo_Attrs
	  { prefaceinfoId = possibleA fromAttrToStr "id" as
	  , prefaceinfoLang = possibleA fromAttrToStr "lang" as
	  , prefaceinfoRemap = possibleA fromAttrToStr "remap" as
	  , prefaceinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , prefaceinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , prefaceinfoArch = possibleA fromAttrToStr "arch" as
	  , prefaceinfoCondition = possibleA fromAttrToStr "condition" as
	  , prefaceinfoConformance = possibleA fromAttrToStr "conformance" as
	  , prefaceinfoOs = possibleA fromAttrToStr "os" as
	  , prefaceinfoRevision = possibleA fromAttrToStr "revision" as
	  , prefaceinfoSecurity = possibleA fromAttrToStr "security" as
	  , prefaceinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , prefaceinfoVendor = possibleA fromAttrToStr "vendor" as
	  , prefaceinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (prefaceinfoId v)
	, maybeToAttr toAttrFrStr "lang" (prefaceinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (prefaceinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (prefaceinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (prefaceinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (prefaceinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (prefaceinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (prefaceinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (prefaceinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (prefaceinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (prefaceinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (prefaceinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (prefaceinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (prefaceinfoRole v)
	]
instance XmlAttrType Prefaceinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Prefaceinfo_Revisionflag_Changed
	    translate "added" = Just Prefaceinfo_Revisionflag_Added
	    translate "deleted" = Just Prefaceinfo_Revisionflag_Deleted
	    translate "off" = Just Prefaceinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Prefaceinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Prefaceinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Prefaceinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Prefaceinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refentryinfo where
    fromElem (CElem (Elem "refentryinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Refentryinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refentryinfo as a) =
	[CElem (Elem "refentryinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Refentryinfo_Attrs where
    fromAttrs as =
	Refentryinfo_Attrs
	  { refentryinfoId = possibleA fromAttrToStr "id" as
	  , refentryinfoLang = possibleA fromAttrToStr "lang" as
	  , refentryinfoRemap = possibleA fromAttrToStr "remap" as
	  , refentryinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refentryinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refentryinfoArch = possibleA fromAttrToStr "arch" as
	  , refentryinfoCondition = possibleA fromAttrToStr "condition" as
	  , refentryinfoConformance = possibleA fromAttrToStr "conformance" as
	  , refentryinfoOs = possibleA fromAttrToStr "os" as
	  , refentryinfoRevision = possibleA fromAttrToStr "revision" as
	  , refentryinfoSecurity = possibleA fromAttrToStr "security" as
	  , refentryinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , refentryinfoVendor = possibleA fromAttrToStr "vendor" as
	  , refentryinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (refentryinfoId v)
	, maybeToAttr toAttrFrStr "lang" (refentryinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (refentryinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refentryinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refentryinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refentryinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (refentryinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (refentryinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (refentryinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (refentryinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (refentryinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (refentryinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refentryinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (refentryinfoRole v)
	]
instance XmlAttrType Refentryinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refentryinfo_Revisionflag_Changed
	    translate "added" = Just Refentryinfo_Revisionflag_Added
	    translate "deleted" = Just Refentryinfo_Revisionflag_Deleted
	    translate "off" = Just Refentryinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refentryinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refentryinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refentryinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refentryinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refsectioninfo where
    fromElem (CElem (Elem "refsectioninfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Refsectioninfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refsectioninfo as a) =
	[CElem (Elem "refsectioninfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Refsectioninfo_Attrs where
    fromAttrs as =
	Refsectioninfo_Attrs
	  { refsectioninfoId = possibleA fromAttrToStr "id" as
	  , refsectioninfoLang = possibleA fromAttrToStr "lang" as
	  , refsectioninfoRemap = possibleA fromAttrToStr "remap" as
	  , refsectioninfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refsectioninfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refsectioninfoArch = possibleA fromAttrToStr "arch" as
	  , refsectioninfoCondition = possibleA fromAttrToStr "condition" as
	  , refsectioninfoConformance = possibleA fromAttrToStr "conformance" as
	  , refsectioninfoOs = possibleA fromAttrToStr "os" as
	  , refsectioninfoRevision = possibleA fromAttrToStr "revision" as
	  , refsectioninfoSecurity = possibleA fromAttrToStr "security" as
	  , refsectioninfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , refsectioninfoVendor = possibleA fromAttrToStr "vendor" as
	  , refsectioninfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (refsectioninfoId v)
	, maybeToAttr toAttrFrStr "lang" (refsectioninfoLang v)
	, maybeToAttr toAttrFrStr "remap" (refsectioninfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refsectioninfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refsectioninfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refsectioninfoArch v)
	, maybeToAttr toAttrFrStr "condition" (refsectioninfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (refsectioninfoConformance v)
	, maybeToAttr toAttrFrStr "os" (refsectioninfoOs v)
	, maybeToAttr toAttrFrStr "revision" (refsectioninfoRevision v)
	, maybeToAttr toAttrFrStr "security" (refsectioninfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (refsectioninfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refsectioninfoVendor v)
	, maybeToAttr toAttrFrStr "role" (refsectioninfoRole v)
	]
instance XmlAttrType Refsectioninfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refsectioninfo_Revisionflag_Changed
	    translate "added" = Just Refsectioninfo_Revisionflag_Added
	    translate "deleted" = Just Refsectioninfo_Revisionflag_Deleted
	    translate "off" = Just Refsectioninfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refsectioninfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refsectioninfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refsectioninfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refsectioninfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refsect1info where
    fromElem (CElem (Elem "refsect1info" as c0):rest) =
	(\(a,ca)->
	   (Just (Refsect1info (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refsect1info as a) =
	[CElem (Elem "refsect1info" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Refsect1info_Attrs where
    fromAttrs as =
	Refsect1info_Attrs
	  { refsect1infoId = possibleA fromAttrToStr "id" as
	  , refsect1infoLang = possibleA fromAttrToStr "lang" as
	  , refsect1infoRemap = possibleA fromAttrToStr "remap" as
	  , refsect1infoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refsect1infoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refsect1infoArch = possibleA fromAttrToStr "arch" as
	  , refsect1infoCondition = possibleA fromAttrToStr "condition" as
	  , refsect1infoConformance = possibleA fromAttrToStr "conformance" as
	  , refsect1infoOs = possibleA fromAttrToStr "os" as
	  , refsect1infoRevision = possibleA fromAttrToStr "revision" as
	  , refsect1infoSecurity = possibleA fromAttrToStr "security" as
	  , refsect1infoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , refsect1infoVendor = possibleA fromAttrToStr "vendor" as
	  , refsect1infoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (refsect1infoId v)
	, maybeToAttr toAttrFrStr "lang" (refsect1infoLang v)
	, maybeToAttr toAttrFrStr "remap" (refsect1infoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refsect1infoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refsect1infoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refsect1infoArch v)
	, maybeToAttr toAttrFrStr "condition" (refsect1infoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (refsect1infoConformance v)
	, maybeToAttr toAttrFrStr "os" (refsect1infoOs v)
	, maybeToAttr toAttrFrStr "revision" (refsect1infoRevision v)
	, maybeToAttr toAttrFrStr "security" (refsect1infoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (refsect1infoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refsect1infoVendor v)
	, maybeToAttr toAttrFrStr "role" (refsect1infoRole v)
	]
instance XmlAttrType Refsect1info_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refsect1info_Revisionflag_Changed
	    translate "added" = Just Refsect1info_Revisionflag_Added
	    translate "deleted" = Just Refsect1info_Revisionflag_Deleted
	    translate "off" = Just Refsect1info_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refsect1info_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refsect1info_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refsect1info_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refsect1info_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refsect2info where
    fromElem (CElem (Elem "refsect2info" as c0):rest) =
	(\(a,ca)->
	   (Just (Refsect2info (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refsect2info as a) =
	[CElem (Elem "refsect2info" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Refsect2info_Attrs where
    fromAttrs as =
	Refsect2info_Attrs
	  { refsect2infoId = possibleA fromAttrToStr "id" as
	  , refsect2infoLang = possibleA fromAttrToStr "lang" as
	  , refsect2infoRemap = possibleA fromAttrToStr "remap" as
	  , refsect2infoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refsect2infoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refsect2infoArch = possibleA fromAttrToStr "arch" as
	  , refsect2infoCondition = possibleA fromAttrToStr "condition" as
	  , refsect2infoConformance = possibleA fromAttrToStr "conformance" as
	  , refsect2infoOs = possibleA fromAttrToStr "os" as
	  , refsect2infoRevision = possibleA fromAttrToStr "revision" as
	  , refsect2infoSecurity = possibleA fromAttrToStr "security" as
	  , refsect2infoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , refsect2infoVendor = possibleA fromAttrToStr "vendor" as
	  , refsect2infoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (refsect2infoId v)
	, maybeToAttr toAttrFrStr "lang" (refsect2infoLang v)
	, maybeToAttr toAttrFrStr "remap" (refsect2infoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refsect2infoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refsect2infoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refsect2infoArch v)
	, maybeToAttr toAttrFrStr "condition" (refsect2infoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (refsect2infoConformance v)
	, maybeToAttr toAttrFrStr "os" (refsect2infoOs v)
	, maybeToAttr toAttrFrStr "revision" (refsect2infoRevision v)
	, maybeToAttr toAttrFrStr "security" (refsect2infoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (refsect2infoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refsect2infoVendor v)
	, maybeToAttr toAttrFrStr "role" (refsect2infoRole v)
	]
instance XmlAttrType Refsect2info_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refsect2info_Revisionflag_Changed
	    translate "added" = Just Refsect2info_Revisionflag_Added
	    translate "deleted" = Just Refsect2info_Revisionflag_Deleted
	    translate "off" = Just Refsect2info_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refsect2info_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refsect2info_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refsect2info_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refsect2info_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refsect3info where
    fromElem (CElem (Elem "refsect3info" as c0):rest) =
	(\(a,ca)->
	   (Just (Refsect3info (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refsect3info as a) =
	[CElem (Elem "refsect3info" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Refsect3info_Attrs where
    fromAttrs as =
	Refsect3info_Attrs
	  { refsect3infoId = possibleA fromAttrToStr "id" as
	  , refsect3infoLang = possibleA fromAttrToStr "lang" as
	  , refsect3infoRemap = possibleA fromAttrToStr "remap" as
	  , refsect3infoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refsect3infoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refsect3infoArch = possibleA fromAttrToStr "arch" as
	  , refsect3infoCondition = possibleA fromAttrToStr "condition" as
	  , refsect3infoConformance = possibleA fromAttrToStr "conformance" as
	  , refsect3infoOs = possibleA fromAttrToStr "os" as
	  , refsect3infoRevision = possibleA fromAttrToStr "revision" as
	  , refsect3infoSecurity = possibleA fromAttrToStr "security" as
	  , refsect3infoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , refsect3infoVendor = possibleA fromAttrToStr "vendor" as
	  , refsect3infoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (refsect3infoId v)
	, maybeToAttr toAttrFrStr "lang" (refsect3infoLang v)
	, maybeToAttr toAttrFrStr "remap" (refsect3infoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refsect3infoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refsect3infoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refsect3infoArch v)
	, maybeToAttr toAttrFrStr "condition" (refsect3infoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (refsect3infoConformance v)
	, maybeToAttr toAttrFrStr "os" (refsect3infoOs v)
	, maybeToAttr toAttrFrStr "revision" (refsect3infoRevision v)
	, maybeToAttr toAttrFrStr "security" (refsect3infoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (refsect3infoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refsect3infoVendor v)
	, maybeToAttr toAttrFrStr "role" (refsect3infoRole v)
	]
instance XmlAttrType Refsect3info_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refsect3info_Revisionflag_Changed
	    translate "added" = Just Refsect3info_Revisionflag_Added
	    translate "deleted" = Just Refsect3info_Revisionflag_Deleted
	    translate "off" = Just Refsect3info_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refsect3info_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refsect3info_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refsect3info_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refsect3info_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refsynopsisdivinfo where
    fromElem (CElem (Elem "refsynopsisdivinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Refsynopsisdivinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refsynopsisdivinfo as a) =
	[CElem (Elem "refsynopsisdivinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Refsynopsisdivinfo_Attrs where
    fromAttrs as =
	Refsynopsisdivinfo_Attrs
	  { refsynopsisdivinfoId = possibleA fromAttrToStr "id" as
	  , refsynopsisdivinfoLang = possibleA fromAttrToStr "lang" as
	  , refsynopsisdivinfoRemap = possibleA fromAttrToStr "remap" as
	  , refsynopsisdivinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refsynopsisdivinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refsynopsisdivinfoArch = possibleA fromAttrToStr "arch" as
	  , refsynopsisdivinfoCondition = possibleA fromAttrToStr "condition" as
	  , refsynopsisdivinfoConformance = possibleA fromAttrToStr "conformance" as
	  , refsynopsisdivinfoOs = possibleA fromAttrToStr "os" as
	  , refsynopsisdivinfoRevision = possibleA fromAttrToStr "revision" as
	  , refsynopsisdivinfoSecurity = possibleA fromAttrToStr "security" as
	  , refsynopsisdivinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , refsynopsisdivinfoVendor = possibleA fromAttrToStr "vendor" as
	  , refsynopsisdivinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (refsynopsisdivinfoId v)
	, maybeToAttr toAttrFrStr "lang" (refsynopsisdivinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (refsynopsisdivinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refsynopsisdivinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refsynopsisdivinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refsynopsisdivinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (refsynopsisdivinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (refsynopsisdivinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (refsynopsisdivinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (refsynopsisdivinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (refsynopsisdivinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (refsynopsisdivinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refsynopsisdivinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (refsynopsisdivinfoRole v)
	]
instance XmlAttrType Refsynopsisdivinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refsynopsisdivinfo_Revisionflag_Changed
	    translate "added" = Just Refsynopsisdivinfo_Revisionflag_Added
	    translate "deleted" = Just Refsynopsisdivinfo_Revisionflag_Deleted
	    translate "off" = Just Refsynopsisdivinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refsynopsisdivinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refsynopsisdivinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refsynopsisdivinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refsynopsisdivinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Referenceinfo where
    fromElem (CElem (Elem "referenceinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Referenceinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Referenceinfo as a) =
	[CElem (Elem "referenceinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Referenceinfo_Attrs where
    fromAttrs as =
	Referenceinfo_Attrs
	  { referenceinfoId = possibleA fromAttrToStr "id" as
	  , referenceinfoLang = possibleA fromAttrToStr "lang" as
	  , referenceinfoRemap = possibleA fromAttrToStr "remap" as
	  , referenceinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , referenceinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , referenceinfoArch = possibleA fromAttrToStr "arch" as
	  , referenceinfoCondition = possibleA fromAttrToStr "condition" as
	  , referenceinfoConformance = possibleA fromAttrToStr "conformance" as
	  , referenceinfoOs = possibleA fromAttrToStr "os" as
	  , referenceinfoRevision = possibleA fromAttrToStr "revision" as
	  , referenceinfoSecurity = possibleA fromAttrToStr "security" as
	  , referenceinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , referenceinfoVendor = possibleA fromAttrToStr "vendor" as
	  , referenceinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (referenceinfoId v)
	, maybeToAttr toAttrFrStr "lang" (referenceinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (referenceinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (referenceinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (referenceinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (referenceinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (referenceinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (referenceinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (referenceinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (referenceinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (referenceinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (referenceinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (referenceinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (referenceinfoRole v)
	]
instance XmlAttrType Referenceinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Referenceinfo_Revisionflag_Changed
	    translate "added" = Just Referenceinfo_Revisionflag_Added
	    translate "deleted" = Just Referenceinfo_Revisionflag_Deleted
	    translate "off" = Just Referenceinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Referenceinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Referenceinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Referenceinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Referenceinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Sect1info where
    fromElem (CElem (Elem "sect1info" as c0):rest) =
	(\(a,ca)->
	   (Just (Sect1info (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Sect1info as a) =
	[CElem (Elem "sect1info" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Sect1info_Attrs where
    fromAttrs as =
	Sect1info_Attrs
	  { sect1infoId = possibleA fromAttrToStr "id" as
	  , sect1infoLang = possibleA fromAttrToStr "lang" as
	  , sect1infoRemap = possibleA fromAttrToStr "remap" as
	  , sect1infoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , sect1infoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , sect1infoArch = possibleA fromAttrToStr "arch" as
	  , sect1infoCondition = possibleA fromAttrToStr "condition" as
	  , sect1infoConformance = possibleA fromAttrToStr "conformance" as
	  , sect1infoOs = possibleA fromAttrToStr "os" as
	  , sect1infoRevision = possibleA fromAttrToStr "revision" as
	  , sect1infoSecurity = possibleA fromAttrToStr "security" as
	  , sect1infoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , sect1infoVendor = possibleA fromAttrToStr "vendor" as
	  , sect1infoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (sect1infoId v)
	, maybeToAttr toAttrFrStr "lang" (sect1infoLang v)
	, maybeToAttr toAttrFrStr "remap" (sect1infoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (sect1infoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (sect1infoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (sect1infoArch v)
	, maybeToAttr toAttrFrStr "condition" (sect1infoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (sect1infoConformance v)
	, maybeToAttr toAttrFrStr "os" (sect1infoOs v)
	, maybeToAttr toAttrFrStr "revision" (sect1infoRevision v)
	, maybeToAttr toAttrFrStr "security" (sect1infoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (sect1infoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (sect1infoVendor v)
	, maybeToAttr toAttrFrStr "role" (sect1infoRole v)
	]
instance XmlAttrType Sect1info_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Sect1info_Revisionflag_Changed
	    translate "added" = Just Sect1info_Revisionflag_Added
	    translate "deleted" = Just Sect1info_Revisionflag_Deleted
	    translate "off" = Just Sect1info_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Sect1info_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Sect1info_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Sect1info_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Sect1info_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Sect2info where
    fromElem (CElem (Elem "sect2info" as c0):rest) =
	(\(a,ca)->
	   (Just (Sect2info (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Sect2info as a) =
	[CElem (Elem "sect2info" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Sect2info_Attrs where
    fromAttrs as =
	Sect2info_Attrs
	  { sect2infoId = possibleA fromAttrToStr "id" as
	  , sect2infoLang = possibleA fromAttrToStr "lang" as
	  , sect2infoRemap = possibleA fromAttrToStr "remap" as
	  , sect2infoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , sect2infoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , sect2infoArch = possibleA fromAttrToStr "arch" as
	  , sect2infoCondition = possibleA fromAttrToStr "condition" as
	  , sect2infoConformance = possibleA fromAttrToStr "conformance" as
	  , sect2infoOs = possibleA fromAttrToStr "os" as
	  , sect2infoRevision = possibleA fromAttrToStr "revision" as
	  , sect2infoSecurity = possibleA fromAttrToStr "security" as
	  , sect2infoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , sect2infoVendor = possibleA fromAttrToStr "vendor" as
	  , sect2infoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (sect2infoId v)
	, maybeToAttr toAttrFrStr "lang" (sect2infoLang v)
	, maybeToAttr toAttrFrStr "remap" (sect2infoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (sect2infoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (sect2infoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (sect2infoArch v)
	, maybeToAttr toAttrFrStr "condition" (sect2infoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (sect2infoConformance v)
	, maybeToAttr toAttrFrStr "os" (sect2infoOs v)
	, maybeToAttr toAttrFrStr "revision" (sect2infoRevision v)
	, maybeToAttr toAttrFrStr "security" (sect2infoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (sect2infoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (sect2infoVendor v)
	, maybeToAttr toAttrFrStr "role" (sect2infoRole v)
	]
instance XmlAttrType Sect2info_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Sect2info_Revisionflag_Changed
	    translate "added" = Just Sect2info_Revisionflag_Added
	    translate "deleted" = Just Sect2info_Revisionflag_Deleted
	    translate "off" = Just Sect2info_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Sect2info_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Sect2info_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Sect2info_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Sect2info_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Sect3info where
    fromElem (CElem (Elem "sect3info" as c0):rest) =
	(\(a,ca)->
	   (Just (Sect3info (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Sect3info as a) =
	[CElem (Elem "sect3info" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Sect3info_Attrs where
    fromAttrs as =
	Sect3info_Attrs
	  { sect3infoId = possibleA fromAttrToStr "id" as
	  , sect3infoLang = possibleA fromAttrToStr "lang" as
	  , sect3infoRemap = possibleA fromAttrToStr "remap" as
	  , sect3infoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , sect3infoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , sect3infoArch = possibleA fromAttrToStr "arch" as
	  , sect3infoCondition = possibleA fromAttrToStr "condition" as
	  , sect3infoConformance = possibleA fromAttrToStr "conformance" as
	  , sect3infoOs = possibleA fromAttrToStr "os" as
	  , sect3infoRevision = possibleA fromAttrToStr "revision" as
	  , sect3infoSecurity = possibleA fromAttrToStr "security" as
	  , sect3infoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , sect3infoVendor = possibleA fromAttrToStr "vendor" as
	  , sect3infoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (sect3infoId v)
	, maybeToAttr toAttrFrStr "lang" (sect3infoLang v)
	, maybeToAttr toAttrFrStr "remap" (sect3infoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (sect3infoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (sect3infoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (sect3infoArch v)
	, maybeToAttr toAttrFrStr "condition" (sect3infoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (sect3infoConformance v)
	, maybeToAttr toAttrFrStr "os" (sect3infoOs v)
	, maybeToAttr toAttrFrStr "revision" (sect3infoRevision v)
	, maybeToAttr toAttrFrStr "security" (sect3infoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (sect3infoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (sect3infoVendor v)
	, maybeToAttr toAttrFrStr "role" (sect3infoRole v)
	]
instance XmlAttrType Sect3info_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Sect3info_Revisionflag_Changed
	    translate "added" = Just Sect3info_Revisionflag_Added
	    translate "deleted" = Just Sect3info_Revisionflag_Deleted
	    translate "off" = Just Sect3info_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Sect3info_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Sect3info_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Sect3info_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Sect3info_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Sect4info where
    fromElem (CElem (Elem "sect4info" as c0):rest) =
	(\(a,ca)->
	   (Just (Sect4info (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Sect4info as a) =
	[CElem (Elem "sect4info" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Sect4info_Attrs where
    fromAttrs as =
	Sect4info_Attrs
	  { sect4infoId = possibleA fromAttrToStr "id" as
	  , sect4infoLang = possibleA fromAttrToStr "lang" as
	  , sect4infoRemap = possibleA fromAttrToStr "remap" as
	  , sect4infoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , sect4infoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , sect4infoArch = possibleA fromAttrToStr "arch" as
	  , sect4infoCondition = possibleA fromAttrToStr "condition" as
	  , sect4infoConformance = possibleA fromAttrToStr "conformance" as
	  , sect4infoOs = possibleA fromAttrToStr "os" as
	  , sect4infoRevision = possibleA fromAttrToStr "revision" as
	  , sect4infoSecurity = possibleA fromAttrToStr "security" as
	  , sect4infoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , sect4infoVendor = possibleA fromAttrToStr "vendor" as
	  , sect4infoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (sect4infoId v)
	, maybeToAttr toAttrFrStr "lang" (sect4infoLang v)
	, maybeToAttr toAttrFrStr "remap" (sect4infoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (sect4infoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (sect4infoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (sect4infoArch v)
	, maybeToAttr toAttrFrStr "condition" (sect4infoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (sect4infoConformance v)
	, maybeToAttr toAttrFrStr "os" (sect4infoOs v)
	, maybeToAttr toAttrFrStr "revision" (sect4infoRevision v)
	, maybeToAttr toAttrFrStr "security" (sect4infoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (sect4infoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (sect4infoVendor v)
	, maybeToAttr toAttrFrStr "role" (sect4infoRole v)
	]
instance XmlAttrType Sect4info_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Sect4info_Revisionflag_Changed
	    translate "added" = Just Sect4info_Revisionflag_Added
	    translate "deleted" = Just Sect4info_Revisionflag_Deleted
	    translate "off" = Just Sect4info_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Sect4info_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Sect4info_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Sect4info_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Sect4info_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Sect5info where
    fromElem (CElem (Elem "sect5info" as c0):rest) =
	(\(a,ca)->
	   (Just (Sect5info (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Sect5info as a) =
	[CElem (Elem "sect5info" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Sect5info_Attrs where
    fromAttrs as =
	Sect5info_Attrs
	  { sect5infoId = possibleA fromAttrToStr "id" as
	  , sect5infoLang = possibleA fromAttrToStr "lang" as
	  , sect5infoRemap = possibleA fromAttrToStr "remap" as
	  , sect5infoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , sect5infoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , sect5infoArch = possibleA fromAttrToStr "arch" as
	  , sect5infoCondition = possibleA fromAttrToStr "condition" as
	  , sect5infoConformance = possibleA fromAttrToStr "conformance" as
	  , sect5infoOs = possibleA fromAttrToStr "os" as
	  , sect5infoRevision = possibleA fromAttrToStr "revision" as
	  , sect5infoSecurity = possibleA fromAttrToStr "security" as
	  , sect5infoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , sect5infoVendor = possibleA fromAttrToStr "vendor" as
	  , sect5infoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (sect5infoId v)
	, maybeToAttr toAttrFrStr "lang" (sect5infoLang v)
	, maybeToAttr toAttrFrStr "remap" (sect5infoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (sect5infoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (sect5infoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (sect5infoArch v)
	, maybeToAttr toAttrFrStr "condition" (sect5infoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (sect5infoConformance v)
	, maybeToAttr toAttrFrStr "os" (sect5infoOs v)
	, maybeToAttr toAttrFrStr "revision" (sect5infoRevision v)
	, maybeToAttr toAttrFrStr "security" (sect5infoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (sect5infoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (sect5infoVendor v)
	, maybeToAttr toAttrFrStr "role" (sect5infoRole v)
	]
instance XmlAttrType Sect5info_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Sect5info_Revisionflag_Changed
	    translate "added" = Just Sect5info_Revisionflag_Added
	    translate "deleted" = Just Sect5info_Revisionflag_Deleted
	    translate "off" = Just Sect5info_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Sect5info_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Sect5info_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Sect5info_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Sect5info_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Section where
    fromElem (CElem (Elem "section" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (\(f,cf)->
			  (\(g,cg)->
			     (Just (Section (fromAttrs as) a b c d e f g), rest))
			  (many fromElem cf))
		       (definite fromElem "OneOf" "section" ce))
		    (many fromElem cd))
		 (fromElem cc))
	      (fromElem cb))
	   (definite fromElem "<title>" "section" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Section as a b c d e f g) =
	[CElem (Elem "section" (toAttrs as) (maybe [] toElem a ++ toElem b
					     ++ maybe [] toElem c ++ maybe [] toElem d ++
					     concatMap toElem e ++ toElem f ++ concatMap toElem g))]
instance XmlAttributes Section_Attrs where
    fromAttrs as =
	Section_Attrs
	  { sectionLabel = possibleA fromAttrToStr "label" as
	  , sectionStatus = possibleA fromAttrToStr "status" as
	  , sectionId = possibleA fromAttrToStr "id" as
	  , sectionLang = possibleA fromAttrToStr "lang" as
	  , sectionRemap = possibleA fromAttrToStr "remap" as
	  , sectionXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , sectionRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , sectionArch = possibleA fromAttrToStr "arch" as
	  , sectionCondition = possibleA fromAttrToStr "condition" as
	  , sectionConformance = possibleA fromAttrToStr "conformance" as
	  , sectionOs = possibleA fromAttrToStr "os" as
	  , sectionRevision = possibleA fromAttrToStr "revision" as
	  , sectionSecurity = possibleA fromAttrToStr "security" as
	  , sectionUserlevel = possibleA fromAttrToStr "userlevel" as
	  , sectionVendor = possibleA fromAttrToStr "vendor" as
	  , sectionRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "label" (sectionLabel v)
	, maybeToAttr toAttrFrStr "status" (sectionStatus v)
	, maybeToAttr toAttrFrStr "id" (sectionId v)
	, maybeToAttr toAttrFrStr "lang" (sectionLang v)
	, maybeToAttr toAttrFrStr "remap" (sectionRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (sectionXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (sectionRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (sectionArch v)
	, maybeToAttr toAttrFrStr "condition" (sectionCondition v)
	, maybeToAttr toAttrFrStr "conformance" (sectionConformance v)
	, maybeToAttr toAttrFrStr "os" (sectionOs v)
	, maybeToAttr toAttrFrStr "revision" (sectionRevision v)
	, maybeToAttr toAttrFrStr "security" (sectionSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (sectionUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (sectionVendor v)
	, maybeToAttr toAttrFrStr "role" (sectionRole v)
	]
instance XmlAttrType Section_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Section_Revisionflag_Changed
	    translate "added" = Just Section_Revisionflag_Added
	    translate "deleted" = Just Section_Revisionflag_Deleted
	    translate "off" = Just Section_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Section_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Section_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Section_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Section_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Sectioninfo where
    fromElem (CElem (Elem "sectioninfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Sectioninfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Sectioninfo as a) =
	[CElem (Elem "sectioninfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Sectioninfo_Attrs where
    fromAttrs as =
	Sectioninfo_Attrs
	  { sectioninfoId = possibleA fromAttrToStr "id" as
	  , sectioninfoLang = possibleA fromAttrToStr "lang" as
	  , sectioninfoRemap = possibleA fromAttrToStr "remap" as
	  , sectioninfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , sectioninfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , sectioninfoArch = possibleA fromAttrToStr "arch" as
	  , sectioninfoCondition = possibleA fromAttrToStr "condition" as
	  , sectioninfoConformance = possibleA fromAttrToStr "conformance" as
	  , sectioninfoOs = possibleA fromAttrToStr "os" as
	  , sectioninfoRevision = possibleA fromAttrToStr "revision" as
	  , sectioninfoSecurity = possibleA fromAttrToStr "security" as
	  , sectioninfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , sectioninfoVendor = possibleA fromAttrToStr "vendor" as
	  , sectioninfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (sectioninfoId v)
	, maybeToAttr toAttrFrStr "lang" (sectioninfoLang v)
	, maybeToAttr toAttrFrStr "remap" (sectioninfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (sectioninfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (sectioninfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (sectioninfoArch v)
	, maybeToAttr toAttrFrStr "condition" (sectioninfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (sectioninfoConformance v)
	, maybeToAttr toAttrFrStr "os" (sectioninfoOs v)
	, maybeToAttr toAttrFrStr "revision" (sectioninfoRevision v)
	, maybeToAttr toAttrFrStr "security" (sectioninfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (sectioninfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (sectioninfoVendor v)
	, maybeToAttr toAttrFrStr "role" (sectioninfoRole v)
	]
instance XmlAttrType Sectioninfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Sectioninfo_Revisionflag_Changed
	    translate "added" = Just Sectioninfo_Revisionflag_Added
	    translate "deleted" = Just Sectioninfo_Revisionflag_Deleted
	    translate "off" = Just Sectioninfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Sectioninfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Sectioninfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Sectioninfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Sectioninfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Sect1 where
    fromElem (CElem (Elem "sect1" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (\(f,cf)->
			  (\(g,cg)->
			     (Just (Sect1 (fromAttrs as) a b c d e f g), rest))
			  (many fromElem cf))
		       (definite fromElem "OneOf" "sect1" ce))
		    (many fromElem cd))
		 (fromElem cc))
	      (fromElem cb))
	   (definite fromElem "<title>" "sect1" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Sect1 as a b c d e f g) =
	[CElem (Elem "sect1" (toAttrs as) (maybe [] toElem a ++ toElem b ++
					   maybe [] toElem c ++ maybe [] toElem d ++
					   concatMap toElem e ++ toElem f ++ concatMap toElem g))]
instance XmlAttributes Sect1_Attrs where
    fromAttrs as =
	Sect1_Attrs
	  { sect1Renderas = possibleA fromAttrToTyp "renderas" as
	  , sect1Label = possibleA fromAttrToStr "label" as
	  , sect1Status = possibleA fromAttrToStr "status" as
	  , sect1Id = possibleA fromAttrToStr "id" as
	  , sect1Lang = possibleA fromAttrToStr "lang" as
	  , sect1Remap = possibleA fromAttrToStr "remap" as
	  , sect1Xreflabel = possibleA fromAttrToStr "xreflabel" as
	  , sect1Revisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , sect1Arch = possibleA fromAttrToStr "arch" as
	  , sect1Condition = possibleA fromAttrToStr "condition" as
	  , sect1Conformance = possibleA fromAttrToStr "conformance" as
	  , sect1Os = possibleA fromAttrToStr "os" as
	  , sect1Revision = possibleA fromAttrToStr "revision" as
	  , sect1Security = possibleA fromAttrToStr "security" as
	  , sect1Userlevel = possibleA fromAttrToStr "userlevel" as
	  , sect1Vendor = possibleA fromAttrToStr "vendor" as
	  , sect1Role = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "renderas" (sect1Renderas v)
	, maybeToAttr toAttrFrStr "label" (sect1Label v)
	, maybeToAttr toAttrFrStr "status" (sect1Status v)
	, maybeToAttr toAttrFrStr "id" (sect1Id v)
	, maybeToAttr toAttrFrStr "lang" (sect1Lang v)
	, maybeToAttr toAttrFrStr "remap" (sect1Remap v)
	, maybeToAttr toAttrFrStr "xreflabel" (sect1Xreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (sect1Revisionflag v)
	, maybeToAttr toAttrFrStr "arch" (sect1Arch v)
	, maybeToAttr toAttrFrStr "condition" (sect1Condition v)
	, maybeToAttr toAttrFrStr "conformance" (sect1Conformance v)
	, maybeToAttr toAttrFrStr "os" (sect1Os v)
	, maybeToAttr toAttrFrStr "revision" (sect1Revision v)
	, maybeToAttr toAttrFrStr "security" (sect1Security v)
	, maybeToAttr toAttrFrStr "userlevel" (sect1Userlevel v)
	, maybeToAttr toAttrFrStr "vendor" (sect1Vendor v)
	, maybeToAttr toAttrFrStr "role" (sect1Role v)
	]
instance XmlAttrType Sect1_Renderas where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "sect2" = Just Sect1_Renderas_Sect2
	    translate "sect3" = Just Sect1_Renderas_Sect3
	    translate "sect4" = Just Sect1_Renderas_Sect4
	    translate "sect5" = Just Sect1_Renderas_Sect5
	    translate _ = Nothing
    toAttrFrTyp n Sect1_Renderas_Sect2 = Just (n, str2attr "sect2")
    toAttrFrTyp n Sect1_Renderas_Sect3 = Just (n, str2attr "sect3")
    toAttrFrTyp n Sect1_Renderas_Sect4 = Just (n, str2attr "sect4")
    toAttrFrTyp n Sect1_Renderas_Sect5 = Just (n, str2attr "sect5")
instance XmlAttrType Sect1_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Sect1_Revisionflag_Changed
	    translate "added" = Just Sect1_Revisionflag_Added
	    translate "deleted" = Just Sect1_Revisionflag_Deleted
	    translate "off" = Just Sect1_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Sect1_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Sect1_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Sect1_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Sect1_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Sect2 where
    fromElem (CElem (Elem "sect2" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (\(f,cf)->
			  (\(g,cg)->
			     (Just (Sect2 (fromAttrs as) a b c d e f g), rest))
			  (many fromElem cf))
		       (definite fromElem "OneOf" "sect2" ce))
		    (many fromElem cd))
		 (fromElem cc))
	      (fromElem cb))
	   (definite fromElem "<title>" "sect2" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Sect2 as a b c d e f g) =
	[CElem (Elem "sect2" (toAttrs as) (maybe [] toElem a ++ toElem b ++
					   maybe [] toElem c ++ maybe [] toElem d ++
					   concatMap toElem e ++ toElem f ++ concatMap toElem g))]
instance XmlAttributes Sect2_Attrs where
    fromAttrs as =
	Sect2_Attrs
	  { sect2Renderas = possibleA fromAttrToTyp "renderas" as
	  , sect2Label = possibleA fromAttrToStr "label" as
	  , sect2Status = possibleA fromAttrToStr "status" as
	  , sect2Id = possibleA fromAttrToStr "id" as
	  , sect2Lang = possibleA fromAttrToStr "lang" as
	  , sect2Remap = possibleA fromAttrToStr "remap" as
	  , sect2Xreflabel = possibleA fromAttrToStr "xreflabel" as
	  , sect2Revisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , sect2Arch = possibleA fromAttrToStr "arch" as
	  , sect2Condition = possibleA fromAttrToStr "condition" as
	  , sect2Conformance = possibleA fromAttrToStr "conformance" as
	  , sect2Os = possibleA fromAttrToStr "os" as
	  , sect2Revision = possibleA fromAttrToStr "revision" as
	  , sect2Security = possibleA fromAttrToStr "security" as
	  , sect2Userlevel = possibleA fromAttrToStr "userlevel" as
	  , sect2Vendor = possibleA fromAttrToStr "vendor" as
	  , sect2Role = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "renderas" (sect2Renderas v)
	, maybeToAttr toAttrFrStr "label" (sect2Label v)
	, maybeToAttr toAttrFrStr "status" (sect2Status v)
	, maybeToAttr toAttrFrStr "id" (sect2Id v)
	, maybeToAttr toAttrFrStr "lang" (sect2Lang v)
	, maybeToAttr toAttrFrStr "remap" (sect2Remap v)
	, maybeToAttr toAttrFrStr "xreflabel" (sect2Xreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (sect2Revisionflag v)
	, maybeToAttr toAttrFrStr "arch" (sect2Arch v)
	, maybeToAttr toAttrFrStr "condition" (sect2Condition v)
	, maybeToAttr toAttrFrStr "conformance" (sect2Conformance v)
	, maybeToAttr toAttrFrStr "os" (sect2Os v)
	, maybeToAttr toAttrFrStr "revision" (sect2Revision v)
	, maybeToAttr toAttrFrStr "security" (sect2Security v)
	, maybeToAttr toAttrFrStr "userlevel" (sect2Userlevel v)
	, maybeToAttr toAttrFrStr "vendor" (sect2Vendor v)
	, maybeToAttr toAttrFrStr "role" (sect2Role v)
	]
instance XmlAttrType Sect2_Renderas where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "sect1" = Just Sect2_Renderas_Sect1
	    translate "sect3" = Just Sect2_Renderas_Sect3
	    translate "sect4" = Just Sect2_Renderas_Sect4
	    translate "sect5" = Just Sect2_Renderas_Sect5
	    translate _ = Nothing
    toAttrFrTyp n Sect2_Renderas_Sect1 = Just (n, str2attr "sect1")
    toAttrFrTyp n Sect2_Renderas_Sect3 = Just (n, str2attr "sect3")
    toAttrFrTyp n Sect2_Renderas_Sect4 = Just (n, str2attr "sect4")
    toAttrFrTyp n Sect2_Renderas_Sect5 = Just (n, str2attr "sect5")
instance XmlAttrType Sect2_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Sect2_Revisionflag_Changed
	    translate "added" = Just Sect2_Revisionflag_Added
	    translate "deleted" = Just Sect2_Revisionflag_Deleted
	    translate "off" = Just Sect2_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Sect2_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Sect2_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Sect2_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Sect2_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Sect3 where
    fromElem (CElem (Elem "sect3" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (\(f,cf)->
			  (\(g,cg)->
			     (Just (Sect3 (fromAttrs as) a b c d e f g), rest))
			  (many fromElem cf))
		       (definite fromElem "OneOf" "sect3" ce))
		    (many fromElem cd))
		 (fromElem cc))
	      (fromElem cb))
	   (definite fromElem "<title>" "sect3" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Sect3 as a b c d e f g) =
	[CElem (Elem "sect3" (toAttrs as) (maybe [] toElem a ++ toElem b ++
					   maybe [] toElem c ++ maybe [] toElem d ++
					   concatMap toElem e ++ toElem f ++ concatMap toElem g))]
instance XmlAttributes Sect3_Attrs where
    fromAttrs as =
	Sect3_Attrs
	  { sect3Renderas = possibleA fromAttrToTyp "renderas" as
	  , sect3Label = possibleA fromAttrToStr "label" as
	  , sect3Status = possibleA fromAttrToStr "status" as
	  , sect3Id = possibleA fromAttrToStr "id" as
	  , sect3Lang = possibleA fromAttrToStr "lang" as
	  , sect3Remap = possibleA fromAttrToStr "remap" as
	  , sect3Xreflabel = possibleA fromAttrToStr "xreflabel" as
	  , sect3Revisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , sect3Arch = possibleA fromAttrToStr "arch" as
	  , sect3Condition = possibleA fromAttrToStr "condition" as
	  , sect3Conformance = possibleA fromAttrToStr "conformance" as
	  , sect3Os = possibleA fromAttrToStr "os" as
	  , sect3Revision = possibleA fromAttrToStr "revision" as
	  , sect3Security = possibleA fromAttrToStr "security" as
	  , sect3Userlevel = possibleA fromAttrToStr "userlevel" as
	  , sect3Vendor = possibleA fromAttrToStr "vendor" as
	  , sect3Role = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "renderas" (sect3Renderas v)
	, maybeToAttr toAttrFrStr "label" (sect3Label v)
	, maybeToAttr toAttrFrStr "status" (sect3Status v)
	, maybeToAttr toAttrFrStr "id" (sect3Id v)
	, maybeToAttr toAttrFrStr "lang" (sect3Lang v)
	, maybeToAttr toAttrFrStr "remap" (sect3Remap v)
	, maybeToAttr toAttrFrStr "xreflabel" (sect3Xreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (sect3Revisionflag v)
	, maybeToAttr toAttrFrStr "arch" (sect3Arch v)
	, maybeToAttr toAttrFrStr "condition" (sect3Condition v)
	, maybeToAttr toAttrFrStr "conformance" (sect3Conformance v)
	, maybeToAttr toAttrFrStr "os" (sect3Os v)
	, maybeToAttr toAttrFrStr "revision" (sect3Revision v)
	, maybeToAttr toAttrFrStr "security" (sect3Security v)
	, maybeToAttr toAttrFrStr "userlevel" (sect3Userlevel v)
	, maybeToAttr toAttrFrStr "vendor" (sect3Vendor v)
	, maybeToAttr toAttrFrStr "role" (sect3Role v)
	]
instance XmlAttrType Sect3_Renderas where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "sect1" = Just Sect3_Renderas_Sect1
	    translate "sect2" = Just Sect3_Renderas_Sect2
	    translate "sect4" = Just Sect3_Renderas_Sect4
	    translate "sect5" = Just Sect3_Renderas_Sect5
	    translate _ = Nothing
    toAttrFrTyp n Sect3_Renderas_Sect1 = Just (n, str2attr "sect1")
    toAttrFrTyp n Sect3_Renderas_Sect2 = Just (n, str2attr "sect2")
    toAttrFrTyp n Sect3_Renderas_Sect4 = Just (n, str2attr "sect4")
    toAttrFrTyp n Sect3_Renderas_Sect5 = Just (n, str2attr "sect5")
instance XmlAttrType Sect3_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Sect3_Revisionflag_Changed
	    translate "added" = Just Sect3_Revisionflag_Added
	    translate "deleted" = Just Sect3_Revisionflag_Deleted
	    translate "off" = Just Sect3_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Sect3_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Sect3_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Sect3_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Sect3_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Sect4 where
    fromElem (CElem (Elem "sect4" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (\(f,cf)->
			  (\(g,cg)->
			     (Just (Sect4 (fromAttrs as) a b c d e f g), rest))
			  (many fromElem cf))
		       (definite fromElem "OneOf" "sect4" ce))
		    (many fromElem cd))
		 (fromElem cc))
	      (fromElem cb))
	   (definite fromElem "<title>" "sect4" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Sect4 as a b c d e f g) =
	[CElem (Elem "sect4" (toAttrs as) (maybe [] toElem a ++ toElem b ++
					   maybe [] toElem c ++ maybe [] toElem d ++
					   concatMap toElem e ++ toElem f ++ concatMap toElem g))]
instance XmlAttributes Sect4_Attrs where
    fromAttrs as =
	Sect4_Attrs
	  { sect4Renderas = possibleA fromAttrToTyp "renderas" as
	  , sect4Label = possibleA fromAttrToStr "label" as
	  , sect4Status = possibleA fromAttrToStr "status" as
	  , sect4Id = possibleA fromAttrToStr "id" as
	  , sect4Lang = possibleA fromAttrToStr "lang" as
	  , sect4Remap = possibleA fromAttrToStr "remap" as
	  , sect4Xreflabel = possibleA fromAttrToStr "xreflabel" as
	  , sect4Revisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , sect4Arch = possibleA fromAttrToStr "arch" as
	  , sect4Condition = possibleA fromAttrToStr "condition" as
	  , sect4Conformance = possibleA fromAttrToStr "conformance" as
	  , sect4Os = possibleA fromAttrToStr "os" as
	  , sect4Revision = possibleA fromAttrToStr "revision" as
	  , sect4Security = possibleA fromAttrToStr "security" as
	  , sect4Userlevel = possibleA fromAttrToStr "userlevel" as
	  , sect4Vendor = possibleA fromAttrToStr "vendor" as
	  , sect4Role = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "renderas" (sect4Renderas v)
	, maybeToAttr toAttrFrStr "label" (sect4Label v)
	, maybeToAttr toAttrFrStr "status" (sect4Status v)
	, maybeToAttr toAttrFrStr "id" (sect4Id v)
	, maybeToAttr toAttrFrStr "lang" (sect4Lang v)
	, maybeToAttr toAttrFrStr "remap" (sect4Remap v)
	, maybeToAttr toAttrFrStr "xreflabel" (sect4Xreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (sect4Revisionflag v)
	, maybeToAttr toAttrFrStr "arch" (sect4Arch v)
	, maybeToAttr toAttrFrStr "condition" (sect4Condition v)
	, maybeToAttr toAttrFrStr "conformance" (sect4Conformance v)
	, maybeToAttr toAttrFrStr "os" (sect4Os v)
	, maybeToAttr toAttrFrStr "revision" (sect4Revision v)
	, maybeToAttr toAttrFrStr "security" (sect4Security v)
	, maybeToAttr toAttrFrStr "userlevel" (sect4Userlevel v)
	, maybeToAttr toAttrFrStr "vendor" (sect4Vendor v)
	, maybeToAttr toAttrFrStr "role" (sect4Role v)
	]
instance XmlAttrType Sect4_Renderas where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "sect1" = Just Sect4_Renderas_Sect1
	    translate "sect2" = Just Sect4_Renderas_Sect2
	    translate "sect3" = Just Sect4_Renderas_Sect3
	    translate "sect5" = Just Sect4_Renderas_Sect5
	    translate _ = Nothing
    toAttrFrTyp n Sect4_Renderas_Sect1 = Just (n, str2attr "sect1")
    toAttrFrTyp n Sect4_Renderas_Sect2 = Just (n, str2attr "sect2")
    toAttrFrTyp n Sect4_Renderas_Sect3 = Just (n, str2attr "sect3")
    toAttrFrTyp n Sect4_Renderas_Sect5 = Just (n, str2attr "sect5")
instance XmlAttrType Sect4_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Sect4_Revisionflag_Changed
	    translate "added" = Just Sect4_Revisionflag_Added
	    translate "deleted" = Just Sect4_Revisionflag_Deleted
	    translate "off" = Just Sect4_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Sect4_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Sect4_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Sect4_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Sect4_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Sect5 where
    fromElem (CElem (Elem "sect5" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (\(f,cf)->
			  (\(g,cg)->
			     (Just (Sect5 (fromAttrs as) a b c d e f g), rest))
			  (many fromElem cf))
		       (definite fromElem "OneOf" "sect5" ce))
		    (many fromElem cd))
		 (fromElem cc))
	      (fromElem cb))
	   (definite fromElem "<title>" "sect5" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Sect5 as a b c d e f g) =
	[CElem (Elem "sect5" (toAttrs as) (maybe [] toElem a ++ toElem b ++
					   maybe [] toElem c ++ maybe [] toElem d ++
					   concatMap toElem e ++ toElem f ++ concatMap toElem g))]
instance XmlAttributes Sect5_Attrs where
    fromAttrs as =
	Sect5_Attrs
	  { sect5Renderas = possibleA fromAttrToTyp "renderas" as
	  , sect5Label = possibleA fromAttrToStr "label" as
	  , sect5Status = possibleA fromAttrToStr "status" as
	  , sect5Id = possibleA fromAttrToStr "id" as
	  , sect5Lang = possibleA fromAttrToStr "lang" as
	  , sect5Remap = possibleA fromAttrToStr "remap" as
	  , sect5Xreflabel = possibleA fromAttrToStr "xreflabel" as
	  , sect5Revisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , sect5Arch = possibleA fromAttrToStr "arch" as
	  , sect5Condition = possibleA fromAttrToStr "condition" as
	  , sect5Conformance = possibleA fromAttrToStr "conformance" as
	  , sect5Os = possibleA fromAttrToStr "os" as
	  , sect5Revision = possibleA fromAttrToStr "revision" as
	  , sect5Security = possibleA fromAttrToStr "security" as
	  , sect5Userlevel = possibleA fromAttrToStr "userlevel" as
	  , sect5Vendor = possibleA fromAttrToStr "vendor" as
	  , sect5Role = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "renderas" (sect5Renderas v)
	, maybeToAttr toAttrFrStr "label" (sect5Label v)
	, maybeToAttr toAttrFrStr "status" (sect5Status v)
	, maybeToAttr toAttrFrStr "id" (sect5Id v)
	, maybeToAttr toAttrFrStr "lang" (sect5Lang v)
	, maybeToAttr toAttrFrStr "remap" (sect5Remap v)
	, maybeToAttr toAttrFrStr "xreflabel" (sect5Xreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (sect5Revisionflag v)
	, maybeToAttr toAttrFrStr "arch" (sect5Arch v)
	, maybeToAttr toAttrFrStr "condition" (sect5Condition v)
	, maybeToAttr toAttrFrStr "conformance" (sect5Conformance v)
	, maybeToAttr toAttrFrStr "os" (sect5Os v)
	, maybeToAttr toAttrFrStr "revision" (sect5Revision v)
	, maybeToAttr toAttrFrStr "security" (sect5Security v)
	, maybeToAttr toAttrFrStr "userlevel" (sect5Userlevel v)
	, maybeToAttr toAttrFrStr "vendor" (sect5Vendor v)
	, maybeToAttr toAttrFrStr "role" (sect5Role v)
	]
instance XmlAttrType Sect5_Renderas where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "sect1" = Just Sect5_Renderas_Sect1
	    translate "sect2" = Just Sect5_Renderas_Sect2
	    translate "sect3" = Just Sect5_Renderas_Sect3
	    translate "sect4" = Just Sect5_Renderas_Sect4
	    translate _ = Nothing
    toAttrFrTyp n Sect5_Renderas_Sect1 = Just (n, str2attr "sect1")
    toAttrFrTyp n Sect5_Renderas_Sect2 = Just (n, str2attr "sect2")
    toAttrFrTyp n Sect5_Renderas_Sect3 = Just (n, str2attr "sect3")
    toAttrFrTyp n Sect5_Renderas_Sect4 = Just (n, str2attr "sect4")
instance XmlAttrType Sect5_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Sect5_Revisionflag_Changed
	    translate "added" = Just Sect5_Revisionflag_Added
	    translate "deleted" = Just Sect5_Revisionflag_Deleted
	    translate "off" = Just Sect5_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Sect5_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Sect5_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Sect5_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Sect5_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Simplesect where
    fromElem (CElem (Elem "simplesect" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Simplesect (fromAttrs as) a b c d), rest))
		 (many fromElem cc))
	      (fromElem cb))
	   (fromElem ca))
	(definite fromElem "<title>" "simplesect" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Simplesect as a b c d) =
	[CElem (Elem "simplesect" (toAttrs as) (toElem a ++
						maybe [] toElem b ++ maybe [] toElem c ++
						concatMap toElem d))]
instance XmlAttributes Simplesect_Attrs where
    fromAttrs as =
	Simplesect_Attrs
	  { simplesectId = possibleA fromAttrToStr "id" as
	  , simplesectLang = possibleA fromAttrToStr "lang" as
	  , simplesectRemap = possibleA fromAttrToStr "remap" as
	  , simplesectXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , simplesectRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , simplesectArch = possibleA fromAttrToStr "arch" as
	  , simplesectCondition = possibleA fromAttrToStr "condition" as
	  , simplesectConformance = possibleA fromAttrToStr "conformance" as
	  , simplesectOs = possibleA fromAttrToStr "os" as
	  , simplesectRevision = possibleA fromAttrToStr "revision" as
	  , simplesectSecurity = possibleA fromAttrToStr "security" as
	  , simplesectUserlevel = possibleA fromAttrToStr "userlevel" as
	  , simplesectVendor = possibleA fromAttrToStr "vendor" as
	  , simplesectRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (simplesectId v)
	, maybeToAttr toAttrFrStr "lang" (simplesectLang v)
	, maybeToAttr toAttrFrStr "remap" (simplesectRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (simplesectXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (simplesectRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (simplesectArch v)
	, maybeToAttr toAttrFrStr "condition" (simplesectCondition v)
	, maybeToAttr toAttrFrStr "conformance" (simplesectConformance v)
	, maybeToAttr toAttrFrStr "os" (simplesectOs v)
	, maybeToAttr toAttrFrStr "revision" (simplesectRevision v)
	, maybeToAttr toAttrFrStr "security" (simplesectSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (simplesectUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (simplesectVendor v)
	, maybeToAttr toAttrFrStr "role" (simplesectRole v)
	]
instance XmlAttrType Simplesect_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Simplesect_Revisionflag_Changed
	    translate "added" = Just Simplesect_Revisionflag_Added
	    translate "deleted" = Just Simplesect_Revisionflag_Deleted
	    translate "off" = Just Simplesect_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Simplesect_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Simplesect_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Simplesect_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Simplesect_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Bibliography where
    fromElem (CElem (Elem "bibliography" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Bibliography (fromAttrs as) a b c d), rest))
		 (definite fromElem "OneOf" "bibliography" cc))
	      (many fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bibliography as a b c d) =
	[CElem (Elem "bibliography" (toAttrs as) (maybe [] toElem a ++
						  maybe [] toElem b ++ concatMap toElem c ++
						  toElem d))]
instance XmlAttributes Bibliography_Attrs where
    fromAttrs as =
	Bibliography_Attrs
	  { bibliographyStatus = possibleA fromAttrToStr "status" as
	  , bibliographyId = possibleA fromAttrToStr "id" as
	  , bibliographyLang = possibleA fromAttrToStr "lang" as
	  , bibliographyRemap = possibleA fromAttrToStr "remap" as
	  , bibliographyXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , bibliographyRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , bibliographyArch = possibleA fromAttrToStr "arch" as
	  , bibliographyCondition = possibleA fromAttrToStr "condition" as
	  , bibliographyConformance = possibleA fromAttrToStr "conformance" as
	  , bibliographyOs = possibleA fromAttrToStr "os" as
	  , bibliographyRevision = possibleA fromAttrToStr "revision" as
	  , bibliographySecurity = possibleA fromAttrToStr "security" as
	  , bibliographyUserlevel = possibleA fromAttrToStr "userlevel" as
	  , bibliographyVendor = possibleA fromAttrToStr "vendor" as
	  , bibliographyRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "status" (bibliographyStatus v)
	, maybeToAttr toAttrFrStr "id" (bibliographyId v)
	, maybeToAttr toAttrFrStr "lang" (bibliographyLang v)
	, maybeToAttr toAttrFrStr "remap" (bibliographyRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (bibliographyXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (bibliographyRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (bibliographyArch v)
	, maybeToAttr toAttrFrStr "condition" (bibliographyCondition v)
	, maybeToAttr toAttrFrStr "conformance" (bibliographyConformance v)
	, maybeToAttr toAttrFrStr "os" (bibliographyOs v)
	, maybeToAttr toAttrFrStr "revision" (bibliographyRevision v)
	, maybeToAttr toAttrFrStr "security" (bibliographySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (bibliographyUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (bibliographyVendor v)
	, maybeToAttr toAttrFrStr "role" (bibliographyRole v)
	]
instance XmlAttrType Bibliography_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Bibliography_Revisionflag_Changed
	    translate "added" = Just Bibliography_Revisionflag_Added
	    translate "deleted" = Just Bibliography_Revisionflag_Deleted
	    translate "off" = Just Bibliography_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Bibliography_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Bibliography_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Bibliography_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Bibliography_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Bibliodiv where
    fromElem (CElem (Elem "bibliodiv" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Bibliodiv (fromAttrs as) a b c), rest))
	      (many fromElem cb))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Bibliodiv as a b c) =
	[CElem (Elem "bibliodiv" (toAttrs as) (maybe [] toElem a ++
					       concatMap toElem b ++ concatMap toElem c))]
instance XmlAttributes Bibliodiv_Attrs where
    fromAttrs as =
	Bibliodiv_Attrs
	  { bibliodivStatus = possibleA fromAttrToStr "status" as
	  , bibliodivId = possibleA fromAttrToStr "id" as
	  , bibliodivLang = possibleA fromAttrToStr "lang" as
	  , bibliodivRemap = possibleA fromAttrToStr "remap" as
	  , bibliodivXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , bibliodivRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , bibliodivArch = possibleA fromAttrToStr "arch" as
	  , bibliodivCondition = possibleA fromAttrToStr "condition" as
	  , bibliodivConformance = possibleA fromAttrToStr "conformance" as
	  , bibliodivOs = possibleA fromAttrToStr "os" as
	  , bibliodivRevision = possibleA fromAttrToStr "revision" as
	  , bibliodivSecurity = possibleA fromAttrToStr "security" as
	  , bibliodivUserlevel = possibleA fromAttrToStr "userlevel" as
	  , bibliodivVendor = possibleA fromAttrToStr "vendor" as
	  , bibliodivRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "status" (bibliodivStatus v)
	, maybeToAttr toAttrFrStr "id" (bibliodivId v)
	, maybeToAttr toAttrFrStr "lang" (bibliodivLang v)
	, maybeToAttr toAttrFrStr "remap" (bibliodivRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (bibliodivXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (bibliodivRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (bibliodivArch v)
	, maybeToAttr toAttrFrStr "condition" (bibliodivCondition v)
	, maybeToAttr toAttrFrStr "conformance" (bibliodivConformance v)
	, maybeToAttr toAttrFrStr "os" (bibliodivOs v)
	, maybeToAttr toAttrFrStr "revision" (bibliodivRevision v)
	, maybeToAttr toAttrFrStr "security" (bibliodivSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (bibliodivUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (bibliodivVendor v)
	, maybeToAttr toAttrFrStr "role" (bibliodivRole v)
	]
instance XmlAttrType Bibliodiv_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Bibliodiv_Revisionflag_Changed
	    translate "added" = Just Bibliodiv_Revisionflag_Added
	    translate "deleted" = Just Bibliodiv_Revisionflag_Deleted
	    translate "off" = Just Bibliodiv_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Bibliodiv_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Bibliodiv_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Bibliodiv_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Bibliodiv_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Glossary where
    fromElem (CElem (Elem "glossary" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (Just (Glossary (fromAttrs as) a b c d e), rest))
		    (fromElem cd))
		 (definite fromElem "OneOf" "glossary" cc))
	      (many fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Glossary as a b c d e) =
	[CElem (Elem "glossary" (toAttrs as) (maybe [] toElem a ++
					      maybe [] toElem b ++ concatMap toElem c ++ toElem d ++
					      maybe [] toElem e))]
instance XmlAttributes Glossary_Attrs where
    fromAttrs as =
	Glossary_Attrs
	  { glossaryStatus = possibleA fromAttrToStr "status" as
	  , glossaryId = possibleA fromAttrToStr "id" as
	  , glossaryLang = possibleA fromAttrToStr "lang" as
	  , glossaryRemap = possibleA fromAttrToStr "remap" as
	  , glossaryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , glossaryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , glossaryArch = possibleA fromAttrToStr "arch" as
	  , glossaryCondition = possibleA fromAttrToStr "condition" as
	  , glossaryConformance = possibleA fromAttrToStr "conformance" as
	  , glossaryOs = possibleA fromAttrToStr "os" as
	  , glossaryRevision = possibleA fromAttrToStr "revision" as
	  , glossarySecurity = possibleA fromAttrToStr "security" as
	  , glossaryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , glossaryVendor = possibleA fromAttrToStr "vendor" as
	  , glossaryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "status" (glossaryStatus v)
	, maybeToAttr toAttrFrStr "id" (glossaryId v)
	, maybeToAttr toAttrFrStr "lang" (glossaryLang v)
	, maybeToAttr toAttrFrStr "remap" (glossaryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (glossaryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (glossaryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (glossaryArch v)
	, maybeToAttr toAttrFrStr "condition" (glossaryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (glossaryConformance v)
	, maybeToAttr toAttrFrStr "os" (glossaryOs v)
	, maybeToAttr toAttrFrStr "revision" (glossaryRevision v)
	, maybeToAttr toAttrFrStr "security" (glossarySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (glossaryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (glossaryVendor v)
	, maybeToAttr toAttrFrStr "role" (glossaryRole v)
	]
instance XmlAttrType Glossary_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Glossary_Revisionflag_Changed
	    translate "added" = Just Glossary_Revisionflag_Added
	    translate "deleted" = Just Glossary_Revisionflag_Deleted
	    translate "off" = Just Glossary_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Glossary_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Glossary_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Glossary_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Glossary_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Glossdiv where
    fromElem (CElem (Elem "glossdiv" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (Just (Glossdiv (fromAttrs as) a b c d e), rest))
		    (many fromElem cd))
		 (many fromElem cc))
	      (fromElem cb))
	   (fromElem ca))
	(definite fromElem "<title>" "glossdiv" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Glossdiv as a b c d e) =
	[CElem (Elem "glossdiv" (toAttrs as) (toElem a ++ maybe [] toElem b
					      ++ maybe [] toElem c ++ concatMap toElem d ++
					      concatMap toElem e))]
instance XmlAttributes Glossdiv_Attrs where
    fromAttrs as =
	Glossdiv_Attrs
	  { glossdivStatus = possibleA fromAttrToStr "status" as
	  , glossdivId = possibleA fromAttrToStr "id" as
	  , glossdivLang = possibleA fromAttrToStr "lang" as
	  , glossdivRemap = possibleA fromAttrToStr "remap" as
	  , glossdivXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , glossdivRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , glossdivArch = possibleA fromAttrToStr "arch" as
	  , glossdivCondition = possibleA fromAttrToStr "condition" as
	  , glossdivConformance = possibleA fromAttrToStr "conformance" as
	  , glossdivOs = possibleA fromAttrToStr "os" as
	  , glossdivRevision = possibleA fromAttrToStr "revision" as
	  , glossdivSecurity = possibleA fromAttrToStr "security" as
	  , glossdivUserlevel = possibleA fromAttrToStr "userlevel" as
	  , glossdivVendor = possibleA fromAttrToStr "vendor" as
	  , glossdivRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "status" (glossdivStatus v)
	, maybeToAttr toAttrFrStr "id" (glossdivId v)
	, maybeToAttr toAttrFrStr "lang" (glossdivLang v)
	, maybeToAttr toAttrFrStr "remap" (glossdivRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (glossdivXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (glossdivRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (glossdivArch v)
	, maybeToAttr toAttrFrStr "condition" (glossdivCondition v)
	, maybeToAttr toAttrFrStr "conformance" (glossdivConformance v)
	, maybeToAttr toAttrFrStr "os" (glossdivOs v)
	, maybeToAttr toAttrFrStr "revision" (glossdivRevision v)
	, maybeToAttr toAttrFrStr "security" (glossdivSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (glossdivUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (glossdivVendor v)
	, maybeToAttr toAttrFrStr "role" (glossdivRole v)
	]
instance XmlAttrType Glossdiv_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Glossdiv_Revisionflag_Changed
	    translate "added" = Just Glossdiv_Revisionflag_Added
	    translate "deleted" = Just Glossdiv_Revisionflag_Deleted
	    translate "off" = Just Glossdiv_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Glossdiv_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Glossdiv_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Glossdiv_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Glossdiv_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Index where
    fromElem (CElem (Elem "index" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Index (fromAttrs as) a b c d), rest))
		 (definite fromElem "OneOf" "index" cc))
	      (many fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Index as a b c d) =
	[CElem (Elem "index" (toAttrs as) (maybe [] toElem a ++
					   maybe [] toElem b ++ concatMap toElem c ++ toElem d))]
instance XmlAttributes Index_Attrs where
    fromAttrs as =
	Index_Attrs
	  { indexId = possibleA fromAttrToStr "id" as
	  , indexLang = possibleA fromAttrToStr "lang" as
	  , indexRemap = possibleA fromAttrToStr "remap" as
	  , indexXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , indexRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , indexArch = possibleA fromAttrToStr "arch" as
	  , indexCondition = possibleA fromAttrToStr "condition" as
	  , indexConformance = possibleA fromAttrToStr "conformance" as
	  , indexOs = possibleA fromAttrToStr "os" as
	  , indexRevision = possibleA fromAttrToStr "revision" as
	  , indexSecurity = possibleA fromAttrToStr "security" as
	  , indexUserlevel = possibleA fromAttrToStr "userlevel" as
	  , indexVendor = possibleA fromAttrToStr "vendor" as
	  , indexRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (indexId v)
	, maybeToAttr toAttrFrStr "lang" (indexLang v)
	, maybeToAttr toAttrFrStr "remap" (indexRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (indexXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (indexRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (indexArch v)
	, maybeToAttr toAttrFrStr "condition" (indexCondition v)
	, maybeToAttr toAttrFrStr "conformance" (indexConformance v)
	, maybeToAttr toAttrFrStr "os" (indexOs v)
	, maybeToAttr toAttrFrStr "revision" (indexRevision v)
	, maybeToAttr toAttrFrStr "security" (indexSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (indexUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (indexVendor v)
	, maybeToAttr toAttrFrStr "role" (indexRole v)
	]
instance XmlAttrType Index_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Index_Revisionflag_Changed
	    translate "added" = Just Index_Revisionflag_Added
	    translate "deleted" = Just Index_Revisionflag_Deleted
	    translate "off" = Just Index_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Index_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Index_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Index_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Index_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Setindex where
    fromElem (CElem (Elem "setindex" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (Just (Setindex (fromAttrs as) a b c d), rest))
		 (definite fromElem "OneOf" "setindex" cc))
	      (many fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Setindex as a b c d) =
	[CElem (Elem "setindex" (toAttrs as) (maybe [] toElem a ++
					      maybe [] toElem b ++ concatMap toElem c ++ toElem d))]
instance XmlAttributes Setindex_Attrs where
    fromAttrs as =
	Setindex_Attrs
	  { setindexId = possibleA fromAttrToStr "id" as
	  , setindexLang = possibleA fromAttrToStr "lang" as
	  , setindexRemap = possibleA fromAttrToStr "remap" as
	  , setindexXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , setindexRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , setindexArch = possibleA fromAttrToStr "arch" as
	  , setindexCondition = possibleA fromAttrToStr "condition" as
	  , setindexConformance = possibleA fromAttrToStr "conformance" as
	  , setindexOs = possibleA fromAttrToStr "os" as
	  , setindexRevision = possibleA fromAttrToStr "revision" as
	  , setindexSecurity = possibleA fromAttrToStr "security" as
	  , setindexUserlevel = possibleA fromAttrToStr "userlevel" as
	  , setindexVendor = possibleA fromAttrToStr "vendor" as
	  , setindexRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (setindexId v)
	, maybeToAttr toAttrFrStr "lang" (setindexLang v)
	, maybeToAttr toAttrFrStr "remap" (setindexRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (setindexXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (setindexRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (setindexArch v)
	, maybeToAttr toAttrFrStr "condition" (setindexCondition v)
	, maybeToAttr toAttrFrStr "conformance" (setindexConformance v)
	, maybeToAttr toAttrFrStr "os" (setindexOs v)
	, maybeToAttr toAttrFrStr "revision" (setindexRevision v)
	, maybeToAttr toAttrFrStr "security" (setindexSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (setindexUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (setindexVendor v)
	, maybeToAttr toAttrFrStr "role" (setindexRole v)
	]
instance XmlAttrType Setindex_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Setindex_Revisionflag_Changed
	    translate "added" = Just Setindex_Revisionflag_Added
	    translate "deleted" = Just Setindex_Revisionflag_Deleted
	    translate "off" = Just Setindex_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Setindex_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Setindex_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Setindex_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Setindex_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Indexdiv where
    fromElem (CElem (Elem "indexdiv" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Indexdiv (fromAttrs as) a b c), rest))
	      (definite fromElem "OneOf" "indexdiv" cb))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Indexdiv as a b c) =
	[CElem (Elem "indexdiv" (toAttrs as) (maybe [] toElem a ++
					      concatMap toElem b ++ toElem c))]
instance XmlAttributes Indexdiv_Attrs where
    fromAttrs as =
	Indexdiv_Attrs
	  { indexdivId = possibleA fromAttrToStr "id" as
	  , indexdivLang = possibleA fromAttrToStr "lang" as
	  , indexdivRemap = possibleA fromAttrToStr "remap" as
	  , indexdivXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , indexdivRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , indexdivArch = possibleA fromAttrToStr "arch" as
	  , indexdivCondition = possibleA fromAttrToStr "condition" as
	  , indexdivConformance = possibleA fromAttrToStr "conformance" as
	  , indexdivOs = possibleA fromAttrToStr "os" as
	  , indexdivRevision = possibleA fromAttrToStr "revision" as
	  , indexdivSecurity = possibleA fromAttrToStr "security" as
	  , indexdivUserlevel = possibleA fromAttrToStr "userlevel" as
	  , indexdivVendor = possibleA fromAttrToStr "vendor" as
	  , indexdivRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (indexdivId v)
	, maybeToAttr toAttrFrStr "lang" (indexdivLang v)
	, maybeToAttr toAttrFrStr "remap" (indexdivRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (indexdivXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (indexdivRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (indexdivArch v)
	, maybeToAttr toAttrFrStr "condition" (indexdivCondition v)
	, maybeToAttr toAttrFrStr "conformance" (indexdivConformance v)
	, maybeToAttr toAttrFrStr "os" (indexdivOs v)
	, maybeToAttr toAttrFrStr "revision" (indexdivRevision v)
	, maybeToAttr toAttrFrStr "security" (indexdivSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (indexdivUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (indexdivVendor v)
	, maybeToAttr toAttrFrStr "role" (indexdivRole v)
	]
instance XmlAttrType Indexdiv_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Indexdiv_Revisionflag_Changed
	    translate "added" = Just Indexdiv_Revisionflag_Added
	    translate "deleted" = Just Indexdiv_Revisionflag_Deleted
	    translate "off" = Just Indexdiv_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Indexdiv_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Indexdiv_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Indexdiv_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Indexdiv_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Indexentry where
    fromElem (CElem (Elem "indexentry" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Indexentry (fromAttrs as) a b c), rest))
	      (many fromElem cb))
	   (many fromElem ca))
	(definite fromElem "<primaryie>" "indexentry" c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Indexentry as a b c) =
	[CElem (Elem "indexentry" (toAttrs as) (toElem a ++
						concatMap toElem b ++ concatMap toElem c))]
instance XmlAttributes Indexentry_Attrs where
    fromAttrs as =
	Indexentry_Attrs
	  { indexentryId = possibleA fromAttrToStr "id" as
	  , indexentryLang = possibleA fromAttrToStr "lang" as
	  , indexentryRemap = possibleA fromAttrToStr "remap" as
	  , indexentryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , indexentryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , indexentryArch = possibleA fromAttrToStr "arch" as
	  , indexentryCondition = possibleA fromAttrToStr "condition" as
	  , indexentryConformance = possibleA fromAttrToStr "conformance" as
	  , indexentryOs = possibleA fromAttrToStr "os" as
	  , indexentryRevision = possibleA fromAttrToStr "revision" as
	  , indexentrySecurity = possibleA fromAttrToStr "security" as
	  , indexentryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , indexentryVendor = possibleA fromAttrToStr "vendor" as
	  , indexentryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (indexentryId v)
	, maybeToAttr toAttrFrStr "lang" (indexentryLang v)
	, maybeToAttr toAttrFrStr "remap" (indexentryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (indexentryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (indexentryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (indexentryArch v)
	, maybeToAttr toAttrFrStr "condition" (indexentryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (indexentryConformance v)
	, maybeToAttr toAttrFrStr "os" (indexentryOs v)
	, maybeToAttr toAttrFrStr "revision" (indexentryRevision v)
	, maybeToAttr toAttrFrStr "security" (indexentrySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (indexentryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (indexentryVendor v)
	, maybeToAttr toAttrFrStr "role" (indexentryRole v)
	]
instance XmlAttrType Indexentry_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Indexentry_Revisionflag_Changed
	    translate "added" = Just Indexentry_Revisionflag_Added
	    translate "deleted" = Just Indexentry_Revisionflag_Deleted
	    translate "off" = Just Indexentry_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Indexentry_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Indexentry_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Indexentry_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Indexentry_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Primaryie where
    fromElem (CElem (Elem "primaryie" as c0):rest) =
	(\(a,ca)->
	   (Just (Primaryie (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Primaryie as a) =
	[CElem (Elem "primaryie" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Primaryie_Attrs where
    fromAttrs as =
	Primaryie_Attrs
	  { primaryieLinkends = possibleA fromAttrToStr "linkends" as
	  , primaryieId = possibleA fromAttrToStr "id" as
	  , primaryieLang = possibleA fromAttrToStr "lang" as
	  , primaryieRemap = possibleA fromAttrToStr "remap" as
	  , primaryieXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , primaryieRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , primaryieArch = possibleA fromAttrToStr "arch" as
	  , primaryieCondition = possibleA fromAttrToStr "condition" as
	  , primaryieConformance = possibleA fromAttrToStr "conformance" as
	  , primaryieOs = possibleA fromAttrToStr "os" as
	  , primaryieRevision = possibleA fromAttrToStr "revision" as
	  , primaryieSecurity = possibleA fromAttrToStr "security" as
	  , primaryieUserlevel = possibleA fromAttrToStr "userlevel" as
	  , primaryieVendor = possibleA fromAttrToStr "vendor" as
	  , primaryieRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "linkends" (primaryieLinkends v)
	, maybeToAttr toAttrFrStr "id" (primaryieId v)
	, maybeToAttr toAttrFrStr "lang" (primaryieLang v)
	, maybeToAttr toAttrFrStr "remap" (primaryieRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (primaryieXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (primaryieRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (primaryieArch v)
	, maybeToAttr toAttrFrStr "condition" (primaryieCondition v)
	, maybeToAttr toAttrFrStr "conformance" (primaryieConformance v)
	, maybeToAttr toAttrFrStr "os" (primaryieOs v)
	, maybeToAttr toAttrFrStr "revision" (primaryieRevision v)
	, maybeToAttr toAttrFrStr "security" (primaryieSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (primaryieUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (primaryieVendor v)
	, maybeToAttr toAttrFrStr "role" (primaryieRole v)
	]
instance XmlContent Primaryie_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Primaryie_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Primaryie_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Primaryie_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Primaryie_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Primaryie_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Primaryie_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Primaryie_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Primaryie_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Primaryie_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Primaryie_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Primaryie_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Primaryie_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Primaryie_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Primaryie_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Primaryie_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Primaryie_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Primaryie_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Primaryie_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Primaryie_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Primaryie_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Primaryie_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Primaryie_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Primaryie_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Primaryie_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Primaryie_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Primaryie_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Primaryie_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Primaryie_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Primaryie_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Primaryie_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Primaryie_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Primaryie_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Primaryie_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Primaryie_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Primaryie_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Primaryie_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Primaryie_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Primaryie_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Primaryie_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Primaryie_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Primaryie_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Primaryie_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Primaryie_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Primaryie_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Primaryie_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Primaryie_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Primaryie_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Primaryie_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Primaryie_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Primaryie_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Primaryie_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Primaryie_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Primaryie_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Primaryie_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Primaryie_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Primaryie_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Primaryie_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Primaryie_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Primaryie_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Primaryie_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Primaryie_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Primaryie_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Primaryie_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Primaryie_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Primaryie_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Primaryie_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Primaryie_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Primaryie_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Primaryie_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Primaryie_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Primaryie_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Primaryie_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Primaryie_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Primaryie_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Primaryie_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Primaryie_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Primaryie_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Primaryie_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Primaryie_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Primaryie_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Primaryie_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Primaryie_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Primaryie_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Primaryie_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Primaryie_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Primaryie_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Primaryie_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Primaryie_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Primaryie_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																									    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Primaryie_Str a) = toText a
    toElem (Primaryie_Footnoteref a) = toElem a
    toElem (Primaryie_Xref a) = toElem a
    toElem (Primaryie_Abbrev a) = toElem a
    toElem (Primaryie_Acronym a) = toElem a
    toElem (Primaryie_Citation a) = toElem a
    toElem (Primaryie_Citerefentry a) = toElem a
    toElem (Primaryie_Citetitle a) = toElem a
    toElem (Primaryie_Emphasis a) = toElem a
    toElem (Primaryie_Firstterm a) = toElem a
    toElem (Primaryie_Foreignphrase a) = toElem a
    toElem (Primaryie_Glossterm a) = toElem a
    toElem (Primaryie_Footnote a) = toElem a
    toElem (Primaryie_Phrase a) = toElem a
    toElem (Primaryie_Quote a) = toElem a
    toElem (Primaryie_Trademark a) = toElem a
    toElem (Primaryie_Wordasword a) = toElem a
    toElem (Primaryie_Personname a) = toElem a
    toElem (Primaryie_Link a) = toElem a
    toElem (Primaryie_Olink a) = toElem a
    toElem (Primaryie_Ulink a) = toElem a
    toElem (Primaryie_Action a) = toElem a
    toElem (Primaryie_Application a) = toElem a
    toElem (Primaryie_Classname a) = toElem a
    toElem (Primaryie_Methodname a) = toElem a
    toElem (Primaryie_Interfacename a) = toElem a
    toElem (Primaryie_Exceptionname a) = toElem a
    toElem (Primaryie_Ooclass a) = toElem a
    toElem (Primaryie_Oointerface a) = toElem a
    toElem (Primaryie_Ooexception a) = toElem a
    toElem (Primaryie_Command a) = toElem a
    toElem (Primaryie_Computeroutput a) = toElem a
    toElem (Primaryie_Database a) = toElem a
    toElem (Primaryie_Email a) = toElem a
    toElem (Primaryie_Envar a) = toElem a
    toElem (Primaryie_Errorcode a) = toElem a
    toElem (Primaryie_Errorname a) = toElem a
    toElem (Primaryie_Errortype a) = toElem a
    toElem (Primaryie_Errortext a) = toElem a
    toElem (Primaryie_Filename a) = toElem a
    toElem (Primaryie_Function a) = toElem a
    toElem (Primaryie_Guibutton a) = toElem a
    toElem (Primaryie_Guiicon a) = toElem a
    toElem (Primaryie_Guilabel a) = toElem a
    toElem (Primaryie_Guimenu a) = toElem a
    toElem (Primaryie_Guimenuitem a) = toElem a
    toElem (Primaryie_Guisubmenu a) = toElem a
    toElem (Primaryie_Hardware a) = toElem a
    toElem (Primaryie_Interface a) = toElem a
    toElem (Primaryie_Keycap a) = toElem a
    toElem (Primaryie_Keycode a) = toElem a
    toElem (Primaryie_Keycombo a) = toElem a
    toElem (Primaryie_Keysym a) = toElem a
    toElem (Primaryie_Literal a) = toElem a
    toElem (Primaryie_Constant a) = toElem a
    toElem (Primaryie_Markup a) = toElem a
    toElem (Primaryie_Medialabel a) = toElem a
    toElem (Primaryie_Menuchoice a) = toElem a
    toElem (Primaryie_Mousebutton a) = toElem a
    toElem (Primaryie_Option a) = toElem a
    toElem (Primaryie_Optional a) = toElem a
    toElem (Primaryie_Parameter a) = toElem a
    toElem (Primaryie_Prompt a) = toElem a
    toElem (Primaryie_Property a) = toElem a
    toElem (Primaryie_Replaceable a) = toElem a
    toElem (Primaryie_Returnvalue a) = toElem a
    toElem (Primaryie_Sgmltag a) = toElem a
    toElem (Primaryie_Structfield a) = toElem a
    toElem (Primaryie_Structname a) = toElem a
    toElem (Primaryie_Symbol a) = toElem a
    toElem (Primaryie_Systemitem a) = toElem a
    toElem (Primaryie_Token a) = toElem a
    toElem (Primaryie_Type a) = toElem a
    toElem (Primaryie_Userinput a) = toElem a
    toElem (Primaryie_Varname a) = toElem a
    toElem (Primaryie_Anchor a) = toElem a
    toElem (Primaryie_Author a) = toElem a
    toElem (Primaryie_Authorinitials a) = toElem a
    toElem (Primaryie_Corpauthor a) = toElem a
    toElem (Primaryie_Modespec a) = toElem a
    toElem (Primaryie_Othercredit a) = toElem a
    toElem (Primaryie_Productname a) = toElem a
    toElem (Primaryie_Productnumber a) = toElem a
    toElem (Primaryie_Revhistory a) = toElem a
    toElem (Primaryie_Remark a) = toElem a
    toElem (Primaryie_Subscript a) = toElem a
    toElem (Primaryie_Superscript a) = toElem a
    toElem (Primaryie_Inlinegraphic a) = toElem a
    toElem (Primaryie_Inlinemediaobject a) = toElem a
instance XmlAttrType Primaryie_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Primaryie_Revisionflag_Changed
	    translate "added" = Just Primaryie_Revisionflag_Added
	    translate "deleted" = Just Primaryie_Revisionflag_Deleted
	    translate "off" = Just Primaryie_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Primaryie_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Primaryie_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Primaryie_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Primaryie_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Secondaryie where
    fromElem (CElem (Elem "secondaryie" as c0):rest) =
	(\(a,ca)->
	   (Just (Secondaryie (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Secondaryie as a) =
	[CElem (Elem "secondaryie" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Secondaryie_Attrs where
    fromAttrs as =
	Secondaryie_Attrs
	  { secondaryieLinkends = possibleA fromAttrToStr "linkends" as
	  , secondaryieId = possibleA fromAttrToStr "id" as
	  , secondaryieLang = possibleA fromAttrToStr "lang" as
	  , secondaryieRemap = possibleA fromAttrToStr "remap" as
	  , secondaryieXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , secondaryieRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , secondaryieArch = possibleA fromAttrToStr "arch" as
	  , secondaryieCondition = possibleA fromAttrToStr "condition" as
	  , secondaryieConformance = possibleA fromAttrToStr "conformance" as
	  , secondaryieOs = possibleA fromAttrToStr "os" as
	  , secondaryieRevision = possibleA fromAttrToStr "revision" as
	  , secondaryieSecurity = possibleA fromAttrToStr "security" as
	  , secondaryieUserlevel = possibleA fromAttrToStr "userlevel" as
	  , secondaryieVendor = possibleA fromAttrToStr "vendor" as
	  , secondaryieRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "linkends" (secondaryieLinkends v)
	, maybeToAttr toAttrFrStr "id" (secondaryieId v)
	, maybeToAttr toAttrFrStr "lang" (secondaryieLang v)
	, maybeToAttr toAttrFrStr "remap" (secondaryieRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (secondaryieXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (secondaryieRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (secondaryieArch v)
	, maybeToAttr toAttrFrStr "condition" (secondaryieCondition v)
	, maybeToAttr toAttrFrStr "conformance" (secondaryieConformance v)
	, maybeToAttr toAttrFrStr "os" (secondaryieOs v)
	, maybeToAttr toAttrFrStr "revision" (secondaryieRevision v)
	, maybeToAttr toAttrFrStr "security" (secondaryieSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (secondaryieUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (secondaryieVendor v)
	, maybeToAttr toAttrFrStr "role" (secondaryieRole v)
	]
instance XmlContent Secondaryie_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Secondaryie_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Secondaryie_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Secondaryie_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Secondaryie_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Secondaryie_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Secondaryie_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Secondaryie_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Secondaryie_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Secondaryie_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Secondaryie_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Secondaryie_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Secondaryie_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Secondaryie_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Secondaryie_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Secondaryie_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Secondaryie_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Secondaryie_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Secondaryie_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Secondaryie_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Secondaryie_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Secondaryie_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Secondaryie_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Secondaryie_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Secondaryie_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Secondaryie_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Secondaryie_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Secondaryie_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Secondaryie_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Secondaryie_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Secondaryie_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Secondaryie_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Secondaryie_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Secondaryie_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Secondaryie_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Secondaryie_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Secondaryie_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Secondaryie_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Secondaryie_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Secondaryie_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Secondaryie_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Secondaryie_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Secondaryie_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Secondaryie_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Secondaryie_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Secondaryie_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Secondaryie_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Secondaryie_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Secondaryie_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Secondaryie_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Secondaryie_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Secondaryie_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Secondaryie_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Secondaryie_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Secondaryie_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Secondaryie_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Secondaryie_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Secondaryie_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Secondaryie_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Secondaryie_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Secondaryie_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Secondaryie_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Secondaryie_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Secondaryie_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Secondaryie_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Secondaryie_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Secondaryie_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Secondaryie_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Secondaryie_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Secondaryie_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Secondaryie_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Secondaryie_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Secondaryie_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Secondaryie_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Secondaryie_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Secondaryie_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Secondaryie_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Secondaryie_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Secondaryie_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Secondaryie_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Secondaryie_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Secondaryie_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Secondaryie_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Secondaryie_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Secondaryie_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Secondaryie_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Secondaryie_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Secondaryie_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Secondaryie_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Secondaryie_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																									    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Secondaryie_Str a) = toText a
    toElem (Secondaryie_Footnoteref a) = toElem a
    toElem (Secondaryie_Xref a) = toElem a
    toElem (Secondaryie_Abbrev a) = toElem a
    toElem (Secondaryie_Acronym a) = toElem a
    toElem (Secondaryie_Citation a) = toElem a
    toElem (Secondaryie_Citerefentry a) = toElem a
    toElem (Secondaryie_Citetitle a) = toElem a
    toElem (Secondaryie_Emphasis a) = toElem a
    toElem (Secondaryie_Firstterm a) = toElem a
    toElem (Secondaryie_Foreignphrase a) = toElem a
    toElem (Secondaryie_Glossterm a) = toElem a
    toElem (Secondaryie_Footnote a) = toElem a
    toElem (Secondaryie_Phrase a) = toElem a
    toElem (Secondaryie_Quote a) = toElem a
    toElem (Secondaryie_Trademark a) = toElem a
    toElem (Secondaryie_Wordasword a) = toElem a
    toElem (Secondaryie_Personname a) = toElem a
    toElem (Secondaryie_Link a) = toElem a
    toElem (Secondaryie_Olink a) = toElem a
    toElem (Secondaryie_Ulink a) = toElem a
    toElem (Secondaryie_Action a) = toElem a
    toElem (Secondaryie_Application a) = toElem a
    toElem (Secondaryie_Classname a) = toElem a
    toElem (Secondaryie_Methodname a) = toElem a
    toElem (Secondaryie_Interfacename a) = toElem a
    toElem (Secondaryie_Exceptionname a) = toElem a
    toElem (Secondaryie_Ooclass a) = toElem a
    toElem (Secondaryie_Oointerface a) = toElem a
    toElem (Secondaryie_Ooexception a) = toElem a
    toElem (Secondaryie_Command a) = toElem a
    toElem (Secondaryie_Computeroutput a) = toElem a
    toElem (Secondaryie_Database a) = toElem a
    toElem (Secondaryie_Email a) = toElem a
    toElem (Secondaryie_Envar a) = toElem a
    toElem (Secondaryie_Errorcode a) = toElem a
    toElem (Secondaryie_Errorname a) = toElem a
    toElem (Secondaryie_Errortype a) = toElem a
    toElem (Secondaryie_Errortext a) = toElem a
    toElem (Secondaryie_Filename a) = toElem a
    toElem (Secondaryie_Function a) = toElem a
    toElem (Secondaryie_Guibutton a) = toElem a
    toElem (Secondaryie_Guiicon a) = toElem a
    toElem (Secondaryie_Guilabel a) = toElem a
    toElem (Secondaryie_Guimenu a) = toElem a
    toElem (Secondaryie_Guimenuitem a) = toElem a
    toElem (Secondaryie_Guisubmenu a) = toElem a
    toElem (Secondaryie_Hardware a) = toElem a
    toElem (Secondaryie_Interface a) = toElem a
    toElem (Secondaryie_Keycap a) = toElem a
    toElem (Secondaryie_Keycode a) = toElem a
    toElem (Secondaryie_Keycombo a) = toElem a
    toElem (Secondaryie_Keysym a) = toElem a
    toElem (Secondaryie_Literal a) = toElem a
    toElem (Secondaryie_Constant a) = toElem a
    toElem (Secondaryie_Markup a) = toElem a
    toElem (Secondaryie_Medialabel a) = toElem a
    toElem (Secondaryie_Menuchoice a) = toElem a
    toElem (Secondaryie_Mousebutton a) = toElem a
    toElem (Secondaryie_Option a) = toElem a
    toElem (Secondaryie_Optional a) = toElem a
    toElem (Secondaryie_Parameter a) = toElem a
    toElem (Secondaryie_Prompt a) = toElem a
    toElem (Secondaryie_Property a) = toElem a
    toElem (Secondaryie_Replaceable a) = toElem a
    toElem (Secondaryie_Returnvalue a) = toElem a
    toElem (Secondaryie_Sgmltag a) = toElem a
    toElem (Secondaryie_Structfield a) = toElem a
    toElem (Secondaryie_Structname a) = toElem a
    toElem (Secondaryie_Symbol a) = toElem a
    toElem (Secondaryie_Systemitem a) = toElem a
    toElem (Secondaryie_Token a) = toElem a
    toElem (Secondaryie_Type a) = toElem a
    toElem (Secondaryie_Userinput a) = toElem a
    toElem (Secondaryie_Varname a) = toElem a
    toElem (Secondaryie_Anchor a) = toElem a
    toElem (Secondaryie_Author a) = toElem a
    toElem (Secondaryie_Authorinitials a) = toElem a
    toElem (Secondaryie_Corpauthor a) = toElem a
    toElem (Secondaryie_Modespec a) = toElem a
    toElem (Secondaryie_Othercredit a) = toElem a
    toElem (Secondaryie_Productname a) = toElem a
    toElem (Secondaryie_Productnumber a) = toElem a
    toElem (Secondaryie_Revhistory a) = toElem a
    toElem (Secondaryie_Remark a) = toElem a
    toElem (Secondaryie_Subscript a) = toElem a
    toElem (Secondaryie_Superscript a) = toElem a
    toElem (Secondaryie_Inlinegraphic a) = toElem a
    toElem (Secondaryie_Inlinemediaobject a) = toElem a
instance XmlAttrType Secondaryie_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Secondaryie_Revisionflag_Changed
	    translate "added" = Just Secondaryie_Revisionflag_Added
	    translate "deleted" = Just Secondaryie_Revisionflag_Deleted
	    translate "off" = Just Secondaryie_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Secondaryie_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Secondaryie_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Secondaryie_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Secondaryie_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Tertiaryie where
    fromElem (CElem (Elem "tertiaryie" as c0):rest) =
	(\(a,ca)->
	   (Just (Tertiaryie (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Tertiaryie as a) =
	[CElem (Elem "tertiaryie" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Tertiaryie_Attrs where
    fromAttrs as =
	Tertiaryie_Attrs
	  { tertiaryieLinkends = possibleA fromAttrToStr "linkends" as
	  , tertiaryieId = possibleA fromAttrToStr "id" as
	  , tertiaryieLang = possibleA fromAttrToStr "lang" as
	  , tertiaryieRemap = possibleA fromAttrToStr "remap" as
	  , tertiaryieXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , tertiaryieRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , tertiaryieArch = possibleA fromAttrToStr "arch" as
	  , tertiaryieCondition = possibleA fromAttrToStr "condition" as
	  , tertiaryieConformance = possibleA fromAttrToStr "conformance" as
	  , tertiaryieOs = possibleA fromAttrToStr "os" as
	  , tertiaryieRevision = possibleA fromAttrToStr "revision" as
	  , tertiaryieSecurity = possibleA fromAttrToStr "security" as
	  , tertiaryieUserlevel = possibleA fromAttrToStr "userlevel" as
	  , tertiaryieVendor = possibleA fromAttrToStr "vendor" as
	  , tertiaryieRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "linkends" (tertiaryieLinkends v)
	, maybeToAttr toAttrFrStr "id" (tertiaryieId v)
	, maybeToAttr toAttrFrStr "lang" (tertiaryieLang v)
	, maybeToAttr toAttrFrStr "remap" (tertiaryieRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (tertiaryieXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (tertiaryieRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (tertiaryieArch v)
	, maybeToAttr toAttrFrStr "condition" (tertiaryieCondition v)
	, maybeToAttr toAttrFrStr "conformance" (tertiaryieConformance v)
	, maybeToAttr toAttrFrStr "os" (tertiaryieOs v)
	, maybeToAttr toAttrFrStr "revision" (tertiaryieRevision v)
	, maybeToAttr toAttrFrStr "security" (tertiaryieSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (tertiaryieUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (tertiaryieVendor v)
	, maybeToAttr toAttrFrStr "role" (tertiaryieRole v)
	]
instance XmlContent Tertiaryie_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Tertiaryie_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Tertiaryie_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Tertiaryie_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Tertiaryie_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Tertiaryie_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Tertiaryie_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Tertiaryie_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Tertiaryie_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Tertiaryie_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Tertiaryie_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Tertiaryie_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Tertiaryie_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Tertiaryie_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Tertiaryie_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Tertiaryie_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Tertiaryie_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Tertiaryie_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Tertiaryie_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Tertiaryie_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Tertiaryie_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Tertiaryie_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Tertiaryie_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Tertiaryie_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Tertiaryie_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Tertiaryie_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Tertiaryie_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Tertiaryie_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Tertiaryie_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Tertiaryie_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Tertiaryie_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Tertiaryie_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Tertiaryie_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Tertiaryie_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Tertiaryie_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Tertiaryie_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Tertiaryie_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Tertiaryie_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Tertiaryie_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Tertiaryie_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Tertiaryie_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Tertiaryie_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Tertiaryie_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Tertiaryie_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Tertiaryie_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Tertiaryie_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Tertiaryie_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Tertiaryie_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Tertiaryie_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Tertiaryie_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Tertiaryie_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Tertiaryie_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Tertiaryie_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Tertiaryie_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Tertiaryie_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Tertiaryie_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Tertiaryie_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Tertiaryie_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Tertiaryie_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Tertiaryie_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Tertiaryie_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Tertiaryie_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Tertiaryie_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Tertiaryie_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Tertiaryie_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Tertiaryie_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Tertiaryie_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Tertiaryie_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Tertiaryie_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Tertiaryie_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Tertiaryie_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Tertiaryie_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Tertiaryie_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Tertiaryie_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Tertiaryie_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Tertiaryie_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Tertiaryie_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Tertiaryie_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Tertiaryie_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Tertiaryie_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Tertiaryie_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Tertiaryie_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Tertiaryie_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Tertiaryie_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Tertiaryie_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Tertiaryie_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Tertiaryie_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Tertiaryie_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Tertiaryie_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Tertiaryie_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																									    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Tertiaryie_Str a) = toText a
    toElem (Tertiaryie_Footnoteref a) = toElem a
    toElem (Tertiaryie_Xref a) = toElem a
    toElem (Tertiaryie_Abbrev a) = toElem a
    toElem (Tertiaryie_Acronym a) = toElem a
    toElem (Tertiaryie_Citation a) = toElem a
    toElem (Tertiaryie_Citerefentry a) = toElem a
    toElem (Tertiaryie_Citetitle a) = toElem a
    toElem (Tertiaryie_Emphasis a) = toElem a
    toElem (Tertiaryie_Firstterm a) = toElem a
    toElem (Tertiaryie_Foreignphrase a) = toElem a
    toElem (Tertiaryie_Glossterm a) = toElem a
    toElem (Tertiaryie_Footnote a) = toElem a
    toElem (Tertiaryie_Phrase a) = toElem a
    toElem (Tertiaryie_Quote a) = toElem a
    toElem (Tertiaryie_Trademark a) = toElem a
    toElem (Tertiaryie_Wordasword a) = toElem a
    toElem (Tertiaryie_Personname a) = toElem a
    toElem (Tertiaryie_Link a) = toElem a
    toElem (Tertiaryie_Olink a) = toElem a
    toElem (Tertiaryie_Ulink a) = toElem a
    toElem (Tertiaryie_Action a) = toElem a
    toElem (Tertiaryie_Application a) = toElem a
    toElem (Tertiaryie_Classname a) = toElem a
    toElem (Tertiaryie_Methodname a) = toElem a
    toElem (Tertiaryie_Interfacename a) = toElem a
    toElem (Tertiaryie_Exceptionname a) = toElem a
    toElem (Tertiaryie_Ooclass a) = toElem a
    toElem (Tertiaryie_Oointerface a) = toElem a
    toElem (Tertiaryie_Ooexception a) = toElem a
    toElem (Tertiaryie_Command a) = toElem a
    toElem (Tertiaryie_Computeroutput a) = toElem a
    toElem (Tertiaryie_Database a) = toElem a
    toElem (Tertiaryie_Email a) = toElem a
    toElem (Tertiaryie_Envar a) = toElem a
    toElem (Tertiaryie_Errorcode a) = toElem a
    toElem (Tertiaryie_Errorname a) = toElem a
    toElem (Tertiaryie_Errortype a) = toElem a
    toElem (Tertiaryie_Errortext a) = toElem a
    toElem (Tertiaryie_Filename a) = toElem a
    toElem (Tertiaryie_Function a) = toElem a
    toElem (Tertiaryie_Guibutton a) = toElem a
    toElem (Tertiaryie_Guiicon a) = toElem a
    toElem (Tertiaryie_Guilabel a) = toElem a
    toElem (Tertiaryie_Guimenu a) = toElem a
    toElem (Tertiaryie_Guimenuitem a) = toElem a
    toElem (Tertiaryie_Guisubmenu a) = toElem a
    toElem (Tertiaryie_Hardware a) = toElem a
    toElem (Tertiaryie_Interface a) = toElem a
    toElem (Tertiaryie_Keycap a) = toElem a
    toElem (Tertiaryie_Keycode a) = toElem a
    toElem (Tertiaryie_Keycombo a) = toElem a
    toElem (Tertiaryie_Keysym a) = toElem a
    toElem (Tertiaryie_Literal a) = toElem a
    toElem (Tertiaryie_Constant a) = toElem a
    toElem (Tertiaryie_Markup a) = toElem a
    toElem (Tertiaryie_Medialabel a) = toElem a
    toElem (Tertiaryie_Menuchoice a) = toElem a
    toElem (Tertiaryie_Mousebutton a) = toElem a
    toElem (Tertiaryie_Option a) = toElem a
    toElem (Tertiaryie_Optional a) = toElem a
    toElem (Tertiaryie_Parameter a) = toElem a
    toElem (Tertiaryie_Prompt a) = toElem a
    toElem (Tertiaryie_Property a) = toElem a
    toElem (Tertiaryie_Replaceable a) = toElem a
    toElem (Tertiaryie_Returnvalue a) = toElem a
    toElem (Tertiaryie_Sgmltag a) = toElem a
    toElem (Tertiaryie_Structfield a) = toElem a
    toElem (Tertiaryie_Structname a) = toElem a
    toElem (Tertiaryie_Symbol a) = toElem a
    toElem (Tertiaryie_Systemitem a) = toElem a
    toElem (Tertiaryie_Token a) = toElem a
    toElem (Tertiaryie_Type a) = toElem a
    toElem (Tertiaryie_Userinput a) = toElem a
    toElem (Tertiaryie_Varname a) = toElem a
    toElem (Tertiaryie_Anchor a) = toElem a
    toElem (Tertiaryie_Author a) = toElem a
    toElem (Tertiaryie_Authorinitials a) = toElem a
    toElem (Tertiaryie_Corpauthor a) = toElem a
    toElem (Tertiaryie_Modespec a) = toElem a
    toElem (Tertiaryie_Othercredit a) = toElem a
    toElem (Tertiaryie_Productname a) = toElem a
    toElem (Tertiaryie_Productnumber a) = toElem a
    toElem (Tertiaryie_Revhistory a) = toElem a
    toElem (Tertiaryie_Remark a) = toElem a
    toElem (Tertiaryie_Subscript a) = toElem a
    toElem (Tertiaryie_Superscript a) = toElem a
    toElem (Tertiaryie_Inlinegraphic a) = toElem a
    toElem (Tertiaryie_Inlinemediaobject a) = toElem a
instance XmlAttrType Tertiaryie_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Tertiaryie_Revisionflag_Changed
	    translate "added" = Just Tertiaryie_Revisionflag_Added
	    translate "deleted" = Just Tertiaryie_Revisionflag_Deleted
	    translate "off" = Just Tertiaryie_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Tertiaryie_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Tertiaryie_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Tertiaryie_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Tertiaryie_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Seeie where
    fromElem (CElem (Elem "seeie" as c0):rest) =
	(\(a,ca)->
	   (Just (Seeie (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Seeie as a) =
	[CElem (Elem "seeie" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Seeie_Attrs where
    fromAttrs as =
	Seeie_Attrs
	  { seeieLinkend = possibleA fromAttrToStr "linkend" as
	  , seeieId = possibleA fromAttrToStr "id" as
	  , seeieLang = possibleA fromAttrToStr "lang" as
	  , seeieRemap = possibleA fromAttrToStr "remap" as
	  , seeieXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , seeieRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , seeieArch = possibleA fromAttrToStr "arch" as
	  , seeieCondition = possibleA fromAttrToStr "condition" as
	  , seeieConformance = possibleA fromAttrToStr "conformance" as
	  , seeieOs = possibleA fromAttrToStr "os" as
	  , seeieRevision = possibleA fromAttrToStr "revision" as
	  , seeieSecurity = possibleA fromAttrToStr "security" as
	  , seeieUserlevel = possibleA fromAttrToStr "userlevel" as
	  , seeieVendor = possibleA fromAttrToStr "vendor" as
	  , seeieRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "linkend" (seeieLinkend v)
	, maybeToAttr toAttrFrStr "id" (seeieId v)
	, maybeToAttr toAttrFrStr "lang" (seeieLang v)
	, maybeToAttr toAttrFrStr "remap" (seeieRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (seeieXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (seeieRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (seeieArch v)
	, maybeToAttr toAttrFrStr "condition" (seeieCondition v)
	, maybeToAttr toAttrFrStr "conformance" (seeieConformance v)
	, maybeToAttr toAttrFrStr "os" (seeieOs v)
	, maybeToAttr toAttrFrStr "revision" (seeieRevision v)
	, maybeToAttr toAttrFrStr "security" (seeieSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (seeieUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (seeieVendor v)
	, maybeToAttr toAttrFrStr "role" (seeieRole v)
	]
instance XmlContent Seeie_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Seeie_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Seeie_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Seeie_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Seeie_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Seeie_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Seeie_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Seeie_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Seeie_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Seeie_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Seeie_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Seeie_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Seeie_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Seeie_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Seeie_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Seeie_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Seeie_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Seeie_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Seeie_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Seeie_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Seeie_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Seeie_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Seeie_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Seeie_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Seeie_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Seeie_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Seeie_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Seeie_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Seeie_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Seeie_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Seeie_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Seeie_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Seeie_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Seeie_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Seeie_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Seeie_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Seeie_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Seeie_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Seeie_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Seeie_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Seeie_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Seeie_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Seeie_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Seeie_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Seeie_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Seeie_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Seeie_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Seeie_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Seeie_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Seeie_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Seeie_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Seeie_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Seeie_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Seeie_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Seeie_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Seeie_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Seeie_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Seeie_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Seeie_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Seeie_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Seeie_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Seeie_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Seeie_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Seeie_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Seeie_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Seeie_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Seeie_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Seeie_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Seeie_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Seeie_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Seeie_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Seeie_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Seeie_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Seeie_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Seeie_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Seeie_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Seeie_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Seeie_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Seeie_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Seeie_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Seeie_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Seeie_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Seeie_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Seeie_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Seeie_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Seeie_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Seeie_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Seeie_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Seeie_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Seeie_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																									    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Seeie_Str a) = toText a
    toElem (Seeie_Footnoteref a) = toElem a
    toElem (Seeie_Xref a) = toElem a
    toElem (Seeie_Abbrev a) = toElem a
    toElem (Seeie_Acronym a) = toElem a
    toElem (Seeie_Citation a) = toElem a
    toElem (Seeie_Citerefentry a) = toElem a
    toElem (Seeie_Citetitle a) = toElem a
    toElem (Seeie_Emphasis a) = toElem a
    toElem (Seeie_Firstterm a) = toElem a
    toElem (Seeie_Foreignphrase a) = toElem a
    toElem (Seeie_Glossterm a) = toElem a
    toElem (Seeie_Footnote a) = toElem a
    toElem (Seeie_Phrase a) = toElem a
    toElem (Seeie_Quote a) = toElem a
    toElem (Seeie_Trademark a) = toElem a
    toElem (Seeie_Wordasword a) = toElem a
    toElem (Seeie_Personname a) = toElem a
    toElem (Seeie_Link a) = toElem a
    toElem (Seeie_Olink a) = toElem a
    toElem (Seeie_Ulink a) = toElem a
    toElem (Seeie_Action a) = toElem a
    toElem (Seeie_Application a) = toElem a
    toElem (Seeie_Classname a) = toElem a
    toElem (Seeie_Methodname a) = toElem a
    toElem (Seeie_Interfacename a) = toElem a
    toElem (Seeie_Exceptionname a) = toElem a
    toElem (Seeie_Ooclass a) = toElem a
    toElem (Seeie_Oointerface a) = toElem a
    toElem (Seeie_Ooexception a) = toElem a
    toElem (Seeie_Command a) = toElem a
    toElem (Seeie_Computeroutput a) = toElem a
    toElem (Seeie_Database a) = toElem a
    toElem (Seeie_Email a) = toElem a
    toElem (Seeie_Envar a) = toElem a
    toElem (Seeie_Errorcode a) = toElem a
    toElem (Seeie_Errorname a) = toElem a
    toElem (Seeie_Errortype a) = toElem a
    toElem (Seeie_Errortext a) = toElem a
    toElem (Seeie_Filename a) = toElem a
    toElem (Seeie_Function a) = toElem a
    toElem (Seeie_Guibutton a) = toElem a
    toElem (Seeie_Guiicon a) = toElem a
    toElem (Seeie_Guilabel a) = toElem a
    toElem (Seeie_Guimenu a) = toElem a
    toElem (Seeie_Guimenuitem a) = toElem a
    toElem (Seeie_Guisubmenu a) = toElem a
    toElem (Seeie_Hardware a) = toElem a
    toElem (Seeie_Interface a) = toElem a
    toElem (Seeie_Keycap a) = toElem a
    toElem (Seeie_Keycode a) = toElem a
    toElem (Seeie_Keycombo a) = toElem a
    toElem (Seeie_Keysym a) = toElem a
    toElem (Seeie_Literal a) = toElem a
    toElem (Seeie_Constant a) = toElem a
    toElem (Seeie_Markup a) = toElem a
    toElem (Seeie_Medialabel a) = toElem a
    toElem (Seeie_Menuchoice a) = toElem a
    toElem (Seeie_Mousebutton a) = toElem a
    toElem (Seeie_Option a) = toElem a
    toElem (Seeie_Optional a) = toElem a
    toElem (Seeie_Parameter a) = toElem a
    toElem (Seeie_Prompt a) = toElem a
    toElem (Seeie_Property a) = toElem a
    toElem (Seeie_Replaceable a) = toElem a
    toElem (Seeie_Returnvalue a) = toElem a
    toElem (Seeie_Sgmltag a) = toElem a
    toElem (Seeie_Structfield a) = toElem a
    toElem (Seeie_Structname a) = toElem a
    toElem (Seeie_Symbol a) = toElem a
    toElem (Seeie_Systemitem a) = toElem a
    toElem (Seeie_Token a) = toElem a
    toElem (Seeie_Type a) = toElem a
    toElem (Seeie_Userinput a) = toElem a
    toElem (Seeie_Varname a) = toElem a
    toElem (Seeie_Anchor a) = toElem a
    toElem (Seeie_Author a) = toElem a
    toElem (Seeie_Authorinitials a) = toElem a
    toElem (Seeie_Corpauthor a) = toElem a
    toElem (Seeie_Modespec a) = toElem a
    toElem (Seeie_Othercredit a) = toElem a
    toElem (Seeie_Productname a) = toElem a
    toElem (Seeie_Productnumber a) = toElem a
    toElem (Seeie_Revhistory a) = toElem a
    toElem (Seeie_Remark a) = toElem a
    toElem (Seeie_Subscript a) = toElem a
    toElem (Seeie_Superscript a) = toElem a
    toElem (Seeie_Inlinegraphic a) = toElem a
    toElem (Seeie_Inlinemediaobject a) = toElem a
instance XmlAttrType Seeie_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Seeie_Revisionflag_Changed
	    translate "added" = Just Seeie_Revisionflag_Added
	    translate "deleted" = Just Seeie_Revisionflag_Deleted
	    translate "off" = Just Seeie_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Seeie_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Seeie_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Seeie_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Seeie_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Seealsoie where
    fromElem (CElem (Elem "seealsoie" as c0):rest) =
	(\(a,ca)->
	   (Just (Seealsoie (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Seealsoie as a) =
	[CElem (Elem "seealsoie" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Seealsoie_Attrs where
    fromAttrs as =
	Seealsoie_Attrs
	  { seealsoieLinkends = possibleA fromAttrToStr "linkends" as
	  , seealsoieId = possibleA fromAttrToStr "id" as
	  , seealsoieLang = possibleA fromAttrToStr "lang" as
	  , seealsoieRemap = possibleA fromAttrToStr "remap" as
	  , seealsoieXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , seealsoieRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , seealsoieArch = possibleA fromAttrToStr "arch" as
	  , seealsoieCondition = possibleA fromAttrToStr "condition" as
	  , seealsoieConformance = possibleA fromAttrToStr "conformance" as
	  , seealsoieOs = possibleA fromAttrToStr "os" as
	  , seealsoieRevision = possibleA fromAttrToStr "revision" as
	  , seealsoieSecurity = possibleA fromAttrToStr "security" as
	  , seealsoieUserlevel = possibleA fromAttrToStr "userlevel" as
	  , seealsoieVendor = possibleA fromAttrToStr "vendor" as
	  , seealsoieRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "linkends" (seealsoieLinkends v)
	, maybeToAttr toAttrFrStr "id" (seealsoieId v)
	, maybeToAttr toAttrFrStr "lang" (seealsoieLang v)
	, maybeToAttr toAttrFrStr "remap" (seealsoieRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (seealsoieXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (seealsoieRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (seealsoieArch v)
	, maybeToAttr toAttrFrStr "condition" (seealsoieCondition v)
	, maybeToAttr toAttrFrStr "conformance" (seealsoieConformance v)
	, maybeToAttr toAttrFrStr "os" (seealsoieOs v)
	, maybeToAttr toAttrFrStr "revision" (seealsoieRevision v)
	, maybeToAttr toAttrFrStr "security" (seealsoieSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (seealsoieUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (seealsoieVendor v)
	, maybeToAttr toAttrFrStr "role" (seealsoieRole v)
	]
instance XmlContent Seealsoie_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Seealsoie_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Seealsoie_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Seealsoie_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Seealsoie_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Seealsoie_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Seealsoie_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Seealsoie_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Seealsoie_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Seealsoie_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Seealsoie_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Seealsoie_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Seealsoie_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Seealsoie_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Seealsoie_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Seealsoie_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Seealsoie_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Seealsoie_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Seealsoie_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Seealsoie_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Seealsoie_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Seealsoie_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Seealsoie_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Seealsoie_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Seealsoie_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Seealsoie_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Seealsoie_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Seealsoie_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Seealsoie_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Seealsoie_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Seealsoie_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Seealsoie_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Seealsoie_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Seealsoie_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Seealsoie_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Seealsoie_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Seealsoie_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Seealsoie_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Seealsoie_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Seealsoie_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Seealsoie_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Seealsoie_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Seealsoie_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Seealsoie_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Seealsoie_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Seealsoie_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Seealsoie_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Seealsoie_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Seealsoie_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Seealsoie_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Seealsoie_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Seealsoie_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Seealsoie_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Seealsoie_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Seealsoie_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Seealsoie_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Seealsoie_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Seealsoie_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Seealsoie_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Seealsoie_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Seealsoie_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Seealsoie_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Seealsoie_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Seealsoie_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Seealsoie_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Seealsoie_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Seealsoie_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Seealsoie_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Seealsoie_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Seealsoie_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Seealsoie_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Seealsoie_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Seealsoie_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Seealsoie_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Seealsoie_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Seealsoie_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Seealsoie_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Seealsoie_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Seealsoie_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Seealsoie_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Seealsoie_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Seealsoie_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Seealsoie_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Seealsoie_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Seealsoie_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Seealsoie_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Seealsoie_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Seealsoie_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Seealsoie_Inlinegraphic a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Seealsoie_Inlinemediaobject a), rest)
																																																																																									(_,_) ->
																																																																																									    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Seealsoie_Str a) = toText a
    toElem (Seealsoie_Footnoteref a) = toElem a
    toElem (Seealsoie_Xref a) = toElem a
    toElem (Seealsoie_Abbrev a) = toElem a
    toElem (Seealsoie_Acronym a) = toElem a
    toElem (Seealsoie_Citation a) = toElem a
    toElem (Seealsoie_Citerefentry a) = toElem a
    toElem (Seealsoie_Citetitle a) = toElem a
    toElem (Seealsoie_Emphasis a) = toElem a
    toElem (Seealsoie_Firstterm a) = toElem a
    toElem (Seealsoie_Foreignphrase a) = toElem a
    toElem (Seealsoie_Glossterm a) = toElem a
    toElem (Seealsoie_Footnote a) = toElem a
    toElem (Seealsoie_Phrase a) = toElem a
    toElem (Seealsoie_Quote a) = toElem a
    toElem (Seealsoie_Trademark a) = toElem a
    toElem (Seealsoie_Wordasword a) = toElem a
    toElem (Seealsoie_Personname a) = toElem a
    toElem (Seealsoie_Link a) = toElem a
    toElem (Seealsoie_Olink a) = toElem a
    toElem (Seealsoie_Ulink a) = toElem a
    toElem (Seealsoie_Action a) = toElem a
    toElem (Seealsoie_Application a) = toElem a
    toElem (Seealsoie_Classname a) = toElem a
    toElem (Seealsoie_Methodname a) = toElem a
    toElem (Seealsoie_Interfacename a) = toElem a
    toElem (Seealsoie_Exceptionname a) = toElem a
    toElem (Seealsoie_Ooclass a) = toElem a
    toElem (Seealsoie_Oointerface a) = toElem a
    toElem (Seealsoie_Ooexception a) = toElem a
    toElem (Seealsoie_Command a) = toElem a
    toElem (Seealsoie_Computeroutput a) = toElem a
    toElem (Seealsoie_Database a) = toElem a
    toElem (Seealsoie_Email a) = toElem a
    toElem (Seealsoie_Envar a) = toElem a
    toElem (Seealsoie_Errorcode a) = toElem a
    toElem (Seealsoie_Errorname a) = toElem a
    toElem (Seealsoie_Errortype a) = toElem a
    toElem (Seealsoie_Errortext a) = toElem a
    toElem (Seealsoie_Filename a) = toElem a
    toElem (Seealsoie_Function a) = toElem a
    toElem (Seealsoie_Guibutton a) = toElem a
    toElem (Seealsoie_Guiicon a) = toElem a
    toElem (Seealsoie_Guilabel a) = toElem a
    toElem (Seealsoie_Guimenu a) = toElem a
    toElem (Seealsoie_Guimenuitem a) = toElem a
    toElem (Seealsoie_Guisubmenu a) = toElem a
    toElem (Seealsoie_Hardware a) = toElem a
    toElem (Seealsoie_Interface a) = toElem a
    toElem (Seealsoie_Keycap a) = toElem a
    toElem (Seealsoie_Keycode a) = toElem a
    toElem (Seealsoie_Keycombo a) = toElem a
    toElem (Seealsoie_Keysym a) = toElem a
    toElem (Seealsoie_Literal a) = toElem a
    toElem (Seealsoie_Constant a) = toElem a
    toElem (Seealsoie_Markup a) = toElem a
    toElem (Seealsoie_Medialabel a) = toElem a
    toElem (Seealsoie_Menuchoice a) = toElem a
    toElem (Seealsoie_Mousebutton a) = toElem a
    toElem (Seealsoie_Option a) = toElem a
    toElem (Seealsoie_Optional a) = toElem a
    toElem (Seealsoie_Parameter a) = toElem a
    toElem (Seealsoie_Prompt a) = toElem a
    toElem (Seealsoie_Property a) = toElem a
    toElem (Seealsoie_Replaceable a) = toElem a
    toElem (Seealsoie_Returnvalue a) = toElem a
    toElem (Seealsoie_Sgmltag a) = toElem a
    toElem (Seealsoie_Structfield a) = toElem a
    toElem (Seealsoie_Structname a) = toElem a
    toElem (Seealsoie_Symbol a) = toElem a
    toElem (Seealsoie_Systemitem a) = toElem a
    toElem (Seealsoie_Token a) = toElem a
    toElem (Seealsoie_Type a) = toElem a
    toElem (Seealsoie_Userinput a) = toElem a
    toElem (Seealsoie_Varname a) = toElem a
    toElem (Seealsoie_Anchor a) = toElem a
    toElem (Seealsoie_Author a) = toElem a
    toElem (Seealsoie_Authorinitials a) = toElem a
    toElem (Seealsoie_Corpauthor a) = toElem a
    toElem (Seealsoie_Modespec a) = toElem a
    toElem (Seealsoie_Othercredit a) = toElem a
    toElem (Seealsoie_Productname a) = toElem a
    toElem (Seealsoie_Productnumber a) = toElem a
    toElem (Seealsoie_Revhistory a) = toElem a
    toElem (Seealsoie_Remark a) = toElem a
    toElem (Seealsoie_Subscript a) = toElem a
    toElem (Seealsoie_Superscript a) = toElem a
    toElem (Seealsoie_Inlinegraphic a) = toElem a
    toElem (Seealsoie_Inlinemediaobject a) = toElem a
instance XmlAttrType Seealsoie_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Seealsoie_Revisionflag_Changed
	    translate "added" = Just Seealsoie_Revisionflag_Added
	    translate "deleted" = Just Seealsoie_Revisionflag_Deleted
	    translate "off" = Just Seealsoie_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Seealsoie_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Seealsoie_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Seealsoie_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Seealsoie_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refentry where
    fromElem (CElem (Elem "refentry" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (\(f,cf)->
			  (\(g,cg)->
			     (\(h,ch)->
				(Just (Refentry (fromAttrs as) a b c d e f g h), rest))
			     (definite fromElem "OneOf" "refentry" cg))
			  (fromElem cf))
		       (definite fromElem "<refnamediv>" "refentry" ce))
		    (many fromElem cd))
		 (fromElem cc))
	      (fromElem cb))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refentry as a b c d e f g h) =
	[CElem (Elem "refentry" (toAttrs as) (maybe [] toElem a ++
					      concatMap toElem b ++ maybe [] toElem c ++
					      maybe [] toElem d ++ concatMap toElem e ++ toElem f ++
					      maybe [] toElem g ++ toElem h))]
instance XmlAttributes Refentry_Attrs where
    fromAttrs as =
	Refentry_Attrs
	  { refentryStatus = possibleA fromAttrToStr "status" as
	  , refentryId = possibleA fromAttrToStr "id" as
	  , refentryLang = possibleA fromAttrToStr "lang" as
	  , refentryRemap = possibleA fromAttrToStr "remap" as
	  , refentryXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refentryRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refentryArch = possibleA fromAttrToStr "arch" as
	  , refentryCondition = possibleA fromAttrToStr "condition" as
	  , refentryConformance = possibleA fromAttrToStr "conformance" as
	  , refentryOs = possibleA fromAttrToStr "os" as
	  , refentryRevision = possibleA fromAttrToStr "revision" as
	  , refentrySecurity = possibleA fromAttrToStr "security" as
	  , refentryUserlevel = possibleA fromAttrToStr "userlevel" as
	  , refentryVendor = possibleA fromAttrToStr "vendor" as
	  , refentryRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "status" (refentryStatus v)
	, maybeToAttr toAttrFrStr "id" (refentryId v)
	, maybeToAttr toAttrFrStr "lang" (refentryLang v)
	, maybeToAttr toAttrFrStr "remap" (refentryRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refentryXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refentryRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refentryArch v)
	, maybeToAttr toAttrFrStr "condition" (refentryCondition v)
	, maybeToAttr toAttrFrStr "conformance" (refentryConformance v)
	, maybeToAttr toAttrFrStr "os" (refentryOs v)
	, maybeToAttr toAttrFrStr "revision" (refentryRevision v)
	, maybeToAttr toAttrFrStr "security" (refentrySecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (refentryUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refentryVendor v)
	, maybeToAttr toAttrFrStr "role" (refentryRole v)
	]
instance XmlAttrType Refentry_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refentry_Revisionflag_Changed
	    translate "added" = Just Refentry_Revisionflag_Added
	    translate "deleted" = Just Refentry_Revisionflag_Deleted
	    translate "off" = Just Refentry_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refentry_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refentry_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refentry_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refentry_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refmeta where
    fromElem (CElem (Elem "refmeta" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (Just (Refmeta (fromAttrs as) a b c d e), rest))
		    (many fromElem cd))
		 (many fromElem cc))
	      (fromElem cb))
	   (definite fromElem "<refentrytitle>" "refmeta" ca))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refmeta as a b c d e) =
	[CElem (Elem "refmeta" (toAttrs as) (concatMap toElem a ++ toElem b
					     ++ maybe [] toElem c ++ concatMap toElem d ++
					     concatMap toElem e))]
instance XmlAttributes Refmeta_Attrs where
    fromAttrs as =
	Refmeta_Attrs
	  { refmetaId = possibleA fromAttrToStr "id" as
	  , refmetaLang = possibleA fromAttrToStr "lang" as
	  , refmetaRemap = possibleA fromAttrToStr "remap" as
	  , refmetaXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refmetaRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refmetaArch = possibleA fromAttrToStr "arch" as
	  , refmetaCondition = possibleA fromAttrToStr "condition" as
	  , refmetaConformance = possibleA fromAttrToStr "conformance" as
	  , refmetaOs = possibleA fromAttrToStr "os" as
	  , refmetaRevision = possibleA fromAttrToStr "revision" as
	  , refmetaSecurity = possibleA fromAttrToStr "security" as
	  , refmetaUserlevel = possibleA fromAttrToStr "userlevel" as
	  , refmetaVendor = possibleA fromAttrToStr "vendor" as
	  , refmetaRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (refmetaId v)
	, maybeToAttr toAttrFrStr "lang" (refmetaLang v)
	, maybeToAttr toAttrFrStr "remap" (refmetaRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refmetaXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refmetaRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refmetaArch v)
	, maybeToAttr toAttrFrStr "condition" (refmetaCondition v)
	, maybeToAttr toAttrFrStr "conformance" (refmetaConformance v)
	, maybeToAttr toAttrFrStr "os" (refmetaOs v)
	, maybeToAttr toAttrFrStr "revision" (refmetaRevision v)
	, maybeToAttr toAttrFrStr "security" (refmetaSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (refmetaUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refmetaVendor v)
	, maybeToAttr toAttrFrStr "role" (refmetaRole v)
	]
instance XmlAttrType Refmeta_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refmeta_Revisionflag_Changed
	    translate "added" = Just Refmeta_Revisionflag_Added
	    translate "deleted" = Just Refmeta_Revisionflag_Deleted
	    translate "off" = Just Refmeta_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refmeta_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refmeta_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refmeta_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refmeta_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refmiscinfo where
    fromElem (CElem (Elem "refmiscinfo" as c0):rest) =
	(\(a,ca)->
	   (Just (Refmiscinfo (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refmiscinfo as a) =
	[CElem (Elem "refmiscinfo" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Refmiscinfo_Attrs where
    fromAttrs as =
	Refmiscinfo_Attrs
	  { refmiscinfoClass = possibleA fromAttrToStr "class" as
	  , refmiscinfoId = possibleA fromAttrToStr "id" as
	  , refmiscinfoLang = possibleA fromAttrToStr "lang" as
	  , refmiscinfoRemap = possibleA fromAttrToStr "remap" as
	  , refmiscinfoXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refmiscinfoRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refmiscinfoArch = possibleA fromAttrToStr "arch" as
	  , refmiscinfoCondition = possibleA fromAttrToStr "condition" as
	  , refmiscinfoConformance = possibleA fromAttrToStr "conformance" as
	  , refmiscinfoOs = possibleA fromAttrToStr "os" as
	  , refmiscinfoRevision = possibleA fromAttrToStr "revision" as
	  , refmiscinfoSecurity = possibleA fromAttrToStr "security" as
	  , refmiscinfoUserlevel = possibleA fromAttrToStr "userlevel" as
	  , refmiscinfoVendor = possibleA fromAttrToStr "vendor" as
	  , refmiscinfoRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "class" (refmiscinfoClass v)
	, maybeToAttr toAttrFrStr "id" (refmiscinfoId v)
	, maybeToAttr toAttrFrStr "lang" (refmiscinfoLang v)
	, maybeToAttr toAttrFrStr "remap" (refmiscinfoRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refmiscinfoXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refmiscinfoRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refmiscinfoArch v)
	, maybeToAttr toAttrFrStr "condition" (refmiscinfoCondition v)
	, maybeToAttr toAttrFrStr "conformance" (refmiscinfoConformance v)
	, maybeToAttr toAttrFrStr "os" (refmiscinfoOs v)
	, maybeToAttr toAttrFrStr "revision" (refmiscinfoRevision v)
	, maybeToAttr toAttrFrStr "security" (refmiscinfoSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (refmiscinfoUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refmiscinfoVendor v)
	, maybeToAttr toAttrFrStr "role" (refmiscinfoRole v)
	]
instance XmlContent Refmiscinfo_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Refmiscinfo_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Refmiscinfo_Link a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Refmiscinfo_Olink a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Refmiscinfo_Ulink a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Refmiscinfo_Emphasis a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Refmiscinfo_Trademark a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Refmiscinfo_Replaceable a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Refmiscinfo_Remark a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Refmiscinfo_Subscript a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Refmiscinfo_Superscript a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Refmiscinfo_Inlinegraphic a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Refmiscinfo_Inlinemediaobject a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Refmiscinfo_Indexterm a), rest)
													(_,_) ->
													    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refmiscinfo_Str a) = toText a
    toElem (Refmiscinfo_Link a) = toElem a
    toElem (Refmiscinfo_Olink a) = toElem a
    toElem (Refmiscinfo_Ulink a) = toElem a
    toElem (Refmiscinfo_Emphasis a) = toElem a
    toElem (Refmiscinfo_Trademark a) = toElem a
    toElem (Refmiscinfo_Replaceable a) = toElem a
    toElem (Refmiscinfo_Remark a) = toElem a
    toElem (Refmiscinfo_Subscript a) = toElem a
    toElem (Refmiscinfo_Superscript a) = toElem a
    toElem (Refmiscinfo_Inlinegraphic a) = toElem a
    toElem (Refmiscinfo_Inlinemediaobject a) = toElem a
    toElem (Refmiscinfo_Indexterm a) = toElem a
instance XmlAttrType Refmiscinfo_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refmiscinfo_Revisionflag_Changed
	    translate "added" = Just Refmiscinfo_Revisionflag_Added
	    translate "deleted" = Just Refmiscinfo_Revisionflag_Deleted
	    translate "off" = Just Refmiscinfo_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refmiscinfo_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refmiscinfo_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refmiscinfo_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refmiscinfo_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refnamediv where
    fromElem (CElem (Elem "refnamediv" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (Just (Refnamediv (fromAttrs as) a b c d e), rest))
		    (many fromElem cd))
		 (many fromElem cc))
	      (definite fromElem "<refpurpose>" "refnamediv" cb))
	   (many fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refnamediv as a b c d e) =
	[CElem (Elem "refnamediv" (toAttrs as) (maybe [] toElem a ++
						concatMap toElem b ++ toElem c ++ concatMap toElem d
						++ concatMap toElem e))]
instance XmlAttributes Refnamediv_Attrs where
    fromAttrs as =
	Refnamediv_Attrs
	  { refnamedivId = possibleA fromAttrToStr "id" as
	  , refnamedivLang = possibleA fromAttrToStr "lang" as
	  , refnamedivRemap = possibleA fromAttrToStr "remap" as
	  , refnamedivXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refnamedivRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refnamedivArch = possibleA fromAttrToStr "arch" as
	  , refnamedivCondition = possibleA fromAttrToStr "condition" as
	  , refnamedivConformance = possibleA fromAttrToStr "conformance" as
	  , refnamedivOs = possibleA fromAttrToStr "os" as
	  , refnamedivRevision = possibleA fromAttrToStr "revision" as
	  , refnamedivSecurity = possibleA fromAttrToStr "security" as
	  , refnamedivUserlevel = possibleA fromAttrToStr "userlevel" as
	  , refnamedivVendor = possibleA fromAttrToStr "vendor" as
	  , refnamedivRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (refnamedivId v)
	, maybeToAttr toAttrFrStr "lang" (refnamedivLang v)
	, maybeToAttr toAttrFrStr "remap" (refnamedivRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refnamedivXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refnamedivRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refnamedivArch v)
	, maybeToAttr toAttrFrStr "condition" (refnamedivCondition v)
	, maybeToAttr toAttrFrStr "conformance" (refnamedivConformance v)
	, maybeToAttr toAttrFrStr "os" (refnamedivOs v)
	, maybeToAttr toAttrFrStr "revision" (refnamedivRevision v)
	, maybeToAttr toAttrFrStr "security" (refnamedivSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (refnamedivUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refnamedivVendor v)
	, maybeToAttr toAttrFrStr "role" (refnamedivRole v)
	]
instance XmlAttrType Refnamediv_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refnamediv_Revisionflag_Changed
	    translate "added" = Just Refnamediv_Revisionflag_Added
	    translate "deleted" = Just Refnamediv_Revisionflag_Deleted
	    translate "off" = Just Refnamediv_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refnamediv_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refnamediv_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refnamediv_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refnamediv_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refdescriptor where
    fromElem (CElem (Elem "refdescriptor" as c0):rest) =
	(\(a,ca)->
	   (Just (Refdescriptor (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refdescriptor as a) =
	[CElem (Elem "refdescriptor" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Refdescriptor_Attrs where
    fromAttrs as =
	Refdescriptor_Attrs
	  { refdescriptorId = possibleA fromAttrToStr "id" as
	  , refdescriptorLang = possibleA fromAttrToStr "lang" as
	  , refdescriptorRemap = possibleA fromAttrToStr "remap" as
	  , refdescriptorXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refdescriptorRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refdescriptorArch = possibleA fromAttrToStr "arch" as
	  , refdescriptorCondition = possibleA fromAttrToStr "condition" as
	  , refdescriptorConformance = possibleA fromAttrToStr "conformance" as
	  , refdescriptorOs = possibleA fromAttrToStr "os" as
	  , refdescriptorRevision = possibleA fromAttrToStr "revision" as
	  , refdescriptorSecurity = possibleA fromAttrToStr "security" as
	  , refdescriptorUserlevel = possibleA fromAttrToStr "userlevel" as
	  , refdescriptorVendor = possibleA fromAttrToStr "vendor" as
	  , refdescriptorRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (refdescriptorId v)
	, maybeToAttr toAttrFrStr "lang" (refdescriptorLang v)
	, maybeToAttr toAttrFrStr "remap" (refdescriptorRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refdescriptorXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refdescriptorRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refdescriptorArch v)
	, maybeToAttr toAttrFrStr "condition" (refdescriptorCondition v)
	, maybeToAttr toAttrFrStr "conformance" (refdescriptorConformance v)
	, maybeToAttr toAttrFrStr "os" (refdescriptorOs v)
	, maybeToAttr toAttrFrStr "revision" (refdescriptorRevision v)
	, maybeToAttr toAttrFrStr "security" (refdescriptorSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (refdescriptorUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refdescriptorVendor v)
	, maybeToAttr toAttrFrStr "role" (refdescriptorRole v)
	]
instance XmlContent Refdescriptor_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Refdescriptor_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Refdescriptor_Action a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Refdescriptor_Application a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Refdescriptor_Classname a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Refdescriptor_Methodname a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Refdescriptor_Interfacename a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Refdescriptor_Exceptionname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Refdescriptor_Ooclass a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Refdescriptor_Oointerface a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Refdescriptor_Ooexception a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Refdescriptor_Command a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Refdescriptor_Computeroutput a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Refdescriptor_Database a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Refdescriptor_Email a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Refdescriptor_Envar a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Refdescriptor_Errorcode a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Refdescriptor_Errorname a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Refdescriptor_Errortype a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Refdescriptor_Errortext a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Refdescriptor_Filename a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Refdescriptor_Function a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Refdescriptor_Guibutton a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Refdescriptor_Guiicon a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Refdescriptor_Guilabel a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Refdescriptor_Guimenu a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Refdescriptor_Guimenuitem a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Refdescriptor_Guisubmenu a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Refdescriptor_Hardware a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Refdescriptor_Interface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Refdescriptor_Keycap a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Refdescriptor_Keycode a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Refdescriptor_Keycombo a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Refdescriptor_Keysym a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Refdescriptor_Literal a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Refdescriptor_Constant a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Refdescriptor_Markup a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Refdescriptor_Medialabel a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Refdescriptor_Menuchoice a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Refdescriptor_Mousebutton a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Refdescriptor_Option a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Refdescriptor_Optional a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Refdescriptor_Parameter a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Refdescriptor_Prompt a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Refdescriptor_Property a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Refdescriptor_Replaceable a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Refdescriptor_Returnvalue a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Refdescriptor_Sgmltag a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Refdescriptor_Structfield a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Refdescriptor_Structname a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Refdescriptor_Symbol a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Refdescriptor_Systemitem a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Refdescriptor_Token a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Refdescriptor_Type a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Refdescriptor_Userinput a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Refdescriptor_Varname a), rest)
																																																							(_,_) ->
																																																							    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refdescriptor_Str a) = toText a
    toElem (Refdescriptor_Action a) = toElem a
    toElem (Refdescriptor_Application a) = toElem a
    toElem (Refdescriptor_Classname a) = toElem a
    toElem (Refdescriptor_Methodname a) = toElem a
    toElem (Refdescriptor_Interfacename a) = toElem a
    toElem (Refdescriptor_Exceptionname a) = toElem a
    toElem (Refdescriptor_Ooclass a) = toElem a
    toElem (Refdescriptor_Oointerface a) = toElem a
    toElem (Refdescriptor_Ooexception a) = toElem a
    toElem (Refdescriptor_Command a) = toElem a
    toElem (Refdescriptor_Computeroutput a) = toElem a
    toElem (Refdescriptor_Database a) = toElem a
    toElem (Refdescriptor_Email a) = toElem a
    toElem (Refdescriptor_Envar a) = toElem a
    toElem (Refdescriptor_Errorcode a) = toElem a
    toElem (Refdescriptor_Errorname a) = toElem a
    toElem (Refdescriptor_Errortype a) = toElem a
    toElem (Refdescriptor_Errortext a) = toElem a
    toElem (Refdescriptor_Filename a) = toElem a
    toElem (Refdescriptor_Function a) = toElem a
    toElem (Refdescriptor_Guibutton a) = toElem a
    toElem (Refdescriptor_Guiicon a) = toElem a
    toElem (Refdescriptor_Guilabel a) = toElem a
    toElem (Refdescriptor_Guimenu a) = toElem a
    toElem (Refdescriptor_Guimenuitem a) = toElem a
    toElem (Refdescriptor_Guisubmenu a) = toElem a
    toElem (Refdescriptor_Hardware a) = toElem a
    toElem (Refdescriptor_Interface a) = toElem a
    toElem (Refdescriptor_Keycap a) = toElem a
    toElem (Refdescriptor_Keycode a) = toElem a
    toElem (Refdescriptor_Keycombo a) = toElem a
    toElem (Refdescriptor_Keysym a) = toElem a
    toElem (Refdescriptor_Literal a) = toElem a
    toElem (Refdescriptor_Constant a) = toElem a
    toElem (Refdescriptor_Markup a) = toElem a
    toElem (Refdescriptor_Medialabel a) = toElem a
    toElem (Refdescriptor_Menuchoice a) = toElem a
    toElem (Refdescriptor_Mousebutton a) = toElem a
    toElem (Refdescriptor_Option a) = toElem a
    toElem (Refdescriptor_Optional a) = toElem a
    toElem (Refdescriptor_Parameter a) = toElem a
    toElem (Refdescriptor_Prompt a) = toElem a
    toElem (Refdescriptor_Property a) = toElem a
    toElem (Refdescriptor_Replaceable a) = toElem a
    toElem (Refdescriptor_Returnvalue a) = toElem a
    toElem (Refdescriptor_Sgmltag a) = toElem a
    toElem (Refdescriptor_Structfield a) = toElem a
    toElem (Refdescriptor_Structname a) = toElem a
    toElem (Refdescriptor_Symbol a) = toElem a
    toElem (Refdescriptor_Systemitem a) = toElem a
    toElem (Refdescriptor_Token a) = toElem a
    toElem (Refdescriptor_Type a) = toElem a
    toElem (Refdescriptor_Userinput a) = toElem a
    toElem (Refdescriptor_Varname a) = toElem a
instance XmlAttrType Refdescriptor_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refdescriptor_Revisionflag_Changed
	    translate "added" = Just Refdescriptor_Revisionflag_Added
	    translate "deleted" = Just Refdescriptor_Revisionflag_Deleted
	    translate "off" = Just Refdescriptor_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refdescriptor_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refdescriptor_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refdescriptor_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refdescriptor_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refname where
    fromElem (CElem (Elem "refname" as c0):rest) =
	(\(a,ca)->
	   (Just (Refname (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refname as a) =
	[CElem (Elem "refname" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Refname_Attrs where
    fromAttrs as =
	Refname_Attrs
	  { refnameId = possibleA fromAttrToStr "id" as
	  , refnameLang = possibleA fromAttrToStr "lang" as
	  , refnameRemap = possibleA fromAttrToStr "remap" as
	  , refnameXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refnameRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refnameArch = possibleA fromAttrToStr "arch" as
	  , refnameCondition = possibleA fromAttrToStr "condition" as
	  , refnameConformance = possibleA fromAttrToStr "conformance" as
	  , refnameOs = possibleA fromAttrToStr "os" as
	  , refnameRevision = possibleA fromAttrToStr "revision" as
	  , refnameSecurity = possibleA fromAttrToStr "security" as
	  , refnameUserlevel = possibleA fromAttrToStr "userlevel" as
	  , refnameVendor = possibleA fromAttrToStr "vendor" as
	  , refnameRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (refnameId v)
	, maybeToAttr toAttrFrStr "lang" (refnameLang v)
	, maybeToAttr toAttrFrStr "remap" (refnameRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refnameXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refnameRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refnameArch v)
	, maybeToAttr toAttrFrStr "condition" (refnameCondition v)
	, maybeToAttr toAttrFrStr "conformance" (refnameConformance v)
	, maybeToAttr toAttrFrStr "os" (refnameOs v)
	, maybeToAttr toAttrFrStr "revision" (refnameRevision v)
	, maybeToAttr toAttrFrStr "security" (refnameSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (refnameUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refnameVendor v)
	, maybeToAttr toAttrFrStr "role" (refnameRole v)
	]
instance XmlContent Refname_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Refname_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Refname_Action a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Refname_Application a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Refname_Classname a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Refname_Methodname a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Refname_Interfacename a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Refname_Exceptionname a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Refname_Ooclass a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Refname_Oointerface a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Refname_Ooexception a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Refname_Command a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Refname_Computeroutput a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Refname_Database a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Refname_Email a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Refname_Envar a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Refname_Errorcode a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Refname_Errorname a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Refname_Errortype a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Refname_Errortext a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Refname_Filename a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Refname_Function a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Refname_Guibutton a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Refname_Guiicon a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Refname_Guilabel a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Refname_Guimenu a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Refname_Guimenuitem a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Refname_Guisubmenu a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Refname_Hardware a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Refname_Interface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Refname_Keycap a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Refname_Keycode a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Refname_Keycombo a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Refname_Keysym a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Refname_Literal a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Refname_Constant a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Refname_Markup a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Refname_Medialabel a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Refname_Menuchoice a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Refname_Mousebutton a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Refname_Option a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Refname_Optional a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Refname_Parameter a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Refname_Prompt a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Refname_Property a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Refname_Replaceable a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Refname_Returnvalue a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Refname_Sgmltag a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Refname_Structfield a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Refname_Structname a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Refname_Symbol a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Refname_Systemitem a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Refname_Token a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Refname_Type a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Refname_Userinput a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Refname_Varname a), rest)
																																																							(_,_) ->
																																																							    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refname_Str a) = toText a
    toElem (Refname_Action a) = toElem a
    toElem (Refname_Application a) = toElem a
    toElem (Refname_Classname a) = toElem a
    toElem (Refname_Methodname a) = toElem a
    toElem (Refname_Interfacename a) = toElem a
    toElem (Refname_Exceptionname a) = toElem a
    toElem (Refname_Ooclass a) = toElem a
    toElem (Refname_Oointerface a) = toElem a
    toElem (Refname_Ooexception a) = toElem a
    toElem (Refname_Command a) = toElem a
    toElem (Refname_Computeroutput a) = toElem a
    toElem (Refname_Database a) = toElem a
    toElem (Refname_Email a) = toElem a
    toElem (Refname_Envar a) = toElem a
    toElem (Refname_Errorcode a) = toElem a
    toElem (Refname_Errorname a) = toElem a
    toElem (Refname_Errortype a) = toElem a
    toElem (Refname_Errortext a) = toElem a
    toElem (Refname_Filename a) = toElem a
    toElem (Refname_Function a) = toElem a
    toElem (Refname_Guibutton a) = toElem a
    toElem (Refname_Guiicon a) = toElem a
    toElem (Refname_Guilabel a) = toElem a
    toElem (Refname_Guimenu a) = toElem a
    toElem (Refname_Guimenuitem a) = toElem a
    toElem (Refname_Guisubmenu a) = toElem a
    toElem (Refname_Hardware a) = toElem a
    toElem (Refname_Interface a) = toElem a
    toElem (Refname_Keycap a) = toElem a
    toElem (Refname_Keycode a) = toElem a
    toElem (Refname_Keycombo a) = toElem a
    toElem (Refname_Keysym a) = toElem a
    toElem (Refname_Literal a) = toElem a
    toElem (Refname_Constant a) = toElem a
    toElem (Refname_Markup a) = toElem a
    toElem (Refname_Medialabel a) = toElem a
    toElem (Refname_Menuchoice a) = toElem a
    toElem (Refname_Mousebutton a) = toElem a
    toElem (Refname_Option a) = toElem a
    toElem (Refname_Optional a) = toElem a
    toElem (Refname_Parameter a) = toElem a
    toElem (Refname_Prompt a) = toElem a
    toElem (Refname_Property a) = toElem a
    toElem (Refname_Replaceable a) = toElem a
    toElem (Refname_Returnvalue a) = toElem a
    toElem (Refname_Sgmltag a) = toElem a
    toElem (Refname_Structfield a) = toElem a
    toElem (Refname_Structname a) = toElem a
    toElem (Refname_Symbol a) = toElem a
    toElem (Refname_Systemitem a) = toElem a
    toElem (Refname_Token a) = toElem a
    toElem (Refname_Type a) = toElem a
    toElem (Refname_Userinput a) = toElem a
    toElem (Refname_Varname a) = toElem a
instance XmlAttrType Refname_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refname_Revisionflag_Changed
	    translate "added" = Just Refname_Revisionflag_Added
	    translate "deleted" = Just Refname_Revisionflag_Deleted
	    translate "off" = Just Refname_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refname_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refname_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refname_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refname_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refpurpose where
    fromElem (CElem (Elem "refpurpose" as c0):rest) =
	(\(a,ca)->
	   (Just (Refpurpose (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refpurpose as a) =
	[CElem (Elem "refpurpose" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Refpurpose_Attrs where
    fromAttrs as =
	Refpurpose_Attrs
	  { refpurposeId = possibleA fromAttrToStr "id" as
	  , refpurposeLang = possibleA fromAttrToStr "lang" as
	  , refpurposeRemap = possibleA fromAttrToStr "remap" as
	  , refpurposeXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refpurposeRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refpurposeArch = possibleA fromAttrToStr "arch" as
	  , refpurposeCondition = possibleA fromAttrToStr "condition" as
	  , refpurposeConformance = possibleA fromAttrToStr "conformance" as
	  , refpurposeOs = possibleA fromAttrToStr "os" as
	  , refpurposeRevision = possibleA fromAttrToStr "revision" as
	  , refpurposeSecurity = possibleA fromAttrToStr "security" as
	  , refpurposeUserlevel = possibleA fromAttrToStr "userlevel" as
	  , refpurposeVendor = possibleA fromAttrToStr "vendor" as
	  , refpurposeRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (refpurposeId v)
	, maybeToAttr toAttrFrStr "lang" (refpurposeLang v)
	, maybeToAttr toAttrFrStr "remap" (refpurposeRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refpurposeXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refpurposeRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refpurposeArch v)
	, maybeToAttr toAttrFrStr "condition" (refpurposeCondition v)
	, maybeToAttr toAttrFrStr "conformance" (refpurposeConformance v)
	, maybeToAttr toAttrFrStr "os" (refpurposeOs v)
	, maybeToAttr toAttrFrStr "revision" (refpurposeRevision v)
	, maybeToAttr toAttrFrStr "security" (refpurposeSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (refpurposeUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refpurposeVendor v)
	, maybeToAttr toAttrFrStr "role" (refpurposeRole v)
	]
instance XmlContent Refpurpose_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Refpurpose_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Refpurpose_Footnoteref a), rest)
		(_,_) ->
			case (fromElem c0) of
			(Just a,rest) -> (Just (Refpurpose_Xref a), rest)
			(_,_) ->
				case (fromElem c0) of
				(Just a,rest) -> (Just (Refpurpose_Abbrev a), rest)
				(_,_) ->
					case (fromElem c0) of
					(Just a,rest) -> (Just (Refpurpose_Acronym a), rest)
					(_,_) ->
						case (fromElem c0) of
						(Just a,rest) -> (Just (Refpurpose_Citation a), rest)
						(_,_) ->
							case (fromElem c0) of
							(Just a,rest) -> (Just (Refpurpose_Citerefentry a), rest)
							(_,_) ->
								case (fromElem c0) of
								(Just a,rest) -> (Just (Refpurpose_Citetitle a), rest)
								(_,_) ->
									case (fromElem c0) of
									(Just a,rest) -> (Just (Refpurpose_Emphasis a), rest)
									(_,_) ->
										case (fromElem c0) of
										(Just a,rest) -> (Just (Refpurpose_Firstterm a), rest)
										(_,_) ->
											case (fromElem c0) of
											(Just a,rest) -> (Just (Refpurpose_Foreignphrase a), rest)
											(_,_) ->
												case (fromElem c0) of
												(Just a,rest) -> (Just (Refpurpose_Glossterm a), rest)
												(_,_) ->
													case (fromElem c0) of
													(Just a,rest) -> (Just (Refpurpose_Footnote a), rest)
													(_,_) ->
														case (fromElem c0) of
														(Just a,rest) -> (Just (Refpurpose_Phrase a), rest)
														(_,_) ->
															case (fromElem c0) of
															(Just a,rest) -> (Just (Refpurpose_Quote a), rest)
															(_,_) ->
																case (fromElem c0) of
																(Just a,rest) -> (Just (Refpurpose_Trademark a), rest)
																(_,_) ->
																	case (fromElem c0) of
																	(Just a,rest) -> (Just (Refpurpose_Wordasword a), rest)
																	(_,_) ->
																		case (fromElem c0) of
																		(Just a,rest) -> (Just (Refpurpose_Personname a), rest)
																		(_,_) ->
																			case (fromElem c0) of
																			(Just a,rest) -> (Just (Refpurpose_Link a), rest)
																			(_,_) ->
																				case (fromElem c0) of
																				(Just a,rest) -> (Just (Refpurpose_Olink a), rest)
																				(_,_) ->
																					case (fromElem c0) of
																					(Just a,rest) -> (Just (Refpurpose_Ulink a), rest)
																					(_,_) ->
																						case (fromElem c0) of
																						(Just a,rest) -> (Just (Refpurpose_Action a), rest)
																						(_,_) ->
																							case (fromElem c0) of
																							(Just a,rest) -> (Just (Refpurpose_Application a), rest)
																							(_,_) ->
																								case (fromElem c0) of
																								(Just a,rest) -> (Just (Refpurpose_Classname a), rest)
																								(_,_) ->
																									case (fromElem c0) of
																									(Just a,rest) -> (Just (Refpurpose_Methodname a), rest)
																									(_,_) ->
																										case (fromElem c0) of
																										(Just a,rest) -> (Just (Refpurpose_Interfacename a), rest)
																										(_,_) ->
																											case (fromElem c0) of
																											(Just a,rest) -> (Just (Refpurpose_Exceptionname a), rest)
																											(_,_) ->
																												case (fromElem c0) of
																												(Just a,rest) -> (Just (Refpurpose_Ooclass a), rest)
																												(_,_) ->
																													case (fromElem c0) of
																													(Just a,rest) -> (Just (Refpurpose_Oointerface a), rest)
																													(_,_) ->
																														case (fromElem c0) of
																														(Just a,rest) -> (Just (Refpurpose_Ooexception a), rest)
																														(_,_) ->
																															case (fromElem c0) of
																															(Just a,rest) -> (Just (Refpurpose_Command a), rest)
																															(_,_) ->
																																case (fromElem c0) of
																																(Just a,rest) -> (Just (Refpurpose_Computeroutput a), rest)
																																(_,_) ->
																																	case (fromElem c0) of
																																	(Just a,rest) -> (Just (Refpurpose_Database a), rest)
																																	(_,_) ->
																																		case (fromElem c0) of
																																		(Just a,rest) -> (Just (Refpurpose_Email a), rest)
																																		(_,_) ->
																																			case (fromElem c0) of
																																			(Just a,rest) -> (Just (Refpurpose_Envar a), rest)
																																			(_,_) ->
																																				case (fromElem c0) of
																																				(Just a,rest) -> (Just (Refpurpose_Errorcode a), rest)
																																				(_,_) ->
																																					case (fromElem c0) of
																																					(Just a,rest) -> (Just (Refpurpose_Errorname a), rest)
																																					(_,_) ->
																																						case (fromElem c0) of
																																						(Just a,rest) -> (Just (Refpurpose_Errortype a), rest)
																																						(_,_) ->
																																							case (fromElem c0) of
																																							(Just a,rest) -> (Just (Refpurpose_Errortext a), rest)
																																							(_,_) ->
																																								case (fromElem c0) of
																																								(Just a,rest) -> (Just (Refpurpose_Filename a), rest)
																																								(_,_) ->
																																									case (fromElem c0) of
																																									(Just a,rest) -> (Just (Refpurpose_Function a), rest)
																																									(_,_) ->
																																										case (fromElem c0) of
																																										(Just a,rest) -> (Just (Refpurpose_Guibutton a), rest)
																																										(_,_) ->
																																											case (fromElem c0) of
																																											(Just a,rest) -> (Just (Refpurpose_Guiicon a), rest)
																																											(_,_) ->
																																												case (fromElem c0) of
																																												(Just a,rest) -> (Just (Refpurpose_Guilabel a), rest)
																																												(_,_) ->
																																													case (fromElem c0) of
																																													(Just a,rest) -> (Just (Refpurpose_Guimenu a), rest)
																																													(_,_) ->
																																														case (fromElem c0) of
																																														(Just a,rest) -> (Just (Refpurpose_Guimenuitem a), rest)
																																														(_,_) ->
																																															case (fromElem c0) of
																																															(Just a,rest) -> (Just (Refpurpose_Guisubmenu a), rest)
																																															(_,_) ->
																																																case (fromElem c0) of
																																																(Just a,rest) -> (Just (Refpurpose_Hardware a), rest)
																																																(_,_) ->
																																																	case (fromElem c0) of
																																																	(Just a,rest) -> (Just (Refpurpose_Interface a), rest)
																																																	(_,_) ->
																																																		case (fromElem c0) of
																																																		(Just a,rest) -> (Just (Refpurpose_Keycap a), rest)
																																																		(_,_) ->
																																																			case (fromElem c0) of
																																																			(Just a,rest) -> (Just (Refpurpose_Keycode a), rest)
																																																			(_,_) ->
																																																				case (fromElem c0) of
																																																				(Just a,rest) -> (Just (Refpurpose_Keycombo a), rest)
																																																				(_,_) ->
																																																					case (fromElem c0) of
																																																					(Just a,rest) -> (Just (Refpurpose_Keysym a), rest)
																																																					(_,_) ->
																																																						case (fromElem c0) of
																																																						(Just a,rest) -> (Just (Refpurpose_Literal a), rest)
																																																						(_,_) ->
																																																							case (fromElem c0) of
																																																							(Just a,rest) -> (Just (Refpurpose_Constant a), rest)
																																																							(_,_) ->
																																																								case (fromElem c0) of
																																																								(Just a,rest) -> (Just (Refpurpose_Markup a), rest)
																																																								(_,_) ->
																																																									case (fromElem c0) of
																																																									(Just a,rest) -> (Just (Refpurpose_Medialabel a), rest)
																																																									(_,_) ->
																																																										case (fromElem c0) of
																																																										(Just a,rest) -> (Just (Refpurpose_Menuchoice a), rest)
																																																										(_,_) ->
																																																											case (fromElem c0) of
																																																											(Just a,rest) -> (Just (Refpurpose_Mousebutton a), rest)
																																																											(_,_) ->
																																																												case (fromElem c0) of
																																																												(Just a,rest) -> (Just (Refpurpose_Option a), rest)
																																																												(_,_) ->
																																																													case (fromElem c0) of
																																																													(Just a,rest) -> (Just (Refpurpose_Optional a), rest)
																																																													(_,_) ->
																																																														case (fromElem c0) of
																																																														(Just a,rest) -> (Just (Refpurpose_Parameter a), rest)
																																																														(_,_) ->
																																																															case (fromElem c0) of
																																																															(Just a,rest) -> (Just (Refpurpose_Prompt a), rest)
																																																															(_,_) ->
																																																																case (fromElem c0) of
																																																																(Just a,rest) -> (Just (Refpurpose_Property a), rest)
																																																																(_,_) ->
																																																																	case (fromElem c0) of
																																																																	(Just a,rest) -> (Just (Refpurpose_Replaceable a), rest)
																																																																	(_,_) ->
																																																																		case (fromElem c0) of
																																																																		(Just a,rest) -> (Just (Refpurpose_Returnvalue a), rest)
																																																																		(_,_) ->
																																																																			case (fromElem c0) of
																																																																			(Just a,rest) -> (Just (Refpurpose_Sgmltag a), rest)
																																																																			(_,_) ->
																																																																				case (fromElem c0) of
																																																																				(Just a,rest) -> (Just (Refpurpose_Structfield a), rest)
																																																																				(_,_) ->
																																																																					case (fromElem c0) of
																																																																					(Just a,rest) -> (Just (Refpurpose_Structname a), rest)
																																																																					(_,_) ->
																																																																						case (fromElem c0) of
																																																																						(Just a,rest) -> (Just (Refpurpose_Symbol a), rest)
																																																																						(_,_) ->
																																																																							case (fromElem c0) of
																																																																							(Just a,rest) -> (Just (Refpurpose_Systemitem a), rest)
																																																																							(_,_) ->
																																																																								case (fromElem c0) of
																																																																								(Just a,rest) -> (Just (Refpurpose_Token a), rest)
																																																																								(_,_) ->
																																																																									case (fromElem c0) of
																																																																									(Just a,rest) -> (Just (Refpurpose_Type a), rest)
																																																																									(_,_) ->
																																																																										case (fromElem c0) of
																																																																										(Just a,rest) -> (Just (Refpurpose_Userinput a), rest)
																																																																										(_,_) ->
																																																																											case (fromElem c0) of
																																																																											(Just a,rest) -> (Just (Refpurpose_Varname a), rest)
																																																																											(_,_) ->
																																																																												case (fromElem c0) of
																																																																												(Just a,rest) -> (Just (Refpurpose_Anchor a), rest)
																																																																												(_,_) ->
																																																																													case (fromElem c0) of
																																																																													(Just a,rest) -> (Just (Refpurpose_Author a), rest)
																																																																													(_,_) ->
																																																																														case (fromElem c0) of
																																																																														(Just a,rest) -> (Just (Refpurpose_Authorinitials a), rest)
																																																																														(_,_) ->
																																																																															case (fromElem c0) of
																																																																															(Just a,rest) -> (Just (Refpurpose_Corpauthor a), rest)
																																																																															(_,_) ->
																																																																																case (fromElem c0) of
																																																																																(Just a,rest) -> (Just (Refpurpose_Modespec a), rest)
																																																																																(_,_) ->
																																																																																	case (fromElem c0) of
																																																																																	(Just a,rest) -> (Just (Refpurpose_Othercredit a), rest)
																																																																																	(_,_) ->
																																																																																		case (fromElem c0) of
																																																																																		(Just a,rest) -> (Just (Refpurpose_Productname a), rest)
																																																																																		(_,_) ->
																																																																																			case (fromElem c0) of
																																																																																			(Just a,rest) -> (Just (Refpurpose_Productnumber a), rest)
																																																																																			(_,_) ->
																																																																																				case (fromElem c0) of
																																																																																				(Just a,rest) -> (Just (Refpurpose_Revhistory a), rest)
																																																																																				(_,_) ->
																																																																																					case (fromElem c0) of
																																																																																					(Just a,rest) -> (Just (Refpurpose_Remark a), rest)
																																																																																					(_,_) ->
																																																																																						case (fromElem c0) of
																																																																																						(Just a,rest) -> (Just (Refpurpose_Subscript a), rest)
																																																																																						(_,_) ->
																																																																																							case (fromElem c0) of
																																																																																							(Just a,rest) -> (Just (Refpurpose_Superscript a), rest)
																																																																																							(_,_) ->
																																																																																								case (fromElem c0) of
																																																																																								(Just a,rest) -> (Just (Refpurpose_Indexterm a), rest)
																																																																																								(_,_) ->
																																																																																									case (fromElem c0) of
																																																																																									(Just a,rest) -> (Just (Refpurpose_Beginpage a), rest)
																																																																																									(_,_) ->
																																																																																									    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refpurpose_Str a) = toText a
    toElem (Refpurpose_Footnoteref a) = toElem a
    toElem (Refpurpose_Xref a) = toElem a
    toElem (Refpurpose_Abbrev a) = toElem a
    toElem (Refpurpose_Acronym a) = toElem a
    toElem (Refpurpose_Citation a) = toElem a
    toElem (Refpurpose_Citerefentry a) = toElem a
    toElem (Refpurpose_Citetitle a) = toElem a
    toElem (Refpurpose_Emphasis a) = toElem a
    toElem (Refpurpose_Firstterm a) = toElem a
    toElem (Refpurpose_Foreignphrase a) = toElem a
    toElem (Refpurpose_Glossterm a) = toElem a
    toElem (Refpurpose_Footnote a) = toElem a
    toElem (Refpurpose_Phrase a) = toElem a
    toElem (Refpurpose_Quote a) = toElem a
    toElem (Refpurpose_Trademark a) = toElem a
    toElem (Refpurpose_Wordasword a) = toElem a
    toElem (Refpurpose_Personname a) = toElem a
    toElem (Refpurpose_Link a) = toElem a
    toElem (Refpurpose_Olink a) = toElem a
    toElem (Refpurpose_Ulink a) = toElem a
    toElem (Refpurpose_Action a) = toElem a
    toElem (Refpurpose_Application a) = toElem a
    toElem (Refpurpose_Classname a) = toElem a
    toElem (Refpurpose_Methodname a) = toElem a
    toElem (Refpurpose_Interfacename a) = toElem a
    toElem (Refpurpose_Exceptionname a) = toElem a
    toElem (Refpurpose_Ooclass a) = toElem a
    toElem (Refpurpose_Oointerface a) = toElem a
    toElem (Refpurpose_Ooexception a) = toElem a
    toElem (Refpurpose_Command a) = toElem a
    toElem (Refpurpose_Computeroutput a) = toElem a
    toElem (Refpurpose_Database a) = toElem a
    toElem (Refpurpose_Email a) = toElem a
    toElem (Refpurpose_Envar a) = toElem a
    toElem (Refpurpose_Errorcode a) = toElem a
    toElem (Refpurpose_Errorname a) = toElem a
    toElem (Refpurpose_Errortype a) = toElem a
    toElem (Refpurpose_Errortext a) = toElem a
    toElem (Refpurpose_Filename a) = toElem a
    toElem (Refpurpose_Function a) = toElem a
    toElem (Refpurpose_Guibutton a) = toElem a
    toElem (Refpurpose_Guiicon a) = toElem a
    toElem (Refpurpose_Guilabel a) = toElem a
    toElem (Refpurpose_Guimenu a) = toElem a
    toElem (Refpurpose_Guimenuitem a) = toElem a
    toElem (Refpurpose_Guisubmenu a) = toElem a
    toElem (Refpurpose_Hardware a) = toElem a
    toElem (Refpurpose_Interface a) = toElem a
    toElem (Refpurpose_Keycap a) = toElem a
    toElem (Refpurpose_Keycode a) = toElem a
    toElem (Refpurpose_Keycombo a) = toElem a
    toElem (Refpurpose_Keysym a) = toElem a
    toElem (Refpurpose_Literal a) = toElem a
    toElem (Refpurpose_Constant a) = toElem a
    toElem (Refpurpose_Markup a) = toElem a
    toElem (Refpurpose_Medialabel a) = toElem a
    toElem (Refpurpose_Menuchoice a) = toElem a
    toElem (Refpurpose_Mousebutton a) = toElem a
    toElem (Refpurpose_Option a) = toElem a
    toElem (Refpurpose_Optional a) = toElem a
    toElem (Refpurpose_Parameter a) = toElem a
    toElem (Refpurpose_Prompt a) = toElem a
    toElem (Refpurpose_Property a) = toElem a
    toElem (Refpurpose_Replaceable a) = toElem a
    toElem (Refpurpose_Returnvalue a) = toElem a
    toElem (Refpurpose_Sgmltag a) = toElem a
    toElem (Refpurpose_Structfield a) = toElem a
    toElem (Refpurpose_Structname a) = toElem a
    toElem (Refpurpose_Symbol a) = toElem a
    toElem (Refpurpose_Systemitem a) = toElem a
    toElem (Refpurpose_Token a) = toElem a
    toElem (Refpurpose_Type a) = toElem a
    toElem (Refpurpose_Userinput a) = toElem a
    toElem (Refpurpose_Varname a) = toElem a
    toElem (Refpurpose_Anchor a) = toElem a
    toElem (Refpurpose_Author a) = toElem a
    toElem (Refpurpose_Authorinitials a) = toElem a
    toElem (Refpurpose_Corpauthor a) = toElem a
    toElem (Refpurpose_Modespec a) = toElem a
    toElem (Refpurpose_Othercredit a) = toElem a
    toElem (Refpurpose_Productname a) = toElem a
    toElem (Refpurpose_Productnumber a) = toElem a
    toElem (Refpurpose_Revhistory a) = toElem a
    toElem (Refpurpose_Remark a) = toElem a
    toElem (Refpurpose_Subscript a) = toElem a
    toElem (Refpurpose_Superscript a) = toElem a
    toElem (Refpurpose_Indexterm a) = toElem a
    toElem (Refpurpose_Beginpage a) = toElem a
instance XmlAttrType Refpurpose_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refpurpose_Revisionflag_Changed
	    translate "added" = Just Refpurpose_Revisionflag_Added
	    translate "deleted" = Just Refpurpose_Revisionflag_Deleted
	    translate "off" = Just Refpurpose_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refpurpose_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refpurpose_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refpurpose_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refpurpose_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refclass where
    fromElem (CElem (Elem "refclass" as c0):rest) =
	(\(a,ca)->
	   (Just (Refclass (fromAttrs as) a), rest))
	(many fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refclass as a) =
	[CElem (Elem "refclass" (toAttrs as) (concatMap toElem a))]
instance XmlAttributes Refclass_Attrs where
    fromAttrs as =
	Refclass_Attrs
	  { refclassId = possibleA fromAttrToStr "id" as
	  , refclassLang = possibleA fromAttrToStr "lang" as
	  , refclassRemap = possibleA fromAttrToStr "remap" as
	  , refclassXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refclassRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refclassArch = possibleA fromAttrToStr "arch" as
	  , refclassCondition = possibleA fromAttrToStr "condition" as
	  , refclassConformance = possibleA fromAttrToStr "conformance" as
	  , refclassOs = possibleA fromAttrToStr "os" as
	  , refclassRevision = possibleA fromAttrToStr "revision" as
	  , refclassSecurity = possibleA fromAttrToStr "security" as
	  , refclassUserlevel = possibleA fromAttrToStr "userlevel" as
	  , refclassVendor = possibleA fromAttrToStr "vendor" as
	  , refclassRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (refclassId v)
	, maybeToAttr toAttrFrStr "lang" (refclassLang v)
	, maybeToAttr toAttrFrStr "remap" (refclassRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refclassXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refclassRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refclassArch v)
	, maybeToAttr toAttrFrStr "condition" (refclassCondition v)
	, maybeToAttr toAttrFrStr "conformance" (refclassConformance v)
	, maybeToAttr toAttrFrStr "os" (refclassOs v)
	, maybeToAttr toAttrFrStr "revision" (refclassRevision v)
	, maybeToAttr toAttrFrStr "security" (refclassSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (refclassUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refclassVendor v)
	, maybeToAttr toAttrFrStr "role" (refclassRole v)
	]
instance XmlContent Refclass_ where
    fromElem c0 =
	case (fromText c0) of
	(Just a,rest) -> (Just (Refclass_Str a), rest)
	(_,_) ->
		case (fromElem c0) of
		(Just a,rest) -> (Just (Refclass_Application a), rest)
		(_,_) ->
		    (Nothing, c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refclass_Str a) = toText a
    toElem (Refclass_Application a) = toElem a
instance XmlAttrType Refclass_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refclass_Revisionflag_Changed
	    translate "added" = Just Refclass_Revisionflag_Added
	    translate "deleted" = Just Refclass_Revisionflag_Deleted
	    translate "off" = Just Refclass_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refclass_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refclass_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refclass_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refclass_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refsynopsisdiv where
    fromElem (CElem (Elem "refsynopsisdiv" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (Just (Refsynopsisdiv (fromAttrs as) a b c), rest))
	      (definite fromElem "OneOf" "refsynopsisdiv" cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refsynopsisdiv as a b c) =
	[CElem (Elem "refsynopsisdiv" (toAttrs as) (maybe [] toElem a ++
						    maybe [] toElem b ++ toElem c))]
instance XmlAttributes Refsynopsisdiv_Attrs where
    fromAttrs as =
	Refsynopsisdiv_Attrs
	  { refsynopsisdivId = possibleA fromAttrToStr "id" as
	  , refsynopsisdivLang = possibleA fromAttrToStr "lang" as
	  , refsynopsisdivRemap = possibleA fromAttrToStr "remap" as
	  , refsynopsisdivXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refsynopsisdivRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refsynopsisdivArch = possibleA fromAttrToStr "arch" as
	  , refsynopsisdivCondition = possibleA fromAttrToStr "condition" as
	  , refsynopsisdivConformance = possibleA fromAttrToStr "conformance" as
	  , refsynopsisdivOs = possibleA fromAttrToStr "os" as
	  , refsynopsisdivRevision = possibleA fromAttrToStr "revision" as
	  , refsynopsisdivSecurity = possibleA fromAttrToStr "security" as
	  , refsynopsisdivUserlevel = possibleA fromAttrToStr "userlevel" as
	  , refsynopsisdivVendor = possibleA fromAttrToStr "vendor" as
	  , refsynopsisdivRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "id" (refsynopsisdivId v)
	, maybeToAttr toAttrFrStr "lang" (refsynopsisdivLang v)
	, maybeToAttr toAttrFrStr "remap" (refsynopsisdivRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refsynopsisdivXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refsynopsisdivRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refsynopsisdivArch v)
	, maybeToAttr toAttrFrStr "condition" (refsynopsisdivCondition v)
	, maybeToAttr toAttrFrStr "conformance" (refsynopsisdivConformance v)
	, maybeToAttr toAttrFrStr "os" (refsynopsisdivOs v)
	, maybeToAttr toAttrFrStr "revision" (refsynopsisdivRevision v)
	, maybeToAttr toAttrFrStr "security" (refsynopsisdivSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (refsynopsisdivUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refsynopsisdivVendor v)
	, maybeToAttr toAttrFrStr "role" (refsynopsisdivRole v)
	]
instance XmlAttrType Refsynopsisdiv_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refsynopsisdiv_Revisionflag_Changed
	    translate "added" = Just Refsynopsisdiv_Revisionflag_Added
	    translate "deleted" = Just Refsynopsisdiv_Revisionflag_Deleted
	    translate "off" = Just Refsynopsisdiv_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refsynopsisdiv_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refsynopsisdiv_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refsynopsisdiv_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refsynopsisdiv_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refsection where
    fromElem (CElem (Elem "refsection" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (Just (Refsection (fromAttrs as) a b c d e), rest))
		    (definite fromElem "OneOf" "refsection" cd))
		 (fromElem cc))
	      (fromElem cb))
	   (definite fromElem "<title>" "refsection" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refsection as a b c d e) =
	[CElem (Elem "refsection" (toAttrs as) (maybe [] toElem a ++
						toElem b ++ maybe [] toElem c ++ maybe [] toElem d
						++ toElem e))]
instance XmlAttributes Refsection_Attrs where
    fromAttrs as =
	Refsection_Attrs
	  { refsectionStatus = possibleA fromAttrToStr "status" as
	  , refsectionId = possibleA fromAttrToStr "id" as
	  , refsectionLang = possibleA fromAttrToStr "lang" as
	  , refsectionRemap = possibleA fromAttrToStr "remap" as
	  , refsectionXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refsectionRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refsectionArch = possibleA fromAttrToStr "arch" as
	  , refsectionCondition = possibleA fromAttrToStr "condition" as
	  , refsectionConformance = possibleA fromAttrToStr "conformance" as
	  , refsectionOs = possibleA fromAttrToStr "os" as
	  , refsectionRevision = possibleA fromAttrToStr "revision" as
	  , refsectionSecurity = possibleA fromAttrToStr "security" as
	  , refsectionUserlevel = possibleA fromAttrToStr "userlevel" as
	  , refsectionVendor = possibleA fromAttrToStr "vendor" as
	  , refsectionRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "status" (refsectionStatus v)
	, maybeToAttr toAttrFrStr "id" (refsectionId v)
	, maybeToAttr toAttrFrStr "lang" (refsectionLang v)
	, maybeToAttr toAttrFrStr "remap" (refsectionRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refsectionXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refsectionRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refsectionArch v)
	, maybeToAttr toAttrFrStr "condition" (refsectionCondition v)
	, maybeToAttr toAttrFrStr "conformance" (refsectionConformance v)
	, maybeToAttr toAttrFrStr "os" (refsectionOs v)
	, maybeToAttr toAttrFrStr "revision" (refsectionRevision v)
	, maybeToAttr toAttrFrStr "security" (refsectionSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (refsectionUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refsectionVendor v)
	, maybeToAttr toAttrFrStr "role" (refsectionRole v)
	]
instance XmlAttrType Refsection_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refsection_Revisionflag_Changed
	    translate "added" = Just Refsection_Revisionflag_Added
	    translate "deleted" = Just Refsection_Revisionflag_Deleted
	    translate "off" = Just Refsection_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refsection_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refsection_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refsection_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refsection_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refsect1 where
    fromElem (CElem (Elem "refsect1" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (Just (Refsect1 (fromAttrs as) a b c d e), rest))
		    (definite fromElem "OneOf" "refsect1" cd))
		 (fromElem cc))
	      (fromElem cb))
	   (definite fromElem "<title>" "refsect1" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refsect1 as a b c d e) =
	[CElem (Elem "refsect1" (toAttrs as) (maybe [] toElem a ++ toElem b
					      ++ maybe [] toElem c ++ maybe [] toElem d ++
					      toElem e))]
instance XmlAttributes Refsect1_Attrs where
    fromAttrs as =
	Refsect1_Attrs
	  { refsect1Status = possibleA fromAttrToStr "status" as
	  , refsect1Id = possibleA fromAttrToStr "id" as
	  , refsect1Lang = possibleA fromAttrToStr "lang" as
	  , refsect1Remap = possibleA fromAttrToStr "remap" as
	  , refsect1Xreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refsect1Revisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refsect1Arch = possibleA fromAttrToStr "arch" as
	  , refsect1Condition = possibleA fromAttrToStr "condition" as
	  , refsect1Conformance = possibleA fromAttrToStr "conformance" as
	  , refsect1Os = possibleA fromAttrToStr "os" as
	  , refsect1Revision = possibleA fromAttrToStr "revision" as
	  , refsect1Security = possibleA fromAttrToStr "security" as
	  , refsect1Userlevel = possibleA fromAttrToStr "userlevel" as
	  , refsect1Vendor = possibleA fromAttrToStr "vendor" as
	  , refsect1Role = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "status" (refsect1Status v)
	, maybeToAttr toAttrFrStr "id" (refsect1Id v)
	, maybeToAttr toAttrFrStr "lang" (refsect1Lang v)
	, maybeToAttr toAttrFrStr "remap" (refsect1Remap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refsect1Xreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refsect1Revisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refsect1Arch v)
	, maybeToAttr toAttrFrStr "condition" (refsect1Condition v)
	, maybeToAttr toAttrFrStr "conformance" (refsect1Conformance v)
	, maybeToAttr toAttrFrStr "os" (refsect1Os v)
	, maybeToAttr toAttrFrStr "revision" (refsect1Revision v)
	, maybeToAttr toAttrFrStr "security" (refsect1Security v)
	, maybeToAttr toAttrFrStr "userlevel" (refsect1Userlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refsect1Vendor v)
	, maybeToAttr toAttrFrStr "role" (refsect1Role v)
	]
instance XmlAttrType Refsect1_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refsect1_Revisionflag_Changed
	    translate "added" = Just Refsect1_Revisionflag_Added
	    translate "deleted" = Just Refsect1_Revisionflag_Deleted
	    translate "off" = Just Refsect1_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refsect1_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refsect1_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refsect1_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refsect1_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refsect2 where
    fromElem (CElem (Elem "refsect2" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (Just (Refsect2 (fromAttrs as) a b c d e), rest))
		    (definite fromElem "OneOf" "refsect2" cd))
		 (fromElem cc))
	      (fromElem cb))
	   (definite fromElem "<title>" "refsect2" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refsect2 as a b c d e) =
	[CElem (Elem "refsect2" (toAttrs as) (maybe [] toElem a ++ toElem b
					      ++ maybe [] toElem c ++ maybe [] toElem d ++
					      toElem e))]
instance XmlAttributes Refsect2_Attrs where
    fromAttrs as =
	Refsect2_Attrs
	  { refsect2Status = possibleA fromAttrToStr "status" as
	  , refsect2Id = possibleA fromAttrToStr "id" as
	  , refsect2Lang = possibleA fromAttrToStr "lang" as
	  , refsect2Remap = possibleA fromAttrToStr "remap" as
	  , refsect2Xreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refsect2Revisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refsect2Arch = possibleA fromAttrToStr "arch" as
	  , refsect2Condition = possibleA fromAttrToStr "condition" as
	  , refsect2Conformance = possibleA fromAttrToStr "conformance" as
	  , refsect2Os = possibleA fromAttrToStr "os" as
	  , refsect2Revision = possibleA fromAttrToStr "revision" as
	  , refsect2Security = possibleA fromAttrToStr "security" as
	  , refsect2Userlevel = possibleA fromAttrToStr "userlevel" as
	  , refsect2Vendor = possibleA fromAttrToStr "vendor" as
	  , refsect2Role = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "status" (refsect2Status v)
	, maybeToAttr toAttrFrStr "id" (refsect2Id v)
	, maybeToAttr toAttrFrStr "lang" (refsect2Lang v)
	, maybeToAttr toAttrFrStr "remap" (refsect2Remap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refsect2Xreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refsect2Revisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refsect2Arch v)
	, maybeToAttr toAttrFrStr "condition" (refsect2Condition v)
	, maybeToAttr toAttrFrStr "conformance" (refsect2Conformance v)
	, maybeToAttr toAttrFrStr "os" (refsect2Os v)
	, maybeToAttr toAttrFrStr "revision" (refsect2Revision v)
	, maybeToAttr toAttrFrStr "security" (refsect2Security v)
	, maybeToAttr toAttrFrStr "userlevel" (refsect2Userlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refsect2Vendor v)
	, maybeToAttr toAttrFrStr "role" (refsect2Role v)
	]
instance XmlAttrType Refsect2_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refsect2_Revisionflag_Changed
	    translate "added" = Just Refsect2_Revisionflag_Added
	    translate "deleted" = Just Refsect2_Revisionflag_Deleted
	    translate "off" = Just Refsect2_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refsect2_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refsect2_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refsect2_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refsect2_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Refsect3 where
    fromElem (CElem (Elem "refsect3" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (Just (Refsect3 (fromAttrs as) a b c d e), rest))
		    (many fromElem cd))
		 (fromElem cc))
	      (fromElem cb))
	   (definite fromElem "<title>" "refsect3" ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Refsect3 as a b c d e) =
	[CElem (Elem "refsect3" (toAttrs as) (maybe [] toElem a ++ toElem b
					      ++ maybe [] toElem c ++ maybe [] toElem d ++
					      concatMap toElem e))]
instance XmlAttributes Refsect3_Attrs where
    fromAttrs as =
	Refsect3_Attrs
	  { refsect3Status = possibleA fromAttrToStr "status" as
	  , refsect3Id = possibleA fromAttrToStr "id" as
	  , refsect3Lang = possibleA fromAttrToStr "lang" as
	  , refsect3Remap = possibleA fromAttrToStr "remap" as
	  , refsect3Xreflabel = possibleA fromAttrToStr "xreflabel" as
	  , refsect3Revisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , refsect3Arch = possibleA fromAttrToStr "arch" as
	  , refsect3Condition = possibleA fromAttrToStr "condition" as
	  , refsect3Conformance = possibleA fromAttrToStr "conformance" as
	  , refsect3Os = possibleA fromAttrToStr "os" as
	  , refsect3Revision = possibleA fromAttrToStr "revision" as
	  , refsect3Security = possibleA fromAttrToStr "security" as
	  , refsect3Userlevel = possibleA fromAttrToStr "userlevel" as
	  , refsect3Vendor = possibleA fromAttrToStr "vendor" as
	  , refsect3Role = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrStr "status" (refsect3Status v)
	, maybeToAttr toAttrFrStr "id" (refsect3Id v)
	, maybeToAttr toAttrFrStr "lang" (refsect3Lang v)
	, maybeToAttr toAttrFrStr "remap" (refsect3Remap v)
	, maybeToAttr toAttrFrStr "xreflabel" (refsect3Xreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (refsect3Revisionflag v)
	, maybeToAttr toAttrFrStr "arch" (refsect3Arch v)
	, maybeToAttr toAttrFrStr "condition" (refsect3Condition v)
	, maybeToAttr toAttrFrStr "conformance" (refsect3Conformance v)
	, maybeToAttr toAttrFrStr "os" (refsect3Os v)
	, maybeToAttr toAttrFrStr "revision" (refsect3Revision v)
	, maybeToAttr toAttrFrStr "security" (refsect3Security v)
	, maybeToAttr toAttrFrStr "userlevel" (refsect3Userlevel v)
	, maybeToAttr toAttrFrStr "vendor" (refsect3Vendor v)
	, maybeToAttr toAttrFrStr "role" (refsect3Role v)
	]
instance XmlAttrType Refsect3_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Refsect3_Revisionflag_Changed
	    translate "added" = Just Refsect3_Revisionflag_Added
	    translate "deleted" = Just Refsect3_Revisionflag_Deleted
	    translate "off" = Just Refsect3_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Refsect3_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Refsect3_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Refsect3_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Refsect3_Revisionflag_Off = Just (n, str2attr "off")
instance XmlContent Article where
    fromElem (CElem (Elem "article" as c0):rest) =
	(\(a,ca)->
	   (\(b,cb)->
	      (\(c,cc)->
		 (\(d,cd)->
		    (\(e,ce)->
		       (\(f,cf)->
			  (Just (Article (fromAttrs as) a b c d e f), rest))
		       (many fromElem ce))
		    (definite fromElem "OneOf" "article" cd))
		 (many fromElem cc))
	      (fromElem cb))
	   (fromElem ca))
	(fromElem c0)
    fromElem (CMisc _:rest) = fromElem rest
    fromElem rest = (Nothing, rest)
    toElem (Article as a b c d e f) =
	[CElem (Elem "article" (toAttrs as) (maybe [] toElem a ++
					     maybe [] toElem b ++ maybe [] toElem c ++
					     concatMap toElem d ++ toElem e ++ concatMap toElem f))]
instance XmlAttributes Article_Attrs where
    fromAttrs as =
	Article_Attrs
	  { articleClass = possibleA fromAttrToTyp "class" as
	  , articleParentbook = possibleA fromAttrToStr "parentbook" as
	  , articleStatus = possibleA fromAttrToStr "status" as
	  , articleId = possibleA fromAttrToStr "id" as
	  , articleLang = possibleA fromAttrToStr "lang" as
	  , articleRemap = possibleA fromAttrToStr "remap" as
	  , articleXreflabel = possibleA fromAttrToStr "xreflabel" as
	  , articleRevisionflag = possibleA fromAttrToTyp "revisionflag" as
	  , articleArch = possibleA fromAttrToStr "arch" as
	  , articleCondition = possibleA fromAttrToStr "condition" as
	  , articleConformance = possibleA fromAttrToStr "conformance" as
	  , articleOs = possibleA fromAttrToStr "os" as
	  , articleRevision = possibleA fromAttrToStr "revision" as
	  , articleSecurity = possibleA fromAttrToStr "security" as
	  , articleUserlevel = possibleA fromAttrToStr "userlevel" as
	  , articleVendor = possibleA fromAttrToStr "vendor" as
	  , articleRole = possibleA fromAttrToStr "role" as
	  }
    toAttrs v = catMaybes 
	[ maybeToAttr toAttrFrTyp "class" (articleClass v)
	, maybeToAttr toAttrFrStr "parentbook" (articleParentbook v)
	, maybeToAttr toAttrFrStr "status" (articleStatus v)
	, maybeToAttr toAttrFrStr "id" (articleId v)
	, maybeToAttr toAttrFrStr "lang" (articleLang v)
	, maybeToAttr toAttrFrStr "remap" (articleRemap v)
	, maybeToAttr toAttrFrStr "xreflabel" (articleXreflabel v)
	, maybeToAttr toAttrFrTyp "revisionflag" (articleRevisionflag v)
	, maybeToAttr toAttrFrStr "arch" (articleArch v)
	, maybeToAttr toAttrFrStr "condition" (articleCondition v)
	, maybeToAttr toAttrFrStr "conformance" (articleConformance v)
	, maybeToAttr toAttrFrStr "os" (articleOs v)
	, maybeToAttr toAttrFrStr "revision" (articleRevision v)
	, maybeToAttr toAttrFrStr "security" (articleSecurity v)
	, maybeToAttr toAttrFrStr "userlevel" (articleUserlevel v)
	, maybeToAttr toAttrFrStr "vendor" (articleVendor v)
	, maybeToAttr toAttrFrStr "role" (articleRole v)
	]
instance XmlAttrType Article_Class where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "journalarticle" = Just Article_Class_Journalarticle
	    translate "productsheet" = Just Article_Class_Productsheet
	    translate "whitepaper" = Just Article_Class_Whitepaper
	    translate "techreport" = Just Article_Class_Techreport
	    translate "specification" = Just Article_Class_Specification
	    translate "faq" = Just Article_Class_Faq
	    translate _ = Nothing
    toAttrFrTyp n Article_Class_Journalarticle = Just (n, str2attr "journalarticle")
    toAttrFrTyp n Article_Class_Productsheet = Just (n, str2attr "productsheet")
    toAttrFrTyp n Article_Class_Whitepaper = Just (n, str2attr "whitepaper")
    toAttrFrTyp n Article_Class_Techreport = Just (n, str2attr "techreport")
    toAttrFrTyp n Article_Class_Specification = Just (n, str2attr "specification")
    toAttrFrTyp n Article_Class_Faq = Just (n, str2attr "faq")
instance XmlAttrType Article_Revisionflag where
    fromAttrToTyp n (n',v)
	| n==n'     = translate (attr2str v)
	| otherwise = Nothing
      where translate "changed" = Just Article_Revisionflag_Changed
	    translate "added" = Just Article_Revisionflag_Added
	    translate "deleted" = Just Article_Revisionflag_Deleted
	    translate "off" = Just Article_Revisionflag_Off
	    translate _ = Nothing
    toAttrFrTyp n Article_Revisionflag_Changed = Just (n, str2attr "changed")
    toAttrFrTyp n Article_Revisionflag_Added = Just (n, str2attr "added")
    toAttrFrTyp n Article_Revisionflag_Deleted = Just (n, str2attr "deleted")
    toAttrFrTyp n Article_Revisionflag_Off = Just (n, str2attr "off")


{-Done-}
