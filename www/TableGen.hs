{- #########################################################################

MODULE        : TableGen
AUTHOR        : Einar W. Karlsen
                University of Bremen
                email:ewk@informatik.uni-bremen.de
DATE          : 1997
VERSION       : alpha
DESCRIPTION   : Generic Table Generator.


   ######################################################################### -}


module TableGen (
        Config(..),
        String,
        WWW,

        TableCell(..),
        TableRow(..),
        generateTable
        ) where

import Computation
import Html
import Date
import Debug(debug)


-- ---------------------------------------------------------------------------
--  Classes
-- ---------------------------------------------------------------------------

class Show c => TableCell c where
        mkTableCell :: c -> WWW ()
        mkTableCell c = plain (show c)


class TableRow r where
        mkTableRow :: r -> WWW ()
        mkTableHeader :: [r] -> WWW ()


-- ---------------------------------------------------------------------------
--  Table Generator
-- ---------------------------------------------------------------------------

generateTable :: TableRow o => String -> [o] -> [Config HtmlBody] -> [Config HtmlTable] -> WWW ()
generateTable title dl bconfs tconfs = do {
        header (doctitle title);
        body bconfs ( do {
                mkDocHeading title;
                mkTable dl tconfs; 
                br;
                mkDocFooter;
                });
}


-- --------------------------------------------------------------------------
-- Table
-- --------------------------------------------------------------------------

mkTable :: TableRow r => [r] -> [Config HtmlTable] -> WWW ()
mkTable dl confs = do {
        table confs ( do {
           mkTableHeader dl;
           sequence_ (map mkTableRow dl)
           });
        }


-- --------------------------------------------------------------------------
-- Document Header and Footer
-- --------------------------------------------------------------------------

mkDocFooter :: WWW ()
mkDocFooter = do {
        date <- embedIOS(getToDay);
        hr;
        address (plain ("Generated by UniForm WorkBench on " ++ show date) )
  }


mkDocHeading :: String -> WWW ()
mkDocHeading str = do {
        heading 1 [justify JustCenter] (plain str);
        hr;
        br
}



-- --------------------------------------------------------------------------
-- String
-- --------------------------------------------------------------------------

instance TableCell String where
        mkTableCell str = plain str

instance TableCell [String] where
        mkTableCell str = mkTableCell (unlines str)

